Julia Version 1.4.0-DEV.564
Commit 1d8d9c1793 (2019-12-06 23:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [================>                        ]  38.8 %    Fetching: [=======================================> ]  96.5 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Crayons ───────────────────── v4.0.1
 Installed MultivariateStats ─────────── v0.7.0
 Installed MLJBase ───────────────────── v0.8.4
 Installed MLJ ───────────────────────── v0.5.9
 Installed PrettyTables ──────────────── v0.6.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed LossFunctions ─────────────── v0.5.1
 Installed Reexport ──────────────────── v0.2.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+1
 Installed RecipesBase ───────────────── v0.7.0
 Installed OpenSpecFun_jll ───────────── v0.5.3+1
 Installed Rmath ─────────────────────── v0.6.0
 Installed Compat ────────────────────── v3.0.0
 Installed Distances ─────────────────── v0.8.2
 Installed BinaryProvider ────────────── v0.5.8
 Installed Arpack ────────────────────── v0.4.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed QuadGK ────────────────────── v2.3.0
 Installed DataStructures ────────────── v0.17.6
 Installed JSON ──────────────────────── v0.21.0
 Installed Requires ──────────────────── v0.5.2
 Installed StatsFuns ─────────────────── v0.9.2
 Installed StatsBase ─────────────────── v0.32.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed ProgressMeter ─────────────── v1.2.0
 Installed Distributions ─────────────── v0.21.11
 Installed PDMats ────────────────────── v0.9.10
 Installed Formatting ────────────────── v0.4.1
 Installed Tables ────────────────────── v0.2.11
 Installed InvertedIndices ───────────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed FillArrays ────────────────── v0.8.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed ComputationalResources ────── v0.3.0
 Installed MLJModels ─────────────────── v0.5.9
 Installed FixedPointNumbers ─────────── v0.6.1
 Installed SpecialFunctions ──────────── v0.9.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Parsers ───────────────────── v0.3.10
 Installed ColorTypes ────────────────── v0.8.0
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed ScientificTypes ───────────── v0.2.7
 Installed Parameters ────────────────── v0.12.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [add582a8] + MLJ v0.5.9
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [b99e7846] + BinaryProvider v0.5.8
  [324d7699] + CategoricalArrays v0.7.4
  [3da002f7] + ColorTypes v0.8.0
  [34da2185] + Compat v3.0.0
  [ed09eef8] + ComputationalResources v0.3.0
  [a8cc5b0e] + Crayons v4.0.1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.21.11
  [ffbed154] + DocStringExtensions v0.8.1
  [1a297f60] + FillArrays v0.8.2
  [53c48c17] + FixedPointNumbers v0.6.1
  [59287772] + Formatting v0.4.1
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [7f8f8fb0] + LearnBase v0.2.2
  [30fc2ffe] + LossFunctions v0.5.1
  [add582a8] + MLJ v0.5.9
  [a7f614a8] + MLJBase v0.8.4
  [d491faf4] + MLJModels v0.5.9
  [e1d29d7a] + Missings v0.4.3
  [6f286f6a] + MultivariateStats v0.7.0
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [08abe8d2] + PrettyTables v0.6.0
  [92933f4c] + ProgressMeter v1.2.0
  [1fd47b50] + QuadGK v2.3.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [79098fc4] + Rmath v0.6.0
  [321657f4] + ScientificTypes v0.2.7
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
   Testing MLJ
 Resolving package versions...

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/Evizero/UnicodePlots.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/bensadeghi/DecisionTree.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
┌ Warning: failed to extract archive downloaded from https://github.com/KristofferC/NearestNeighbors.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaStats/RDatasets.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
┌ Warning: failed to extract archive downloaded from https://github.com/invenia/Mocking.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaData/PooledArrays.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaData/DataFrames.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaArrays/StaticArrays.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/cstjean/ScikitLearnBase.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/bicycle1885/TranscodingStreams.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaData/CSV.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/MikeInnes/MacroTools.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/bicycle1885/EzXML.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaMatrices/ArrayLayouts.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaArrays/LazyArrays.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaData/WeakRefStrings.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/rofinn/FilePathsBase.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaIO/FileIO.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/bicycle1885/CodecZlib.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaData/RData.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
┌ Warning: failed to extract archive downloaded from https://github.com/JuliaTime/TimeZones.jl.git
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
   Cloning [b8865327-cd53-5732-bb35-84acbb429228] UnicodePlots from https://github.com/Evizero/UnicodePlots.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed UnicodePlots ─────── v1.1.0
   Cloning [7806a523-6efd-50cb-b5f6-3fa6f1930dbb] DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DecisionTree ─────── v0.10.0
   Cloning [b8a86587-4115-5ab1-83bc-aa920d37bbce] NearestNeighbors from https://github.com/KristofferC/NearestNeighbors.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed NearestNeighbors ─── v0.4.4
   Cloning [ce6b1742-4840-55fa-b093-852dadbb1d8b] RDatasets from https://github.com/JuliaStats/RDatasets.jl.git
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [===========================>             ]  66.7 %    Fetching: [==================================>      ]  84.0 %    Fetching: [=====================================>   ]  91.6 %[2K[?25h[?25l Installed RDatasets ────────── v0.6.6
   Cloning [78c3b35d-d492-501b-9361-3d52fe80e533] Mocking from https://github.com/invenia/Mocking.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed Mocking ──────────── v0.7.0
   Cloning [2dfb63ee-cc39-5dd5-95bd-886bf059d720] PooledArrays from https://github.com/JuliaData/PooledArrays.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed PooledArrays ─────── v0.5.2
   Cloning [a93c6f00-e57d-5684-b7b6-d8193f3e46c0] DataFrames from https://github.com/JuliaData/DataFrames.jl.git
[?25l    Fetching: [>                                        ]  0.0 %    Resolving Deltas: [================>                        ]  38.2 %[2K[?25h Installed DataFrames ───────── v0.20.0
   Cloning [90137ffa-7385-5640-81b9-e52037218182] StaticArrays from https://github.com/JuliaArrays/StaticArrays.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed StaticArrays ─────── v0.12.1
   Cloning [6e75b9c4-186b-50bd-896f-2d2496a4843e] ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed ScikitLearnBase ──── v0.5.0
[?25l   Cloning [3bb67fe8-82b1-5028-8e26-92a6c54297fa] TranscodingStreams from https://github.com/bicycle1885/TranscodingStreams.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed TranscodingStreams ─ v0.9.5
   Cloning [336ed68f-0bac-5ca0-87d4-7b16caf5d00b] CSV from https://github.com/JuliaData/CSV.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed CSV ──────────────── v0.5.18
   Cloning [1914dd2f-81c6-5fcd-8719-6d5c9610ff09] MacroTools from https://github.com/MikeInnes/MacroTools.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed MacroTools ───────── v0.5.3
   Cloning [8f5d6c58-4d21-5cfd-889c-e3ad7ee6a615] EzXML from https://github.com/bicycle1885/EzXML.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed EzXML ────────────── v0.9.5
   Cloning [4c555306-a7a7-4459-81d9-ec55ddd5c99a] ArrayLayouts from https://github.com/JuliaMatrices/ArrayLayouts.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed ArrayLayouts ─────── v0.1.5
   Cloning [5078a376-72f3-5289-bfd5-ec5146d43c02] LazyArrays from https://github.com/JuliaArrays/LazyArrays.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed LazyArrays ───────── v0.14.10
   Cloning [ea10d353-3f73-51f8-a26c-33c1cb351aa5] WeakRefStrings from https://github.com/JuliaData/WeakRefStrings.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed WeakRefStrings ───── v0.6.1
   Cloning [48062228-2e41-5def-b9a4-89aafe57970f] FilePathsBase from https://github.com/rofinn/FilePathsBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed FilePathsBase ────── v0.7.0
   Cloning [5789e2e9-d7fb-5bc7-8068-2c6fae9b9549] FileIO from https://github.com/JuliaIO/FileIO.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed FileIO ───────────── v1.1.0
   Cloning [944b1d66-785c-5afd-91f1-9de20f533193] CodecZlib from https://github.com/bicycle1885/CodecZlib.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed CodecZlib ────────── v0.6.0
   Cloning [df47a6cb-8c03-5eed-afd8-b6050d6c41da] RData from https://github.com/JuliaData/RData.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed RData ────────────── v0.6.3
   Cloning [f269a46b-ccf7-5d73-abea-4c690281aa53] TimeZones from https://github.com/JuliaTime/TimeZones.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed TimeZones ────────── v0.10.3
  Building EzXML ────→ `~/.julia/packages/EzXML/QtGgF/deps/build.log`
  Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
  Building TimeZones → `~/.julia/packages/TimeZones/pjvlM/deps/build.log`
Status `/tmp/jl_InkF0K/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4c555306] ArrayLayouts v0.1.5
  [b99e7846] BinaryProvider v0.5.8
  [336ed68f] CSV v0.5.18
  [324d7699] CategoricalArrays v0.7.4
  [944b1d66] CodecZlib v0.6.0
  [3da002f7] ColorTypes v0.8.0
  [34da2185] Compat v3.0.0
  [ed09eef8] ComputationalResources v0.3.0
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [7806a523] DecisionTree v0.10.0
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.21.11
  [ffbed154] DocStringExtensions v0.8.1
  [8f5d6c58] EzXML v0.9.5
  [5789e2e9] FileIO v1.1.0
  [48062228] FilePathsBase v0.7.0
  [1a297f60] FillArrays v0.8.2
  [53c48c17] FixedPointNumbers v0.6.1
  [59287772] Formatting v0.4.1
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.10
  [7f8f8fb0] LearnBase v0.2.2
  [30fc2ffe] LossFunctions v0.5.1
  [add582a8] MLJ v0.5.9
  [a7f614a8] MLJBase v0.8.4
  [d491faf4] MLJModels v0.5.9
  [1914dd2f] MacroTools v0.5.3
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.0
  [6f286f6a] MultivariateStats v0.7.0
  [b8a86587] NearestNeighbors v0.4.4
  [4536629a] OpenBLAS_jll v0.3.7+1
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [08abe8d2] PrettyTables v0.6.0
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.0
  [df47a6cb] RData v0.6.3
  [ce6b1742] RDatasets v0.6.6
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [79098fc4] Rmath v0.6.0
  [321657f4] ScientificTypes v0.2.7
  [6e75b9c4] ScikitLearnBase v0.5.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [f269a46b] TimeZones v0.10.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [b8865327] UnicodePlots v1.1.0
  [ea10d353] WeakRefStrings v0.6.1
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
[ Info: Model metadata loaded from registry. 
Test Summary: | Pass  Total
utilities     |   12     12
Test Summary: | Pass  Total
parameters    |   17     17
┌ Info: MLJModels.DecisionTree_.DecisionTreeRegressor does not support sample weights and the supplied weights will be ignored in training.
└  However, supplied weights will be passed to weight-supporting measures on calls to `evaluate!` and in tuning. 
┌ Info: MLJModels.DecisionTree_.DecisionTreeRegressor does not support sample weights and the supplied weights will be ignored in training.
└  However, supplied weights will be passed to weight-supporting measures on calls to `evaluate!` and in tuning. 
[ Info: Training [34mMachine{ConstantClassifier} @ 1…87[39m.
[ Info: Training [34mMachine{ConstantClassifier} @ 1…04[39m.
Test Summary: | Pass  Total
Machines      |   19     19
Training ensemble:  25%[============>                                     ]  ETA: 0:00:03[KTraining ensemble: 100%[==================================================] Time: 0:00:01[K


Test Summary: | Pass  Total
networks      |   37     37
[ Info: Training [34mNodalMachine{KNNRegressor} @ 4…90[39m.
[ Info: Training [34mNodalMachine{Standardizer} @ 1…53[39m.
[ Info: Training [34mNodalMachine{UnivariateBoxCoxTransformer} @ 1…26[39m.
[ Info: Training [34mNodalMachine{RidgeRegressor} @ 5…98[39m.
┌ Info: Not retraining [34mNodalMachine{Standardizer} @ 1…53[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
┌ Info: Not retraining [34mNodalMachine{UnivariateBoxCoxTransformer} @ 1…26[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
[ Info: Updating [34mNodalMachine{RidgeRegressor} @ 5…98[39m.
┌ Info: A model type "RidgeRegressor" is already loaded. 
└ No new code loaded. 
[ Info: Training [34mNodalMachine{Standardizer} @ 1…51[39m.
[ Info: Training [34mNodalMachine{PCA} @ 3…48[39m.
┌ Info: Not retraining [34mNodalMachine{Standardizer} @ 1…51[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
┌ Info: Not retraining [34mNodalMachine{PCA} @ 3…48[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
[ Info: Training [34mNodalMachine{RidgeRegressor} @ 1…78[39m.
┌ Info: A model type "PCA" is already loaded. 
└ No new code loaded. 
┌ Info: A model type "RidgeRegressor" is already loaded. 
└ No new code loaded. 
[ Info: Training [34mNodalMachine{Standardizer} @ 2…34[39m.
[ Info: Training [34mNodalMachine{PCA} @ 1…18[39m.
[ Info: Training [34mNodalMachine{RidgeRegressor} @ 7…62[39m.
┌ Info: A model type "PCA" is already loaded. 
└ No new code loaded. 
┌ Info: A model type "RidgeRegressor" is already loaded. 
└ No new code loaded. 
[ Info: Training [34mNodalMachine{Standardizer} @ 1…38[39m.
[ Info: Training [34mNodalMachine{PCA} @ 1…15[39m.
[ Info: Training [34mNodalMachine{UnivariateBoxCoxTransformer} @ 1…30[39m.
[ Info: Training [34mNodalMachine{RidgeRegressor} @ 8…64[39m.
[ Info: Training [34mNodalMachine{DecisionTreeRegressor} @ 3…46[39m.
[ Info: Training [34mNodalMachine{DecisionTreeRegressor} @ 1…16[39m.
Test Summary: | Pass  Total
arrows        |   12     12
[ Info: Training [34mNodalMachine{FeatureSelector} @ 1…41[39m.
[ Info: Training [34mNodalMachine{FooBarRegressor} @ 1…92[39m.
[ Info: Training [34mNodalMachine{SimpleDeterministicCompositeModel} @ 1…70[39m.
[ Info: Training [34mNodalMachine{FeatureSelector} @ 1…73[39m.
[ Info: Training [34mNodalMachine{FooBarRegressor} @ 1…12[39m.
[ Info: Updating [34mNodalMachine{SimpleDeterministicCompositeModel} @ 1…70[39m.
[ Info: Updating [34mNodalMachine{FeatureSelector} @ 1…73[39m.
[ Info: Training [34mNodalMachine{FooBarRegressor} @ 1…12[39m.
[ Info: Training [34mNodalMachine{SimpleDeterministicCompositeModel} @ 1…70[39m.
[ Info: Training [34mNodalMachine{FeatureSelector} @ 1…77[39m.
[ Info: Training [34mNodalMachine{FooBarRegressor} @ 1…96[39m.
[ Info: Training [34mMachine{WrappedRidge} @ 4…62[39m.
[ Info: Training [34mNodalMachine{Standardizer} @ 1…06[39m.
[ Info: Training [34mNodalMachine{UnivariateBoxCoxTransformer} @ 7…86[39m.
[ Info: Training [34mNodalMachine{FooBarRegressor} @ 1…53[39m.
[ Info: Updating [34mMachine{WrappedRidge} @ 4…62[39m.
┌ Info: Not retraining [34mNodalMachine{Standardizer} @ 1…06[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
┌ Info: Not retraining [34mNodalMachine{UnivariateBoxCoxTransformer} @ 7…86[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
[ Info: Updating [34mNodalMachine{FooBarRegressor} @ 1…53[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 6…64[39m.
[ Info: Spawning 3 sub-features to one-hot encode feature :x1.
[ Info: Training [34mNodalMachine{UnivariateStandardizer} @ 2…48[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 1…88[39m.
[ Info: Training [34mNodalMachine{DecisionTreeRegressor} @ 1…74[39m.
[ Info: Training [34mNodalMachine{Standardizer} @ 9…68[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 4…64[39m.
[ Info: Training [34mNodalMachine{Standardizer} @ 9…68[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 4…64[39m.
[ Info: Training [34mMachine{Composite3} @ 9…76[39m.
[ Info: Training [34mNodalMachine{Standardizer} @ 1…46[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 1…83[39m.
[ Info: Training [34mMachine{Composite3} @ 1…79[39m.
[ Info: Training [34mNodalMachine{Standardizer} @ 2…68[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 1…32[39m.
Test Summary: | Pass  Total
composites    |   71     71
[ Info: Training [34mNodalMachine{FeatureSelector} @ 1…37[39m.
[ Info: Training [34mNodalMachine{UnivariateStandardizer} @ 1…49[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 1…72[39m.
[ Info: Training [34mNodalMachine{FeatureSelector} @ 5…23[39m.
[ Info: Training [34mNodalMachine{UnivariateStandardizer} @ 5…70[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 5…90[39m.
[ Info: Updating [34mNodalMachine{FeatureSelector} @ 1…37[39m.
┌ Info: Not retraining [34mNodalMachine{UnivariateStandardizer} @ 1…49[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 1…72[39m.
[ Info: Updating [34mNodalMachine{FeatureSelector} @ 5…23[39m.
┌ Info: Not retraining [34mNodalMachine{UnivariateStandardizer} @ 5…70[39m.
└  It appears up-to-date. Use `force=true` to force retraining.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 5…90[39m.
[ Info: Training [34mMachine{Pipe} @ 2…47[39m.
[ Info: Training [34mNodalMachine{FeatureSelector} @ 5…54[39m.
[ Info: Training [34mNodalMachine{UnivariateStandardizer} @ 7…86[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 1…78[39m.
[ Info: Training [34mMachine{Pipe21} @ 8…04[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 1…63[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 1…88[39m.
[ Info: Training [34mMachine{Piper3} @ 1…44[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 1…99[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 7…09[39m.
[ Info: Training [34mMachine{Piper3} @ 5…67[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 1…39[39m.
[ Info: Training [34mNodalMachine{ConstantClassifier} @ 1…87[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 4…72[39m.
[ Info: Spawning 3 sub-features to one-hot encode feature :x3.
[ Info: Training [34mNodalMachine{FeatureSelector} @ 1…73[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 1…46[39m.
[ Info: Training [34mMachine{Pipe4} @ 1…15[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 1…08[39m.
[ Info: Spawning 3 sub-features to one-hot encode feature :x3.
[ Info: Training [34mNodalMachine{FeatureSelector} @ 1…69[39m.
[ Info: Training [34mNodalMachine{StaticTransformer} @ 1…48[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 6…47[39m.
[ Info: Training [34mNodalMachine{StaticTransformer} @ 1…94[39m.
[ Info: Training [34mMachine{Pipe9} @ 6…22[39m.
[ Info: Training [34mNodalMachine{OneHotEncoder} @ 1…24[39m.
[ Info: Spawning 2 sub-features to one-hot encode feature :gender.
[ Info: Training [34mNodalMachine{UnivariateStandardizer} @ 9…38[39m.
[ Info: Training [34mNodalMachine{KNNRegressor} @ 1…13[39m.
Test Summary: | Pass  Total
pipelines     |  133    133
Evaluating over 5 folds:  17%[====>                    ]  ETA: 0:00:00[KEvaluating over 5 folds:  33%[========>                ]  ETA: 0:00:03[KEvaluating over 5 folds:  50%[============>            ]  ETA: 0:00:02[KEvaluating over 5 folds:  67%[================>        ]  ETA: 0:00:01[KEvaluating over 5 folds:  83%[====================>    ]  ETA: 0:00:00[KEvaluating over 5 folds: 100%[=========================] Time: 0:00:01[K
┌─────────┬─────────────────────┐
│ measure │ measurement         │
├─────────┼─────────────────────┤
│ my_rms  │ 0.6                 │
│ my_mav  │ 0.6                 │
│ rmslp1  │ 0.25095859542946747 │
└─────────┴─────────────────────┘
Evaluating over 1 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 1 folds: 100%[=========================] Time: 0:00:00[K
┌─────────┬─────────────────────┐
│ measure │ measurement         │
├─────────┼─────────────────────┤
│ rms     │ 0.6666666666666667  │
│ rmslp1  │ 0.25131442828090633 │
└─────────┴─────────────────────┘
Evaluating over 5 folds:  17%[====>                    ]  ETA: 0:00:00[KEvaluating over 5 folds:  33%[========>                ]  ETA: 0:00:00[KEvaluating over 5 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 5 folds:  67%[================>        ]  ETA: 0:00:00[KEvaluating over 5 folds: 100%[=========================] Time: 0:00:00[K
┌─────────┬─────────────────────┐
│ measure │ measurement         │
├─────────┼─────────────────────┤
│ rms     │ 0.6123724356957945  │
│ rmslp1  │ 0.25095859542946747 │
└─────────┴─────────────────────┘
Evaluating over 6 folds:  14%[===>                     ]  ETA: 0:00:00[KEvaluating over 6 folds:  29%[=======>                 ]  ETA: 0:00:00[KEvaluating over 6 folds:  43%[==========>              ]  ETA: 0:00:00[KEvaluating over 6 folds:  57%[==============>          ]  ETA: 0:00:00[KEvaluating over 6 folds:  71%[=================>       ]  ETA: 0:00:00[KEvaluating over 6 folds:  86%[=====================>   ]  ETA: 0:00:00[KEvaluating over 6 folds: 100%[=========================] Time: 0:00:00[K
[ Info: Updating [34mMachine{Resampler} @ 1…60[39m.
Evaluating over 1 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 1 folds: 100%[=========================] Time: 0:00:00[K
Evaluating over 1 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 1 folds: 100%[=========================] Time: 0:00:02[K
Evaluating over 1 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 1 folds: 100%[=========================] Time: 0:00:01[K
[ Info: Passing machine sample weights to any supported measures. 
Evaluating over 1 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 1 folds: 100%[=========================] Time: 0:00:00[K
Evaluating over 1 folds:  50%[============>            ]  ETA: 0:00:00[KEvaluating over 1 folds: 100%[=========================] Time: 0:00:00[K
[ Info: Passing machine sample weights to any supported measures. 
Evaluating over 6 folds:  14%[===>                     ]  ETA: 0:00:00[KEvaluating over 6 folds:  29%[=======>                 ]  ETA: 0:00:08[KEvaluating over 6 folds:  43%[==========>              ]  ETA: 0:00:04[KEvaluating over 6 folds:  57%[==============>          ]  ETA: 0:00:02[KEvaluating over 6 folds:  71%[=================>       ]  ETA: 0:00:01[KEvaluating over 6 folds:  86%[=====================>   ]  ETA: 0:00:01[KEvaluating over 6 folds: 100%[=========================] Time: 0:00:03[K
[ Info: Passing machine sample weights to any supported measures. 
[ Info: Creating subsamples from a subset of all rows. 
Evaluating over 6 folds:  14%[===>                     ]  ETA: 0:00:00[KEvaluating over 6 folds:  29%[=======>                 ]  ETA: 0:00:00[KEvaluating over 6 folds:  43%[==========>              ]  ETA: 0:00:00[KEvaluating over 6 folds:  57%[==============>          ]  ETA: 0:00:00[KEvaluating over 6 folds:  71%[=================>       ]  ETA: 0:00:00[KEvaluating over 6 folds:  86%[=====================>   ]  ETA: 0:00:00[KEvaluating over 6 folds: 100%[=========================] Time: 0:00:00[K
[ Info: Training [34mMachine{Resampler} @ 1…18[39m.
[ Info: Passing machine sample weights to any supported measures. 
[ Info: Passing machine sample weights to any supported measures. 
Evaluating over 6 folds:  14%[===>                     ]  ETA: 0:00:00[KEvaluating over 6 folds:  29%[=======>                 ]  ETA: 0:00:00[KEvaluating over 6 folds:  43%[==========>              ]  ETA: 0:00:00[KEvaluating over 6 folds:  57%[==============>          ]  ETA: 0:00:00[KEvaluating over 6 folds:  71%[=================>       ]  ETA: 0:00:00[KEvaluating over 6 folds:  86%[=====================>   ]  ETA: 0:00:00[KEvaluating over 6 folds: 100%[=========================] Time: 0:00:00[K
[ Info: Training [34mMachine{Resampler} @ 4…04[39m.
Evaluating over 6 folds:  14%[===>                     ]  ETA: 0:00:00[KEvaluating over 6 folds:  29%[=======>                 ]  ETA: 0:00:00[KEvaluating over 6 folds:  43%[==========>              ]  ETA: 0:00:00[KEvaluating over 6 folds:  57%[==============>          ]  ETA: 0:00:00[KEvaluating over 6 folds:  71%[=================>       ]  ETA: 0:00:00[KEvaluating over 6 folds:  86%[=====================>   ]  ETA: 0:00:00[KEvaluating over 6 folds: 100%[=========================] Time: 0:00:00[K
Test Summary: | Pass  Total
resampling    |   52     52
[ Info: Training [34mMachine{DeterministicTunedModel} @ 5…02[39m.
[ Info: Mimimizing rms. 
Iterating over a 40-point grid:   2%[>                        ]  ETA: 0:00:00[KIterating over a 40-point grid:   7%[=>                       ]  ETA: 0:00:44[KIterating over a 40-point grid:  10%[==>                      ]  ETA: 0:00:39[KIterating over a 40-point grid:  12%[===>                     ]  ETA: 0:00:34[KIterating over a 40-point grid:  15%[===>                     ]  ETA: 0:00:28[KIterating over a 40-point grid:  17%[====>                    ]  ETA: 0:00:23[KIterating over a 40-point grid:  20%[====>                    ]  ETA: 0:00:20[KIterating over a 40-point grid:  22%[=====>                   ]  ETA: 0:00:17[KIterating over a 40-point grid:  24%[======>                  ]  ETA: 0:00:15[KIterating over a 40-point grid:  27%[======>                  ]  ETA: 0:00:13[KIterating over a 40-point grid:  29%[=======>                 ]  ETA: 0:00:12[KIterating over a 40-point grid:  32%[=======>                 ]  ETA: 0:00:10[KIterating over a 40-point grid:  34%[========>                ]  ETA: 0:00:09[KIterating over a 40-point grid:  37%[=========>               ]  ETA: 0:00:08[KIterating over a 40-point grid:  39%[=========>               ]  ETA: 0:00:08[KIterating over a 40-point grid:  41%[==========>              ]  ETA: 0:00:07[KIterating over a 40-point grid:  44%[==========>              ]  ETA: 0:00:06[KIterating over a 40-point grid:  46%[===========>             ]  ETA: 0:00:06[KIterating over a 40-point grid:  49%[============>            ]  ETA: 0:00:05[KIterating over a 40-point grid:  51%[============>            ]  ETA: 0:00:05[KIterating over a 40-point grid:  54%[=============>           ]  ETA: 0:00:04[KIterating over a 40-point grid:  56%[==============>          ]  ETA: 0:00:04[KIterating over a 40-point grid:  59%[==============>          ]  ETA: 0:00:03[KIterating over a 40-point grid:  61%[===============>         ]  ETA: 0:00:03[KIterating over a 40-point grid:  63%[===============>         ]  ETA: 0:00:03[KIterating over a 40-point grid:  66%[================>        ]  ETA: 0:00:02[KIterating over a 40-point grid:  68%[=================>       ]  ETA: 0:00:02[KIterating over a 40-point grid:  71%[=================>       ]  ETA: 0:00:02[KIterating over a 40-point grid:  73%[==================>      ]  ETA: 0:00:02[KIterating over a 40-point grid:  76%[==================>      ]  ETA: 0:00:02[KIterating over a 40-point grid:  78%[===================>     ]  ETA: 0:00:01[KIterating over a 40-point grid:  80%[====================>    ]  ETA: 0:00:01[KIterating over a 40-point grid:  83%[====================>    ]  ETA: 0:00:01[KIterating over a 40-point grid:  85%[=====================>   ]  ETA: 0:00:01[KIterating over a 40-point grid:  88%[=====================>   ]  ETA: 0:00:01[KIterating over a 40-point grid:  90%[======================>  ]  ETA: 0:00:01[KIterating over a 40-point grid:  93%[=======================> ]  ETA: 0:00:00[KIterating over a 40-point grid:  95%[=======================> ]  ETA: 0:00:00[KIterating over a 40-point grid:  98%[========================>]  ETA: 0:00:00[KIterating over a 40-point grid: 100%[=========================] Time: 0:00:04[K
[ Info: Training best model on all supplied data.
[ Info: Updating [34mMachine{DeterministicTunedModel} @ 5…02[39m.
[ Info: Mimimizing rms. 
Iterating over a 40-point grid:   2%[>                        ]  ETA: 0:00:00[KIterating over a 40-point grid:   7%[=>                       ]  ETA: 0:00:00[KIterating over a 40-point grid:  10%[==>                      ]  ETA: 0:00:00[KIterating over a 40-point grid:  12%[===>                     ]  ETA: 0:00:00[KIterating over a 40-point grid:  15%[===>                     ]  ETA: 0:00:00[KIterating over a 40-point grid:  17%[====>                    ]  ETA: 0:00:00[KIterating over a 40-point grid:  20%[====>                    ]  ETA: 0:00:00[KIterating over a 40-point grid:  22%[=====>                   ]  ETA: 0:00:00[KIterating over a 40-point grid:  24%[======>                  ]  ETA: 0:00:00[KIterating over a 40-point grid:  27%[======>                  ]  ETA: 0:00:00[KIterating over a 40-point grid:  29%[=======>                 ]  ETA: 0:00:00[KIterating over a 40-point grid:  32%[=======>                 ]  ETA: 0:00:00[KIterating over a 40-point grid:  34%[========>                ]  ETA: 0:00:00[KIterating over a 40-point grid:  37%[=========>               ]  ETA: 0:00:00[KIterating over a 40-point grid:  39%[=========>               ]  ETA: 0:00:00[KIterating over a 40-point grid:  41%[==========>              ]  ETA: 0:00:00[KIterating over a 40-point grid:  44%[==========>              ]  ETA: 0:00:00[KIterating over a 40-point grid:  46%[===========>             ]  ETA: 0:00:00[KIterating over a 40-point grid:  49%[============>            ]  ETA: 0:00:00[KIterating over a 40-point grid:  51%[============>            ]  ETA: 0:00:00[KIterating over a 40-point grid:  54%[=============>           ]  ETA: 0:00:00[KIterating over a 40-point grid:  56%[==============>          ]  ETA: 0:00:00[KIterating over a 40-point grid:  59%[==============>          ]  ETA: 0:00:00[KIterating over a 40-point grid:  61%[===============>         ]  ETA: 0:00:00[KIterating over a 40-point grid:  63%[===============>         ]  ETA: 0:00:00[KIterating over a 40-point grid:  66%[================>        ]  ETA: 0:00:00[KIterating over a 40-point grid:  68%[=================>       ]  ETA: 0:00:00[KIterating over a 40-point grid:  71%[=================>       ]  ETA: 0:00:00[KIterating over a 40-point grid:  73%[==================>      ]  ETA: 0:00:00[KIterating over a 40-point grid:  76%[==================>      ]  ETA: 0:00:00[KIterating over a 40-point grid:  78%[===================>     ]  ETA: 0:00:00[KIterating over a 40-point grid:  80%[====================>    ]  ETA: 0:00:00[KIterating over a 40-point grid:  83%[====================>    ]  ETA: 0:00:00[KIterating over a 40-point grid:  85%[=====================>   ]  ETA: 0:00:00[KIterating over a 40-point grid:  88%[=====================>   ]  ETA: 0:00:00[KIterating over a 40-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 40-point grid:  93%[=======================> ]  ETA: 0:00:00[KIterating over a 40-point grid:  95%[=======================> ]  ETA: 0:00:00[KIterating over a 40-point grid:  98%[========================>]  ETA: 0:00:00[KIterating over a 40-point grid: 100%[=========================] Time: 0:00:00[K
[ Info: Training best model on all supplied data.
[ Info: Updating [34mMachine{DeterministicTunedModel} @ 5…02[39m.
[ Info: Mimimizing rms. 
Iterating over a 40-point grid:   2%[>                        ]  ETA: 0:00:00[KIterating over a 40-point grid:   7%[=>                       ]  ETA: 0:00:04[KIterating over a 40-point grid:  10%[==>                      ]  ETA: 0:00:03[KIterating over a 40-point grid:  12%[===>                     ]  ETA: 0:00:03[KIterating over a 40-point grid:  15%[===>                     ]  ETA: 0:00:02[KIterating over a 40-point grid:  17%[====>                    ]  ETA: 0:00:02[KIterating over a 40-point grid:  20%[====>                    ]  ETA: 0:00:01[KIterating over a 40-point grid:  22%[=====>                   ]  ETA: 0:00:01[KIterating over a 40-point grid:  24%[======>                  ]  ETA: 0:00:01[KIterating over a 40-point grid:  27%[======>                  ]  ETA: 0:00:01[KIterating over a 40-point grid:  29%[=======>                 ]  ETA: 0:00:01[KIterating over a 40-point grid:  32%[=======>                 ]  ETA: 0:00:01[KIterating over a 40-point grid:  34%[========>                ]  ETA: 0:00:01[KIterating over a 40-point grid:  37%[=========>               ]  ETA: 0:00:01[KIterating over a 40-point grid:  39%[=========>               ]  ETA: 0:00:01[KIterating over a 40-point grid:  41%[==========>              ]  ETA: 0:00:01[KIterating over a 40-point grid:  44%[==========>              ]  ETA: 0:00:00[KIterating over a 40-point grid:  46%[===========>             ]  ETA: 0:00:00[KIterating over a 40-point grid:  49%[============>            ]  ETA: 0:00:00[KIterating over a 40-point grid:  51%[============>            ]  ETA: 0:00:00[KIterating over a 40-point grid:  54%[=============>           ]  ETA: 0:00:00[KIterating over a 40-point grid:  56%[==============>          ]  ETA: 0:00:00[KIterating over a 40-point grid:  59%[==============>          ]  ETA: 0:00:00[KIterating over a 40-point grid:  61%[===============>         ]  ETA: 0:00:00[KIterating over a 40-point grid:  63%[===============>         ]  ETA: 0:00:00[KIterating over a 40-point grid:  66%[================>        ]  ETA: 0:00:00[KIterating over a 40-point grid:  68%[=================>       ]  ETA: 0:00:00[KIterating over a 40-point grid:  71%[=================>       ]  ETA: 0:00:00[KIterating over a 40-point grid:  73%[==================>      ]  ETA: 0:00:00[KIterating over a 40-point grid:  76%[==================>      ]  ETA: 0:00:00[KIterating over a 40-point grid:  78%[===================>     ]  ETA: 0:00:00[KIterating over a 40-point grid:  80%[====================>    ]  ETA: 0:00:00[KIterating over a 40-point grid:  83%[====================>    ]  ETA: 0:00:00[KIterating over a 40-point grid:  85%[=====================>   ]  ETA: 0:00:00[KIterating over a 40-point grid:  88%[=====================>   ]  ETA: 0:00:00[KIterating over a 40-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 40-point grid:  93%[=======================> ]  ETA: 0:00:00[KIterating over a 40-point grid:  95%[=======================> ]  ETA: 0:00:00[KIterating over a 40-point grid:  98%[========================>]  ETA: 0:00:00[KIterating over a 40-point grid: 100%[=========================] Time: 0:00:00[K
[ Info: Training best model on all supplied data.
┌ Info: A model type "KNNRegressor" is already loaded. 
└ No new code loaded. 
[ Info: Training [34mMachine{DeterministicTunedModel} @ 9…22[39m.
[ Info: Mimimizing rms. 
Iterating over a 72-point grid:   1%[>                        ]  ETA: 0:00:00[KIterating over a 72-point grid:   4%[=>                       ]  ETA: 0:02:44[KIterating over a 72-point grid:   5%[=>                       ]  ETA: 0:02:29[KIterating over a 72-point grid:   7%[=>                       ]  ETA: 0:01:58[KIterating over a 72-point grid:   8%[==>                      ]  ETA: 0:01:37[KIterating over a 72-point grid:  10%[==>                      ]  ETA: 0:01:22[KIterating over a 72-point grid:  11%[==>                      ]  ETA: 0:01:11[KIterating over a 72-point grid:  12%[===>                     ]  ETA: 0:01:03[KIterating over a 72-point grid:  14%[===>                     ]  ETA: 0:00:56[KIterating over a 72-point grid:  15%[===>                     ]  ETA: 0:00:50[KIterating over a 72-point grid:  16%[====>                    ]  ETA: 0:00:46[KIterating over a 72-point grid:  18%[====>                    ]  ETA: 0:00:42[KIterating over a 72-point grid:  19%[====>                    ]  ETA: 0:00:38[KIterating over a 72-point grid:  21%[=====>                   ]  ETA: 0:00:35[KIterating over a 72-point grid:  22%[=====>                   ]  ETA: 0:00:32[KIterating over a 72-point grid:  23%[=====>                   ]  ETA: 0:00:30[KIterating over a 72-point grid:  25%[======>                  ]  ETA: 0:00:28[KIterating over a 72-point grid:  26%[======>                  ]  ETA: 0:00:26[KIterating over a 72-point grid:  27%[======>                  ]  ETA: 0:00:25[KIterating over a 72-point grid:  29%[=======>                 ]  ETA: 0:00:23[KIterating over a 72-point grid:  30%[=======>                 ]  ETA: 0:00:22[KIterating over a 72-point grid:  32%[=======>                 ]  ETA: 0:00:20[KIterating over a 72-point grid:  33%[========>                ]  ETA: 0:00:19[KIterating over a 72-point grid:  34%[========>                ]  ETA: 0:00:18[KIterating over a 72-point grid:  36%[========>                ]  ETA: 0:00:17[KIterating over a 72-point grid:  37%[=========>               ]  ETA: 0:00:16[KIterating over a 72-point grid:  38%[=========>               ]  ETA: 0:00:15[KIterating over a 72-point grid:  40%[=========>               ]  ETA: 0:00:15[KIterating over a 72-point grid:  41%[==========>              ]  ETA: 0:00:14[KIterating over a 72-point grid:  42%[==========>              ]  ETA: 0:00:13[KIterating over a 72-point grid:  44%[==========>              ]  ETA: 0:00:13[KIterating over a 72-point grid:  45%[===========>             ]  ETA: 0:00:12[KIterating over a 72-point grid:  47%[===========>             ]  ETA: 0:00:11[KIterating over a 72-point grid:  48%[===========>             ]  ETA: 0:00:11[KIterating over a 72-point grid:  49%[============>            ]  ETA: 0:00:10[KIterating over a 72-point grid:  51%[============>            ]  ETA: 0:00:10[KIterating over a 72-point grid:  52%[=============>           ]  ETA: 0:00:09[KIterating over a 72-point grid:  53%[=============>           ]  ETA: 0:00:09[KIterating over a 72-point grid:  55%[=============>           ]  ETA: 0:00:08[KIterating over a 72-point grid:  56%[==============>          ]  ETA: 0:00:08[KIterating over a 72-point grid:  58%[==============>          ]  ETA: 0:00:08[KIterating over a 72-point grid:  59%[==============>          ]  ETA: 0:00:07[KIterating over a 72-point grid:  60%[===============>         ]  ETA: 0:00:07[KIterating over a 72-point grid:  62%[===============>         ]  ETA: 0:00:06[KIterating over a 72-point grid:  63%[===============>         ]  ETA: 0:00:06[KIterating over a 72-point grid:  64%[================>        ]  ETA: 0:00:06[KIterating over a 72-point grid:  66%[================>        ]  ETA: 0:00:05[KIterating over a 72-point grid:  67%[================>        ]  ETA: 0:00:05[KIterating over a 72-point grid:  68%[=================>       ]  ETA: 0:00:05[KIterating over a 72-point grid:  70%[=================>       ]  ETA: 0:00:05[KIterating over a 72-point grid:  71%[=================>       ]  ETA: 0:00:04[KIterating over a 72-point grid:  73%[==================>      ]  ETA: 0:00:04[KIterating over a 72-point grid:  74%[==================>      ]  ETA: 0:00:04[KIterating over a 72-point grid:  75%[==================>      ]  ETA: 0:00:04[KIterating over a 72-point grid:  77%[===================>     ]  ETA: 0:00:03[KIterating over a 72-point grid:  78%[===================>     ]  ETA: 0:00:03[KIterating over a 72-point grid:  79%[===================>     ]  ETA: 0:00:03[KIterating over a 72-point grid:  81%[====================>    ]  ETA: 0:00:03[KIterating over a 72-point grid:  82%[====================>    ]  ETA: 0:00:02[KIterating over a 72-point grid:  84%[====================>    ]  ETA: 0:00:02[KIterating over a 72-point grid:  85%[=====================>   ]  ETA: 0:00:02[KIterating over a 72-point grid:  86%[=====================>   ]  ETA: 0:00:02[KIterating over a 72-point grid:  88%[=====================>   ]  ETA: 0:00:02[KIterating over a 72-point grid:  89%[======================>  ]  ETA: 0:00:01[KIterating over a 72-point grid:  90%[======================>  ]  ETA: 0:00:01[KIterating over a 72-point grid:  92%[======================>  ]  ETA: 0:00:01[KIterating over a 72-point grid:  93%[=======================> ]  ETA: 0:00:01[KIterating over a 72-point grid:  95%[=======================> ]  ETA: 0:00:01[KIterating over a 72-point grid:  96%[=======================> ]  ETA: 0:00:01[KIterating over a 72-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 72-point grid:  99%[========================>]  ETA: 0:00:00[KIterating over a 72-point grid: 100%[=========================] Time: 0:00:11[K
[ Info: Training best model on all supplied data.
[ Info: Updating [34mMachine{DeterministicTunedModel} @ 9…22[39m.
[ Info: Mimimizing rms. 
Iterating over a 56-point grid:   2%[>                        ]  ETA: 0:00:00[KIterating over a 56-point grid:   5%[=>                       ]  ETA: 0:00:01[KIterating over a 56-point grid:   7%[=>                       ]  ETA: 0:00:01[KIterating over a 56-point grid:   9%[==>                      ]  ETA: 0:00:01[KIterating over a 56-point grid:  11%[==>                      ]  ETA: 0:00:01[KIterating over a 56-point grid:  12%[===>                     ]  ETA: 0:00:01[KIterating over a 56-point grid:  14%[===>                     ]  ETA: 0:00:01[KIterating over a 56-point grid:  16%[===>                     ]  ETA: 0:00:01[KIterating over a 56-point grid:  18%[====>                    ]  ETA: 0:00:01[KIterating over a 56-point grid:  19%[====>                    ]  ETA: 0:00:01[KIterating over a 56-point grid:  21%[=====>                   ]  ETA: 0:00:01[KIterating over a 56-point grid:  23%[=====>                   ]  ETA: 0:00:01[KIterating over a 56-point grid:  25%[======>                  ]  ETA: 0:00:01[KIterating over a 56-point grid:  26%[======>                  ]  ETA: 0:00:01[KIterating over a 56-point grid:  28%[=======>                 ]  ETA: 0:00:02[KIterating over a 56-point grid:  30%[=======>                 ]  ETA: 0:00:02[KIterating over a 56-point grid:  32%[=======>                 ]  ETA: 0:00:01[KIterating over a 56-point grid:  33%[========>                ]  ETA: 0:00:01[KIterating over a 56-point grid:  35%[========>                ]  ETA: 0:00:01[KIterating over a 56-point grid:  37%[=========>               ]  ETA: 0:00:01[KIterating over a 56-point grid:  39%[=========>               ]  ETA: 0:00:01[KIterating over a 56-point grid:  40%[==========>              ]  ETA: 0:00:01[KIterating over a 56-point grid:  42%[==========>              ]  ETA: 0:00:01[KIterating over a 56-point grid:  44%[==========>              ]  ETA: 0:00:01[KIterating over a 56-point grid:  46%[===========>             ]  ETA: 0:00:01[KIterating over a 56-point grid:  47%[===========>             ]  ETA: 0:00:01[KIterating over a 56-point grid:  49%[============>            ]  ETA: 0:00:01[KIterating over a 56-point grid:  51%[============>            ]  ETA: 0:00:01[KIterating over a 56-point grid:  53%[=============>           ]  ETA: 0:00:01[KIterating over a 56-point grid:  54%[=============>           ]  ETA: 0:00:01[KIterating over a 56-point grid:  56%[==============>          ]  ETA: 0:00:01[KIterating over a 56-point grid:  58%[==============>          ]  ETA: 0:00:01[KIterating over a 56-point grid:  60%[==============>          ]  ETA: 0:00:01[KIterating over a 56-point grid:  61%[===============>         ]  ETA: 0:00:01[KIterating over a 56-point grid:  63%[===============>         ]  ETA: 0:00:01[KIterating over a 56-point grid:  65%[================>        ]  ETA: 0:00:01[KIterating over a 56-point grid:  67%[================>        ]  ETA: 0:00:01[KIterating over a 56-point grid:  68%[=================>       ]  ETA: 0:00:01[KIterating over a 56-point grid:  70%[=================>       ]  ETA: 0:00:01[KIterating over a 56-point grid:  72%[=================>       ]  ETA: 0:00:01[KIterating over a 56-point grid:  74%[==================>      ]  ETA: 0:00:01[KIterating over a 56-point grid:  75%[==================>      ]  ETA: 0:00:01[KIterating over a 56-point grid:  77%[===================>     ]  ETA: 0:00:01[KIterating over a 56-point grid:  79%[===================>     ]  ETA: 0:00:00[KIterating over a 56-point grid:  81%[====================>    ]  ETA: 0:00:00[KIterating over a 56-point grid:  82%[====================>    ]  ETA: 0:00:00[KIterating over a 56-point grid:  84%[=====================>   ]  ETA: 0:00:00[KIterating over a 56-point grid:  86%[=====================>   ]  ETA: 0:00:00[KIterating over a 56-point grid:  88%[=====================>   ]  ETA: 0:00:00[KIterating over a 56-point grid:  89%[======================>  ]  ETA: 0:00:00[KIterating over a 56-point grid:  91%[======================>  ]  ETA: 0:00:00[KIterating over a 56-point grid:  93%[=======================> ]  ETA: 0:00:00[KIterating over a 56-point grid:  95%[=======================> ]  ETA: 0:00:00[KIterating over a 56-point grid:  96%[========================>]  ETA: 0:00:00[KIterating over a 56-point grid:  98%[========================>]  ETA: 0:00:00[KIterating over a 56-point grid: 100%[=========================] Time: 0:00:02[K
[ Info: Training best model on all supplied data.
[ Info: Updating [34mMachine{DeterministicTunedModel} @ 9…22[39m.
┌ Warning: No resolution specified for forest.bagging_fraction. Will use a value of 5. 
└ @ MLJ ~/.julia/packages/MLJ/hcR5D/src/tuning.jl:189
[ Info: Mimimizing rms. 
Iterating over a 60-point grid:   2%[>                        ]  ETA: 0:00:00[KIterating over a 60-point grid:   5%[=>                       ]  ETA: 0:00:01[KIterating over a 60-point grid:   7%[=>                       ]  ETA: 0:00:01[KIterating over a 60-point grid:   8%[==>                      ]  ETA: 0:00:01[KIterating over a 60-point grid:  10%[==>                      ]  ETA: 0:00:01[KIterating over a 60-point grid:  11%[==>                      ]  ETA: 0:00:01[KIterating over a 60-point grid:  13%[===>                     ]  ETA: 0:00:02[KIterating over a 60-point grid:  15%[===>                     ]  ETA: 0:00:02[KIterating over a 60-point grid:  16%[====>                    ]  ETA: 0:00:02[KIterating over a 60-point grid:  18%[====>                    ]  ETA: 0:00:02[KIterating over a 60-point grid:  20%[====>                    ]  ETA: 0:00:02[KIterating over a 60-point grid:  21%[=====>                   ]  ETA: 0:00:02[KIterating over a 60-point grid:  23%[=====>                   ]  ETA: 0:00:02[KIterating over a 60-point grid:  25%[======>                  ]  ETA: 0:00:02[KIterating over a 60-point grid:  26%[======>                  ]  ETA: 0:00:02[KIterating over a 60-point grid:  28%[======>                  ]  ETA: 0:00:02[KIterating over a 60-point grid:  30%[=======>                 ]  ETA: 0:00:02[KIterating over a 60-point grid:  31%[=======>                 ]  ETA: 0:00:02[KIterating over a 60-point grid:  33%[========>                ]  ETA: 0:00:01[KIterating over a 60-point grid:  34%[========>                ]  ETA: 0:00:01[KIterating over a 60-point grid:  36%[=========>               ]  ETA: 0:00:02[KIterating over a 60-point grid:  38%[=========>               ]  ETA: 0:00:02[KIterating over a 60-point grid:  39%[=========>               ]  ETA: 0:00:01[KIterating over a 60-point grid:  41%[==========>              ]  ETA: 0:00:01[KIterating over a 60-point grid:  43%[==========>              ]  ETA: 0:00:01[KIterating over a 60-point grid:  44%[===========>             ]  ETA: 0:00:01[KIterating over a 60-point grid:  46%[===========>             ]  ETA: 0:00:01[KIterating over a 60-point grid:  48%[===========>             ]  ETA: 0:00:01[KIterating over a 60-point grid:  49%[============>            ]  ETA: 0:00:01[KIterating over a 60-point grid:  51%[============>            ]  ETA: 0:00:01[KIterating over a 60-point grid:  52%[=============>           ]  ETA: 0:00:01[KIterating over a 60-point grid:  54%[=============>           ]  ETA: 0:00:01[KIterating over a 60-point grid:  56%[=============>           ]  ETA: 0:00:01[KIterating over a 60-point grid:  57%[==============>          ]  ETA: 0:00:01[KIterating over a 60-point grid:  59%[==============>          ]  ETA: 0:00:01[KIterating over a 60-point grid:  61%[===============>         ]  ETA: 0:00:01[KIterating over a 60-point grid:  62%[===============>         ]  ETA: 0:00:01[KIterating over a 60-point grid:  64%[===============>         ]  ETA: 0:00:01[KIterating over a 60-point grid:  66%[================>        ]  ETA: 0:00:01[KIterating over a 60-point grid:  67%[================>        ]  ETA: 0:00:01[KIterating over a 60-point grid:  69%[=================>       ]  ETA: 0:00:01[KIterating over a 60-point grid:  70%[=================>       ]  ETA: 0:00:01[KIterating over a 60-point grid:  72%[==================>      ]  ETA: 0:00:01[KIterating over a 60-point grid:  74%[==================>      ]  ETA: 0:00:01[KIterating over a 60-point grid:  75%[==================>      ]  ETA: 0:00:01[KIterating over a 60-point grid:  77%[===================>     ]  ETA: 0:00:01[KIterating over a 60-point grid:  79%[===================>     ]  ETA: 0:00:01[KIterating over a 60-point grid:  80%[====================>    ]  ETA: 0:00:01[KIterating over a 60-point grid:  82%[====================>    ]  ETA: 0:00:00[KIterating over a 60-point grid:  84%[====================>    ]  ETA: 0:00:00[KIterating over a 60-point grid:  85%[=====================>   ]  ETA: 0:00:00[KIterating over a 60-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 60-point grid:  89%[======================>  ]  ETA: 0:00:00[KIterating over a 60-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 60-point grid:  92%[======================>  ]  ETA: 0:00:00[KIterating over a 60-point grid:  93%[=======================> ]  ETA: 0:00:00[KIterating over a 60-point grid:  95%[=======================> ]  ETA: 0:00:00[KIterating over a 60-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 60-point grid:  98%[========================>]  ETA: 0:00:00[KIterating over a 60-point grid: 100%[=========================] Time: 0:00:02[K
[ Info: Training best model on all supplied data.
┌ Warning: No measure specified. Setting measure=rms. 
└ @ MLJ ~/.julia/packages/MLJ/hcR5D/src/machines.jl:155
[ Info: Training [34mMachine{DeterministicTunedModel} @ 1…34[39m.
[ Info: Mimimizing rms. 
Iterating over a 10-point grid:   9%[==>                      ]  ETA: 0:00:00[KIterating over a 10-point grid:  27%[======>                  ]  ETA: 0:00:04[KIterating over a 10-point grid:  36%[=========>               ]  ETA: 0:00:03[KIterating over a 10-point grid:  45%[===========>             ]  ETA: 0:00:02[KIterating over a 10-point grid:  55%[=============>           ]  ETA: 0:00:01[KIterating over a 10-point grid:  64%[===============>         ]  ETA: 0:00:01[KIterating over a 10-point grid:  73%[==================>      ]  ETA: 0:00:01[KIterating over a 10-point grid:  82%[====================>    ]  ETA: 0:00:00[KIterating over a 10-point grid:  91%[======================>  ]  ETA: 0:00:00[KIterating over a 10-point grid: 100%[=========================] Time: 0:00:01[K
[ Info: Training best model on all supplied data.
[ Info: Training [34mMachine{DeterministicTunedModel} @ 8…02[39m.
[ Info: Mimimizing rms. 
atom.K=3 	bagging_fraction=0.4 	measurement=0.2973770670340338
atom.K=4 	bagging_fraction=0.4 	measurement=0.29487431347616055
atom.K=3 	bagging_fraction=0.7 	measurement=0.3053084971552806
atom.K=4 	bagging_fraction=0.7 	measurement=0.3007352876810562
atom.K=3 	bagging_fraction=1.0 	measurement=0.322315125056536
atom.K=4 	bagging_fraction=1.0 	measurement=0.31259942522260187
[ Info: Training best model on all supplied data.
[ Info: Training [34mMachine{DeterministicEnsembleModel{KNNRegressor}} @ 1…26[39m.

[ Info: Training [34mMachine{ProbabilisticTunedModel} @ 9…89[39m.
[ Info: Maximizing BrierScore(UnivariateFinite). 
Iterating over a 10-point grid:   9%[==>                      ]  ETA: 0:00:00[KIterating over a 10-point grid:  27%[======>                  ]  ETA: 0:00:07[KIterating over a 10-point grid:  36%[=========>               ]  ETA: 0:00:05[KIterating over a 10-point grid:  45%[===========>             ]  ETA: 0:00:03[KIterating over a 10-point grid:  55%[=============>           ]  ETA: 0:00:02[KIterating over a 10-point grid:  64%[===============>         ]  ETA: 0:00:02[KIterating over a 10-point grid:  73%[==================>      ]  ETA: 0:00:01[KIterating over a 10-point grid:  82%[====================>    ]  ETA: 0:00:01[KIterating over a 10-point grid:  91%[======================>  ]  ETA: 0:00:00[KIterating over a 10-point grid: 100%[=========================] Time: 0:00:03[K
[ Info: Training best model on all supplied data.
[ Info: Training [34mMachine{ProbabilisticTunedModel} @ 1…29[39m.
[ Info: Maximizing BrierScore(UnivariateFinite). 
Iterating over a 10-point grid:   9%[==>                      ]  ETA: 0:00:00[KIterating over a 10-point grid:  27%[======>                  ]  ETA: 0:00:02[KIterating over a 10-point grid:  36%[=========>               ]  ETA: 0:00:02[KIterating over a 10-point grid:  45%[===========>             ]  ETA: 0:00:01[KIterating over a 10-point grid:  55%[=============>           ]  ETA: 0:00:01[KIterating over a 10-point grid:  64%[===============>         ]  ETA: 0:00:01[KIterating over a 10-point grid:  73%[==================>      ]  ETA: 0:00:00[KIterating over a 10-point grid:  82%[====================>    ]  ETA: 0:00:00[KIterating over a 10-point grid:  91%[======================>  ]  ETA: 0:00:00[KIterating over a 10-point grid: 100%[=========================] Time: 0:00:01[K
[ Info: Training best model on all supplied data.
[ Info: Training [34mMachine{ProbabilisticTunedModel} @ 1…13[39m.
[ Info: Maximizing BrierScore(UnivariateFinite). 
Iterating over a 10-point grid:   9%[==>                      ]  ETA: 0:00:00[KIterating over a 10-point grid:  27%[======>                  ]  ETA: 0:00:00[KIterating over a 10-point grid:  36%[=========>               ]  ETA: 0:00:00[KIterating over a 10-point grid:  45%[===========>             ]  ETA: 0:00:00[KIterating over a 10-point grid:  55%[=============>           ]  ETA: 0:00:00[KIterating over a 10-point grid:  64%[===============>         ]  ETA: 0:00:00[KIterating over a 10-point grid:  73%[==================>      ]  ETA: 0:00:00[KIterating over a 10-point grid:  82%[====================>    ]  ETA: 0:00:00[KIterating over a 10-point grid:  91%[======================>  ]  ETA: 0:00:00[KIterating over a 10-point grid: 100%[=========================] Time: 0:00:00[K
[ Info: Training best model on all supplied data.
[ Info: No measure specified. Using measure=rms. 
[ Info: Training [34mMachine{DeterministicTunedModel} @ 5…91[39m.
Iterating over a 30-point grid:   3%[>                        ]  ETA: 0:00:00[KIterating over a 30-point grid:  10%[==>                      ]  ETA: 0:00:20[KIterating over a 30-point grid:  13%[===>                     ]  ETA: 0:00:18[KIterating over a 30-point grid:  16%[====>                    ]  ETA: 0:00:14[KIterating over a 30-point grid:  19%[====>                    ]  ETA: 0:00:11[KIterating over a 30-point grid:  23%[=====>                   ]  ETA: 0:00:09[KIterating over a 30-point grid:  26%[======>                  ]  ETA: 0:00:08[KIterating over a 30-point grid:  29%[=======>                 ]  ETA: 0:00:07[KIterating over a 30-point grid:  32%[========>                ]  ETA: 0:00:06[KIterating over a 30-point grid:  35%[========>                ]  ETA: 0:00:05[KIterating over a 30-point grid:  39%[=========>               ]  ETA: 0:00:04[KIterating over a 30-point grid:  42%[==========>              ]  ETA: 0:00:04[KIterating over a 30-point grid:  45%[===========>             ]  ETA: 0:00:03[KIterating over a 30-point grid:  48%[============>            ]  ETA: 0:00:03[KIterating over a 30-point grid:  52%[============>            ]  ETA: 0:00:03[KIterating over a 30-point grid:  55%[=============>           ]  ETA: 0:00:02[KIterating over a 30-point grid:  58%[==============>          ]  ETA: 0:00:02[KIterating over a 30-point grid:  61%[===============>         ]  ETA: 0:00:02[KIterating over a 30-point grid:  65%[================>        ]  ETA: 0:00:02[KIterating over a 30-point grid:  68%[================>        ]  ETA: 0:00:01[KIterating over a 30-point grid:  71%[=================>       ]  ETA: 0:00:01[KIterating over a 30-point grid:  74%[==================>      ]  ETA: 0:00:01[KIterating over a 30-point grid:  77%[===================>     ]  ETA: 0:00:01[KIterating over a 30-point grid:  81%[====================>    ]  ETA: 0:00:01[KIterating over a 30-point grid:  84%[====================>    ]  ETA: 0:00:01[KIterating over a 30-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 30-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 30-point grid:  94%[=======================> ]  ETA: 0:00:00[KIterating over a 30-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 30-point grid: 100%[=========================] Time: 0:00:02[K
┌ Info: Training of best model suppressed.
└  To train tuning machine `mach` on all supplied data, call `fit!(mach.fitresult)`.
[ Info: No measure specified. Using measure=rms. 
[ Info: Training [34mMachine{DeterministicTunedModel} @ 1…56[39m.
Iterating over a 30-point grid:   3%[>                        ]  ETA: 0:00:00[KIterating over a 30-point grid:  10%[==>                      ]  ETA: 0:00:00[KIterating over a 30-point grid:  13%[===>                     ]  ETA: 0:00:00[KIterating over a 30-point grid:  16%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  19%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  23%[=====>                   ]  ETA: 0:00:00[KIterating over a 30-point grid:  26%[======>                  ]  ETA: 0:00:00[KIterating over a 30-point grid:  29%[=======>                 ]  ETA: 0:00:00[KIterating over a 30-point grid:  32%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  35%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  39%[=========>               ]  ETA: 0:00:00[KIterating over a 30-point grid:  42%[==========>              ]  ETA: 0:00:00[KIterating over a 30-point grid:  45%[===========>             ]  ETA: 0:00:00[KIterating over a 30-point grid:  48%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  52%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  55%[=============>           ]  ETA: 0:00:00[KIterating over a 30-point grid:  58%[==============>          ]  ETA: 0:00:00[KIterating over a 30-point grid:  61%[===============>         ]  ETA: 0:00:00[KIterating over a 30-point grid:  65%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  68%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  71%[=================>       ]  ETA: 0:00:00[KIterating over a 30-point grid:  74%[==================>      ]  ETA: 0:00:00[KIterating over a 30-point grid:  77%[===================>     ]  ETA: 0:00:00[KIterating over a 30-point grid:  81%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  84%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 30-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 30-point grid:  94%[=======================> ]  ETA: 0:00:00[KIterating over a 30-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 30-point grid: 100%[=========================] Time: 0:00:00[K
┌ Info: Training of best model suppressed.
└  To train tuning machine `mach` on all supplied data, call `fit!(mach.fitresult)`.
[ Info: No measure specified. Using measure=rms. 
[ Info: Training [34mMachine{DeterministicTunedModel} @ 1…16[39m.
Iterating over a 30-point grid:   3%[>                        ]  ETA: 0:00:00[KIterating over a 30-point grid:  10%[==>                      ]  ETA: 0:00:00[KIterating over a 30-point grid:  13%[===>                     ]  ETA: 0:00:00[KIterating over a 30-point grid:  16%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  19%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  23%[=====>                   ]  ETA: 0:00:00[KIterating over a 30-point grid:  26%[======>                  ]  ETA: 0:00:00[KIterating over a 30-point grid:  29%[=======>                 ]  ETA: 0:00:00[KIterating over a 30-point grid:  32%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  35%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  39%[=========>               ]  ETA: 0:00:00[KIterating over a 30-point grid:  42%[==========>              ]  ETA: 0:00:00[KIterating over a 30-point grid:  45%[===========>             ]  ETA: 0:00:00[KIterating over a 30-point grid:  48%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  52%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  55%[=============>           ]  ETA: 0:00:00[KIterating over a 30-point grid:  58%[==============>          ]  ETA: 0:00:00[KIterating over a 30-point grid:  61%[===============>         ]  ETA: 0:00:00[KIterating over a 30-point grid:  65%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  68%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  71%[=================>       ]  ETA: 0:00:00[KIterating over a 30-point grid:  74%[==================>      ]  ETA: 0:00:00[KIterating over a 30-point grid:  77%[===================>     ]  ETA: 0:00:00[KIterating over a 30-point grid:  81%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  84%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 30-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 30-point grid:  94%[=======================> ]  ETA: 0:00:00[KIterating over a 30-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 30-point grid: 100%[=========================] Time: 0:00:00[K
┌ Info: Training of best model suppressed.
└  To train tuning machine `mach` on all supplied data, call `fit!(mach.fitresult)`.
Test Summary: | Pass  Total
tuning        |   19     19
Iterating over a 30-point grid:   3%[>                        ]  ETA: 0:00:00[KIterating over a 30-point grid:  10%[==>                      ]  ETA: 0:00:24[KIterating over a 30-point grid:  13%[===>                     ]  ETA: 0:00:21[KIterating over a 30-point grid:  16%[====>                    ]  ETA: 0:00:16[KIterating over a 30-point grid:  19%[====>                    ]  ETA: 0:00:13[KIterating over a 30-point grid:  23%[=====>                   ]  ETA: 0:00:11[KIterating over a 30-point grid:  26%[======>                  ]  ETA: 0:00:09[KIterating over a 30-point grid:  29%[=======>                 ]  ETA: 0:00:08[KIterating over a 30-point grid:  32%[========>                ]  ETA: 0:00:07[KIterating over a 30-point grid:  35%[========>                ]  ETA: 0:00:06[KIterating over a 30-point grid:  39%[=========>               ]  ETA: 0:00:05[KIterating over a 30-point grid:  42%[==========>              ]  ETA: 0:00:04[KIterating over a 30-point grid:  45%[===========>             ]  ETA: 0:00:04[KIterating over a 30-point grid:  48%[============>            ]  ETA: 0:00:03[KIterating over a 30-point grid:  52%[============>            ]  ETA: 0:00:03[KIterating over a 30-point grid:  55%[=============>           ]  ETA: 0:00:03[KIterating over a 30-point grid:  58%[==============>          ]  ETA: 0:00:02[KIterating over a 30-point grid:  61%[===============>         ]  ETA: 0:00:02[KIterating over a 30-point grid:  65%[================>        ]  ETA: 0:00:02[KIterating over a 30-point grid:  68%[================>        ]  ETA: 0:00:02[KIterating over a 30-point grid:  71%[=================>       ]  ETA: 0:00:01[KIterating over a 30-point grid:  74%[==================>      ]  ETA: 0:00:01[KIterating over a 30-point grid:  77%[===================>     ]  ETA: 0:00:01[KIterating over a 30-point grid:  81%[====================>    ]  ETA: 0:00:01[KIterating over a 30-point grid:  84%[====================>    ]  ETA: 0:00:01[KIterating over a 30-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 30-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 30-point grid:  94%[=======================> ]  ETA: 0:00:00[KIterating over a 30-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 30-point grid: 100%[=========================] Time: 0:00:03[K
[ Info: No measure specified. Using measure=rms. 
[ Info: Training [34mMachine{DeterministicTunedModel} @ 7…22[39m.
Iterating over a 30-point grid:   3%[>                        ]  ETA: 0:00:00[KIterating over a 30-point grid:  10%[==>                      ]  ETA: 0:00:00[KIterating over a 30-point grid:  13%[===>                     ]  ETA: 0:00:00[KIterating over a 30-point grid:  16%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  19%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  23%[=====>                   ]  ETA: 0:00:00[KIterating over a 30-point grid:  26%[======>                  ]  ETA: 0:00:00[KIterating over a 30-point grid:  29%[=======>                 ]  ETA: 0:00:00[KIterating over a 30-point grid:  32%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  35%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  39%[=========>               ]  ETA: 0:00:00[KIterating over a 30-point grid:  42%[==========>              ]  ETA: 0:00:00[KIterating over a 30-point grid:  45%[===========>             ]  ETA: 0:00:00[KIterating over a 30-point grid:  48%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  52%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  55%[=============>           ]  ETA: 0:00:00[KIterating over a 30-point grid:  58%[==============>          ]  ETA: 0:00:00[KIterating over a 30-point grid:  61%[===============>         ]  ETA: 0:00:00[KIterating over a 30-point grid:  65%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  68%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  71%[=================>       ]  ETA: 0:00:00[KIterating over a 30-point grid:  74%[==================>      ]  ETA: 0:00:00[KIterating over a 30-point grid:  77%[===================>     ]  ETA: 0:00:00[KIterating over a 30-point grid:  81%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  84%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 30-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 30-point grid:  94%[=======================> ]  ETA: 0:00:00[KIterating over a 30-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 30-point grid: 100%[=========================] Time: 0:00:00[K
┌ Info: Training of best model suppressed.
└  To train tuning machine `mach` on all supplied data, call `fit!(mach.fitresult)`.
[ Info: No measure specified. Using measure=rms. 
[ Info: Training [34mMachine{DeterministicTunedModel} @ 1…25[39m.
Iterating over a 30-point grid:   3%[>                        ]  ETA: 0:00:00[KIterating over a 30-point grid:  10%[==>                      ]  ETA: 0:00:00[KIterating over a 30-point grid:  13%[===>                     ]  ETA: 0:00:00[KIterating over a 30-point grid:  16%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  19%[====>                    ]  ETA: 0:00:00[KIterating over a 30-point grid:  23%[=====>                   ]  ETA: 0:00:00[KIterating over a 30-point grid:  26%[======>                  ]  ETA: 0:00:00[KIterating over a 30-point grid:  29%[=======>                 ]  ETA: 0:00:00[KIterating over a 30-point grid:  32%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  35%[========>                ]  ETA: 0:00:00[KIterating over a 30-point grid:  39%[=========>               ]  ETA: 0:00:00[KIterating over a 30-point grid:  42%[==========>              ]  ETA: 0:00:00[KIterating over a 30-point grid:  45%[===========>             ]  ETA: 0:00:00[KIterating over a 30-point grid:  48%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  52%[============>            ]  ETA: 0:00:00[KIterating over a 30-point grid:  55%[=============>           ]  ETA: 0:00:00[KIterating over a 30-point grid:  58%[==============>          ]  ETA: 0:00:00[KIterating over a 30-point grid:  61%[===============>         ]  ETA: 0:00:00[KIterating over a 30-point grid:  65%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  68%[================>        ]  ETA: 0:00:00[KIterating over a 30-point grid:  71%[=================>       ]  ETA: 0:00:00[KIterating over a 30-point grid:  74%[==================>      ]  ETA: 0:00:00[KIterating over a 30-point grid:  77%[===================>     ]  ETA: 0:00:00[KIterating over a 30-point grid:  81%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  84%[====================>    ]  ETA: 0:00:00[KIterating over a 30-point grid:  87%[=====================>   ]  ETA: 0:00:00[KIterating over a 30-point grid:  90%[======================>  ]  ETA: 0:00:00[KIterating over a 30-point grid:  94%[=======================> ]  ETA: 0:00:00[KIterating over a 30-point grid:  97%[========================>]  ETA: 0:00:00[KIterating over a 30-point grid: 100%[=========================] Time: 0:00:00[K
┌ Info: Training of best model suppressed.
└  To train tuning machine `mach` on all supplied data, call `fit!(mach.fitresult)`.
Test Summary:   | Pass  Total
learning_curves |    3      3






Training ensemble:  20%[==========>                                       ]  ETA: 0:00:02[KTraining ensemble: 100%[==================================================] Time: 0:00:00[K







Training ensemble:  40%[====================>                             ]  ETA: 0:00:01[KTraining ensemble: 100%[==================================================] Time: 0:00:00[K



[ Info: Training [34mMachine{DeterministicEnsembleModel{KNNRegressor}} @ 1…08[39m.



Test Summary: | Pass  Total
ensembles     |   43     43
Test Summary:           | Pass  Total
matching models to data |   11     11
┌ Info: 
│ is_probabilistic = true
│ input_scitype = ScientificTypes.Table{Union{AbstractArray{Count,1}, AbstractArray{Unknown,1}}} 
└ target_scitype = AbstractArray{Count,1}
┌ Warning: Missing values encountered coercing scitype to Count.
│ Coerced to Union{Missing,Count} instead. 
└ @ ScientificTypes ~/.julia/packages/ScientificTypes/MBrCQ/src/conventions/mlj/mlj.jl:5
┌ Info: 
│ is_probabilistic = false
│ input_scitype = ScientificTypes.Table{Union{AbstractArray{Continuous,1}, AbstractArray{Multiclass{4},1}, AbstractArray{Union{Missing, Count},1}}} 
└ target_scitype = AbstractArray{Count,1}
Test Summary: | Pass  Total
tasks         |   20     20
Test Summary: | Pass  Total
scitypes      |    3      3
   Testing MLJ tests passed 
