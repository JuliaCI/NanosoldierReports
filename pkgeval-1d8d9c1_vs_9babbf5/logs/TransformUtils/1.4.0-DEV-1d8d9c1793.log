Julia Version 1.4.0-DEV.564
Commit 1d8d9c1793 (2019-12-06 23:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  33.3 %    Fetching: [================================>        ]  79.3 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed TransformUtils â”€ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
Status `/tmp/jl_pLDOLy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.025406274267834907 -0.11033083607088334; 0.025406274267834907 0.0 0.025454868039795204; 0.11033083607088334 -0.025454868039795204 0.0])
dAA = so3([0.0 0.19422338878170395 0.24942615308744345; -0.19422338878170395 0.0 0.12486512650419263; -0.24942615308744345 -0.12486512650419263 0.0])
dAA = so3([0.0 0.23041421844793222 -0.11810166291356426; -0.23041421844793222 0.0 0.07382028165182349; 0.11810166291356426 -0.07382028165182349 0.0])
dAA = Quaternion(0.9948374792677661, [0.01666034499872437, -0.09642360759511306, -0.02689443524270847])
dAA = SO3([0.9843268370986211 0.17634994478595975 0.0011724936733929084; -0.17631418228814263 0.9842247155961368 -0.014663503461580617; -0.003739905278051875 0.014226952719860035 0.9998917976085306])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.7060443873481181 0.3375895993587509 0.6225227590209202; -0.5208093857725018 0.843180272626815 0.13343392201475382; -0.4798530053938291 -0.418425967475452 0.7711425308960347]), [-0.25454868039795203, -1.1033083607088334, 0.25406274267834905])
xj = SE3(SO3([0.8769044449040014 0.11539035823480237 -0.4666086794456884; -0.16128789633610868 0.9851123670085616 -0.05949654496070901; 0.452796653038732 0.12743111705244126 0.8824604814968708]), [-0.7382028165182348, -1.1810166291356425, -2.304142184479322])
Dx = SE3(SO3([0.48585787699553246 -0.49273325649116007 -0.7219113943615315; -0.029422829790413968 0.8162614105495304 -0.5769329308808914; 0.8735424548632529 0.30154808504665986 0.38208942926515777]), [0.9265522300332929, 0.8416206866478931, -2.2841952483377153])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
