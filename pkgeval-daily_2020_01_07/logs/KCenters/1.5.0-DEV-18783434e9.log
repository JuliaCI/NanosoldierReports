Julia Version 1.5.0-DEV.11
Commit 18783434e9 (2020-01-04 00:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed LearnBase ─────────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed Compat ────────────────────── v3.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed CategoricalArrays ─────────── v0.7.6
 Installed PooledArrays ──────────────── v0.5.3
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataStructures ────────────── v0.17.7
 Installed DataFrames ────────────────── v0.20.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
  Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_9cG4We/Project.toml`
 [no changes]
  Updating `/tmp/jl_9cG4We/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_9cG4We/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 112.62000000000013
[ Info: 84.82000000000004
[ Info: 40.379999999999995
[ Info: 25.009999999999998
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.56000116938976
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.67644450720529
inertia(cdnet.distances) = 29.21127613141981
inertia(crand.distances) = 21.145211995147083
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.868927947052948,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.359375,"distances_sum":2300.274862304959}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.61328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.61328125,"f1":null,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.328125,"distances_sum":1702.5654228662436}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.868927947052948,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.359375,"distances_sum":2300.274862304959}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9383673618048627,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9140625,"distances_sum":2861.1659864434964}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9383673618048627,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9140625,"distances_sum":2861.1659864434964}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707245879120883,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9921875,"distances_sum":3134.7639926287598}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707245879120883,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9921875,"distances_sum":3134.7639926287598}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707245879120883,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.9921875,"distances_sum":3134.7639926287598}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.5546875,"distances_sum":1066.3936861354248}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.423828125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.423828125,"f1":null,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.5546875,"distances_sum":1066.3936861354248}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.813102002164503,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1328125,"distances_sum":1846.717033745932}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8658861971361979,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.28125,"distances_sum":2163.139531786913}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8658861971361979,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.28125,"distances_sum":2163.139531786913}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9280963827838835,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2644.5148990235703}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9414091117216121,"seconds":0.00021887756884098053,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9296875,"distances_sum":2752.8503673650266}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9678628663003669,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9453125,"distances_sum":3003.1812784972576}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.919076236263737,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8203125,"distances_sum":2541.5310488731575}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9678628663003669,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9453125,"distances_sum":3003.1812784972576}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9678628663003669,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9453125,"distances_sum":3003.1812784972576}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8729967948717955,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5546875,"distances_sum":2196.768986610149}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8729967948717955,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5546875,"distances_sum":2196.768986610149}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603308150183154,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2900.240367791456}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9603308150183154,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2900.240367791456}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095243,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":3000.8636986134197}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073265,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":2976.1650054358824}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095243,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":3000.8636986134197}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095243,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9375,"distances_sum":3000.8636986134197}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.2109375,"distances_sum":938.9293057075517}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.421875,"distances_sum":541.3678170248911}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.2109375,"distances_sum":502.3454093021201}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.546875,"distances_sum":1052.8221632880195}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4326171875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4326171875,"f1":null,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.546875,"distances_sum":1052.8221632880195}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8131316600066608,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8515625,"distances_sum":1870.635584376881}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8666926823176833,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.046875,"distances_sum":2104.5028374282006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6025390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.6025390625,"f1":0.7372351606726613,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.9296875,"distances_sum":1552.2647695138844}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8179107350982359,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.8046875,"distances_sum":1843.6154463836128}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4501953125,"f1":null,"seconds":3.7029385566711426e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.40625,"distances_sum":1157.1231906653825}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8666926823176833,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.046875,"distances_sum":2104.5028374282006}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530391483516487,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.78125,"distances_sum":2848.3696980119253}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358976,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9296875,"distances_sum":2961.0539658455646}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9266483516483524,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.65625,"distances_sum":2590.3951068349056}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9436641483516491,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7421875,"distances_sum":2708.9580203175756}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358976,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9296875,"distances_sum":2961.0539658455646}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358976,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9296875,"distances_sum":2961.0539658455646}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7138373778998783,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.1484375,"distances_sum":1036.9864592268152}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7138373778998783,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.1484375,"distances_sum":1036.9864592268152}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8011750402375409,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.6484375,"distances_sum":1296.8042956462054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7983199092574099,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.5546875,"distances_sum":1246.4866121328673}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.689453125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.689453125,"f1":0.8011750402375409,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.6484375,"distances_sum":1296.8042956462054}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8628382034632043,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.046875,"distances_sum":1472.7749809036616}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9258361430236437,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.703125,"distances_sum":1786.9950300822752}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559409340659342,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":1989.1933768030913}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310382326007333,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.796875,"distances_sum":1821.305805378033}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8526275807525816,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.9375,"distances_sum":1454.080201494756}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9249542124542134,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.2109375,"distances_sum":1772.5762371068788}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9559409340659342,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":1989.1933768030913}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9559409340659342,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8125,"distances_sum":1989.1933768030913}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8106471653346661,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.484375,"distances_sum":1478.0385660167728}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8095236360861369,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.4765625,"distances_sum":1436.0770372810111}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7014169857919864,"seconds":4.230067133903503e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.71875,"distances_sum":1115.5946722347799}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8106471653346661,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.484375,"distances_sum":1478.0385660167728}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8635588369963378,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.703125,"distances_sum":1643.486413223315}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9403960622710626,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6171875,"distances_sum":2163.2378651333097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9131842116217121,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.515625,"distances_sum":2025.802480456459}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8969155844155854,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.109375,"distances_sum":1866.013675513282}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9403960622710626,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6171875,"distances_sum":2163.2378651333097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695512820512825,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2284.0206957610035}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636561355311359,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2244.3158783370372}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732715201465205,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2293.9819179965393}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9731227106227108,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2299.8859013515903}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552884615384618,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7265625,"distances_sum":2214.492622760685}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732142857142859,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2292.6238038422957}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9731227106227108,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2299.8859013515903}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9731227106227108,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2299.8859013515903}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8753444472194482,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.90625,"distances_sum":1801.8592360792761}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8753444472194482,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.90625,"distances_sum":1801.8592360792761}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9563873626373629,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2330.92199297051}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.886873543123544,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.0859375,"distances_sum":1890.2707269021798}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9553056318681322,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6796875,"distances_sum":2325.4767858468235}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9034632034632042,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.4921875,"distances_sum":2047.4030413746316}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9563873626373629,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2330.92199297051}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755036630036632,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2422.132051164427}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659626831501835,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2358.7784164254044}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755036630036632,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2422.132051164427}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755036630036632,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2422.132051164427}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.09375,"distances_sum":852.6996294238361}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8073924339549348,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.609375,"distances_sum":1604.8328748302436}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8073924339549348,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.609375,"distances_sum":1604.8328748302436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420444139194144,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.671875,"distances_sum":2339.1549780998034}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8614937146187156,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9453125,"distances_sum":1848.2599381306304}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8580768190143196,"seconds":4.775822162628174e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.984375,"distances_sum":1789.5289492972315}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9420444139194144,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.671875,"distances_sum":2339.1549780998034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522722069597075,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2365.6074821609463}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522722069597075,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2365.6074821609463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522722069597075,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2365.6074821609463}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":3.3229589462280273e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":5.5703125,"distances_sum":785.9251125999904}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.544921875,"f1":0.6891134906759913,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.9921875,"distances_sum":1176.8877261564871}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.544921875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.544921875,"f1":0.6891134906759913,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.9921875,"distances_sum":1176.8877261564871}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8618823884448894,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.875,"distances_sum":1791.9877295937963}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9298820970695976,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.734375,"distances_sum":2187.0636139428557}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6919179778554784,"seconds":4.025176167488098e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.9765625,"distances_sum":1241.5534546814858}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9298820970695976,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.734375,"distances_sum":2187.0636139428557}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9445570054945062,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7265625,"distances_sum":2298.834383190044}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9445570054945062,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7265625,"distances_sum":2298.834383190044}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9445570054945062,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7265625,"distances_sum":2298.834383190044}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8027488136863145,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.7734375,"distances_sum":1527.8795683712317}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7216285450660458,"seconds":4.179775714874268e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.1953125,"distances_sum":1251.5196943377762}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8027488136863145,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.7734375,"distances_sum":1527.8795683712317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.87601807914308,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.1328125,"distances_sum":1839.8021865890103}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7939453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7939453125,"f1":0.87601807914308,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.1328125,"distances_sum":1839.8021865890103}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.929807692307693,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.796875,"distances_sum":2184.169259290404}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.929807692307693,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.796875,"distances_sum":2184.169259290404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.929807692307693,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.796875,"distances_sum":2184.169259290404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6844877344877351,"seconds":3.8929283618927e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.8359375,"distances_sum":1184.3234057462598}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8002185314685323,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.4609375,"distances_sum":1541.1402974838397}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.8002185314685323,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.4609375,"distances_sum":1541.1402974838397}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9249630577755584,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5390625,"distances_sum":2167.8973521545804}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.901900183150184,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.15625,"distances_sum":1979.8361055210576}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9209394771894779,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5859375,"distances_sum":2131.845613097241}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9249630577755584,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5390625,"distances_sum":2167.8973521545804}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621852106227109,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2374.4570671157394}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637305402930408,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.796875,"distances_sum":2414.878776775143}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638965201465205,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2388.694559317956}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637305402930408,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.796875,"distances_sum":2414.878776775143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637305402930408,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.796875,"distances_sum":2414.878776775143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.86450996919747,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7578125,"distances_sum":1853.8493411730337}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7124977453102459,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.8125,"distances_sum":1210.2063814478179}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7896967615717624,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.3515625,"distances_sum":1460.5692583493485}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.86450996919747,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.7578125,"distances_sum":1853.8493411730337}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9524839743589749,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8046875,"distances_sum":2311.9279354421597}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8929919039294046,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.0,"distances_sum":1970.1308942332707}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.953875291375292,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":2347.2732582628128}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9215175449550459,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5859375,"distances_sum":2162.142081246747}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9135624791874798,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5546875,"distances_sum":2113.5363015871235}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.953875291375292,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":2347.2732582628128}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601991758241759,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2350.422257657543}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783882783882787,"seconds":7.616356015205383e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2500.169219208197}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":8,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2504.1445079941195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596955128205134,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8046875,"distances_sum":2379.1669661666306}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2504.1445079941195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2504.1445079941195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8494243603618611,"seconds":8.127838373184204e-5,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.859375,"distances_sum":1756.5080061267247}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.671875,"distances_sum":829.2064088042655}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8494243603618611,"seconds":8.127838373184204e-5,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.859375,"distances_sum":1756.5080061267247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9457875457875462,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6953125,"distances_sum":2327.516165354036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8566079753579762,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.953125,"distances_sum":1812.7703607705264}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9197916666666675,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2578125,"distances_sum":2115.185595336967}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9457875457875462,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6953125,"distances_sum":2327.516165354036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630265567765571,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.890625,"distances_sum":2384.6956547535633}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646806318681322,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.859375,"distances_sum":2416.930818629862}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598672161172167,"seconds":7.94045627117157e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8515625,"distances_sum":2370.4422968083077}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646806318681322,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.859375,"distances_sum":2416.930818629862}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646806318681322,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.859375,"distances_sum":2416.930818629862}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.795986999112,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.625,"distances_sum":1616.5472694783753}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.795986999112,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.625,"distances_sum":1616.5472694783753}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949502060439561,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2439.087777592896}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8793909215784222,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.203125,"distances_sum":1995.5219810093595}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8735613344988352,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.2734375,"distances_sum":1941.4715202219213}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.949502060439561,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2439.087777592896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2607.2509114920704}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598099816849821,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.796875,"distances_sum":2477.751723903463}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9575924075924079,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7890625,"distances_sum":2503.432840232724}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2607.2509114920704}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2607.2509114920704}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8540391899766908,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.8359375,"distances_sum":1931.2299898674198}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8540391899766908,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.8359375,"distances_sum":1931.2299898674198}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9296817765567772,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6328125,"distances_sum":2400.3056745122603}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9296817765567772,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6328125,"distances_sum":2400.3056745122603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9296817765567772,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6328125,"distances_sum":2400.3056745122603}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9296817765567772,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6328125,"distances_sum":2400.3056745122603}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.529296875,"f1":0.6735204032079037,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6484375,"distances_sum":1212.2133498991814}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.529296875,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.529296875,"f1":0.6735204032079037,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6484375,"distances_sum":1212.2133498991814}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8718437812187821,"seconds":4.867091774940491e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.984375,"distances_sum":1902.9007351424289}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9141025641025651,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5625,"distances_sum":2143.498308830113}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9056750541125551,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.1328125,"distances_sum":2091.7356901939806}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9141025641025651,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5625,"distances_sum":2143.498308830113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698317307692312,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2527.0443293787025}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9463598901098907,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":2381.4001185772177}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9285828754578762,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6640625,"distances_sum":2266.5871767531066}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9529418498168505,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.75,"distances_sum":2437.416968065289}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698317307692312,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2527.0443293787025}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698317307692312,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2527.0443293787025}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2978515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2978515625,"f1":null,"seconds":3.3508986234664917e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":6.2890625,"distances_sum":692.1378722129548}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2978515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2978515625,"f1":null,"seconds":3.3508986234664917e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":6.2890625,"distances_sum":692.1378722129548}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6902486402486409,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.9609375,"distances_sum":1272.218204362068}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6902486402486409,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.9609375,"distances_sum":1272.218204362068}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8585170038295046,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.0859375,"distances_sum":1865.3594362944043}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7885362900987908,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6875,"distances_sum":1572.600498805698}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.912777847152848,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.421875,"distances_sum":2133.359452995458}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.912777847152848,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.421875,"distances_sum":2133.359452995458}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.912777847152848,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.421875,"distances_sum":2133.359452995458}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8486328125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.912777847152848,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.421875,"distances_sum":2133.359452995458}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.300607204437256e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.7109375,"distances_sum":544.3400826486509}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9881510416666667,"recall":0.6640625,"f1":0.7827877851315357,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.53125,"distances_sum":1365.7929288419634}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.5,"distances_sum":727.8330502530564}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9879836309523811,"recall":0.7578125,"f1":0.846185585248086,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7109375,"distances_sum":1654.5362186566508}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":0.9879836309523811,"recall":0.7578125,"f1":0.846185585248086,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7109375,"distances_sum":1654.5362186566508}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":8,"bsize":6}, perf: {"precision":0.9879743303571428,"recall":0.7978515625,"f1":0.8758268424284056,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.9375,"distances_sum":1763.996333290433}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9945126488095238,"recall":0.888671875,"f1":0.9351290636446892,"seconds":7.397681474685669e-5,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2123.676301450889}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9898809523809524,"recall":0.8994140625,"f1":0.9386532738095242,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6953125,"distances_sum":2196.560652843582}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9880022321428571,"recall":0.7666015625,"f1":0.8551840086996343,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.8046875,"distances_sum":1636.4377208627282}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.9898809523809524,"recall":0.8994140625,"f1":0.9386532738095242,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6953125,"distances_sum":2196.560652843582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":12}, perf: {"precision":0.9860491071428572,"recall":0.931640625,"f1":0.9557320283882789,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2312.218906054797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9859095982142858,"recall":0.921875,"f1":0.9495084993131871,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.84375,"distances_sum":2271.732659906711}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":11}, perf: {"precision":0.9865141369047619,"recall":0.9287109375,"f1":0.953447203837829,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2311.647042164281}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":12},"perf":{"precision":0.9860491071428572,"recall":0.931640625,"f1":0.9557320283882789,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2312.218906054797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":4,"bsize":12},"perf":{"precision":0.9860491071428572,"recall":0.931640625,"f1":0.9557320283882789,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2312.218906054797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.140625,"distances_sum":861.082100845303}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7144357378732384,"seconds":4.000961780548096e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.6484375,"distances_sum":1188.1993314164588}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8721757409257417,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.8203125,"distances_sum":1750.8130405304191}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8721757409257417,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.8203125,"distances_sum":1750.8130405304191}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9161604020979028,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.6953125,"distances_sum":2055.8524449874526}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9161604020979028,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.6953125,"distances_sum":2055.8524449874526}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9259558150183157,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.78125,"distances_sum":2054.745138998814}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497481684981692,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":2233.576768454779}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9463999542124547,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.796875,"distances_sum":2229.8891389629484}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9497481684981692,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":2233.576768454779}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9497481684981692,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":2233.576768454779}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.259765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.259765625,"f1":null,"seconds":3.4458935260772705e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.390625,"distances_sum":511.57650174052606}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.26171875,"f1":null,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4609375,"distances_sum":538.7074419043329}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.26171875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.26171875,"f1":null,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4609375,"distances_sum":538.7074419043329}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.6098062992095947e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.75,"distances_sum":695.6450368810617}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7029290154290161,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.5625,"distances_sum":1032.6641500533929}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7971419205794215,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.4296875,"distances_sum":1331.7974692951736}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8594754204129212,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8125,"distances_sum":1587.7326051055072}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8594754204129212,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8125,"distances_sum":1587.7326051055072}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2208.2142515417736}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9373855311355317,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7109375,"distances_sum":2076.3162423033114}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8890801906426915,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.15625,"distances_sum":1731.2816475701243}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8842490842490851,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0546875,"distances_sum":1704.3944901689583}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.919848901098902,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6796875,"distances_sum":1957.8630341288326}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9269803113553122,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":1977.2711657338339}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9234088827838834,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":1974.5003770322899}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2208.2142515417736}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8046875,"distances_sum":2208.2142515417736}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7789307914307921,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.2265625,"distances_sum":1461.4871956043264}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8531629828504836,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8984375,"distances_sum":1771.383208072403}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5595703125,"f1":null,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.84375,"distances_sum":1225.395574115733}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8531629828504836,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8984375,"distances_sum":1771.383208072403}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.887543706293707,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.25,"distances_sum":1972.966578561151}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9253834706959713,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6328125,"distances_sum":2198.888302660767}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8901905386280392,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.328125,"distances_sum":1962.886911791073}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8623865717615726,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.859375,"distances_sum":1825.0818872682448}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9253834706959713,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6328125,"distances_sum":2198.888302660767}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9398351648351654,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5703125,"distances_sum":2298.364015293347}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538919413919418,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.78125,"distances_sum":2354.270258544229}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9319742757242763,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.671875,"distances_sum":2224.857418963575}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656994047619052,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2405.8744647733074}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9432952464202472,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":2302.374142418264}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9656994047619052,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2405.8744647733074}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9656994047619052,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9140625,"distances_sum":2405.8744647733074}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.51171875,"f1":0.6587572150072154,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.1640625,"distances_sum":1208.637301203461}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.51171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.51171875,"f1":0.6587572150072154,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.1640625,"distances_sum":1208.637301203461}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.6591796875,"f1":null,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.578125,"distances_sum":1500.4919996260114}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9199493215118222,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.515625,"distances_sum":2242.4772606618326}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7901182151182157,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.578125,"distances_sum":1599.2829970404762}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9199493215118222,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.515625,"distances_sum":2242.4772606618326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452781593406598,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.65625,"distances_sum":2403.5932409872335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9370821886446894,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5546875,"distances_sum":2395.9142035456744}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9352220695970701,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5625,"distances_sum":2365.0205389704756}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452781593406598,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.65625,"distances_sum":2403.5932409872335}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452781593406598,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.65625,"distances_sum":2403.5932409872335}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.59375,"distances_sum":570.3832781853871}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2294921875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.59375,"distances_sum":570.3832781853871}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6865584068709073,"seconds":3.907829523086548e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.90625,"distances_sum":1234.23511557627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3408203125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.2745301723480225e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.609375,"distances_sum":800.4121336888128}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.86704215922966,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.3984375,"distances_sum":1849.692179782682}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.86704215922966,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.3984375,"distances_sum":1849.692179782682}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9537863178488183,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.859375,"distances_sum":2388.963788728646}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665064102564106,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8984375,"distances_sum":2467.857232795489}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488381410256415,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.828125,"distances_sum":2342.836774311642}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9058429417804427,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.4921875,"distances_sum":2075.9704108007177}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9093177655677664,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.5703125,"distances_sum":2091.086897971332}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9123116466866471,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.5546875,"distances_sum":2090.5598512444976}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665064102564106,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8984375,"distances_sum":2467.857232795489}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665064102564106,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8984375,"distances_sum":2467.857232795489}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8654855561105568,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.953125,"distances_sum":1859.908053493915}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3193359375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3193359375,"f1":null,"seconds":3.1534582376480103e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.2265625,"distances_sum":740.2714871716057}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6822150072150078,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.4140625,"distances_sum":1203.5679238509613}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7851752414252422,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.296875,"distances_sum":1541.4799510822625}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8654855561105568,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.953125,"distances_sum":1859.908053493915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8881810897435907,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4609375,"distances_sum":2019.244805001892}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.92235576923077,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5546875,"distances_sum":2230.799290076563}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.914265942390943,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.4921875,"distances_sum":2199.5580482935593}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8820403554778561,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.421875,"distances_sum":2013.2876032328875}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.92235576923077,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5546875,"distances_sum":2230.799290076563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.955328525641026,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.765625,"distances_sum":2428.990149871642}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520718864468871,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":2423.872352123042}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9494677197802202,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2402.877961508927}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9598443223443228,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2440.619424478136}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.936990613553114,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.609375,"distances_sum":2343.3184839188843}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9472012362637368,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.75,"distances_sum":2376.5592627056385}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9337339743589751,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6015625,"distances_sum":2298.432763074156}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9598443223443228,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2440.619424478136}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9598443223443228,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2440.619424478136}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8463474025974034,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.6484375,"distances_sum":1689.5016918936362}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.078952431678772e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.390625,"distances_sum":593.2494702872963}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8463474025974034,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.6484375,"distances_sum":1689.5016918936362}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9431318681318684,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6953125,"distances_sum":2292.7118175104974}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9239755036630043,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6875,"distances_sum":2136.4010991075684}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8540787337662347,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.8125,"distances_sum":1756.0201798727794}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8535605019980029,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.65625,"distances_sum":1780.6550951243842}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9431318681318684,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6953125,"distances_sum":2292.7118175104974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8984375,"distances_sum":2485.5314060033347}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474587912087912,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2321.4554518040395}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8984375,"distances_sum":2485.5314060033347}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8984375,"distances_sum":2485.5314060033347}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.9921875,"distances_sum":510.1718325901144}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.7265625,"distances_sum":454.54889826093984}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5224609375,"f1":0.6701884920634925,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.59375,"distances_sum":1119.5594358632882}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5224609375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5224609375,"f1":0.6701884920634925,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.59375,"distances_sum":1119.5594358632882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9224130036630044,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6640625,"distances_sum":2135.4205191043625}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.646484375,"f1":null,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.1953125,"distances_sum":1470.6334656744332}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6955679736929742,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.734375,"distances_sum":1234.488164081717}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8375296578421587,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.8125,"distances_sum":1740.0390703939213}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.9224130036630044,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6640625,"distances_sum":2135.4205191043625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9648695054945059,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.796875,"distances_sum":2417.2723152414355}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9700892857142862,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2416.705720627809}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487611346986352,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.671875,"distances_sum":2333.8883593934465}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9700892857142862,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2416.705720627809}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9700892857142862,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2416.705720627809}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.427734375,"f1":0.5729999167499169,"seconds":3.563240170478821e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.453125,"distances_sum":923.1350414449931}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.427734375,"state":{"ssize":2,"bsize":2},"perf":{"precision":1.0,"recall":0.427734375,"f1":0.5729999167499169,"seconds":3.563240170478821e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.453125,"distances_sum":923.1350414449931}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.4306640625,"f1":0.5819687257187258,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.3359375,"distances_sum":892.0323590951979}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7694801726051733,"seconds":4.179775714874268e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.03125,"distances_sum":1447.9053132896468}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7958513708513716,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.3125,"distances_sum":1489.1571727706016}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8508538336663343,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.9375,"distances_sum":1791.8601141341908}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8508538336663343,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.9375,"distances_sum":1791.8601141341908}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8626836704961715,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.046875,"distances_sum":1794.8538662963888}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.926968864468865,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7109375,"distances_sum":2186.2981074713985}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9395375457875462,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.6328125,"distances_sum":2339.604892180535}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9490728021978027,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7734375,"distances_sum":2370.2760077830258}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8850363178488189,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.328125,"distances_sum":1962.3786627620932}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9490728021978027,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7734375,"distances_sum":2370.2760077830258}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9490728021978027,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7734375,"distances_sum":2370.2760077830258}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.390014171600342e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.078125,"distances_sum":821.6899722945238}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7852617868242876,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.2890625,"distances_sum":1459.7852606598308}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7852617868242876,"seconds":4.334375262260437e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.2890625,"distances_sum":1459.7852606598308}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8848245504495511,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1640625,"distances_sum":1972.6674826877475}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.8848245504495511,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1640625,"distances_sum":1972.6674826877475}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648866758241763,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2444.2410269379006}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648866758241763,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2444.2410269379006}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648866758241763,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.859375,"distances_sum":2444.2410269379006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":3.086403012275696e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.9453125,"distances_sum":549.4311139575182}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.240234375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.240234375,"f1":null,"seconds":3.086403012275696e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.9453125,"distances_sum":549.4311139575182}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.240234375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.240234375,"f1":null,"seconds":3.086403012275696e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.9453125,"distances_sum":549.4311139575182}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.318359375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.318359375,"f1":null,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":4.96875,"distances_sum":734.3420795447521}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.781388750138751,"seconds":4.4014304876327515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.4765625,"distances_sum":1514.1927944845243}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":4.71875,"distances_sum":520.2410496903018}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.781388750138751,"seconds":4.4014304876327515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.4765625,"distances_sum":1514.1927944845243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7915660728160735,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.6015625,"distances_sum":1572.6234887161875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.884330253080254,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.2890625,"distances_sum":1970.566004915379}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9161114926739933,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4609375,"distances_sum":2108.8618873567893}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9161114926739933,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4609375,"distances_sum":2108.8618873567893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9619276556776561,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.828125,"distances_sum":2418.7542162714794}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2464.9238665932958}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9387190934065941,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6328125,"distances_sum":2294.7569283399257}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9355743215118224,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5859375,"distances_sum":2283.0270010788704}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467376373626378,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6796875,"distances_sum":2352.762031658833}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2464.9238665932958}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2464.9238665932958}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.3359375,"distances_sum":544.1042628586293}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.22265625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.3359375,"distances_sum":544.1042628586293}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.22265625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.3359375,"distances_sum":544.1042628586293}}, n: 9
inertia(cfft.distances) = 18.676444318091978
inertia(cdnet.distances) = 26.242768683417417
inertia(crand.distances) = 310.6258841286847
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9400000000000001
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8622222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 3, 2, 1, 2, 3, 3, 2, 3, 3, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.34606666949831283] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34606666949831283, 0.18093245349496945] ***
*** starting iteration: 2; err: [Inf, 0.34606666949831283, 0.18093245349496945] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884] ***
*** starting iteration: 3; err: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884, 0.1668529451301461] ***
*** starting iteration: 4; err: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884, 0.1668529451301461] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884, 0.1668529451301461, 0.1619643348977033] ***
*** starting iteration: 5; err: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884, 0.1668529451301461, 0.1619643348977033] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884, 0.1668529451301461, 0.1619643348977033, 0.16124686982574604] ***
*** finished computation of 12 references, err: [Inf, 0.34606666949831283, 0.18093245349496945, 0.17022379363225884, 0.1668529451301461, 0.1619643348977033, 0.16124686982574604] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 10: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 11, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9666666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.605215501598897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.605215501598897, 0.4058208704732259] ***
*** finished computation of 7 references, err: [Inf, 0.605215501598897, 0.4058208704732259] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 2]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(2, 31), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 30]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 3), (3, 30)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3478023849429503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3478023849429503, 0.21555409360194008] ***
*** finished computation of 7 references, err: [Inf, 0.3478023849429503, 0.21555409360194008] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 10]]
** centroid: 4, normalized-entropy: 0.9293636260137188, [(2, 19), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24781172758194192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24781172758194192, 0.1634925870118352] ***
*** finished computation of 7 references, err: [Inf, 0.24781172758194192, 0.1634925870118352] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26205468513528474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26205468513528474, 0.17752434524169847] ***
*** finished computation of 7 references, err: [Inf, 0.26205468513528474, 0.17752434524169847] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 10]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 12]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32930230902741203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32930230902741203, 0.21104246391331347] ***
*** finished computation of 7 references, err: [Inf, 0.32930230902741203, 0.21104246391331347] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.383225022389828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.383225022389828, 0.2013537607968833] ***
*** finished computation of 7 references, err: [Inf, 0.383225022389828, 0.2013537607968833] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 7.875036642028675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.875036642028675, 1.0595591004439044] ***
*** starting iteration: 2; err: [Inf, 7.875036642028675, 1.0595591004439044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.875036642028675, 1.0595591004439044, 0.6219684529995555] ***
*** starting iteration: 3; err: [Inf, 7.875036642028675, 1.0595591004439044, 0.6219684529995555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.875036642028675, 1.0595591004439044, 0.6219684529995555, 0.6128463599388541] ***
*** finished computation of 3 references, err: [Inf, 7.875036642028675, 1.0595591004439044, 0.6219684529995555, 0.6128463599388541] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 1, 0]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(1, 22), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 2, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.777606534689448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.777606534689448, 0.5298571715516738] ***
*** starting iteration: 2; err: [Inf, 2.777606534689448, 0.5298571715516738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.777606534689448, 0.5298571715516738, 0.40093215456039405] ***
*** starting iteration: 3; err: [Inf, 2.777606534689448, 0.5298571715516738, 0.40093215456039405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.777606534689448, 0.5298571715516738, 0.40093215456039405, 0.38948368083178453] ***
*** finished computation of 3 references, err: [Inf, 2.777606534689448, 0.5298571715516738, 0.40093215456039405, 0.38948368083178453] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 14]]
** centroid: 3, normalized-entropy: 0.9103480624345157, [(2, 29), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9318173790983919] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9318173790983919, 0.6781762771830538] ***
*** starting iteration: 2; err: [Inf, 0.9318173790983919, 0.6781762771830538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9318173790983919, 0.6781762771830538, 0.6616555328048942] ***
*** starting iteration: 3; err: [Inf, 0.9318173790983919, 0.6781762771830538, 0.6616555328048942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9318173790983919, 0.6781762771830538, 0.6616555328048942, 0.6600540007693195] ***
*** finished computation of 3 references, err: [Inf, 0.9318173790983919, 0.6781762771830538, 0.6616555328048942, 0.6600540007693195] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [18, 1, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 18), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6382015815681433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6382015815681433, 0.3940035280833699] ***
*** starting iteration: 2; err: [Inf, 0.6382015815681433, 0.3940035280833699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6382015815681433, 0.3940035280833699, 0.36689839088743825] ***
*** starting iteration: 3; err: [Inf, 0.6382015815681433, 0.3940035280833699, 0.36689839088743825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6382015815681433, 0.3940035280833699, 0.36689839088743825, 0.35893341445897176] ***
*** finished computation of 3 references, err: [Inf, 0.6382015815681433, 0.3940035280833699, 0.36689839088743825, 0.35893341445897176] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 11]]
** centroid: 2, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 3, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.6651366084866237] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6651366084866237, 0.9158617192302444] ***
*** starting iteration: 2; err: [Inf, 3.6651366084866237, 0.9158617192302444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6651366084866237, 0.9158617192302444, 0.4585230266714487] ***
*** starting iteration: 3; err: [Inf, 3.6651366084866237, 0.9158617192302444, 0.4585230266714487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6651366084866237, 0.9158617192302444, 0.4585230266714487, 0.4009335947801557] ***
*** finished computation of 3 references, err: [Inf, 3.6651366084866237, 0.9158617192302444, 0.4585230266714487, 0.4009335947801557] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 1, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 18]]
** centroid: 2, normalized-entropy: 0.9601186626422924, [(2, 29), (3, 18)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5871276884073109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5871276884073109, 0.47627291660896043] ***
*** starting iteration: 2; err: [Inf, 1.5871276884073109, 0.47627291660896043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5871276884073109, 0.47627291660896043, 0.37002359811778956] ***
*** starting iteration: 3; err: [Inf, 1.5871276884073109, 0.47627291660896043, 0.37002359811778956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5871276884073109, 0.47627291660896043, 0.37002359811778956, 0.35533383818577563] ***
*** finished computation of 3 references, err: [Inf, 1.5871276884073109, 0.47627291660896043, 0.37002359811778956, 0.35533383818577563] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 4]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.63065919130164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.63065919130164, 0.35893341445897176] ***
*** starting iteration: 2; err: [Inf, 0.63065919130164, 0.35893341445897176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.63065919130164, 0.35893341445897176, 0.3571525390352548] ***
*** starting iteration: 3; err: [Inf, 0.63065919130164, 0.35893341445897176, 0.3571525390352548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.63065919130164, 0.35893341445897176, 0.3571525390352548, 0.3563504510882673] ***
*** finished computation of 3 references, err: [Inf, 0.63065919130164, 0.35893341445897176, 0.3571525390352548, 0.3563504510882673] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0164454969926844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495] ***
*** starting iteration: 2; err: [Inf, 2.0164454969926844, 0.45157652373410495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126] ***
*** starting iteration: 3; err: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151] ***
*** starting iteration: 4; err: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688] ***
*** starting iteration: 5; err: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688, 0.38677265330248467] ***
*** starting iteration: 6; err: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688, 0.38677265330248467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688, 0.38677265330248467, 0.38482995756833027] ***
*** starting iteration: 7; err: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688, 0.38677265330248467, 0.38482995756833027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688, 0.38677265330248467, 0.38482995756833027, 0.38482995756833027] ***
*** finished computation of 3 references, err: [Inf, 2.0164454969926844, 0.45157652373410495, 0.40120750881343126, 0.3963853063971151, 0.3917085690120688, 0.38677265330248467, 0.38482995756833027, 0.38482995756833027] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6662557638954799] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6662557638954799, 0.3758569618363831] ***
*** starting iteration: 2; err: [Inf, 0.6662557638954799, 0.3758569618363831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122] ***
*** starting iteration: 3; err: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122, 0.3546889972158455] ***
*** starting iteration: 4; err: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122, 0.3546889972158455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122, 0.3546889972158455, 0.3467809467382945] ***
*** starting iteration: 5; err: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122, 0.3546889972158455, 0.3467809467382945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122, 0.3546889972158455, 0.3467809467382945, 0.34695888428234034] ***
*** finished computation of 3 references, err: [Inf, 0.6662557638954799, 0.3758569618363831, 0.363582716926122, 0.3546889972158455, 0.3467809467382945, 0.34695888428234034] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 4]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5381008667746304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5381008667746304, 0.3578813288576083] ***
*** starting iteration: 2; err: [Inf, 0.5381008667746304, 0.3578813288576083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5381008667746304, 0.3578813288576083, 0.3563504510882673] ***
*** starting iteration: 3; err: [Inf, 0.5381008667746304, 0.3578813288576083, 0.3563504510882673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5381008667746304, 0.3578813288576083, 0.3563504510882673, 0.3561278285287402] ***
*** finished computation of 3 references, err: [Inf, 0.5381008667746304, 0.3578813288576083, 0.3563504510882673, 0.3561278285287402] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7566281745152853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7566281745152853, 0.6591657478572432] ***
*** starting iteration: 2; err: [Inf, 0.7566281745152853, 0.6591657478572432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358] ***
*** starting iteration: 3; err: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065] ***
*** starting iteration: 4; err: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065, 0.6474430630202125] ***
*** starting iteration: 5; err: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065, 0.6474430630202125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065, 0.6474430630202125, 0.6454794781098866] ***
*** starting iteration: 6; err: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065, 0.6474430630202125, 0.6454794781098866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065, 0.6474430630202125, 0.6454794781098866, 0.6452100635640055] ***
*** finished computation of 3 references, err: [Inf, 0.7566281745152853, 0.6591657478572432, 0.6572734849129358, 0.6523155849443065, 0.6474430630202125, 0.6454794781098866, 0.6452100635640055] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 36]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 27), (3, 36)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [14, 3, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.112908919963941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.112908919963941, 0.4880860247814869] ***
*** starting iteration: 2; err: [Inf, 1.112908919963941, 0.4880860247814869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477] ***
*** starting iteration: 3; err: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978] ***
*** starting iteration: 4; err: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978, 0.3498719373053647] ***
*** starting iteration: 5; err: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978, 0.3498719373053647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978, 0.3498719373053647, 0.34695888428234034] ***
*** starting iteration: 6; err: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978, 0.3498719373053647, 0.34695888428234034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978, 0.3498719373053647, 0.34695888428234034, 0.34695888428234034] ***
*** finished computation of 3 references, err: [Inf, 1.112908919963941, 0.4880860247814869, 0.3937130130332477, 0.3611110832321978, 0.3498719373053647, 0.34695888428234034, 0.34695888428234034] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 4]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.054900001994047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.054900001994047, 3.022277882459756] ***
*** starting iteration: 2; err: [Inf, 6.054900001994047, 3.022277882459756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.054900001994047, 3.022277882459756, 0.6403319239373524] ***
*** starting iteration: 3; err: [Inf, 6.054900001994047, 3.022277882459756, 0.6403319239373524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.054900001994047, 3.022277882459756, 0.6403319239373524, 0.5294568588421096] ***
*** starting iteration: 4; err: [Inf, 6.054900001994047, 3.022277882459756, 0.6403319239373524, 0.5294568588421096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.054900001994047, 3.022277882459756, 0.6403319239373524, 0.5294568588421096, 0.5287462099212054] ***
*** finished computation of 3 references, err: [Inf, 6.054900001994047, 3.022277882459756, 0.6403319239373524, 0.5294568588421096, 0.5287462099212054] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 32]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 11), (3, 32)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.322300010441333] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467] ***
*** starting iteration: 2; err: [Inf, 5.322300010441333, 1.8602336733541467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102] ***
*** starting iteration: 3; err: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921] ***
*** starting iteration: 4; err: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083] ***
*** starting iteration: 5; err: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083, 0.5622442965174461] ***
*** starting iteration: 6; err: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083, 0.5622442965174461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083, 0.5622442965174461, 0.5538492185604217] ***
*** starting iteration: 7; err: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083, 0.5622442965174461, 0.5538492185604217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083, 0.5622442965174461, 0.5538492185604217, 0.5532421564798223] ***
*** finished computation of 3 references, err: [Inf, 5.322300010441333, 1.8602336733541467, 0.910400241058102, 0.671536615904921, 0.5958644998069083, 0.5622442965174461, 0.5538492185604217, 0.5532421564798223] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 13]]
** centroid: 3, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.467000009325223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.467000009325223, 1.1508990273726423] ***
*** starting iteration: 2; err: [Inf, 3.467000009325223, 1.1508990273726423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791] ***
*** starting iteration: 3; err: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791, 0.5008764025713327] ***
*** starting iteration: 4; err: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791, 0.5008764025713327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791, 0.5008764025713327, 0.4987582568839213] ***
*** starting iteration: 5; err: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791, 0.5008764025713327, 0.4987582568839213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791, 0.5008764025713327, 0.4987582568839213, 0.4987582568839213] ***
*** finished computation of 3 references, err: [Inf, 3.467000009325223, 1.1508990273726423, 0.5374508692108791, 0.5008764025713327, 0.4987582568839213, 0.4987582568839213] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 4]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 3, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8523000055290875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8523000055290875, 0.34361603632893883] ***
*** starting iteration: 2; err: [Inf, 0.8523000055290875, 0.34361603632893883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8523000055290875, 0.34361603632893883, 0.30796499397341237] ***
*** starting iteration: 3; err: [Inf, 0.8523000055290875, 0.34361603632893883, 0.30796499397341237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8523000055290875, 0.34361603632893883, 0.30796499397341237, 0.2979033562028] ***
*** finished computation of 7 references, err: [Inf, 0.8523000055290875, 0.34361603632893883, 0.30796499397341237, 0.2979033562028] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 2]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 5]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7829000117452626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7829000117452626, 0.42482358981621493] ***
*** starting iteration: 2; err: [Inf, 0.7829000117452626, 0.42482358981621493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7829000117452626, 0.42482358981621493, 0.28966612476518655] ***
*** starting iteration: 3; err: [Inf, 0.7829000117452626, 0.42482358981621493, 0.28966612476518655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7829000117452626, 0.42482358981621493, 0.28966612476518655, 0.2657267722856757] ***
*** finished computation of 7 references, err: [Inf, 0.7829000117452626, 0.42482358981621493, 0.28966612476518655, 0.2657267722856757] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 6, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.56610000202089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56610000202089, 0.3144103335544168] ***
*** starting iteration: 2; err: [Inf, 0.56610000202089, 0.3144103335544168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56610000202089, 0.3144103335544168, 0.28377534542760335] ***
*** starting iteration: 3; err: [Inf, 0.56610000202089, 0.3144103335544168, 0.28377534542760335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56610000202089, 0.3144103335544168, 0.28377534542760335, 0.2718965658092341] ***
*** finished computation of 7 references, err: [Inf, 0.56610000202089, 0.3144103335544168, 0.28377534542760335, 0.2718965658092341] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.964166051466433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.964166051466433, 0.37780582073117513] ***
*** finished computation of 3 references, err: [Inf, 0.964166051466433, 0.37780582073117513] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 32]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 13), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1224117369106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1224117369106, 0.3945343275921408] ***
*** finished computation of 3 references, err: [Inf, 1.1224117369106, 0.3945343275921408] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 1, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 16]]
** centroid: 3, normalized-entropy: 0.9389320105807949, [(2, 29), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8620892427659845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8620892427659845, 0.38893898248501707] ***
*** finished computation of 3 references, err: [Inf, 0.8620892427659845, 0.38893898248501707] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 7]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9844000049672023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9844000049672023, 0.5272794012844693] ***
*** starting iteration: 2; err: [Inf, 0.9844000049672023, 0.5272794012844693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9844000049672023, 0.5272794012844693, 0.5092301356900716] ***
*** starting iteration: 3; err: [Inf, 0.9844000049672023, 0.5272794012844693, 0.5092301356900716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9844000049672023, 0.5272794012844693, 0.5092301356900716, 0.5066164966717174] ***
*** starting iteration: 4; err: [Inf, 0.9844000049672023, 0.5272794012844693, 0.5092301356900716, 0.5066164966717174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9844000049672023, 0.5272794012844693, 0.5092301356900716, 0.5066164966717174, 0.5066164966717174] ***
*** finished computation of 3 references, err: [Inf, 0.9844000049672023, 0.5272794012844693, 0.5092301356900716, 0.5066164966717174, 0.5066164966717174] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0025000042947503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0025000042947503, 0.6559889108497944] ***
*** starting iteration: 2; err: [Inf, 1.0025000042947503, 0.6559889108497944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313] ***
*** starting iteration: 3; err: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313, 0.5622442965174461] ***
*** starting iteration: 4; err: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313, 0.5622442965174461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313, 0.5622442965174461, 0.5538492185604217] ***
*** starting iteration: 5; err: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313, 0.5622442965174461, 0.5538492185604217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313, 0.5622442965174461, 0.5538492185604217, 0.5532421564798223] ***
*** finished computation of 3 references, err: [Inf, 1.0025000042947503, 0.6559889108497944, 0.5811960059012313, 0.5622442965174461, 0.5538492185604217, 0.5532421564798223] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 13]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6616000052376794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6616000052376794, 0.5313741454624678] ***
*** starting iteration: 2; err: [Inf, 1.6616000052376794, 0.5313741454624678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551] ***
*** starting iteration: 3; err: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551, 0.5008764025713327] ***
*** starting iteration: 4; err: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551, 0.5008764025713327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551, 0.5008764025713327, 0.4987582568839213] ***
*** starting iteration: 5; err: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551, 0.5008764025713327, 0.4987582568839213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551, 0.5008764025713327, 0.4987582568839213, 0.4987582568839213] ***
*** finished computation of 3 references, err: [Inf, 1.6616000052376794, 0.5313741454624678, 0.5088558550169551, 0.5008764025713327, 0.4987582568839213, 0.4987582568839213] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 28]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 4]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9903766386516495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9903766386516495, 0.36492282102889134] ***
*** finished computation of 3 references, err: [Inf, 0.9903766386516495, 0.36492282102889134] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8279502377680695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8279502377680695, 0.4396580135900293] ***
*** finished computation of 3 references, err: [Inf, 0.8279502377680695, 0.4396580135900293] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 35]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(2, 12), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7212137485594687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7212137485594687, 0.43227550550513194] ***
*** finished computation of 3 references, err: [Inf, 0.7212137485594687, 0.43227550550513194] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2942128599295989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2942128599295989, 0.16128962386497495] ***
*** starting iteration: 2; err: [Inf, 0.2942128599295989, 0.16128962386497495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2942128599295989, 0.16128962386497495, 0.16025843702977915] ***
*** starting iteration: 3; err: [Inf, 0.2942128599295989, 0.16128962386497495, 0.16025843702977915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2942128599295989, 0.16128962386497495, 0.16025843702977915, 0.1604516666480299] ***
*** finished computation of 7 references, err: [Inf, 0.2942128599295989, 0.16128962386497495, 0.16025843702977915, 0.1604516666480299] ***
*** center 1: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 4, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 3]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3599255470509213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3599255470509213, 0.19454147371311856] ***
*** starting iteration: 2; err: [Inf, 0.3599255470509213, 0.19454147371311856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155] ***
*** starting iteration: 3; err: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566] ***
*** starting iteration: 4; err: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566, 0.17751865792401764] ***
*** starting iteration: 5; err: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566, 0.17751865792401764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566, 0.17751865792401764, 0.1700155490333695] ***
*** starting iteration: 6; err: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566, 0.17751865792401764, 0.1700155490333695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566, 0.17751865792401764, 0.1700155490333695, 0.16961087908023015] ***
*** finished computation of 7 references, err: [Inf, 0.3599255470509213, 0.19454147371311856, 0.18403915544531155, 0.18215195943283566, 0.17751865792401764, 0.1700155490333695, 0.16961087908023015] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 13]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38092971485958005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38092971485958005, 0.22489561510690606] ***
*** starting iteration: 2; err: [Inf, 0.38092971485958005, 0.22489561510690606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38092971485958005, 0.22489561510690606, 0.22185869557026053] ***
*** starting iteration: 3; err: [Inf, 0.38092971485958005, 0.22489561510690606, 0.22185869557026053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38092971485958005, 0.22489561510690606, 0.22185869557026053, 0.22108690435937384] ***
*** finished computation of 7 references, err: [Inf, 0.38092971485958005, 0.22489561510690606, 0.22185869557026053, 0.22108690435937384] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 3]]
** centroid: 1, normalized-entropy: 0.4220005168831531, [(2, 32), (3, 3)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34094045538810486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307] ***
*** starting iteration: 2; err: [Inf, 0.34094045538810486, 0.19481265670415307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282] ***
*** starting iteration: 3; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398] ***
*** starting iteration: 4; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933] ***
*** starting iteration: 5; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641] ***
*** starting iteration: 6; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687] ***
*** starting iteration: 7; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716] ***
*** starting iteration: 8; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716, 0.16081023189010224] ***
*** starting iteration: 9; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716, 0.16081023189010224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716, 0.16081023189010224, 0.1593921822050313] ***
*** starting iteration: 10; err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716, 0.16081023189010224, 0.1593921822050313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716, 0.16081023189010224, 0.1593921822050313, 0.1593921822050313] ***
*** finished computation of 7 references, err: [Inf, 0.34094045538810486, 0.19481265670415307, 0.18449534389296282, 0.17716717792506398, 0.17591860607317933, 0.1740756728906641, 0.16993557368746687, 0.163867847085716, 0.16081023189010224, 0.1593921822050313, 0.1593921822050313] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 11]]
** centroid: 3, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 13]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38216610901519504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38216610901519504, 0.20276502445915376] ***
*** starting iteration: 2; err: [Inf, 0.38216610901519504, 0.20276502445915376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38216610901519504, 0.20276502445915376, 0.19660076713387395] ***
*** starting iteration: 3; err: [Inf, 0.38216610901519504, 0.20276502445915376, 0.19660076713387395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38216610901519504, 0.20276502445915376, 0.19660076713387395, 0.19387871375792212] ***
*** starting iteration: 4; err: [Inf, 0.38216610901519504, 0.20276502445915376, 0.19660076713387395, 0.19387871375792212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38216610901519504, 0.20276502445915376, 0.19660076713387395, 0.19387871375792212, 0.19387871375792212] ***
*** finished computation of 7 references, err: [Inf, 0.38216610901519504, 0.20276502445915376, 0.19660076713387395, 0.19387871375792212, 0.19387871375792212] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 11]]
** centroid: 4, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5092396005880332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5092396005880332, 0.23840422893668312] ***
*** starting iteration: 2; err: [Inf, 0.5092396005880332, 0.23840422893668312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236] ***
*** starting iteration: 3; err: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236, 0.1883612432350673] ***
*** starting iteration: 4; err: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236, 0.1883612432350673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236, 0.1883612432350673, 0.18317069146521311] ***
*** starting iteration: 5; err: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236, 0.1883612432350673, 0.18317069146521311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236, 0.1883612432350673, 0.18317069146521311, 0.18255015712594422] ***
*** finished computation of 7 references, err: [Inf, 0.5092396005880332, 0.23840422893668312, 0.20747448822417236, 0.1883612432350673, 0.18317069146521311, 0.18255015712594422] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 15]]
** centroid: 1, normalized-entropy: 0.9321115676166747, [(2, 8), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4635000013293613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4635000013293613, 0.26329095744720044] ***
*** starting iteration: 2; err: [Inf, 0.4635000013293613, 0.26329095744720044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4635000013293613, 0.26329095744720044, 0.25027701207308045] ***
*** starting iteration: 3; err: [Inf, 0.4635000013293613, 0.26329095744720044, 0.25027701207308045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4635000013293613, 0.26329095744720044, 0.25027701207308045, 0.24544013536288956] ***
*** finished computation of 7 references, err: [Inf, 0.4635000013293613, 0.26329095744720044, 0.25027701207308045, 0.24544013536288956] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 3, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 15]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 5), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5593000060950157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5593000060950157, 0.2628174425010153] ***
*** starting iteration: 2; err: [Inf, 0.5593000060950157, 0.2628174425010153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5593000060950157, 0.2628174425010153, 0.2541808525398843] ***
*** starting iteration: 3; err: [Inf, 0.5593000060950157, 0.2628174425010153, 0.2541808525398843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5593000060950157, 0.2628174425010153, 0.2541808525398843, 0.249847356045084] ***
*** finished computation of 7 references, err: [Inf, 0.5593000060950157, 0.2628174425010153, 0.2541808525398843, 0.249847356045084] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 5]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5573000002921669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5573000002921669, 0.2546578692159331] ***
*** starting iteration: 2; err: [Inf, 0.5573000002921669, 0.2546578692159331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5573000002921669, 0.2546578692159331, 0.23615562621464112] ***
*** starting iteration: 3; err: [Inf, 0.5573000002921669, 0.2546578692159331, 0.23615562621464112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5573000002921669, 0.2546578692159331, 0.23615562621464112, 0.23147373759337608] ***
*** finished computation of 7 references, err: [Inf, 0.5573000002921669, 0.2546578692159331, 0.23615562621464112, 0.23147373759337608] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3417412321570082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3417412321570082, 0.19223019218561418] ***
*** finished computation of 7 references, err: [Inf, 0.3417412321570082, 0.19223019218561418] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 5]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 20), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 19]]
** centroid: 4, normalized-entropy: 0.9059282160429994, [(2, 9), (3, 19)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39323564667480304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39323564667480304, 0.20114703702343653] ***
*** finished computation of 7 references, err: [Inf, 0.39323564667480304, 0.20114703702343653] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 13]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5400512111766724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5400512111766724, 0.19427565025279364] ***
*** finished computation of 7 references, err: [Inf, 0.5400512111766724, 0.19427565025279364] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28735038236409605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28735038236409605, 0.1764140422053226] ***
*** starting iteration: 2; err: [Inf, 0.28735038236409605, 0.1764140422053226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28735038236409605, 0.1764140422053226, 0.16204251976000733] ***
*** starting iteration: 3; err: [Inf, 0.28735038236409605, 0.1764140422053226, 0.16204251976000733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28735038236409605, 0.1764140422053226, 0.16204251976000733, 0.15773308757354948] ***
*** finished computation of 7 references, err: [Inf, 0.28735038236409605, 0.1764140422053226, 0.16204251976000733, 0.15773308757354948] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 13]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 6, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4552417986793321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4552417986793321, 0.22131957578523623] ***
*** starting iteration: 2; err: [Inf, 0.4552417986793321, 0.22131957578523623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4552417986793321, 0.22131957578523623, 0.20575952569536285] ***
*** starting iteration: 3; err: [Inf, 0.4552417986793321, 0.22131957578523623, 0.20575952569536285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4552417986793321, 0.22131957578523623, 0.20575952569536285, 0.19761495308988342] ***
*** finished computation of 7 references, err: [Inf, 0.4552417986793321, 0.22131957578523623, 0.20575952569536285, 0.19761495308988342] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 10]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5077208049001899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077208049001899, 0.18394112260988918] ***
*** starting iteration: 2; err: [Inf, 0.5077208049001899, 0.18394112260988918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077208049001899, 0.18394112260988918, 0.17224114372409877] ***
*** starting iteration: 3; err: [Inf, 0.5077208049001899, 0.18394112260988918, 0.17224114372409877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5077208049001899, 0.18394112260988918, 0.17224114372409877, 0.16926248191370047] ***
*** finished computation of 7 references, err: [Inf, 0.5077208049001899, 0.18394112260988918, 0.17224114372409877, 0.16926248191370047] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 3]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5521000077013087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5521000077013087, 0.24220666307230318] ***
*** starting iteration: 2; err: [Inf, 0.5521000077013087, 0.24220666307230318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5521000077013087, 0.24220666307230318, 0.2191555275678222] ***
*** starting iteration: 3; err: [Inf, 0.5521000077013087, 0.24220666307230318, 0.2191555275678222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5521000077013087, 0.24220666307230318, 0.2191555275678222, 0.21535962264007766] ***
*** finished computation of 7 references, err: [Inf, 0.5521000077013087, 0.24220666307230318, 0.2191555275678222, 0.21535962264007766] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5573000082783162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5573000082783162, 0.25888316571733644] ***
*** starting iteration: 2; err: [Inf, 0.5573000082783162, 0.25888316571733644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5573000082783162, 0.25888316571733644, 0.2503220834796826] ***
*** starting iteration: 3; err: [Inf, 0.5573000082783162, 0.25888316571733644, 0.2503220834796826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5573000082783162, 0.25888316571733644, 0.2503220834796826, 0.24677809817305313] ***
*** finished computation of 7 references, err: [Inf, 0.5573000082783162, 0.25888316571733644, 0.2503220834796826, 0.24677809817305313] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 6]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 7]]
** centroid: 7, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5809999975672995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809999975672995, 0.2613804646128202] ***
*** starting iteration: 2; err: [Inf, 0.5809999975672995, 0.2613804646128202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809999975672995, 0.2613804646128202, 0.23637627350953014] ***
*** starting iteration: 3; err: [Inf, 0.5809999975672995, 0.2613804646128202, 0.23637627350953014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809999975672995, 0.2613804646128202, 0.23637627350953014, 0.2307193052074899] ***
*** finished computation of 7 references, err: [Inf, 0.5809999975672995, 0.2613804646128202, 0.23637627350953014, 0.2307193052074899] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 3]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 1.3388000070598536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3388000070598536, 0.5092301356900716] ***
*** finished computation of 3 references, err: [Inf, 1.3388000070598536, 0.5092301356900716] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5429999993985648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5429999993985648, 0.5555657372438736] ***
*** finished computation of 3 references, err: [Inf, 1.5429999993985648, 0.5555657372438736] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 13]]
** centroid: 3, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0815000042356657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0815000042356657, 0.554157655003052] ***
*** finished computation of 3 references, err: [Inf, 1.0815000042356657, 0.554157655003052] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 31]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5178000064511764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5178000064511764, 0.22862724521179845] ***
*** starting iteration: 2; err: [Inf, 0.5178000064511764, 0.22862724521179845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5178000064511764, 0.22862724521179845, 0.22336471426827678] ***
*** starting iteration: 3; err: [Inf, 0.5178000064511764, 0.22862724521179845, 0.22336471426827678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5178000064511764, 0.22862724521179845, 0.22336471426827678, 0.22279505043315556] ***
*** finished computation of 7 references, err: [Inf, 0.5178000064511764, 0.22862724521179845, 0.22336471426827678, 0.22279505043315556] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48240000716802145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48240000716802145, 0.2620876976181603] ***
*** starting iteration: 2; err: [Inf, 0.48240000716802145, 0.2620876976181603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592] ***
*** starting iteration: 3; err: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258] ***
*** starting iteration: 4; err: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258, 0.2324802003078454] ***
*** starting iteration: 5; err: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258, 0.2324802003078454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258, 0.2324802003078454, 0.23044983807074576] ***
*** starting iteration: 6; err: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258, 0.2324802003078454, 0.23044983807074576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258, 0.2324802003078454, 0.23044983807074576, 0.23001221506122568] ***
*** finished computation of 7 references, err: [Inf, 0.48240000716802145, 0.2620876976181603, 0.24440584025993592, 0.23666732128317258, 0.2324802003078454, 0.23044983807074576, 0.23001221506122568] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7226999990123909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7226999990123909, 0.250115211458096] ***
*** starting iteration: 2; err: [Inf, 0.7226999990123909, 0.250115211458096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202] ***
*** starting iteration: 3; err: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522] ***
*** starting iteration: 4; err: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522, 0.22910982681209344] ***
*** starting iteration: 5; err: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522, 0.22910982681209344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522, 0.22910982681209344, 0.22725506537882162] ***
*** starting iteration: 6; err: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522, 0.22910982681209344, 0.22725506537882162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522, 0.22910982681209344, 0.22725506537882162, 0.22657566254609932] ***
*** finished computation of 7 references, err: [Inf, 0.7226999990123909, 0.250115211458096, 0.23833747409459202, 0.23415849389686522, 0.22910982681209344, 0.22725506537882162, 0.22657566254609932] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 5]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8866666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.831818181818181, 3.2590909090909093, 1.4590909090909092, 0.23181818181818184], [7.483333333333334, 2.9499999999999997, 6.3, 1.9833333333333332], [6.125, 2.933333333333333, 4.608333333333333, 1.4666666666666668], [6.0, 2.6999999999999997, 4.990909090909091, 1.8090909090909093], [6.82, 3.04, 4.82, 1.5], [6.56923076923077, 3.015384615384615, 5.484615384615385, 2.1000000000000005], [5.6, 2.6277777777777778, 3.9055555555555563, 1.1944444444444446], [5.390909090909091, 3.809090909090909, 1.5363636363636362, 0.2545454545454546], [7.550000000000001, 3.7, 6.25, 2.25]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.9676470588235295, 3.3794117647058823, 1.464705882352941, 0.24117647058823527], [7.675, 2.8499999999999996, 6.574999999999999, 2.175], [5.8125, 2.7125, 4.1875, 1.2874999999999999], [4.9, 2.5, 4.5, 1.7], [6.3066666666666675, 2.9333333333333327, 4.586666666666667, 1.4533333333333336], [6.036363636363637, 2.790909090909091, 4.990909090909091, 1.8545454545454547], [5.171428571428572, 2.385714285714286, 3.5, 1.0857142857142856], [6.544444444444444, 3.038888888888889, 5.605555555555556, 2.1333333333333337], [7.45, 3.7, 6.4, 2.35]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.624999999999999, 2.9875000000000003, 4.7250000000000005, 1.4874999999999998], [6.413333333333333, 2.9666666666666672, 5.353333333333334, 2.0200000000000005], [5.317647058823528, 3.741176470588235, 1.4941176470588236, 0.2941176470588236], [5.55, 2.5642857142857145, 3.842857142857143, 1.1714285714285715], [4.9, 2.5, 4.5, 1.7], [7.000000000000001, 3.0749999999999997, 5.966666666666666, 2.1333333333333333], [4.731249999999999, 3.1062500000000006, 1.3875, 0.20625000000000007], [5.938461538461539, 2.8538461538461544, 4.453846153846154, 1.3846153846153846], [6.0, 2.6, 4.9, 1.65], [7.800000000000001, 3.8, 6.550000000000001, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[55, 2, 23, 35, 1, 7, 20, 18, 1, 20, 4, 4, 17, 29, 32, 3, 31, 33, 11, 35, 1, 26, 1, 1, 31, 38, 36, 40, 43, 37, 33, 31, 33, 56, 39, 27, 27, 26, 24, 14, 48, 41, 32, 28, 47, 39, 23, 52, 38, 40, 38, 24, 28, 32, 32, 1, 1, 36, 35, 27, 34, 14, 31, 49, 47, 25, 46, 50, 2, 23, 38, 40, 9, 17, 57, 39, 31, 38, 29, 1, 1, 33, 30, 1, 33, 44, 39, 31, 39, 24, 34, 28, 15, 31, 36, 45, 1, 60, 22, 39, 23, 34, 1, 38, 46, 42, 58, 25, 18, 39, 22, 27, 34, 35, 40, 34, 6, 35, 55, 15, 9, 60, 45, 56, 36, 30, 51, 17, 28, 18, 25, 40, 59, 24, 33, 36, 13, 39, 27, 31, 26, 44, 57, 48, 75, 9, 27, 47, 52, 24, 22, 21, 56, 39, 37, 23, 16, 34, 31, 35, 36, 39, 44, 50, 37, 44, 27, 17, 39, 40, 34, 31, 22, 33, 32, 26, 30, 36, 37, 26, 40, 11, 41, 25, 22, 15, 39, 50, 35, 37, 42, 33, 31, 62, 30, 55, 29, 22, 59, 78, 40, 28, 27, 38, 36, 19, 38, 49, 42, 32, 49, 34, 26, 19, 24, 31, 46, 35, 43, 26, 20, 27, 20, 38, 39, 23, 46, 34, 38, 60, 30, 50, 33, 52, 81, 43, 25, 37, 24, 24, 41, 46, 47, 29, 32, 31, 24, 34, 29, 28, 39, 52, 45, 37, 41, 38, 50, 13, 44, 62, 28, 34, 42, 26, 42, 48, 43, 60, 41, 45, 28, 36, 24, 37, 43, 31, 55, 21, 35, 37, 31, 78, 40, 58, 25, 26, 43, 35, 39, 56, 26, 46, 27, 18, 19, 42, 47, 47, 56, 41]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5810000000000002, speedup = 0.16618125228217212, eval_ratio = 0.041507999999999996)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.38888888888888895,"recall":0.38888888888888895,"f1":null,"seconds":7.23768025636673e-5,"exhaustive_search_seconds":0.0003955624997615814,"evaluations":339.5390625,"distances_sum":1768.815918841692}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5416666666666666,"recall":0.5416666666666666,"f1":null,"seconds":0.00010659359395503998,"exhaustive_search_seconds":0.0003955624997615814,"evaluations":378.1640625,"distances_sum":1661.4475405305075}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6605902777777769,"recall":0.6605902777777769,"f1":0.6605902777777769,"seconds":0.00013929791748523712,"exhaustive_search_seconds":0.0003955624997615814,"evaluations":418.328125,"distances_sum":1616.066396412252}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7335069444444435,"recall":0.7335069444444435,"f1":0.7335069444444435,"seconds":0.00017376989126205444,"exhaustive_search_seconds":0.0003955624997615814,"evaluations":458.125,"distances_sum":1595.8555038593895}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.791666666666666,"recall":0.791666666666666,"f1":0.791666666666666,"seconds":0.0002044886350631714,"exhaustive_search_seconds":0.0003955624997615814,"evaluations":497.421875,"distances_sum":1582.512052982433}
KCenters.DeloneInvIndex> reached performance {"precision":0.822916666666666,"recall":0.822916666666666,"f1":0.822916666666666,"seconds":0.0002333223819732666,"exhaustive_search_seconds":0.0003955624997615814,"evaluations":533.7890625,"distances_sum":1576.0267207857682}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7940000000000004, speedup = 1.5573004185634416, eval_ratio = 0.053698)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
