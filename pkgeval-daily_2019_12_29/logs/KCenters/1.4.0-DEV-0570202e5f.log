Julia Version 1.4.0-DEV.668
Commit 0570202e5f (2019-12-28 22:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed KCenters ──────────────────── v0.1.8
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed Tables ────────────────────── v0.2.11
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed LearnBase ─────────────────── v0.2.2
 Installed MLDataUtils ───────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Parsers ───────────────────── v0.3.10
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Compat ────────────────────── v3.2.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed TableTraits ───────────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.5
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_wWoUBi/Project.toml`
 [no changes]
  Updating `/tmp/jl_wWoUBi/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_wWoUBi/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 152.61000000000007
[ Info: 78.77
[ Info: 42.469999999999985
[ Info: 26.78
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 75.46000113480547
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.972193250330964
inertia(cdnet.distances) = 22.837850424496132
inertia(crand.distances) = 22.62277584233137
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8540868853368861,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.140625,"distances_sum":2311.5442249505545}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8540868853368861,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.140625,"distances_sum":2311.5442249505545}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518887362637369,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.796875,"distances_sum":3024.4226286999397}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655681,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":3106.9348189858288}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655681,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8984375,"distances_sum":3106.9348189858288}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9816964285714287,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3263.1525834543213}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.973214285714286,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3174.560990140801}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9814388736263738,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.953125,"distances_sum":3258.1684488919836}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816964285714287,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3263.1525834543213}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816964285714287,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9453125,"distances_sum":3263.1525834543213}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.773654817404818,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0703125,"distances_sum":1761.1020854685323}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.75,"distances_sum":1438.9383000002292}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8584550865800874,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5546875,"distances_sum":2204.7780840957657}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8584550865800874,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5546875,"distances_sum":2204.7780840957657}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8678410131535139,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5390625,"distances_sum":2267.8950482267446}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8976908508158513,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.546875,"distances_sum":2477.518478148446}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.8976908508158513,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.546875,"distances_sum":2477.518478148446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9238412629037632,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2639.9775593412824}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947979624542125,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2793.8672795472094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9155682858807866,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6875,"distances_sum":2562.1625606892967}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9470695970695977,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2799.366566530371}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9484661172161178,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":2797.1213064760514}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9470695970695977,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2799.366566530371}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9470695970695977,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2799.366566530371}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.4765625,"distances_sum":539.0800288363282}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8135477369852377,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.234375,"distances_sum":1962.4556672793951}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8135477369852377,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.234375,"distances_sum":1962.4556672793951}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9150443306693316,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.640625,"distances_sum":2557.621066312499}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9391655219780223,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7578125,"distances_sum":2775.238860683547}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9391655219780223,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7578125,"distances_sum":2775.238860683547}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582474816849822,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.84375,"distances_sum":2895.110827737997}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9583218864468867,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9140625,"distances_sum":2905.9922810935527}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555689102564106,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9140625,"distances_sum":2854.646297179506}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664835164835167,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2949.4950907187913}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9664835164835167,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2949.4950907187913}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9664835164835167,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8984375,"distances_sum":2949.4950907187913}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6917970917970923,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.3671875,"distances_sum":1496.2343166994087}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5498046875,"f1":0.6917970917970923,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.3671875,"distances_sum":1496.2343166994087}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8220132298257306,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.171875,"distances_sum":1979.462569499654}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8691270535020544,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.328125,"distances_sum":2198.11462525018}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9407857767232771,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":2749.9920717440227}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9407857767232771,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":2749.9920717440227}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547332875457882,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":2786.106595265686}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952163461538462,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":2791.9221236449202}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9547332875457882,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":2786.106595265686}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9547332875457882,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":2786.106595265686}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4765625,"distances_sum":516.3316108788135}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1962890625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4765625,"distances_sum":516.3316108788135}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7998589951714958,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9296875,"distances_sum":1791.8280560420305}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.6986692127317133,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.09375,"distances_sum":1494.202068913462}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7998589951714958,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9296875,"distances_sum":1791.8280560420305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8420178779553786,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.984375,"distances_sum":2032.9241790345216}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.920484203296704,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5703125,"distances_sum":2541.24285540909}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.883971757409258,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3046875,"distances_sum":2258.5442642244343}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9284626831501837,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":2591.0614563657605}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":13,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8552062520812529,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1328125,"distances_sum":2089.0102653802833}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8530599608724616,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.125,"distances_sum":2090.2775846021227}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9284626831501837,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":2591.0614563657605}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.876953125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9284626831501837,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.53125,"distances_sum":2591.0614563657605}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8151705932955942,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.8359375,"distances_sum":1996.3042478388586}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.552734375,"f1":null,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.4375,"distances_sum":1444.5768419045555}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.390625,"distances_sum":529.524147517597}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7080078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7080078125,"f1":0.8151705932955942,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.8359375,"distances_sum":1996.3042478388586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462683150183155,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6015625,"distances_sum":2843.3161349499564}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9322089368964377,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.609375,"distances_sum":2754.078459558516}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9462683150183155,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6015625,"distances_sum":2843.3161349499564}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658482142857145,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.875,"distances_sum":2966.0724502491526}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658482142857145,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.875,"distances_sum":2966.0724502491526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658482142857145,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.875,"distances_sum":2966.0724502491526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8650906385281394,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3046875,"distances_sum":2097.285574201495}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.5234375,"distances_sum":987.4377593197843}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8650906385281394,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3046875,"distances_sum":2097.285574201495}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8863501082251091,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3515625,"distances_sum":2266.2575374014423}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8863501082251091,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3515625,"distances_sum":2266.2575374014423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527415293040296,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7578125,"distances_sum":2748.824933061025}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9270578379953386,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.609375,"distances_sum":2535.284983344437}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643830128205132,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.875,"distances_sum":2784.4171341744864}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643830128205132,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.875,"distances_sum":2784.4171341744864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643830128205132,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.875,"distances_sum":2784.4171341744864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5234375,"f1":0.6693938006438012,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.96875,"distances_sum":1028.5104634152976}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.3857421875,"f1":0.5296259296259292,"seconds":3.7085264921188354e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.7265625,"distances_sum":702.6357076541932}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5234375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5234375,"f1":0.6693938006438012,"seconds":4.408881068229675e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.96875,"distances_sum":1028.5104634152976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.856499750249751,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1484375,"distances_sum":1644.2253617909807}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8478599525474535,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.046875,"distances_sum":1584.5608551217474}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8911489552114562,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.2734375,"distances_sum":1826.884301869582}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9069113178488185,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4453125,"distances_sum":1880.92699728696}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9069113178488185,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4453125,"distances_sum":1880.92699728696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581902472527476,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2231.935164236607}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9445226648351657,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.578125,"distances_sum":2136.020537687548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9472241300366303,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2151.9272594782906}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9581902472527476,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2231.935164236607}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9581902472527476,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2231.935164236607}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.267578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.267578125,"f1":null,"seconds":3.373250365257263e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.1796875,"distances_sum":506.0932920983883}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8736300158175166,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.875,"distances_sum":1701.562390151946}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.681640625,"f1":null,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.453125,"distances_sum":1385.152027479617}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8736300158175166,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.875,"distances_sum":1701.562390151946}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9538919413919419,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.859375,"distances_sum":2216.1924102082726}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9387336621711629,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8515625,"distances_sum":2091.878650608674}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9015458499833505,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.203125,"distances_sum":1844.927662642458}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9538919413919419,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.859375,"distances_sum":2216.1924102082726}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025644,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2319.3003616255573}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9571886446886453,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":2234.5117632625575}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9653674450549456,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2295.7288306454675}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025644,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2319.3003616255573}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025644,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.921875,"distances_sum":2319.3003616255573}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5224609375,"f1":null,"seconds":3.987923264503479e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.546875,"distances_sum":1088.0701238386973}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.38671875,"f1":0.5394001831501831,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.53125,"distances_sum":803.354119742238}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.421875,"distances_sum":816.0399228939646}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5224609375,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5224609375,"f1":null,"seconds":3.987923264503479e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.546875,"distances_sum":1088.0701238386973}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9183207417582424,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":1994.845227239027}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9056157384282393,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.75,"distances_sum":1950.0673739545439}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6878128815628821,"seconds":4.16487455368042e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.71875,"distances_sum":1139.5285594405575}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9183207417582424,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":1994.845227239027}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737351190476193,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9765625,"distances_sum":2392.2066311290573}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802202,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2339.5052269357657}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9430345695970703,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":2173.562794100804}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9737351190476193,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9765625,"distances_sum":2392.2066311290573}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9737351190476193,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9765625,"distances_sum":2392.2066311290573}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.6978783369408375,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1875,"distances_sum":1070.2084027518101}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.2890625,"distances_sum":418.20337206597725}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.373250365257263e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.3984375,"distances_sum":475.5970267168634}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.6978783369408375,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1875,"distances_sum":1070.2084027518101}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9262565559440564,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6015625,"distances_sum":2092.6566672960616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9270979020979028,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.65625,"distances_sum":2067.023292014158}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7156876110001115,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.4765625,"distances_sum":1118.8179193195033}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5908203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5908203125,"f1":0.7271549630924637,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.4921875,"distances_sum":1177.7117658157258}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7835617507492514,"seconds":4.43682074546814e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.6875,"distances_sum":1355.094693381188}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9270979020979028,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.65625,"distances_sum":2067.023292014158}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562156593406598,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2262.753104787064}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360920329670337,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.65625,"distances_sum":2120.3932155975363}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666494963369968,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2328.5836967545342}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9493163086913093,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7890625,"distances_sum":2202.6546925974885}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666494963369968,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2328.5836967545342}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666494963369968,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2328.5836967545342}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.640625,"f1":null,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.15625,"distances_sum":1279.5827331668816}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6972893426018432,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.046875,"distances_sum":1111.2360690558169}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.640625,"f1":null,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.15625,"distances_sum":1279.5827331668816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8302619255744265,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7734375,"distances_sum":1543.9493517042908}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8398887570762579,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7265625,"distances_sum":1565.4314684510919}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9010244963369971,"seconds":4.980713129043579e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.125,"distances_sum":1873.3383232065003}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9010244963369971,"seconds":4.980713129043579e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.125,"distances_sum":1873.3383232065003}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9633642399267403,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2269.725327423306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9097709582084589,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.546875,"distances_sum":1961.6141751968635}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9499713827838833,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":2151.272421210058}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9633642399267403,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2269.725327423306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9633642399267403,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8515625,"distances_sum":2269.725327423306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.2372772693634033e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.5859375,"distances_sum":408.221257401561}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.609375,"distances_sum":404.8839235849661}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2080078125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.609375,"distances_sum":404.8839235849661}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":7,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.0230730772018433e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":5.984375,"distances_sum":442.47457038741555}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.296875,"distances_sum":771.0032646851732}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8120124666999674,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.7578125,"distances_sum":1381.9948697250177}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7950291028416036,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.671875,"distances_sum":1343.9050827859587}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6181640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.6181640625,"f1":0.7494411838161846,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.15625,"distances_sum":1176.3136626026337}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7174715909090915,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.921875,"distances_sum":1091.3461970572887}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.7811696529388428e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.2734375,"distances_sum":777.0219425357025}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8120124666999674,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.7578125,"distances_sum":1381.9948697250177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8953697344322352,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.4140625,"distances_sum":1786.442434396164}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8216497044622053,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.75,"distances_sum":1399.7154841358245}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8875171703296711,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.4140625,"distances_sum":1761.0874225800956}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8471526737151748,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.8125,"distances_sum":1553.0876214042448}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9512362637362644,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7578125,"distances_sum":2180.75500216542}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9399267399267406,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2101.431083788493}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8670334873459883,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.96875,"distances_sum":1616.533621086661}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9373834498834503,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.609375,"distances_sum":2125.161252233617}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9512362637362644,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7578125,"distances_sum":2180.75500216542}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9512362637362644,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7578125,"distances_sum":2180.75500216542}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8558949730824739,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.09375,"distances_sum":1729.3839553778876}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6854067807192813,"seconds":4.058703780174255e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.875,"distances_sum":1184.4497467816725}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8558949730824739,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.09375,"distances_sum":1729.3839553778876}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8927088536463545,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.4375,"distances_sum":1946.9190306965513}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9322318306693312,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6484375,"distances_sum":2160.4499197090427}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9097100815850824,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.546875,"distances_sum":2008.5219813272513}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.945135073260074,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":2253.3303486781124}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.945135073260074,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":2253.3303486781124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649782509157513,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8046875,"distances_sum":2435.9712705602547}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9750400641025643,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8671875,"distances_sum":2486.3296929394396}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9479598526473529,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6171875,"distances_sum":2356.1535685874514}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9641941391941398,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8671875,"distances_sum":2386.6718870652558}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9624484890109894,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.828125,"distances_sum":2385.5100413080054}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9750400641025643,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8671875,"distances_sum":2486.3296929394396}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9750400641025643,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8671875,"distances_sum":2486.3296929394396}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8517607392607401,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.84375,"distances_sum":1576.2829106209072}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8517607392607401,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.84375,"distances_sum":1576.2829106209072}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9275500541125545,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5859375,"distances_sum":1983.9290733566306}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9275500541125545,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5859375,"distances_sum":1983.9290733566306}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9677312271062275,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8984375,"distances_sum":2265.9215961872587}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989017,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.953125,"distances_sum":2351.100888279127}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9371737637362645,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5703125,"distances_sum":2088.53460031257}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.926769064269065,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.53125,"distances_sum":2024.5629043456174}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989017,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.953125,"distances_sum":2351.100888279127}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9792239010989017,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.953125,"distances_sum":2351.100888279127}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.359375,"distances_sum":506.6169778681632}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5947265625,"f1":0.7268294205794211,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.140625,"distances_sum":1221.788362429285}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5947265625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5947265625,"f1":0.7268294205794211,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.140625,"distances_sum":1221.788362429285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8562702922077929,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.8671875,"distances_sum":1687.8240828640817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9153731684981694,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.59375,"distances_sum":2029.9293466122315}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.794923826173827,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.671875,"distances_sum":1371.6531663813919}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.9153731684981694,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.59375,"distances_sum":2029.9293466122315}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501835,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.859375,"distances_sum":2405.7544183522505}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572229853479858,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8203125,"distances_sum":2356.3922335481793}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9210596694971701,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.625,"distances_sum":2105.452423666531}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9329670329670338,"seconds":6.472691893577576e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6953125,"distances_sum":2174.0623519913534}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501835,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.859375,"distances_sum":2405.7544183522505}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501835,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.859375,"distances_sum":2405.7544183522505}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8251701423576431,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.765625,"distances_sum":1564.3955224679}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.5625,"distances_sum":774.3326348211868}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.765625,"distances_sum":439.19320061375925}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8251701423576431,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.765625,"distances_sum":1564.3955224679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8962828837828846,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3671875,"distances_sum":1925.1058947432207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9449118589743594,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2228.0712183619703}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8887367840492849,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3515625,"distances_sum":1872.5410365706796}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8999521312021319,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3359375,"distances_sum":1960.8716952179034}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.839588016150517,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.859375,"distances_sum":1641.3407346701358}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9449118589743594,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2228.0712183619703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620764652014656,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2327.075746557794}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9538175366300372,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.671875,"distances_sum":2325.430109926292}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9527014652014659,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.78125,"distances_sum":2271.3922738255137}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.942514256576757,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6328125,"distances_sum":2260.158329834904}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576694139194145,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2340.1704458340323}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620764652014656,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2327.075746557794}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620764652014656,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2327.075746557794}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2099609375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2099609375,"f1":null,"seconds":2.7120113372802734e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":4.9921875,"distances_sum":524.95254434324}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2099609375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2099609375,"f1":null,"seconds":2.7120113372802734e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":4.9921875,"distances_sum":524.95254434324}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.866426282051283,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.3515625,"distances_sum":1644.6871945633022}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8614779317904326,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.296875,"distances_sum":1603.8358841029453}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":6.5390625,"distances_sum":465.51911599960255}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8634219946719957,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.234375,"distances_sum":1650.7220455471834}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.866426282051283,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.3515625,"distances_sum":1644.6871945633022}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585966117216123,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.875,"distances_sum":2225.602983654618}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9463999542124548,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.7578125,"distances_sum":2160.7846734028462}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658310439560444,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9453125,"distances_sum":2273.273793681747}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658310439560444,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9453125,"distances_sum":2273.273793681747}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.953125,"distances_sum":2371.8363504978556}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696428571428577,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9140625,"distances_sum":2300.746586144725}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9781650641025644,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9609375,"distances_sum":2357.8022008620574}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9784798534798537,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9453125,"distances_sum":2377.732032579748}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772149725274728,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9296875,"distances_sum":2360.100163629464}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.953125,"distances_sum":2371.8363504978556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417585,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.953125,"distances_sum":2371.8363504978556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7867531773781782,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.421875,"distances_sum":1360.0800082100593}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.0677765607833862e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.2890625,"distances_sum":499.77341408026126}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":3.3192336559295654e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.203125,"distances_sum":799.5012127465808}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7867531773781782,"seconds":4.163011908531189e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.421875,"distances_sum":1360.0800082100593}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8583453005328013,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.71875,"distances_sum":1621.1260978887865}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9010047244422253,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.453125,"distances_sum":1833.5485078949341}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8547541000666009,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.734375,"distances_sum":1616.483983636629}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.9010047244422253,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.453125,"distances_sum":1833.5485078949341}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640682234432241,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2262.715360019636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9506009615384621,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8515625,"distances_sum":2186.4971489016016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640682234432236,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2280.436934616668}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670332,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9140625,"distances_sum":2237.8799694152194}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9261847527472534,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2008.1675382893502}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553056318681323,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2214.405145550858}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9640682234432236,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2280.436934616668}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9640682234432236,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2280.436934616668}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7028138528138533,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.2421875,"distances_sum":1082.1926749671682}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.850087523460388e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.3515625,"distances_sum":776.7087063685059}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.560546875,"f1":0.7028138528138533,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.2421875,"distances_sum":1082.1926749671682}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8949841824841833,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5703125,"distances_sum":1814.8070236805922}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9202011530136538,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":1980.2358760746156}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8621487887112895,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8515625,"distances_sum":1607.9884949475295}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9074576465201474,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6328125,"distances_sum":1859.920876778949}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.86806682900433,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.90625,"distances_sum":1656.0045821427866}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.858434274059275,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.90625,"distances_sum":1594.8010454744829}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59765625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.59765625,"f1":0.735163794538795,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3671875,"distances_sum":1183.5456070044738}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9202011530136538,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":1980.2358760746156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9436126373626379,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2107.4835876397046}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696085164835169,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2279.1564282854297}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9460794413919421,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":2124.993800075818}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619677197802204,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2236.284168014094}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9394261988011995,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":2108.4711444820505}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9696085164835169,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2279.1564282854297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9696085164835169,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2279.1564282854297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9958333333333332,"recall":0.67578125,"f1":0.7950724622599628,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.6640625,"distances_sum":1273.0929871192116}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.382563591003418e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.9765625,"distances_sum":413.13000627234607}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.991508556547619,"recall":0.765625,"f1":0.8556397378663011,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9375,"distances_sum":1510.499363238978}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.991508556547619,"recall":0.765625,"f1":0.8556397378663011,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9375,"distances_sum":1510.499363238978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9904668898809524,"recall":0.9169921875,"f1":0.9491007039835168,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":1931.156079677914}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9896763392857143,"recall":0.9267578125,"f1":0.9543741414835166,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":1966.522558385459}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9896763392857143,"recall":0.9267578125,"f1":0.9543741414835166,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":1966.522558385459}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":10}, perf: {"precision":0.9917224702380952,"recall":0.9375,"f1":0.9614769345238096,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":1980.412753477529}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9921595982142857,"recall":0.9296875,"f1":0.9570176568223449,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.890625,"distances_sum":1948.67261974215}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":0.9917224702380952,"recall":0.9375,"f1":0.9614769345238096,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":1980.412753477529}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":0.9917224702380952,"recall":0.9375,"f1":0.9614769345238096,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.921875,"distances_sum":1980.412753477529}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.2890625,"distances_sum":689.9467855894411}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8838323135198145,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0703125,"distances_sum":1492.1922349152394}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7105450105450112,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.1328125,"distances_sum":973.4812829477333}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8800943847818855,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.9765625,"distances_sum":1467.9539836308843}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8046875,"f1":0.8838323135198145,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0703125,"distances_sum":1492.1922349152394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698489010989013,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":1923.9806129774133}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9085882867132876,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.484375,"distances_sum":1621.5253055777052}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8976424617049624,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.421875,"distances_sum":1563.4664714786034}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9698489010989013,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":1923.9806129774133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9760244963369968,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":1960.1455687321325}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9760244963369968,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":1960.1455687321325}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9760244963369968,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":1960.1455687321325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8847589910089916,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0703125,"distances_sum":1641.211209963881}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.8847589910089916,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0703125,"distances_sum":1641.211209963881}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9110665376290383,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.359375,"distances_sum":1752.159362674084}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9110665376290383,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.359375,"distances_sum":1752.159362674084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9217267107892114,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.53125,"distances_sum":1837.1271993114651}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9399324633699642,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.59375,"distances_sum":1967.996189050544}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9399324633699642,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.59375,"distances_sum":1967.996189050544}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8955078125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9399324633699642,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.59375,"distances_sum":1967.996189050544}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":3.3099204301834106e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.828125,"distances_sum":441.1772639756615}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5732421875,"f1":null,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.03125,"distances_sum":1058.5232123762867}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.724164377289378,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.0078125,"distances_sum":1080.1077920690377}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5888671875,"f1":0.724164377289378,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.0078125,"distances_sum":1080.1077920690377}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.930815018315019,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.71875,"distances_sum":1770.2329967453961}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8794960248085255,"seconds":4.9620866775512695e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.078125,"distances_sum":1514.0996060673074}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.930815018315019,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.71875,"distances_sum":1770.2329967453961}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695169413919418,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.859375,"distances_sum":1978.3844253370316}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9522435897435901,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.765625,"distances_sum":1889.323361964233}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9509500915750921,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":1842.5926266226752}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695169413919418,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.859375,"distances_sum":1978.3844253370316}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9695169413919418,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.859375,"distances_sum":1978.3844253370316}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.5078125,"distances_sum":730.042179824513}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8554206210456219,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.90625,"distances_sum":1440.303565725627}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7007121350871356,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3046875,"distances_sum":1005.8219244631687}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8554206210456219,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.90625,"distances_sum":1440.303565725627}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564045329670332,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.796875,"distances_sum":1931.833652399253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9072895854145863,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.453125,"distances_sum":1701.658382353132}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564045329670332,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.796875,"distances_sum":1931.833652399253}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9812328296703301,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2088.5830410995013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712282509157513,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2004.292575403943}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739931,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2002.2289354700085}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9812328296703301,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2088.5830410995013}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9812328296703301,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2088.5830410995013}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8626772533022542,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.9921875,"distances_sum":1486.449234878571}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6985457251082257,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.765625,"distances_sum":978.8267714547426}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.0081719160079956e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.109375,"distances_sum":397.9364768551512}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8676006285381295,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.15625,"distances_sum":1528.8287587958987}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8676006285381295,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.15625,"distances_sum":1528.8287587958987}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940167124542125,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6640625,"distances_sum":1858.0674281181805}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9445798992673998,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.78125,"distances_sum":1854.5900094662027}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9445798992673998,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.78125,"distances_sum":1854.5900094662027}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723614926739931,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8984375,"distances_sum":2018.250509913611}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9626316391941397,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":1940.3481511447699}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9636389652014655,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.78125,"distances_sum":1994.595706969422}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.9375,"distances_sum":2050.6284393618976}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.9375,"distances_sum":2050.6284393618976}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781078296703298,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.9375,"distances_sum":2050.6284393618976}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.353515625,"f1":0.5037212787212785,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.3671875,"distances_sum":632.5479672387414}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.353515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.353515625,"f1":0.5037212787212785,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.3671875,"distances_sum":632.5479672387414}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.353515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.353515625,"f1":0.5037212787212785,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.3671875,"distances_sum":632.5479672387414}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.353515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.353515625,"f1":0.5037212787212785,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.3671875,"distances_sum":632.5479672387414}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8027564449439458,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":7.7265625,"distances_sum":1380.3697435840888}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":6.3125,"distances_sum":831.6067217051271}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8027564449439458,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":7.7265625,"distances_sum":1380.3697435840888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8584628912753922,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":7.9921875,"distances_sum":1588.277185636947}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8622035950160958,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.09375,"distances_sum":1670.0344692703604}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8149158133533142,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":7.8046875,"distances_sum":1418.944447599082}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8622035950160958,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.09375,"distances_sum":1670.0344692703604}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9113038003663011,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.5390625,"distances_sum":1868.1286969759612}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216121,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.90625,"distances_sum":2219.3265212715405}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9117673992673998,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.6015625,"distances_sum":1906.7740382531779}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9075726356976365,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.4765625,"distances_sum":1828.7483817447549}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9229255119880126,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.7265625,"distances_sum":1954.48937338803}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9072890651015658,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.53125,"distances_sum":1844.5988067471365}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.915487637362638,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.484375,"distances_sum":1892.8332401896746}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9366701007326016,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.8359375,"distances_sum":1997.3716182663577}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216121,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.90625,"distances_sum":2219.3265212715405}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216121,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":4.515610635280609e-5,"evaluations":8.90625,"distances_sum":2219.3265212715405}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8187238109113117,"seconds":4.654750227928162e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.7734375,"distances_sum":1496.8540432969378}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7179015429015435,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.359375,"distances_sum":1153.187930462381}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8187238109113117,"seconds":4.654750227928162e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.7734375,"distances_sum":1496.8540432969378}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8745483682983692,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9765625,"distances_sum":1725.5005594790705}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522035256410261,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2173.886534623242}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522035256410261,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2173.886534623242}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522035256410261,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2173.886534623242}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522035256410261,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2173.886534623242}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6999389499389506,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.2734375,"distances_sum":1113.8203595359978}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5576171875,"f1":0.6999389499389506,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.2734375,"distances_sum":1113.8203595359978}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9329155219780227,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.65625,"distances_sum":2039.916488959961}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8705044955044966,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.15625,"distances_sum":1712.7639474842292}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9329155219780227,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.65625,"distances_sum":2039.916488959961}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665750915750919,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.921875,"distances_sum":2240.457727924316}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665750915750919,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.921875,"distances_sum":2240.457727924316}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665750915750919,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.921875,"distances_sum":2240.457727924316}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8706288503163511,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.9609375,"distances_sum":1737.914969343618}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8706288503163511,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.9609375,"distances_sum":1737.914969343618}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9444654304029309,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.765625,"distances_sum":2143.6304744234985}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9444654304029309,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.765625,"distances_sum":2143.6304744234985}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721955128205131,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2365.786219142221}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721955128205131,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2365.786219142221}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9721955128205131,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2365.786219142221}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.4765625,"distances_sum":1180.5044654575295}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.56640625,"f1":null,"seconds":3.978610038757324e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.4765625,"distances_sum":1180.5044654575295}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9300168581418589,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.734375,"distances_sum":2118.7727173272046}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9300168581418589,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.734375,"distances_sum":2118.7727173272046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9418071511821515,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.765625,"distances_sum":2188.8969163718384}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9418071511821515,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.765625,"distances_sum":2188.8969163718384}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9418071511821515,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.765625,"distances_sum":2188.8969163718384}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.5703125,"distances_sum":456.46578441043897}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7083435661560669,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.984375,"distances_sum":1174.8657207140602}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7973687770562778,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.4609375,"distances_sum":1370.636624264317}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7973687770562778,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.4609375,"distances_sum":1370.636624264317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.959638278388279,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8046875,"distances_sum":2216.7785422375728}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.902847673160174,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.2421875,"distances_sum":1847.7788754102055}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8099400599400608,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.5078125,"distances_sum":1426.3730011392317}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8515265984015993,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.7578125,"distances_sum":1601.4951096313396}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9278044871794877,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.515625,"distances_sum":2013.482062779415}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.959638278388279,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8046875,"distances_sum":2216.7785422375728}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.975875686813187,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.921875,"distances_sum":2314.2440969578893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673763736263741,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2267.0063880416164}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9605711996337001,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7890625,"distances_sum":2213.5920635849175}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744448260073263,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.890625,"distances_sum":2310.2312531934335}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.975875686813187,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.921875,"distances_sum":2314.2440969578893}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.975875686813187,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.921875,"distances_sum":2314.2440969578893}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.6640625,"distances_sum":524.8847910082147}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.6640625,"distances_sum":524.8847910082147}}, n: 9
inertia(cfft.distances) = 19.354438866688866
inertia(cdnet.distances) = 28.535012659245528
inertia(crand.distances) = 183.41286299602493
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8688888888888888
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8755555555555555
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8822222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 1, 2, 3, 3, 2, 1, 2, 3, 3, 3, 3, 2, 3, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 2, 3, 2, 3, 3, 1, 2]
acc = 0.94
*** starting iteration: 1; err: [Inf, 0.38113333542699546] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974] ***
*** starting iteration: 2; err: [Inf, 0.38113333542699546, 0.19534129184447974] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332] ***
*** starting iteration: 3; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** starting iteration: 4; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** starting iteration: 5; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** starting iteration: 6; err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** finished computation of 12 references, err: [Inf, 0.38113333542699546, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.4467999948555395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4467999948555395, 0.5017990897264072] ***
*** finished computation of 7 references, err: [Inf, 1.4467999948555395, 0.5017990897264072] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 15]]
** centroid: 1, normalized-entropy: 0.9256859869821296, [(2, 29), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 2, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 1), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6312000039377533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6312000039377533, 0.3839550086956973] ***
*** finished computation of 7 references, err: [Inf, 0.6312000039377533, 0.3839550086956973] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 32]]
** centroid: 2, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6360000058752228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6360000058752228, 0.3287334834294265] ***
*** finished computation of 7 references, err: [Inf, 0.6360000058752228, 0.3287334834294265] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 3]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3361583549646764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3361583549646764, 0.2355917634073421] ***
*** finished computation of 7 references, err: [Inf, 0.3361583549646764, 0.2355917634073421] ***
*** center 1: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 19]]
** centroid: 6, normalized-entropy: 0.876716288999464, [(2, 8), (3, 19)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23223429304653284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23223429304653284, 0.1616768425187853] ***
*** finished computation of 7 references, err: [Inf, 0.23223429304653284, 0.1616768425187853] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28423811269650734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28423811269650734, 0.18809669742250473] ***
*** finished computation of 7 references, err: [Inf, 0.28423811269650734, 0.18809669742250473] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2654000215319947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2654000215319947, 0.5322796403664379] ***
*** starting iteration: 2; err: [Inf, 1.2654000215319947, 0.5322796403664379] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2654000215319947, 0.5322796403664379, 0.5269167770986656] ***
*** starting iteration: 3; err: [Inf, 1.2654000215319947, 0.5322796403664379, 0.5269167770986656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2654000215319947, 0.5322796403664379, 0.5269167770986656, 0.5269167770986656] ***
*** finished computation of 3 references, err: [Inf, 1.2654000215319947, 0.5322796403664379, 0.5269167770986656, 0.5269167770986656] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2183999791046813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2183999791046813, 0.523404373477553] ***
*** starting iteration: 2; err: [Inf, 1.2183999791046813, 0.523404373477553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136] ***
*** starting iteration: 3; err: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123] ***
*** starting iteration: 4; err: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123, 0.48407477410738836] ***
*** starting iteration: 5; err: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123, 0.48407477410738836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123, 0.48407477410738836, 0.4796273032231768] ***
*** starting iteration: 6; err: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123, 0.48407477410738836, 0.4796273032231768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123, 0.48407477410738836, 0.4796273032231768, 0.478744622674093] ***
*** finished computation of 3 references, err: [Inf, 1.2183999791046813, 0.523404373477553, 0.49307781937324136, 0.48683537718829123, 0.48407477410738836, 0.4796273032231768, 0.478744622674093] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 25]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 8]]
** centroid: 2, normalized-entropy: 0.7990485210442682, [(2, 25), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2206000220676092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2206000220676092, 0.5945268760242444] ***
*** starting iteration: 2; err: [Inf, 1.2206000220676092, 0.5945268760242444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2206000220676092, 0.5945268760242444, 0.5341545976120166] ***
*** starting iteration: 3; err: [Inf, 1.2206000220676092, 0.5945268760242444, 0.5341545976120166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2206000220676092, 0.5945268760242444, 0.5341545976120166, 0.5281101210198496] ***
*** starting iteration: 4; err: [Inf, 1.2206000220676092, 0.5945268760242444, 0.5341545976120166, 0.5281101210198496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2206000220676092, 0.5945268760242444, 0.5341545976120166, 0.5281101210198496, 0.5281101210198496] ***
*** finished computation of 3 references, err: [Inf, 1.2206000220676092, 0.5945268760242444, 0.5341545976120166, 0.5281101210198496, 0.5281101210198496] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 39, 4]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.545749512218453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.545749512218453, 0.672870694219201] ***
*** starting iteration: 2; err: [Inf, 1.545749512218453, 0.672870694219201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.545749512218453, 0.672870694219201, 0.6613886148036485] ***
*** starting iteration: 3; err: [Inf, 1.545749512218453, 0.672870694219201, 0.6613886148036485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.545749512218453, 0.672870694219201, 0.6613886148036485, 0.6551907761290069] ***
*** finished computation of 3 references, err: [Inf, 1.545749512218453, 0.672870694219201, 0.6613886148036485, 0.6551907761290069] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 38]]
** centroid: 1, normalized-entropy: 0.9869444983748495, [(2, 29), (3, 38)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 2, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 14), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.724549202323265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.724549202323265, 0.503725082928305] ***
*** starting iteration: 2; err: [Inf, 0.724549202323265, 0.503725082928305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.724549202323265, 0.503725082928305, 0.5032363982376772] ***
*** finished computation of 3 references, err: [Inf, 0.724549202323265, 0.503725082928305, 0.5032363982376772] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5059531578888694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5059531578888694, 0.6778657505062146] ***
*** starting iteration: 2; err: [Inf, 2.5059531578888694, 0.6778657505062146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5059531578888694, 0.6778657505062146, 0.3843108876615256] ***
*** starting iteration: 3; err: [Inf, 2.5059531578888694, 0.6778657505062146, 0.3843108876615256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5059531578888694, 0.6778657505062146, 0.3843108876615256, 0.37327450598636125] ***
*** finished computation of 3 references, err: [Inf, 2.5059531578888694, 0.6778657505062146, 0.3843108876615256, 0.37327450598636125] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2737772347696057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2737772347696057, 0.6634831020496834] ***
*** starting iteration: 2; err: [Inf, 1.2737772347696057, 0.6634831020496834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2737772347696057, 0.6634831020496834, 0.6554637294767234] ***
*** starting iteration: 3; err: [Inf, 1.2737772347696057, 0.6634831020496834, 0.6554637294767234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2737772347696057, 0.6634831020496834, 0.6554637294767234, 0.6554637294767234] ***
*** finished computation of 3 references, err: [Inf, 1.2737772347696057, 0.6634831020496834, 0.6554637294767234, 0.6554637294767234] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 38]]
** centroid: 1, normalized-entropy: 0.9869444983748495, [(2, 29), (3, 38)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [18, 2, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8352691791083418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734] ***
*** starting iteration: 2; err: [Inf, 0.8352691791083418, 0.5135756715776734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685] ***
*** starting iteration: 3; err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151] ***
*** starting iteration: 4; err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154] ***
*** starting iteration: 5; err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507] ***
*** starting iteration: 6; err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507, 0.32678544012302596] ***
*** starting iteration: 7; err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507, 0.32678544012302596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507, 0.32678544012302596, 0.3254595356268567] ***
*** starting iteration: 8; err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507, 0.32678544012302596, 0.3254595356268567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507, 0.32678544012302596, 0.3254595356268567, 0.32457313444385877] ***
*** finished computation of 3 references, err: [Inf, 0.8352691791083418, 0.5135756715776734, 0.45823638032119685, 0.3978994407025151, 0.3352034119222154, 0.3284068082971507, 0.32678544012302596, 0.3254595356268567, 0.32457313444385877] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 32]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9073993027589169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9073993027589169, 0.729775720901409] ***
*** starting iteration: 2; err: [Inf, 0.9073993027589169, 0.729775720901409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144] ***
*** starting iteration: 3; err: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683] ***
*** starting iteration: 4; err: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683, 0.37405249956366615] ***
*** starting iteration: 5; err: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683, 0.37405249956366615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683, 0.37405249956366615, 0.373035122563357] ***
*** starting iteration: 6; err: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683, 0.37405249956366615, 0.373035122563357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683, 0.37405249956366615, 0.373035122563357, 0.37281839412193263] ***
*** finished computation of 3 references, err: [Inf, 0.9073993027589169, 0.729775720901409, 0.43590947111028144, 0.37578556774790683, 0.37405249956366615, 0.373035122563357, 0.37281839412193263] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 2, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.138699986531637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.138699986531637, 0.5496854336347263] ***
*** starting iteration: 2; err: [Inf, 1.138699986531637, 0.5496854336347263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.138699986531637, 0.5496854336347263, 0.5329925176492946] ***
*** starting iteration: 3; err: [Inf, 1.138699986531637, 0.5496854336347263, 0.5329925176492946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.138699986531637, 0.5496854336347263, 0.5329925176492946, 0.5279904996925141] ***
*** starting iteration: 4; err: [Inf, 1.138699986531637, 0.5496854336347263, 0.5329925176492946, 0.5279904996925141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.138699986531637, 0.5496854336347263, 0.5329925176492946, 0.5279904996925141, 0.5270271450375538] ***
*** finished computation of 3 references, err: [Inf, 1.138699986531637, 0.5496854336347263, 0.5329925176492946, 0.5279904996925141, 0.5270271450375538] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8418999956349954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8418999956349954, 0.49519129053280836] ***
*** starting iteration: 2; err: [Inf, 0.8418999956349954, 0.49519129053280836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807] ***
*** starting iteration: 3; err: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807, 0.48188713898973473] ***
*** starting iteration: 4; err: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807, 0.48188713898973473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807, 0.48188713898973473, 0.4796273032231768] ***
*** starting iteration: 5; err: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807, 0.48188713898973473, 0.4796273032231768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807, 0.48188713898973473, 0.4796273032231768, 0.478744622674093] ***
*** finished computation of 3 references, err: [Inf, 0.8418999956349954, 0.49519129053280836, 0.48586017647729807, 0.48188713898973473, 0.4796273032231768, 0.478744622674093] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 8]]
** centroid: 3, normalized-entropy: 0.7990485210442682, [(2, 25), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1832999932661097] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756] ***
*** starting iteration: 2; err: [Inf, 1.1832999932661097, 0.7168627613552756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414] ***
*** starting iteration: 3; err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348] ***
*** starting iteration: 4; err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495] ***
*** starting iteration: 5; err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673] ***
*** starting iteration: 6; err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673, 0.5309838079689275] ***
*** starting iteration: 7; err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673, 0.5309838079689275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673, 0.5309838079689275, 0.5281101210198496] ***
*** starting iteration: 8; err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673, 0.5309838079689275, 0.5281101210198496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673, 0.5309838079689275, 0.5281101210198496, 0.5281101210198496] ***
*** finished computation of 3 references, err: [Inf, 1.1832999932661097, 0.7168627613552756, 0.6428942966564414, 0.6063227382171348, 0.5750467715730495, 0.5428191200372673, 0.5309838079689275, 0.5281101210198496, 0.5281101210198496] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4453000016547976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323] ***
*** starting iteration: 2; err: [Inf, 0.4453000016547976, 0.3041380392752323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471] ***
*** starting iteration: 3; err: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374] ***
*** starting iteration: 4; err: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775] ***
*** starting iteration: 5; err: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775, 0.2801696981164606] ***
*** starting iteration: 6; err: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775, 0.2801696981164606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775, 0.2801696981164606, 0.27646135268704863] ***
*** starting iteration: 7; err: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775, 0.2801696981164606, 0.27646135268704863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775, 0.2801696981164606, 0.27646135268704863, 0.27646135268704863] ***
*** finished computation of 7 references, err: [Inf, 0.4453000016547976, 0.3041380392752323, 0.2882159551325471, 0.28400156423977374, 0.28136078731513775, 0.2801696981164606, 0.27646135268704863, 0.27646135268704863] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 19]]
** centroid: 5, normalized-entropy: 0.876716288999464, [(2, 8), (3, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5775000091888718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5775000091888718, 0.28110174666620225] ***
*** starting iteration: 2; err: [Inf, 0.5775000091888718, 0.28110174666620225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995] ***
*** starting iteration: 3; err: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995, 0.24129952814429456] ***
*** starting iteration: 4; err: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995, 0.24129952814429456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995, 0.24129952814429456, 0.2390540833295297] ***
*** starting iteration: 5; err: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995, 0.24129952814429456, 0.2390540833295297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995, 0.24129952814429456, 0.2390540833295297, 0.2385128644631644] ***
*** finished computation of 7 references, err: [Inf, 0.5775000091888718, 0.28110174666620225, 0.24622306557458995, 0.24129952814429456, 0.2390540833295297, 0.2385128644631644] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4907000029252856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4907000029252856, 0.28137853225466086] ***
*** starting iteration: 2; err: [Inf, 0.4907000029252856, 0.28137853225466086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651] ***
*** starting iteration: 3; err: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651, 0.22716536607311633] ***
*** starting iteration: 4; err: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651, 0.22716536607311633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651, 0.22716536607311633, 0.22466662936050444] ***
*** starting iteration: 5; err: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651, 0.22716536607311633, 0.22466662936050444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651, 0.22716536607311633, 0.22466662936050444, 0.22466662936050444] ***
*** finished computation of 7 references, err: [Inf, 0.4907000029252856, 0.28137853225466086, 0.2454740126992651, 0.22716536607311633, 0.22466662936050444, 0.22466662936050444] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 22, 3]]
** centroid: 7, normalized-entropy: 0.5293608652873645, [(2, 22), (3, 3)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 8.257339619140648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.257339619140648, 0.9446817564529465] ***
*** starting iteration: 2; err: [Inf, 8.257339619140648, 0.9446817564529465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.257339619140648, 0.9446817564529465, 0.6689522837991685] ***
*** starting iteration: 3; err: [Inf, 8.257339619140648, 0.9446817564529465, 0.6689522837991685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.257339619140648, 0.9446817564529465, 0.6689522837991685, 0.6606132246722737] ***
*** starting iteration: 4; err: [Inf, 8.257339619140648, 0.9446817564529465, 0.6689522837991685, 0.6606132246722737] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.257339619140648, 0.9446817564529465, 0.6689522837991685, 0.6606132246722737, 0.6606132246722737] ***
*** finished computation of 3 references, err: [Inf, 8.257339619140648, 0.9446817564529465, 0.6689522837991685, 0.6606132246722737, 0.6606132246722737] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 38]]
** centroid: 2, normalized-entropy: 0.9869444983748495, [(2, 29), (3, 38)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [25, 2, 0]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(1, 25), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.988404032496168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.988404032496168, 0.5041829145463163] ***
*** starting iteration: 2; err: [Inf, 0.988404032496168, 0.5041829145463163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.988404032496168, 0.5041829145463163, 0.5034199054759789] ***
*** finished computation of 3 references, err: [Inf, 0.988404032496168, 0.5041829145463163, 0.5034199054759789] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7053729961859982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722] ***
*** starting iteration: 2; err: [Inf, 2.7053729961859982, 0.9332172768243722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902] ***
*** starting iteration: 3; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797] ***
*** starting iteration: 4; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699] ***
*** starting iteration: 5; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401] ***
*** starting iteration: 6; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896] ***
*** starting iteration: 7; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896, 0.37405249956366615] ***
*** starting iteration: 8; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896, 0.37405249956366615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896, 0.37405249956366615, 0.373035122563357] ***
*** starting iteration: 9; err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896, 0.37405249956366615, 0.373035122563357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896, 0.37405249956366615, 0.373035122563357, 0.37281839412193263] ***
*** finished computation of 3 references, err: [Inf, 2.7053729961859982, 0.9332172768243722, 0.5120423565084902, 0.4502516157055797, 0.4215632209363699, 0.3913593365966401, 0.3763092191725896, 0.37405249956366615, 0.373035122563357, 0.37281839412193263] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 4]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9913000036723442] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9913000036723442, 0.5985326099656167] ***
*** starting iteration: 2; err: [Inf, 0.9913000036723442, 0.5985326099656167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9913000036723442, 0.5985326099656167, 0.5543121986187707] ***
*** starting iteration: 3; err: [Inf, 0.9913000036723442, 0.5985326099656167, 0.5543121986187707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9913000036723442, 0.5985326099656167, 0.5543121986187707, 0.5354591326644842] ***
*** finished computation of 3 references, err: [Inf, 0.9913000036723442, 0.5985326099656167, 0.5543121986187707, 0.5354591326644842] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 13]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0406000050859083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0406000050859083, 0.6561390899513273] ***
*** starting iteration: 2; err: [Inf, 1.0406000050859083, 0.6561390899513273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0406000050859083, 0.6561390899513273, 0.5468089696059093] ***
*** starting iteration: 3; err: [Inf, 1.0406000050859083, 0.6561390899513273, 0.5468089696059093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0406000050859083, 0.6561390899513273, 0.5468089696059093, 0.49940889790579035] ***
*** finished computation of 3 references, err: [Inf, 1.0406000050859083, 0.6561390899513273, 0.5468089696059093, 0.49940889790579035] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 13]]
** centroid: 1, normalized-entropy: 0.9097361225311661, [(2, 27), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3755999918146347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3755999918146347, 0.5307186645999632] ***
*** starting iteration: 2; err: [Inf, 1.3755999918146347, 0.5307186645999632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3755999918146347, 0.5307186645999632, 0.5281101210198496] ***
*** starting iteration: 3; err: [Inf, 1.3755999918146347, 0.5307186645999632, 0.5281101210198496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3755999918146347, 0.5307186645999632, 0.5281101210198496, 0.5281101210198496] ***
*** finished computation of 3 references, err: [Inf, 1.3755999918146347, 0.5307186645999632, 0.5281101210198496, 0.5281101210198496] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.055300004517393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.055300004517393, 0.5511436872911135] ***
*** starting iteration: 2; err: [Inf, 1.055300004517393, 0.5511436872911135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.055300004517393, 0.5511436872911135, 0.5320607789745937] ***
*** starting iteration: 3; err: [Inf, 1.055300004517393, 0.5511436872911135, 0.5320607789745937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.055300004517393, 0.5511436872911135, 0.5320607789745937, 0.5279904996925141] ***
*** finished computation of 3 references, err: [Inf, 1.055300004517393, 0.5511436872911135, 0.5320607789745937, 0.5279904996925141] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7823999999080895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7823999999080895, 0.5118722412916579] ***
*** starting iteration: 2; err: [Inf, 1.7823999999080895, 0.5118722412916579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7823999999080895, 0.5118722412916579, 0.49307781937324136] ***
*** starting iteration: 3; err: [Inf, 1.7823999999080895, 0.5118722412916579, 0.49307781937324136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7823999999080895, 0.5118722412916579, 0.49307781937324136, 0.48683537718829123] ***
*** finished computation of 3 references, err: [Inf, 1.7823999999080895, 0.5118722412916579, 0.49307781937324136, 0.48683537718829123] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 12]]
** centroid: 3, normalized-entropy: 0.8997437586982626, [(2, 26), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5655000005007815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5655000005007815, 0.5487635757388443] ***
*** starting iteration: 2; err: [Inf, 1.5655000005007815, 0.5487635757388443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5655000005007815, 0.5487635757388443, 0.5287936959661096] ***
*** starting iteration: 3; err: [Inf, 1.5655000005007815, 0.5487635757388443, 0.5287936959661096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5655000005007815, 0.5487635757388443, 0.5287936959661096, 0.5281101210198496] ***
*** finished computation of 3 references, err: [Inf, 1.5655000005007815, 0.5487635757388443, 0.5287936959661096, 0.5281101210198496] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 4]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5155999918427834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5155999918427834, 0.5269167770986656] ***
*** starting iteration: 2; err: [Inf, 2.5155999918427834, 0.5269167770986656] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5155999918427834, 0.5269167770986656, 0.5269167770986656] ***
*** finished computation of 3 references, err: [Inf, 2.5155999918427834, 0.5269167770986656, 0.5269167770986656] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0024000044546977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0024000044546977, 0.47041722184589074] ***
*** starting iteration: 2; err: [Inf, 1.0024000044546977, 0.47041722184589074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0024000044546977, 0.47041722184589074, 0.46964621504378173] ***
*** finished computation of 3 references, err: [Inf, 1.0024000044546977, 0.47041722184589074, 0.46964621504378173] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 32]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.376600002504925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.376600002504925, 0.6570479629095959] ***
*** starting iteration: 2; err: [Inf, 1.376600002504925, 0.6570479629095959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297] ***
*** starting iteration: 3; err: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297, 0.5307186645999632] ***
*** starting iteration: 4; err: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297, 0.5307186645999632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297, 0.5307186645999632, 0.5281101210198496] ***
*** starting iteration: 5; err: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297, 0.5307186645999632, 0.5281101210198496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297, 0.5307186645999632, 0.5281101210198496, 0.5281101210198496] ***
*** finished computation of 3 references, err: [Inf, 1.376600002504925, 0.6570479629095959, 0.5869156476411297, 0.5307186645999632, 0.5281101210198496, 0.5281101210198496] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7220095654531393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7220095654531393, 0.383974113462496] ***
*** finished computation of 3 references, err: [Inf, 0.7220095654531393, 0.383974113462496] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 15]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 30), (3, 15)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8563774270596825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8563774270596825, 0.4290158235617411] ***
*** finished computation of 3 references, err: [Inf, 0.8563774270596825, 0.4290158235617411] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 22]]
** centroid: 1, normalized-entropy: 0.9863676072907089, [(2, 29), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7562883825392178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7562883825392178, 0.42055310045066485] ***
*** finished computation of 3 references, err: [Inf, 0.7562883825392178, 0.42055310045066485] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 9]]
** centroid: 1, normalized-entropy: 0.6880476235340797, [(2, 40), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7793345127701744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7793345127701744, 0.40963044522533226] ***
*** finished computation of 3 references, err: [Inf, 0.7793345127701744, 0.40963044522533226] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 20]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 30), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9611388281044263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9611388281044263, 0.3713573136655697] ***
*** finished computation of 3 references, err: [Inf, 0.9611388281044263, 0.3713573136655697] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 14]]
** centroid: 1, normalized-entropy: 0.9103480624345157, [(2, 29), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2290248155362602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2290248155362602, 0.3922417180054444] ***
*** finished computation of 3 references, err: [Inf, 1.2290248155362602, 0.3922417180054444] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 40, 5]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 40), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7449489628369109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7449489628369109, 0.379571332205868] ***
*** starting iteration: 2; err: [Inf, 0.7449489628369109, 0.379571332205868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7449489628369109, 0.379571332205868, 0.3720853238993817] ***
*** starting iteration: 3; err: [Inf, 0.7449489628369109, 0.379571332205868, 0.3720853238993817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7449489628369109, 0.379571332205868, 0.3720853238993817, 0.3681978970506056] ***
*** finished computation of 3 references, err: [Inf, 0.7449489628369109, 0.379571332205868, 0.3720853238993817, 0.3681978970506056] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8047457524663085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8047457524663085, 0.33530623356435335] ***
*** starting iteration: 2; err: [Inf, 0.8047457524663085, 0.33530623356435335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8047457524663085, 0.33530623356435335, 0.3301708609828552] ***
*** starting iteration: 3; err: [Inf, 0.8047457524663085, 0.33530623356435335, 0.3301708609828552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8047457524663085, 0.33530623356435335, 0.3301708609828552, 0.3261383297341102] ***
*** finished computation of 3 references, err: [Inf, 0.8047457524663085, 0.33530623356435335, 0.3301708609828552, 0.3261383297341102] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 31]]
** centroid: 1, normalized-entropy: 0.6892019851173655, [(2, 7), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 2]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 22), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1621667328153673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1621667328153673, 0.39604342833943407] ***
*** starting iteration: 2; err: [Inf, 1.1621667328153673, 0.39604342833943407] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1621667328153673, 0.39604342833943407, 0.37446600368573996] ***
*** starting iteration: 3; err: [Inf, 1.1621667328153673, 0.39604342833943407, 0.37446600368573996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1621667328153673, 0.39604342833943407, 0.37446600368573996, 0.37327450598636125] ***
*** finished computation of 3 references, err: [Inf, 1.1621667328153673, 0.39604342833943407, 0.37446600368573996, 0.37327450598636125] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38413980372495304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38413980372495304, 0.2007888933911564] ***
*** starting iteration: 2; err: [Inf, 0.38413980372495304, 0.2007888933911564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38413980372495304, 0.2007888933911564, 0.1956724963327893] ***
*** starting iteration: 3; err: [Inf, 0.38413980372495304, 0.2007888933911564, 0.1956724963327893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38413980372495304, 0.2007888933911564, 0.1956724963327893, 0.19504775108879946] ***
*** finished computation of 7 references, err: [Inf, 0.38413980372495304, 0.2007888933911564, 0.1956724963327893, 0.19504775108879946] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 17]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 9), (3, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 2]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34361839878421413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34361839878421413, 0.16935388691122605] ***
*** starting iteration: 2; err: [Inf, 0.34361839878421413, 0.16935388691122605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194] ***
*** starting iteration: 3; err: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194, 0.15419126351856258] ***
*** starting iteration: 4; err: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194, 0.15419126351856258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194, 0.15419126351856258, 0.1531305615530048] ***
*** starting iteration: 5; err: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194, 0.15419126351856258, 0.1531305615530048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194, 0.15419126351856258, 0.1531305615530048, 0.15291188207874595] ***
*** finished computation of 7 references, err: [Inf, 0.34361839878421413, 0.16935388691122605, 0.15725456385782194, 0.15419126351856258, 0.1531305615530048, 0.15291188207874595] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 11]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38751354369302604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745] ***
*** starting iteration: 2; err: [Inf, 0.38751354369302604, 0.21312929307357745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537] ***
*** starting iteration: 3; err: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925] ***
*** starting iteration: 4; err: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248] ***
*** starting iteration: 5; err: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248, 0.16289774953882005] ***
*** starting iteration: 6; err: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248, 0.16289774953882005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248, 0.16289774953882005, 0.1606664341081394] ***
*** starting iteration: 7; err: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248, 0.16289774953882005, 0.1606664341081394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248, 0.16289774953882005, 0.1606664341081394, 0.16036430882886235] ***
*** finished computation of 7 references, err: [Inf, 0.38751354369302604, 0.21312929307357745, 0.19262148778324537, 0.18005963908648925, 0.16742424293873248, 0.16289774953882005, 0.1606664341081394, 0.16036430882886235] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 3]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 23), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5314000032000756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5314000032000756, 0.2620321190188908] ***
*** finished computation of 7 references, err: [Inf, 0.5314000032000756, 0.2620321190188908] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5944000041702502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5944000041702502, 0.24926052246193453] ***
*** finished computation of 7 references, err: [Inf, 0.5944000041702502, 0.24926052246193453] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 13]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 9), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6536000041007306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6536000041007306, 0.32602252640044477] ***
*** finished computation of 7 references, err: [Inf, 0.6536000041007306, 0.32602252640044477] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 17]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 16), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.96
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.7714706431952613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7714706431952613, 0.3850857042061591] ***
*** starting iteration: 2; err: [Inf, 0.7714706431952613, 0.3850857042061591] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196] ***
*** starting iteration: 3; err: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196, 0.3717639751220666] ***
*** starting iteration: 4; err: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196, 0.3717639751220666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196, 0.3717639751220666, 0.36514089353083906] ***
*** starting iteration: 5; err: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196, 0.3717639751220666, 0.36514089353083906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196, 0.3717639751220666, 0.36514089353083906, 0.36471402215484355] ***
*** finished computation of 3 references, err: [Inf, 0.7714706431952613, 0.3850857042061591, 0.38130513585606196, 0.3717639751220666, 0.36514089353083906, 0.36471402215484355] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7568642144068418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568642144068418, 0.44013690749893014] ***
*** starting iteration: 2; err: [Inf, 0.7568642144068418, 0.44013690749893014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015] ***
*** starting iteration: 3; err: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834] ***
*** starting iteration: 4; err: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834, 0.3370151617674806] ***
*** starting iteration: 5; err: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834, 0.3370151617674806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834, 0.3370151617674806, 0.3316766208381776] ***
*** starting iteration: 6; err: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834, 0.3370151617674806, 0.3316766208381776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834, 0.3370151617674806, 0.3316766208381776, 0.3312097744068055] ***
*** finished computation of 3 references, err: [Inf, 0.7568642144068418, 0.44013690749893014, 0.3801891537580015, 0.3491832263789834, 0.3370151617674806, 0.3316766208381776, 0.3312097744068055] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 9]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(2, 25), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 24]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1881492539318586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1881492539318586, 0.3805817890849563] ***
*** starting iteration: 2; err: [Inf, 1.1881492539318586, 0.3805817890849563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1881492539318586, 0.3805817890849563, 0.37327450598636125] ***
*** starting iteration: 3; err: [Inf, 1.1881492539318586, 0.3805817890849563, 0.37327450598636125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1881492539318586, 0.3805817890849563, 0.37327450598636125, 0.37281839412193263] ***
*** finished computation of 3 references, err: [Inf, 1.1881492539318586, 0.3805817890849563, 0.37327450598636125, 0.37281839412193263] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 1, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 39, 4]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.94, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.96
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.6177737551291992] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6177737551291992, 0.394740760010734] ***
*** starting iteration: 2; err: [Inf, 0.6177737551291992, 0.394740760010734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6177737551291992, 0.394740760010734, 0.374232501475951] ***
*** starting iteration: 3; err: [Inf, 0.6177737551291992, 0.394740760010734, 0.374232501475951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6177737551291992, 0.394740760010734, 0.374232501475951, 0.3720853238993817] ***
*** finished computation of 3 references, err: [Inf, 0.6177737551291992, 0.394740760010734, 0.374232501475951, 0.3720853238993817] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 13]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(2, 30), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8563774270596825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8563774270596825, 0.4290158235617411] ***
*** starting iteration: 2; err: [Inf, 0.8563774270596825, 0.4290158235617411] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8563774270596825, 0.4290158235617411, 0.3713573136655697] ***
*** starting iteration: 3; err: [Inf, 0.8563774270596825, 0.4290158235617411, 0.3713573136655697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8563774270596825, 0.4290158235617411, 0.3713573136655697, 0.34420289865760045] ***
*** finished computation of 3 references, err: [Inf, 0.8563774270596825, 0.4290158235617411, 0.3713573136655697, 0.34420289865760045] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 12]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(2, 26), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7273234875115934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273234875115934, 0.4593824418699372] ***
*** starting iteration: 2; err: [Inf, 0.7273234875115934, 0.4593824418699372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273234875115934, 0.4593824418699372, 0.42429352918336527] ***
*** starting iteration: 3; err: [Inf, 0.7273234875115934, 0.4593824418699372, 0.42429352918336527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273234875115934, 0.4593824418699372, 0.42429352918336527, 0.384311889147156] ***
*** finished computation of 3 references, err: [Inf, 0.7273234875115934, 0.4593824418699372, 0.42429352918336527, 0.384311889147156] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 5]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 40), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0776000052235988] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0776000052235988, 0.5511436872911135] ***
*** starting iteration: 2; err: [Inf, 1.0776000052235988, 0.5511436872911135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0776000052235988, 0.5511436872911135, 0.5320607789745937] ***
*** starting iteration: 3; err: [Inf, 1.0776000052235988, 0.5511436872911135, 0.5320607789745937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0776000052235988, 0.5511436872911135, 0.5320607789745937, 0.5279904996925141] ***
*** finished computation of 3 references, err: [Inf, 1.0776000052235988, 0.5511436872911135, 0.5320607789745937, 0.5279904996925141] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0497999996006184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0497999996006184, 0.4727934877032513] ***
*** starting iteration: 2; err: [Inf, 1.0497999996006184, 0.4727934877032513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0497999996006184, 0.4727934877032513, 0.4720140353320994] ***
*** finished computation of 3 references, err: [Inf, 1.0497999996006184, 0.4727934877032513, 0.4720140353320994] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 30]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 3]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 24), (3, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0915999965065084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0915999965065084, 0.5428191200372673] ***
*** starting iteration: 2; err: [Inf, 1.0915999965065084, 0.5428191200372673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0915999965065084, 0.5428191200372673, 0.5309838079689275] ***
*** starting iteration: 3; err: [Inf, 1.0915999965065084, 0.5428191200372673, 0.5309838079689275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0915999965065084, 0.5428191200372673, 0.5309838079689275, 0.5281101210198496] ***
*** finished computation of 3 references, err: [Inf, 1.0915999965065084, 0.5428191200372673, 0.5309838079689275, 0.5281101210198496] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 4]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.96
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5597000060029386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5597000060029386, 0.27040822607863413] ***
*** starting iteration: 2; err: [Inf, 0.5597000060029386, 0.27040822607863413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154] ***
*** starting iteration: 3; err: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154, 0.2382899128944816] ***
*** starting iteration: 4; err: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154, 0.2382899128944816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154, 0.2382899128944816, 0.2371534734988889] ***
*** starting iteration: 5; err: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154, 0.2382899128944816, 0.2371534734988889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154, 0.2382899128944816, 0.2371534734988889, 0.2367083683099121] ***
*** finished computation of 7 references, err: [Inf, 0.5597000060029386, 0.27040822607863413, 0.24609475215608154, 0.2382899128944816, 0.2371534734988889, 0.2367083683099121] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5497000051874786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000051874786, 0.27531533562512284] ***
*** starting iteration: 2; err: [Inf, 0.5497000051874786, 0.27531533562512284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000051874786, 0.27531533562512284, 0.2637061753128274] ***
*** starting iteration: 3; err: [Inf, 0.5497000051874786, 0.27531533562512284, 0.2637061753128274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000051874786, 0.27531533562512284, 0.2637061753128274, 0.26153003335254765] ***
*** starting iteration: 4; err: [Inf, 0.5497000051874786, 0.27531533562512284, 0.2637061753128274, 0.26153003335254765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000051874786, 0.27531533562512284, 0.2637061753128274, 0.26153003335254765, 0.26153003335254765] ***
*** finished computation of 7 references, err: [Inf, 0.5497000051874786, 0.27531533562512284, 0.2637061753128274, 0.26153003335254765, 0.26153003335254765] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 2]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 1), (3, 2)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.469299999167078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.469299999167078, 0.22280517872403013] ***
*** starting iteration: 2; err: [Inf, 0.469299999167078, 0.22280517872403013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.469299999167078, 0.22280517872403013, 0.2112117105830637] ***
*** starting iteration: 3; err: [Inf, 0.469299999167078, 0.22280517872403013, 0.2112117105830637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.469299999167078, 0.22280517872403013, 0.2112117105830637, 0.21048348866243416] ***
*** finished computation of 7 references, err: [Inf, 0.469299999167078, 0.22280517872403013, 0.2112117105830637, 0.21048348866243416] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 2]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 2]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 20), (3, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9266666666666667, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 22
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5330000056638258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330000056638258, 0.3234840206298186] ***
*** starting iteration: 2; err: [Inf, 0.5330000056638258, 0.3234840206298186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899] ***
*** starting iteration: 3; err: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935] ***
*** starting iteration: 4; err: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935, 0.2771595617169892] ***
*** starting iteration: 5; err: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935, 0.2771595617169892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935, 0.2771595617169892, 0.27549233621825836] ***
*** starting iteration: 6; err: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935, 0.2771595617169892, 0.27549233621825836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935, 0.2771595617169892, 0.27549233621825836, 0.27527844042042743] ***
*** finished computation of 7 references, err: [Inf, 0.5330000056638258, 0.3234840206298186, 0.2968073816186899, 0.2834627608989935, 0.2771595617169892, 0.27549233621825836, 0.27527844042042743] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 24]]
** centroid: 4, normalized-entropy: 0.7706290693639406, [(2, 7), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38950000450886335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006] ***
*** starting iteration: 2; err: [Inf, 0.38950000450886335, 0.27121403017084006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501] ***
*** starting iteration: 3; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666] ***
*** starting iteration: 4; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435] ***
*** starting iteration: 5; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616] ***
*** starting iteration: 6; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672] ***
*** starting iteration: 7; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672, 0.23890337466908385] ***
*** starting iteration: 8; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672, 0.23890337466908385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672, 0.23890337466908385, 0.2370491574896268] ***
*** starting iteration: 9; err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672, 0.23890337466908385, 0.2370491574896268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672, 0.23890337466908385, 0.2370491574896268, 0.23648885653651608] ***
*** finished computation of 7 references, err: [Inf, 0.38950000450886335, 0.27121403017084006, 0.2668267462872501, 0.2561990786347666, 0.2508483412184435, 0.24892468357622616, 0.24350406563651672, 0.23890337466908385, 0.2370491574896268, 0.23648885653651608] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.401999994333672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922] ***
*** starting iteration: 2; err: [Inf, 1.401999994333672, 0.5542521618766922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744] ***
*** starting iteration: 3; err: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806] ***
*** starting iteration: 4; err: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064] ***
*** starting iteration: 5; err: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064, 0.3289194316245444] ***
*** starting iteration: 6; err: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064, 0.3289194316245444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064, 0.3289194316245444, 0.32766841408506914] ***
*** starting iteration: 7; err: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064, 0.3289194316245444, 0.32766841408506914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064, 0.3289194316245444, 0.32766841408506914, 0.32766841408506914] ***
*** finished computation of 7 references, err: [Inf, 1.401999994333672, 0.5542521618766922, 0.445160121067744, 0.35731862872218806, 0.33856185691929064, 0.3289194316245444, 0.32766841408506914, 0.32766841408506914] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 4]]
** centroid: 1, normalized-entropy: 0.6051865766334207, [(2, 23), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3573336326975061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286] ***
*** starting iteration: 2; err: [Inf, 0.3573336326975061, 0.1969068413671286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674] ***
*** starting iteration: 3; err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746] ***
*** starting iteration: 4; err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706] ***
*** starting iteration: 5; err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063] ***
*** starting iteration: 6; err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063, 0.1712882705173254] ***
*** starting iteration: 7; err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063, 0.1712882705173254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063, 0.1712882705173254, 0.17019433989261562] ***
*** starting iteration: 8; err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063, 0.1712882705173254, 0.17019433989261562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063, 0.1712882705173254, 0.17019433989261562, 0.16945128831397535] ***
*** finished computation of 7 references, err: [Inf, 0.3573336326975061, 0.1969068413671286, 0.18411714950350674, 0.1778329909421746, 0.17396132877711706, 0.17242254920615063, 0.1712882705173254, 0.17019433989261562, 0.16945128831397535] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23896157792783235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23896157792783235, 0.18748282607926775] ***
*** starting iteration: 2; err: [Inf, 0.23896157792783235, 0.18748282607926775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23896157792783235, 0.18748282607926775, 0.16454792442293764] ***
*** starting iteration: 3; err: [Inf, 0.23896157792783235, 0.18748282607926775, 0.16454792442293764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23896157792783235, 0.18748282607926775, 0.16454792442293764, 0.16244887856841556] ***
*** starting iteration: 4; err: [Inf, 0.23896157792783235, 0.18748282607926775, 0.16454792442293764, 0.16244887856841556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23896157792783235, 0.18748282607926775, 0.16454792442293764, 0.16244887856841556, 0.16179412879593286] ***
*** finished computation of 7 references, err: [Inf, 0.23896157792783235, 0.18748282607926775, 0.16454792442293764, 0.16244887856841556, 0.16179412879593286] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.278707399812149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716] ***
*** starting iteration: 2; err: [Inf, 2.278707399812149, 0.5217721749798716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153] ***
*** starting iteration: 3; err: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976] ***
*** starting iteration: 4; err: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532] ***
*** starting iteration: 5; err: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532, 0.18430405193266877] ***
*** starting iteration: 6; err: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532, 0.18430405193266877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532, 0.18430405193266877, 0.1829977639616481] ***
*** starting iteration: 7; err: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532, 0.18430405193266877, 0.1829977639616481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532, 0.18430405193266877, 0.1829977639616481, 0.18270119636786533] ***
*** finished computation of 7 references, err: [Inf, 2.278707399812149, 0.5217721749798716, 0.20530617503307153, 0.18922088426394976, 0.18685365546965532, 0.18430405193266877, 0.1829977639616481, 0.18270119636786533] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 2]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 22
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 23
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.043000004590297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.043000004590297, 0.5511436872911135] ***
*** finished computation of 3 references, err: [Inf, 1.043000004590297, 0.5511436872911135] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 15]]
** centroid: 3, normalized-entropy: 0.9108783787500366, [(2, 31), (3, 15)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.531799994596085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.531799994596085, 0.5118722412916579] ***
*** finished computation of 3 references, err: [Inf, 1.531799994596085, 0.5118722412916579] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 14]]
** centroid: 3, normalized-entropy: 0.9103480624345157, [(2, 29), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3587999949239618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3587999949239618, 0.531386169856328] ***
*** finished computation of 3 references, err: [Inf, 2.3587999949239618, 0.531386169856328] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 39, 4]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 39), (3, 4)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 23)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9, 0.9, 0.9, 0.8866666666666667, 0.8866666666666667, 0.8866666666666667, 0.8799999999999999, 0.8799999999999999, 0.8799999999999999, 0.8733333333333334, 0.8666666666666667, 0.86]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1) => 0.9666666666666667
finished with 23
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.9, 3.1, 4.9, 1.5], [6.68125, 3.075, 5.581250000000001, 2.0812500000000007], [5.104166666666667, 3.462500000000001, 1.4874999999999998, 0.2583333333333334], [5.5249999999999995, 2.525, 3.775, 1.125], [7.522222222222222, 3.2111111111111112, 6.333333333333333, 2.0666666666666664], [6.126666666666668, 2.9066666666666667, 4.480000000000001, 1.4066666666666665], [4.5, 2.9285714285714284, 1.3285714285714287, 0.19999999999999998], [6.066666666666666, 2.8000000000000003, 4.933333333333333, 1.6333333333333335], [6.03076923076923, 2.707692307692308, 5.053846153846154, 1.8384615384615386]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.034210526315791, 3.444736842105263, 1.489473684210526, 0.2473684210526316], [7.375, 2.8999999999999995, 6.199999999999999, 1.9], [5.4, 3.0, 4.5, 1.5], [5.25, 2.65, 4.7, 1.85], [6.545454545454547, 3.027272727272727, 4.627272727272727, 1.4545454545454546], [6.542857142857143, 3.042857142857143, 5.542857142857143, 2.1642857142857146], [5.5875, 2.6312499999999996, 3.9562500000000007, 1.2125], [6.3, 2.5, 4.9, 1.5], [6.053846153846154, 2.692307692307693, 5.076923076923077, 1.8153846153846156]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.810526315789473, 3.2263157894736842, 1.3894736842105266, 0.22631578947368425], [7.6000000000000005, 3.1875, 6.4750000000000005, 2.15], [5.633333333333334, 2.7249999999999996, 4.15, 1.2833333333333334], [5.25, 2.65, 4.7, 1.85], [6.582352941176472, 3.1176470588235294, 5.547058823529412, 2.1999999999999997], [5.325, 3.8333333333333335, 1.5333333333333332, 0.25833333333333336], [6.33, 2.92, 4.605, 1.4600000000000002], [6.15, 2.9, 4.949999999999999, 1.65], [5.375000000000001, 2.45, 3.5375, 1.075]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 1, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[40, 4, 2, 1, 1, 44, 30, 1, 28, 4, 1, 42, 2, 1, 31, 1, 34, 29, 50, 19, 9, 2, 7, 44, 32, 27, 25, 28, 15, 30, 13, 30, 41, 5, 22, 30, 15, 15, 20, 35, 33, 32, 50, 1, 39, 25, 8, 20, 22, 19, 31, 34, 30, 34, 16, 46, 49, 20, 2, 27, 46, 51, 19, 58, 28, 33, 34, 5, 14, 29, 34, 42, 9, 30, 43, 32, 18, 43, 36, 29, 34, 75, 8, 25, 45, 28, 28, 39, 28, 60, 31, 36, 34, 35, 27, 42, 22, 21, 39, 40, 35, 32, 15, 32, 27, 25, 43, 32, 43, 36, 27, 49, 28, 36, 22, 53, 33, 25, 42, 32, 3, 44, 61, 35, 17, 43, 33, 27, 23, 26, 52, 38, 30, 43, 15, 56, 51, 24, 38, 36, 56, 37, 11, 23, 39, 55, 36, 45, 39, 53, 35, 22, 36, 44, 41, 33, 41, 33, 41, 30, 36, 40, 34, 31, 32, 45, 35, 51, 70, 28, 21, 41, 41, 39, 20, 36, 34, 17, 68, 27, 41, 39, 39, 55, 34, 38, 39, 36, 23, 40, 2, 79, 31, 35, 42, 21, 49, 47, 47, 23, 17, 36, 38, 56, 42, 27, 37, 27, 27, 27, 71, 34, 47, 40, 50, 35, 43, 40, 41, 36, 41, 42, 49, 20, 41, 47, 49, 17, 30, 23, 32, 26, 28, 38, 46, 20, 64, 24, 27, 40, 23, 24, 39, 33, 38, 46, 48, 32, 46, 25, 38, 58, 77, 53, 52, 26, 34, 59, 49, 15, 41, 26, 30, 16, 49, 60, 35, 27, 22, 48, 40, 54, 51, 64, 36, 37, 39, 17, 10, 29, 40, 43, 47, 31, 29, 31, 40, 50, 20, 43, 39, 18, 40, 29, 39, 38, 23, 4, 40, 39]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6249999999999997, speedup = 0.3602949002002767, eval_ratio = 0.04158)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37326388888888895,"recall":0.37326388888888895,"f1":null,"seconds":6.745383143424988e-5,"exhaustive_search_seconds":0.0004402417689561844,"evaluations":341.765625,"distances_sum":1722.8693037243127}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5295138888888891,"recall":0.5295138888888891,"f1":null,"seconds":0.00010046176612377167,"exhaustive_search_seconds":0.0004402417689561844,"evaluations":380.59375,"distances_sum":1604.7955297915191}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6501736111111107,"recall":0.6501736111111107,"f1":null,"seconds":0.00013012811541557312,"exhaustive_search_seconds":0.0004402417689561844,"evaluations":421.515625,"distances_sum":1556.611179740766}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7213541666666657,"recall":0.7213541666666657,"f1":null,"seconds":0.00016362592577934265,"exhaustive_search_seconds":0.0004402417689561844,"evaluations":460.84375,"distances_sum":1532.4700293207966}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7690972222222213,"recall":0.7690972222222213,"f1":0.7690972222222213,"seconds":0.00019451789557933807,"exhaustive_search_seconds":0.0004402417689561844,"evaluations":502.390625,"distances_sum":1520.668999879242}
KCenters.DeloneInvIndex> reached performance {"precision":0.8064236111111103,"recall":0.8064236111111103,"f1":0.8064236111111103,"seconds":0.0002532992511987686,"exhaustive_search_seconds":0.0004402417689561844,"evaluations":541.828125,"distances_sum":1510.8563839862943}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.807, speedup = 1.4752500742794887, eval_ratio = 0.053623000000000004)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
