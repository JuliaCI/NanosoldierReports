Julia Version 1.4.0-DEV.596
Commit 1c87f695be (2019-12-12 22:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Rotations â”€â”€â”€â”€ v0.12.1
 Installed StaticArrays â”€ v0.10.3
  Updating `~/.julia/environments/v1.4/Project.toml`
  [6038ab10] + Rotations v0.12.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6038ab10] + Rotations v0.12.1
  [90137ffa] + StaticArrays v0.10.3
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
   Testing Rotations
 Resolving package versions...

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/DiffRules.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaCI/BenchmarkTools.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/ForwardDiff.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/DiffResults.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaLang/Compat.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/mlubin/NaNMath.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaIO/JSON.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/rdeits/CommonSubexpressions.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaData/Parsers.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaMath/SpecialFunctions.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
   Cloning [b552c78f-8df3-52c6-915a-8e097449b14b] DiffRules from https://github.com/JuliaDiff/DiffRules.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Cloning [6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf] BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Cloning [f6369f11-7733-5829-9624-2563aa707210] ForwardDiff from https://github.com/JuliaDiff/ForwardDiff.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
[?25l   Cloning [163ba53b-c6d8-5494-b064-1a9d43ac40c5] DiffResults from https://github.com/JuliaDiff/DiffResults.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
   Cloning [efe28fd5-8261-553b-a9e1-b2916fc3738e] OpenSpecFun_jll from https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€ v0.5.3+1
   Cloning [34da2185-b29b-5c13-b0c7-acf172513d20] Compat from https://github.com/JuliaLang/Compat.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
   Cloning [77ba4419-2d1f-58cd-9bb1-8ffee604a2e3] NaNMath from https://github.com/mlubin/NaNMath.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Cloning [682c06a0-de6a-54ab-a142-c8b1cf79cde6] JSON from https://github.com/JuliaIO/JSON.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
   Cloning [bbf7d656-a473-5ed7-a52c-81e309532950] CommonSubexpressions from https://github.com/rdeits/CommonSubexpressions.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed CommonSubexpressions â”€ v0.2.0
   Cloning [69de0a69-1ddd-5017-9359-2bf0b02dc9f0] Parsers from https://github.com/JuliaData/Parsers.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
   Cloning [276daf66-3868-5448-9aa4-cd146d93841b] SpecialFunctions from https://github.com/JuliaMath/SpecialFunctions.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed SpecialFunctions â”€â”€â”€â”€â”€ v0.9.0
Status `/tmp/jl_R56zo6/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [f6369f11] ForwardDiff v0.10.7
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [69de0a69] Parsers v0.3.10
  [6038ab10] Rotations v0.12.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.10.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 190108  190108
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:            | Pass  Total
Principal Value (SPQuat) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (Quat) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                      | Pass  Total
Principal Value (Rodrigues Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.944545733 seconds)
done (took 3.207035534 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.094096365 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.08924851 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.936656944 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.024753336 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.996453497 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.983053827 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.381312182 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.898225304 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.17139346 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.101000517 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.973449617 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.09212389 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.998320826 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.162316397 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.12526883 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.002427796 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.068716322 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.031374806 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.036077859 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.063591815 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.982139385 seconds)
done (took 22.853412875 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 0.912094896 seconds)
  (2/20) tuning "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.013261921 seconds)
  (3/20) tuning "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 0.959210452 seconds)
  (4/20) tuning "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.939132935 seconds)
  (5/20) tuning "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.18010109 seconds)
  (6/20) tuning "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 0.944691155 seconds)
  (7/20) tuning "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.914802347 seconds)
  (8/20) tuning "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 0.945403284 seconds)
  (9/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.935005187 seconds)
  (10/20) tuning "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.90417364 seconds)
  (11/20) tuning "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.948580924 seconds)
  (12/20) tuning "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 1.096366582 seconds)
  (13/20) tuning "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.86421523 seconds)
  (14/20) tuning "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 1.137280812 seconds)
  (15/20) tuning "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.231166051 seconds)
  (16/20) tuning "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 0.895377976 seconds)
  (17/20) tuning "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.840614584 seconds)
  (18/20) tuning "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 0.872435822 seconds)
  (19/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 0.934064821 seconds)
  (20/20) tuning "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.853612751 seconds)
done (took 19.930703907 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 0.936039703 seconds)
done (took 1.531854126 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.75783609 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.979817921 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.491496376 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.706578991 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.489716103 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.922698712 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.822292399 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.260013619 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.125233963 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.695765998 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.63317851 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.830229835 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.40173201 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.573141867 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.948018471 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.166584203 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.576415495 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.763868401 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.932288542 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.411292135 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.906730133 seconds)
done (took 36.042977795 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 1.229804597 seconds)
  (2/20) benchmarking "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.084709828 seconds)
  (3/20) benchmarking "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.629290736 seconds)
  (4/20) benchmarking "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.049042776 seconds)
  (5/20) benchmarking "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.953043828 seconds)
  (6/20) benchmarking "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 1.577918169 seconds)
  (7/20) benchmarking "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.773763368 seconds)
  (8/20) benchmarking "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 1.611740997 seconds)
  (9/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.193944826 seconds)
  (10/20) benchmarking "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.906034649 seconds)
  (11/20) benchmarking "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.741912806 seconds)
  (12/20) benchmarking "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 2.515650271 seconds)
  (13/20) benchmarking "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.80900215 seconds)
  (14/20) benchmarking "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 1.953881673 seconds)
  (15/20) benchmarking "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.214289253 seconds)
  (16/20) benchmarking "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.89932865 seconds)
  (17/20) benchmarking "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.14826612 seconds)
  (18/20) benchmarking "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.504460982 seconds)
  (19/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.989962132 seconds)
  (20/20) benchmarking "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.9143378 seconds)
done (took 29.426384716 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 10.367 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 49.309 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 48.322 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  38.346 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 49.935 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  26.084 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 50.069 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 48.442 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   20.528 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 52.067 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 58.083 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  30.200 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 52.965 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  25.620 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  25.165 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 66.358 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   14.187 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  47.435 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 48.362 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 48.724 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   14.325 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 50.191 ns

Group: Non-Euler conversions
RotMatrix{3,Float64,9} -> SPQuat{Float64}       42.539 ns
AngleAxis{Float64} -> Quat{Float64}             13.317 ns
Quat{Float64} -> RodriguesVec{Float64}          30.914 ns
RodriguesVec{Float64} -> AngleAxis{Float64}     14.710 ns
SPQuat{Float64} -> RodriguesVec{Float64}        103.265 ns
AngleAxis{Float64} -> SPQuat{Float64}           56.867 ns
AngleAxis{Float64} -> RodriguesVec{Float64}     2.464 ns
RodriguesVec{Float64} -> Quat{Float64}          43.601 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}    20.645 ns
Quat{Float64} -> RotMatrix{3,Float64,9}         8.029 ns
RodriguesVec{Float64} -> RotMatrix{3,Float64,9} 70.223 ns
SPQuat{Float64} -> AngleAxis{Float64}           102.151 ns
Quat{Float64} -> SPQuat{Float64}                2.924 ns
RodriguesVec{Float64} -> SPQuat{Float64}        90.011 ns
RotMatrix{3,Float64,9} -> Quat{Float64}         39.410 ns
RotMatrix{3,Float64,9} -> RodriguesVec{Float64} 71.792 ns
SPQuat{Float64} -> RotMatrix{3,Float64,9}       27.163 ns
Quat{Float64} -> AngleAxis{Float64}             43.588 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}    78.357 ns
SPQuat{Float64} -> Quat{Float64}                6.619 ns

   Testing Rotations tests passed 
