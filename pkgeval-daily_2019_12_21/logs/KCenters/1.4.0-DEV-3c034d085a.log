Julia Version 1.4.0-DEV.649
Commit 3c034d085a (2019-12-20 23:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed Tables ────────────────────── v0.2.11
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Compat ────────────────────── v3.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed InvertedIndices ───────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Parsers ───────────────────── v0.3.10
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_T3Ukl6/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_T3Ukl6/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_T3Ukl6/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 175.0
[ Info: 84.53000000000003
[ Info: 44.44999999999999
[ Info: 28.069999999999997
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.19999834944844
Test Summary:        |
Clustering with dnet | No tests
[ Info: 75.72000115944812
inertia(cfft.distances) = 18.191406918848557
inertia(cdnet.distances) = 27.37466474791845
inertia(crand.distances) = 29.463372156079533
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.078125,"distances_sum":575.9531222257292}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8575008325008334,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.2734375,"distances_sum":2244.6943169206065}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.796875,"distances_sum":1178.0161665392432}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8575008325008334,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.2734375,"distances_sum":2244.6943169206065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9019490925740935,"seconds":7.0035457611083984e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.59375,"distances_sum":2521.063115389175}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967376373626374,"seconds":6.904825568199158e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9296875,"distances_sum":3010.9320905784652}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8906078296703305,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.546875,"distances_sum":2458.7674773919716}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8660402097902105,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.296875,"distances_sum":2314.374373531444}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.967376373626374,"seconds":6.904825568199158e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9296875,"distances_sum":3010.9320905784652}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9801167582417586,"seconds":8.342787623405457e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.96875,"distances_sum":3123.498665719503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9763793498168502,"seconds":7.810071110725403e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9609375,"distances_sum":3087.6680107785946}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975486492673993,"seconds":7.633119821548462e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9453125,"distances_sum":3071.593535038885}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9801167582417586,"seconds":8.342787623405457e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.96875,"distances_sum":3123.498665719503}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9801167582417586,"seconds":8.342787623405457e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.96875,"distances_sum":3123.498665719503}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.90625,"distances_sum":455.8498243380629}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.2265625,"distances_sum":1336.3312979084715}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.560546875,"f1":null,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.2265625,"distances_sum":1336.3312979084715}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8872741841491849,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.65625,"distances_sum":2096.5359404814967}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.844411838161839,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.09375,"distances_sum":1857.5820402291715}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8097161519036528,"seconds":4.714354872703552e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.875,"distances_sum":1753.9970130614086}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8872741841491849,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.65625,"distances_sum":2096.5359404814967}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9512305402930409,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.84375,"distances_sum":2468.1093959886507}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9623740842490844,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.921875,"distances_sum":2559.9774711756263}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535256410256412,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8671875,"distances_sum":2492.7517320470542}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590086996337,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8984375,"distances_sum":2533.7817485884634}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9623740842490844,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.921875,"distances_sum":2559.9774711756263}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9623740842490844,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.921875,"distances_sum":2559.9774711756263}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.30859375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.30859375,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.9453125,"distances_sum":836.5568236997684}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8454711954711964,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4140625,"distances_sum":1921.4414675931607}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7673798423798432,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.46875,"distances_sum":1698.7448485127509}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8454711954711964,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4140625,"distances_sum":1921.4414675931607}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9157597610722616,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7109375,"distances_sum":2387.3972492926537}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9397982226107228,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.765625,"distances_sum":2532.0554866056336}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9405219780219787,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2544.0117806257654}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8928233225108233,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.578125,"distances_sum":2226.5305068956136}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8719676157176164,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5703125,"distances_sum":2092.40611331112}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9405219780219787,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2544.0117806257654}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465207,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2758.176925055062}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631353021978029,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8359375,"distances_sum":2676.0237936116764}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9701865842490845,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.890625,"distances_sum":2745.437508254442}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565190018315022,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":2675.6491528888423}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465207,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2758.176925055062}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465207,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2758.176925055062}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.871113782051283,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.6328125,"distances_sum":1966.3053102213944}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8726107226107236,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.6328125,"distances_sum":1993.837325736803}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8726107226107236,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.6328125,"distances_sum":1993.837325736803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9352793040293049,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.953125,"distances_sum":2361.9988440514294}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.9002232142857151,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.859375,"distances_sum":2117.864356709865}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620020604395607,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.96875,"distances_sum":2570.355367679217}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.941042811355312,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9609375,"distances_sum":2422.8024895371454}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9620020604395607,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.96875,"distances_sum":2570.355367679217}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9820684523809526,"seconds":7.553026080131531e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.984375,"distances_sum":2724.397156212573}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9636561355311362,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9375,"distances_sum":2600.0689073237263}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678056318681323,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.96875,"distances_sum":2610.380831415794}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9794921875, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9794921875,"f1":0.9888392857142859,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9921875,"distances_sum":2779.099105394946}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807291666666671,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9765625,"distances_sum":2722.800909064609}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9784626831501835,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9765625,"distances_sum":2709.1312456469327}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.974313186813187,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9921875,"distances_sum":2662.9440193236114}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9453125,"distances_sum":2686.4269737036348}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465204,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.96875,"distances_sum":2634.1097493502853}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9794921875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9794921875,"f1":0.9888392857142859,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9921875,"distances_sum":2779.099105394946}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9794921875,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9794921875,"f1":0.9888392857142859,"seconds":6.4354389905929565e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.9921875,"distances_sum":2779.099105394946}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8049195596070604,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.2734375,"distances_sum":1698.8435734263078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.689900040626526e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":6.25,"distances_sum":530.3895473694586}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":6.2578125,"distances_sum":515.4080470533215}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":4.0531158447265625e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":6.4375,"distances_sum":872.9177247652573}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8049195596070604,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.2734375,"distances_sum":1698.8435734263078}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8111272408147417,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.2109375,"distances_sum":1741.6171145271553}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.871696012321013,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.515625,"distances_sum":2042.1443987050097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8843011155511165,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.546875,"distances_sum":2077.830064851854}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8876722236097244,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.671875,"distances_sum":2098.4801499778578}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8876722236097244,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.671875,"distances_sum":2098.4801499778578}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582303113553118,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.90625,"distances_sum":2601.233419069929}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9231372793872801,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.875,"distances_sum":2333.3522258762027}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9441652097902102,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.828125,"distances_sum":2522.214142759522}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9642513736263741,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8984375,"distances_sum":2644.3292263832927}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9024496336996344,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.796875,"distances_sum":2201.152788627758}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9363787254412258,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.90625,"distances_sum":2444.4977268834305}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9544559607059611,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8828125,"distances_sum":2578.2863083603042}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541552197802203,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9296875,"distances_sum":2544.477769543599}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9278960622710628,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8203125,"distances_sum":2384.286501752896}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9376201923076926,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9140625,"distances_sum":2425.558531323322}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9642513736263741,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8984375,"distances_sum":2644.3292263832927}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9642513736263741,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8984375,"distances_sum":2644.3292263832927}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7833385364635371,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0625,"distances_sum":1728.2585004917103}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4912109375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.4912109375,"f1":null,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.6015625,"distances_sum":1262.5800836168148}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7833385364635371,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0625,"distances_sum":1728.2585004917103}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8793279637029644,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2067.197561163}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9018174533799543,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2282.856610782735}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9018174533799543,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2282.856610782735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689560439560443,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2715.8935022535015}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9409512362637369,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2522.3576305605866}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9678399725274729,"seconds":6.703659892082214e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2688.4079860243282}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689560439560443,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2715.8935022535015}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689560439560443,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2715.8935022535015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8117797133422142,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.84375,"distances_sum":1557.5661749421565}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3427734375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3427734375,"f1":null,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.53125,"distances_sum":756.5130448099926}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8218281718281725,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0,"distances_sum":1589.7936912369166}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7138671875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.7138671875,"f1":0.8218281718281725,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.0,"distances_sum":1589.7936912369166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8618447524697533,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.265625,"distances_sum":1790.5257557742818}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":null,"recall":0.7763671875,"f1":null,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3671875,"distances_sum":1765.717990215598}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519230769230774,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7265625,"distances_sum":2357.4219477701818}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8193580724830731,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.8671875,"distances_sum":1605.2047017747948}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9355998168498172,"seconds":9.045004844665527e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6640625,"distances_sum":2248.5705680972724}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9036687271062277,"seconds":6.876885890960693e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3671875,"distances_sum":2031.8150827657453}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8700127997003003,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.25,"distances_sum":1832.5165627069819}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519230769230774,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7265625,"distances_sum":2357.4219477701818}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688644688644692,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9296875,"distances_sum":2381.542071645716}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9602506868131873,"seconds":6.584450602531433e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2371.142507229962}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562900641025645,"seconds":6.528571248054504e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.765625,"distances_sum":2352.7496862232056}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819196428571431,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9296875,"distances_sum":2511.3938736347322}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765571,"seconds":6.509944796562195e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8671875,"distances_sum":2364.355578638258}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819196428571431,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9296875,"distances_sum":2511.3938736347322}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819196428571431,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.9296875,"distances_sum":2511.3938736347322}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7690002705627712,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.1328125,"distances_sum":1500.997312664865}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6777025058275062,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.5859375,"distances_sum":1189.3825352671654}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.7690002705627712,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.1328125,"distances_sum":1500.997312664865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476076007326011,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.703125,"distances_sum":2400.589607185063}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.769405594405595,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.171875,"distances_sum":1503.2571042380087}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.883038836163837,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.015625,"distances_sum":2045.0468460766733}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9476076007326011,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.703125,"distances_sum":2400.589607185063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672676282051288,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2480.0061425530625}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956461767399268,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.765625,"distances_sum":2428.464147552487}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617616758241765,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":2467.9499119675156}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672676282051288,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2480.0061425530625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672676282051288,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":2480.0061425530625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.326171875,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.859375,"distances_sum":717.5330024782468}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.326171875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.326171875,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.859375,"distances_sum":717.5330024782468}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3291015625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3291015625,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.75,"distances_sum":769.4797209870491}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7883455086580096,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.1875,"distances_sum":1497.1548811292448}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8876212329337339,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1640625,"distances_sum":1959.4961213981917}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3310546875, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.3310546875,"f1":null,"seconds":3.3117830753326416e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":4.7890625,"distances_sum":692.2525405649756}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5009765625,"f1":null,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.2578125,"distances_sum":1054.8830738503036}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.513671875,"f1":null,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.3828125,"distances_sum":1144.5778111087025}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8876212329337339,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1640625,"distances_sum":1959.4961213981917}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547161172161175,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2318.4017990431284}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.897842782217783,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3671875,"distances_sum":1978.8089444496784}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9547161172161175,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2318.4017990431284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9547161172161175,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2318.4017990431284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3505859375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.1484375,"distances_sum":721.6279090519464}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3505859375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.1484375,"distances_sum":721.6279090519464}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3505859375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.1484375,"distances_sum":721.6279090519464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.3505859375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3505859375,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.1484375,"distances_sum":721.6279090519464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.357421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.357421875,"f1":null,"seconds":3.287568688392639e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.5,"distances_sum":730.9920487086036}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.7655858030858039,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.1796875,"distances_sum":1315.866524050301}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.4921875,"distances_sum":693.1130780477623}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6376953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6376953125,"f1":0.7655858030858039,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.1796875,"distances_sum":1315.866524050301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.860397415084916,"seconds":6.321445107460022e-5,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.703125,"distances_sum":1720.2122515874148}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9364755036630041,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.625,"distances_sum":2094.948547067921}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491872710622716,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.703125,"distances_sum":2201.390719479114}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8501181110556117,"seconds":4.677101969718933e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.6875,"distances_sum":1653.7283818596259}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.772286394161395,"seconds":4.377216100692749e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.3359375,"distances_sum":1355.6923077239574}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9491872710622716,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.703125,"distances_sum":2201.390719479114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9491357600732608,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7421875,"distances_sum":2176.572768385465}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667811355311359,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7890625,"distances_sum":2311.026823885845}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9541895604395608,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.765625,"distances_sum":2214.810067230543}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667811355311359,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7890625,"distances_sum":2311.026823885845}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667811355311359,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7890625,"distances_sum":2311.026823885845}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8044833638583645,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.875,"distances_sum":1416.6244496322681}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6830820221445227,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.3828125,"distances_sum":1047.8430393351923}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8044833638583645,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.875,"distances_sum":1416.6244496322681}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.912505723443224,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":1892.65813340679}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.926614010989012,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6015625,"distances_sum":2003.7795046294436}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.926614010989012,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6015625,"distances_sum":2003.7795046294436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9318769771894779,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.59375,"distances_sum":2045.9634249516137}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597074,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2279.0745593384704}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":11,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597074,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2279.0745593384704}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":11,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725847069597074,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8828125,"distances_sum":2279.0745593384704}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4423828125,"f1":null,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.96875,"distances_sum":920.278764619611}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4423828125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4423828125,"f1":null,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.96875,"distances_sum":920.278764619611}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8940049533799542,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5234375,"distances_sum":1902.569548628437}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8940049533799542,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5234375,"distances_sum":1902.569548628437}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9527248792873798,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7734375,"distances_sum":2275.189703498411}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577037545787549,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2281.9408108115235}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.917740072427573,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":1983.5920469256798}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577037545787549,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2281.9408108115235}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577037545787549,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8203125,"distances_sum":2281.9408108115235}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8592672952047962,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1875,"distances_sum":1703.8149691416463}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8592672952047962,"seconds":4.76837158203125e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1875,"distances_sum":1703.8149691416463}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360977564102569,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6171875,"distances_sum":2129.370912241568}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8771697052947063,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4765625,"distances_sum":1762.503411013319}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609260531135537,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.796875,"distances_sum":2304.0873533842737}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609260531135537,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.796875,"distances_sum":2304.0873533842737}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622252747252752,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":2278.703281325468}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":2313.530705737999}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":2313.530705737999}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":2313.530705737999}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1640625,"f1":null,"seconds":2.6319175958633423e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.0390625,"distances_sum":386.23392301653945}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1640625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1640625,"f1":null,"seconds":2.6319175958633423e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.0390625,"distances_sum":386.23392301653945}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1640625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1640625,"f1":null,"seconds":2.6319175958633423e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.0390625,"distances_sum":386.23392301653945}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":2.5797635316848755e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":4.515625,"distances_sum":425.2938419521606}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6865176490176497,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.875,"distances_sum":1218.4215806930674}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3173828125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3173828125,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.0859375,"distances_sum":714.7208484024137}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.54296875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.54296875,"f1":0.6865176490176497,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.875,"distances_sum":1218.4215806930674}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8855316558441566,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.4609375,"distances_sum":1913.41267289368}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9283253205128211,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.515625,"distances_sum":2212.335132291541}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7872299575424584,"seconds":4.41819429397583e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.6015625,"distances_sum":1511.869106496612}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.625,"f1":0.7566485597735605,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.3984375,"distances_sum":1376.9677915898817}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5439453125,"f1":null,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.765625,"distances_sum":1203.069812869446}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9283253205128211,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.515625,"distances_sum":2212.335132291541}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9588026556776559,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":2415.2019327463404}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9409455128205134,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6015625,"distances_sum":2352.8512976640136}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9588026556776559,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":2415.2019327463404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9588026556776559,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":2415.2019327463404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.5546875,"distances_sum":575.6336273825536}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8618189102564109,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3984375,"distances_sum":1800.0237017636775}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7111879440004446,"seconds":3.902241587638855e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.03125,"distances_sum":1249.8855663260053}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8618189102564109,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3984375,"distances_sum":1800.0237017636775}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9149902181152189,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2180.498951195248}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9614297161172165,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9453125,"distances_sum":2484.2406767081147}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9487809065934073,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9453125,"distances_sum":2351.8141999662125}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9614297161172165,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9453125,"distances_sum":2484.2406767081147}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9729166666666671,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9921875,"distances_sum":2552.304785747985}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715602106227111,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2547.562900648491}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.936490535736084e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9921875,"distances_sum":2641.027745588667}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9696085164835168,"seconds":8.959323167800903e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9375,"distances_sum":2555.9625750079917}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.936490535736084e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9921875,"distances_sum":2641.027745588667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":6.936490535736084e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9921875,"distances_sum":2641.027745588667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8675688894438904,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.25,"distances_sum":1872.0572369604783}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.690605748418249,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.0390625,"distances_sum":1225.665825126133}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5693359375,"f1":null,"seconds":3.907829523086548e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.234375,"distances_sum":1301.2877742480466}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8675688894438904,"seconds":4.829838871955872e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.25,"distances_sum":1872.0572369604783}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9072089368964377,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.734375,"distances_sum":2123.7295603309817}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9306464368964376,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.78125,"distances_sum":2298.1540355962647}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9079899267399277,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7265625,"distances_sum":2124.697882193954}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9246737637362646,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.828125,"distances_sum":2239.0585985175344}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9035719488844498,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6796875,"distances_sum":2108.0763633984566}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9306464368964376,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.78125,"distances_sum":2298.1540355962647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538576007326014,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8125,"distances_sum":2523.08487761279}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9713541666666672,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2593.639235349873}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9403388278388284,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8046875,"distances_sum":2377.0653235842974}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9365244130869139,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.703125,"distances_sum":2357.6976923530756}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615384615384621,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.921875,"distances_sum":2531.468990625455}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9613896520146524,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2531.206570293338}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9713541666666672,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2593.639235349873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9713541666666672,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9375,"distances_sum":2593.639235349873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.203749656677246e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.0859375,"distances_sum":853.1946356397181}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8548836580086588,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2109375,"distances_sum":1822.7579266301527}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8548836580086588,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2109375,"distances_sum":1822.7579266301527}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.94961652930403,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8515625,"distances_sum":2421.400674228275}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519631410256418,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.828125,"distances_sum":2466.982170007888}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9519631410256418,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.828125,"distances_sum":2466.982170007888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9655734890109894,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":2546.954178369281}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9655734890109894,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":2546.954178369281}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9655734890109894,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":2546.954178369281}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.9243528842926025e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.6171875,"distances_sum":590.1927222823808}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7849894896769904,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.3203125,"distances_sum":1577.7691726126602}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.707776598401599,"seconds":3.9208680391311646e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.8828125,"distances_sum":1269.1427663485929}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7849894896769904,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.3203125,"distances_sum":1577.7691726126602}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8533867174492185,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.84375,"distances_sum":1898.4070570173442}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7886342823842832,"seconds":4.317611455917358e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.390625,"distances_sum":1559.1060649429971}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8533867174492185,"seconds":4.645437002182007e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.84375,"distances_sum":1898.4070570173442}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9347012362637369,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7109375,"distances_sum":2313.8123723292615}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614297161172165,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2546.058691264617}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9242101648351657,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.6640625,"distances_sum":2277.891470654201}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9454040750915754,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.65625,"distances_sum":2466.839183513544}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9161260614385622,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.5546875,"distances_sum":2249.6194988930006}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8588801823176833,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.765625,"distances_sum":1867.8101795292075}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614297161172165,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2546.058691264617}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614297161172165,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8671875,"distances_sum":2546.058691264617}}, n: 9
inertia(cfft.distances) = 18.19140689548547
inertia(cdnet.distances) = 24.51848190643459
inertia(crand.distances) = 21.361088758214105
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9177777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> k=7
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.928888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9155555555555557
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9266666666666667
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9177777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444443
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 1, 2, 3, 3, 2, 3, 3, 1, 2, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.38446666851153444] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223] ***
*** starting iteration: 2; err: [Inf, 0.38446666851153444, 0.18394914390589223] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934] ***
*** starting iteration: 3; err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964] ***
*** starting iteration: 4; err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.29619182554215817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29619182554215817, 0.1708217576696371] ***
*** starting iteration: 2; err: [Inf, 0.29619182554215817, 0.1708217576696371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29619182554215817, 0.1708217576696371, 0.15447520762029318] ***
*** starting iteration: 3; err: [Inf, 0.29619182554215817, 0.1708217576696371, 0.15447520762029318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29619182554215817, 0.1708217576696371, 0.15447520762029318, 0.15324356451985569] ***
*** starting iteration: 4; err: [Inf, 0.29619182554215817, 0.1708217576696371, 0.15447520762029318, 0.15324356451985569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29619182554215817, 0.1708217576696371, 0.15447520762029318, 0.15324356451985569, 0.15230339296047485] ***
*** finished computation of 7 references, err: [Inf, 0.29619182554215817, 0.1708217576696371, 0.15447520762029318, 0.15324356451985569, 0.15230339296047485] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 8]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.4592338062273127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4592338062273127, 0.3320059007335299] ***
*** starting iteration: 2; err: [Inf, 3.4592338062273127, 0.3320059007335299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978] ***
*** starting iteration: 3; err: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978, 0.18783259367185612] ***
*** starting iteration: 4; err: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978, 0.18783259367185612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978, 0.18783259367185612, 0.18383185075622513] ***
*** starting iteration: 5; err: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978, 0.18783259367185612, 0.18383185075622513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978, 0.18783259367185612, 0.18383185075622513, 0.18382429769019948] ***
*** finished computation of 7 references, err: [Inf, 3.4592338062273127, 0.3320059007335299, 0.2053898665896978, 0.18783259367185612, 0.18383185075622513, 0.18382429769019948] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 9]]
** centroid: 2, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.440482828280912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048] ***
*** starting iteration: 2; err: [Inf, 3.440482828280912, 1.2050619916324048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658] ***
*** starting iteration: 3; err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035] ***
*** starting iteration: 4; err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503] ***
*** starting iteration: 5; err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186] ***
*** starting iteration: 6; err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186, 0.22852171348147873] ***
*** starting iteration: 7; err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186, 0.22852171348147873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186, 0.22852171348147873, 0.22686664541056903] ***
*** starting iteration: 8; err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186, 0.22852171348147873, 0.22686664541056903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186, 0.22852171348147873, 0.22686664541056903, 0.22636180543278944] ***
*** finished computation of 7 references, err: [Inf, 3.440482828280912, 1.2050619916324048, 0.3877259019959658, 0.2669197082042035, 0.24186069260792503, 0.23435996454062186, 0.22852171348147873, 0.22686664541056903, 0.22636180543278944] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.8084999852104007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8084999852104007, 1.3635183972509572] ***
*** finished computation of 3 references, err: [Inf, 3.8084999852104007, 1.3635183972509572] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 11]]
** centroid: 1, normalized-entropy: 0.887976319515135, [(2, 25), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 8, 0]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(1, 35), (2, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.6218999914104724] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6218999914104724, 0.8857666983557533] ***
*** finished computation of 3 references, err: [Inf, 3.6218999914104724, 0.8857666983557533] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 29]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 2, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 34), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 6]]
** centroid: 3, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0918999948456294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0918999948456294, 0.6009429894078049] ***
*** finished computation of 3 references, err: [Inf, 1.0918999948456294, 0.6009429894078049] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31824378058300185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31824378058300185, 0.22702858085576078] ***
*** starting iteration: 2; err: [Inf, 0.31824378058300185, 0.22702858085576078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292] ***
*** starting iteration: 3; err: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297] ***
*** starting iteration: 4; err: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297, 0.17334768096493725] ***
*** starting iteration: 5; err: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297, 0.17334768096493725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297, 0.17334768096493725, 0.17106086601510015] ***
*** starting iteration: 6; err: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297, 0.17334768096493725, 0.17106086601510015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297, 0.17334768096493725, 0.17106086601510015, 0.17076861804184584] ***
*** finished computation of 7 references, err: [Inf, 0.31824378058300185, 0.22702858085576078, 0.19265306256483292, 0.1802473559999297, 0.17334768096493725, 0.17106086601510015, 0.17076861804184584] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 4: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 17]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 1), (3, 17)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3825582170963648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3825582170963648, 0.15979666840815254] ***
*** starting iteration: 2; err: [Inf, 0.3825582170963648, 0.15979666840815254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3825582170963648, 0.15979666840815254, 0.1513190325033733] ***
*** starting iteration: 3; err: [Inf, 0.3825582170963648, 0.15979666840815254, 0.1513190325033733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3825582170963648, 0.15979666840815254, 0.1513190325033733, 0.1505584195926113] ***
*** finished computation of 7 references, err: [Inf, 0.3825582170963648, 0.15979666840815254, 0.1513190325033733, 0.1505584195926113] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6005125203214434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147] ***
*** starting iteration: 2; err: [Inf, 0.6005125203214434, 0.36239089439573147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496] ***
*** starting iteration: 3; err: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754] ***
*** starting iteration: 4; err: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407] ***
*** starting iteration: 5; err: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407, 0.23709279135905081] ***
*** starting iteration: 6; err: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407, 0.23709279135905081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407, 0.23709279135905081, 0.23604897964871785] ***
*** starting iteration: 7; err: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407, 0.23709279135905081, 0.23604897964871785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407, 0.23709279135905081, 0.23604897964871785, 0.23604897964871785] ***
*** finished computation of 7 references, err: [Inf, 0.6005125203214434, 0.36239089439573147, 0.29647062952925496, 0.26701130500922754, 0.24591593807558407, 0.23709279135905081, 0.23604897964871785, 0.23604897964871785] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 24]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 10), (3, 24)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6672000103600716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6672000103600716, 0.2970569210858481] ***
*** finished computation of 7 references, err: [Inf, 0.6672000103600716, 0.2970569210858481] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 11]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6584999979051408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999979051408, 0.2799082147821395] ***
*** finished computation of 7 references, err: [Inf, 0.6584999979051408, 0.2799082147821395] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43370000205456705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43370000205456705, 0.3131951464448002] ***
*** finished computation of 7 references, err: [Inf, 0.43370000205456705, 0.3131951464448002] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 5]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 5]]
** centroid: 5, normalized-entropy: 1.0, [(2, 5), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.6647999803525755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6647999803525755, 0.5858309832427804] ***
*** starting iteration: 2; err: [Inf, 3.6647999803525755, 0.5858309832427804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6647999803525755, 0.5858309832427804, 0.5199115559834389] ***
*** starting iteration: 3; err: [Inf, 3.6647999803525755, 0.5858309832427804, 0.5199115559834389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6647999803525755, 0.5858309832427804, 0.5199115559834389, 0.5032452355101378] ***
*** finished computation of 3 references, err: [Inf, 3.6647999803525755, 0.5858309832427804, 0.5199115559834389, 0.5032452355101378] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 4]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(2, 31), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 26]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.2449999931719535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.2449999931719535, 1.1264167941739618] ***
*** starting iteration: 2; err: [Inf, 5.2449999931719535, 1.1264167941739618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.2449999931719535, 1.1264167941739618, 0.5490601896463893] ***
*** starting iteration: 3; err: [Inf, 5.2449999931719535, 1.1264167941739618, 0.5490601896463893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.2449999931719535, 1.1264167941739618, 0.5490601896463893, 0.5379300663550308] ***
*** finished computation of 3 references, err: [Inf, 5.2449999931719535, 1.1264167941739618, 0.5490601896463893, 0.5379300663550308] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 34]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 9), (3, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9463000057974695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9463000057974695, 0.6620701461490047] ***
*** starting iteration: 2; err: [Inf, 2.9463000057974695, 0.6620701461490047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9463000057974695, 0.6620701461490047, 0.6225373118548942] ***
*** starting iteration: 3; err: [Inf, 2.9463000057974695, 0.6620701461490047, 0.6225373118548942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.9463000057974695, 0.6620701461490047, 0.6225373118548942, 0.6187761325948246] ***
*** finished computation of 3 references, err: [Inf, 2.9463000057974695, 0.6620701461490047, 0.6225373118548942, 0.6187761325948246] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 32]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 3]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.01269990051039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.01269990051039, 1.215344062123757] ***
*** starting iteration: 2; err: [Inf, 10.01269990051039, 1.215344062123757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.01269990051039, 1.215344062123757, 0.6928174101250937] ***
*** starting iteration: 3; err: [Inf, 10.01269990051039, 1.215344062123757, 0.6928174101250937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.01269990051039, 1.215344062123757, 0.6928174101250937, 0.560464917764442] ***
*** finished computation of 3 references, err: [Inf, 10.01269990051039, 1.215344062123757, 0.6928174101250937, 0.560464917764442] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 30]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 12), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5400000011850468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5400000011850468, 1.5003813449506094] ***
*** starting iteration: 2; err: [Inf, 3.5400000011850468, 1.5003813449506094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5400000011850468, 1.5003813449506094, 0.7465825748917797] ***
*** starting iteration: 3; err: [Inf, 3.5400000011850468, 1.5003813449506094, 0.7465825748917797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5400000011850468, 1.5003813449506094, 0.7465825748917797, 0.5179014512261549] ***
*** finished computation of 3 references, err: [Inf, 3.5400000011850468, 1.5003813449506094, 0.7465825748917797, 0.5179014512261549] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.448399999671939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.448399999671939, 0.620229924910756] ***
*** starting iteration: 2; err: [Inf, 1.448399999671939, 0.620229924910756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.448399999671939, 0.620229924910756, 0.6170230184444224] ***
*** starting iteration: 3; err: [Inf, 1.448399999671939, 0.620229924910756, 0.6170230184444224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.448399999671939, 0.620229924910756, 0.6170230184444224, 0.6109680976447232] ***
*** finished computation of 3 references, err: [Inf, 1.448399999671939, 0.620229924910756, 0.6170230184444224, 0.6109680976447232] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 32]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(2, 5), (3, 32)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 3]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5373000012200493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925] ***
*** starting iteration: 2; err: [Inf, 0.5373000012200493, 0.329289778638925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643] ***
*** starting iteration: 3; err: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655] ***
*** starting iteration: 4; err: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168] ***
*** starting iteration: 5; err: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168, 0.28857794224014094] ***
*** starting iteration: 6; err: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168, 0.28857794224014094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168, 0.28857794224014094, 0.28534843073640803] ***
*** starting iteration: 7; err: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168, 0.28857794224014094, 0.28534843073640803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168, 0.28857794224014094, 0.28534843073640803, 0.28521961497625353] ***
*** finished computation of 7 references, err: [Inf, 0.5373000012200493, 0.329289778638925, 0.30460219572025643, 0.2988363754212655, 0.2960356129615168, 0.28857794224014094, 0.28534843073640803, 0.28521961497625353] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 17]]
** centroid: 7, normalized-entropy: 0.9932338197397066, [(2, 14), (3, 17)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6050000041576744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6050000041576744, 0.28982355436618923] ***
*** starting iteration: 2; err: [Inf, 0.6050000041576744, 0.28982355436618923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6050000041576744, 0.28982355436618923, 0.2529971251224455] ***
*** starting iteration: 3; err: [Inf, 0.6050000041576744, 0.28982355436618923, 0.2529971251224455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6050000041576744, 0.28982355436618923, 0.2529971251224455, 0.24926706991354425] ***
*** starting iteration: 4; err: [Inf, 0.6050000041576744, 0.28982355436618923, 0.2529971251224455, 0.24926706991354425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6050000041576744, 0.28982355436618923, 0.2529971251224455, 0.24926706991354425, 0.24926706991354425] ***
*** finished computation of 7 references, err: [Inf, 0.6050000041576744, 0.28982355436618923, 0.2529971251224455, 0.24926706991354425, 0.24926706991354425] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5871000012912998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5871000012912998, 0.3500066394912078] ***
*** starting iteration: 2; err: [Inf, 0.5871000012912998, 0.3500066394912078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075] ***
*** starting iteration: 3; err: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855] ***
*** starting iteration: 4; err: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855, 0.32085184621390866] ***
*** starting iteration: 5; err: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855, 0.32085184621390866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855, 0.32085184621390866, 0.3197903592190607] ***
*** starting iteration: 6; err: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855, 0.32085184621390866, 0.3197903592190607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855, 0.32085184621390866, 0.3197903592190607, 0.3191539247568464] ***
*** finished computation of 7 references, err: [Inf, 0.5871000012912998, 0.3500066394912078, 0.32839810584727075, 0.3218711073214855, 0.32085184621390866, 0.3197903592190607, 0.3191539247568464] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 10]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6101937084837417] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6101937084837417, 0.3312038912050618] ***
*** finished computation of 3 references, err: [Inf, 0.6101937084837417, 0.3312038912050618] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 7]]
** centroid: 2, normalized-entropy: 0.6892019851173655, [(2, 31), (3, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 23]]
** centroid: 3, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.612604495946464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.612604495946464, 0.4256931472677081] ***
*** finished computation of 3 references, err: [Inf, 0.612604495946464, 0.4256931472677081] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 20]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 30), (3, 20)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7227827727969849] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7227827727969849, 0.4991343234454948] ***
*** finished computation of 3 references, err: [Inf, 0.7227827727969849, 0.4991343234454948] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 20]]
** centroid: 3, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8933897079951238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8933897079951238, 0.37465028061631317] ***
*** starting iteration: 2; err: [Inf, 0.8933897079951238, 0.37465028061631317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8933897079951238, 0.37465028061631317, 0.3647537699777664] ***
*** starting iteration: 3; err: [Inf, 0.8933897079951238, 0.37465028061631317, 0.3647537699777664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8933897079951238, 0.37465028061631317, 0.3647537699777664, 0.35039044940768904] ***
*** finished computation of 3 references, err: [Inf, 0.8933897079951238, 0.37465028061631317, 0.3647537699777664, 0.35039044940768904] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 29]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 30, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2310918815392367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2310918815392367, 0.5764846816661015] ***
*** starting iteration: 2; err: [Inf, 1.2310918815392367, 0.5764846816661015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2310918815392367, 0.5764846816661015, 0.5735679564409641] ***
*** starting iteration: 3; err: [Inf, 1.2310918815392367, 0.5764846816661015, 0.5735679564409641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2310918815392367, 0.5764846816661015, 0.5735679564409641, 0.5735679564409641] ***
*** finished computation of 3 references, err: [Inf, 1.2310918815392367, 0.5764846816661015, 0.5735679564409641, 0.5735679564409641] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 35]]
** centroid: 2, normalized-entropy: 0.9936507116910402, [(2, 29), (3, 35)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [19, 2, 0]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(1, 19), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.541071677464124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.541071677464124, 1.1587603000029605] ***
*** starting iteration: 2; err: [Inf, 9.541071677464124, 1.1587603000029605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.541071677464124, 1.1587603000029605, 0.7414413562376302] ***
*** starting iteration: 3; err: [Inf, 9.541071677464124, 1.1587603000029605, 0.7414413562376302] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.541071677464124, 1.1587603000029605, 0.7414413562376302, 0.7366196655702165] ***
*** finished computation of 3 references, err: [Inf, 9.541071677464124, 1.1587603000029605, 0.7414413562376302, 0.7366196655702165] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 3, 0]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 35]]
** centroid: 2, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1950000002398573] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1950000002398573, 0.5230387563437364] ***
*** starting iteration: 2; err: [Inf, 1.1950000002398573, 0.5230387563437364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1950000002398573, 0.5230387563437364, 0.48994557205473177] ***
*** starting iteration: 3; err: [Inf, 1.1950000002398573, 0.5230387563437364, 0.48994557205473177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1950000002398573, 0.5230387563437364, 0.48994557205473177, 0.4866210240114851] ***
*** finished computation of 3 references, err: [Inf, 1.1950000002398573, 0.5230387563437364, 0.48994557205473177, 0.4866210240114851] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.172899989686957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.172899989686957, 1.809161842611029] ***
*** starting iteration: 2; err: [Inf, 5.172899989686957, 1.809161842611029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.172899989686957, 1.809161842611029, 0.5399390567799895] ***
*** starting iteration: 3; err: [Inf, 5.172899989686957, 1.809161842611029, 0.5399390567799895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.172899989686957, 1.809161842611029, 0.5399390567799895, 0.4886089923444099] ***
*** finished computation of 3 references, err: [Inf, 5.172899989686957, 1.809161842611029, 0.5399390567799895, 0.4886089923444099] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7118999909366641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7118999909366641, 1.1291732585713934] ***
*** starting iteration: 2; err: [Inf, 1.7118999909366641, 1.1291732585713934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7118999909366641, 1.1291732585713934, 1.1031488867861747] ***
*** starting iteration: 3; err: [Inf, 1.7118999909366641, 1.1291732585713934, 1.1031488867861747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7118999909366641, 1.1291732585713934, 1.1031488867861747, 1.1029265031550535] ***
*** finished computation of 3 references, err: [Inf, 1.7118999909366641, 1.1291732585713934, 1.1031488867861747, 1.1029265031550535] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 3, 0]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(1, 16), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 35]]
** centroid: 3, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.912548083341308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692] ***
*** starting iteration: 2; err: [Inf, 2.912548083341308, 0.9679230266734692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424] ***
*** starting iteration: 3; err: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056] ***
*** starting iteration: 4; err: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495] ***
*** starting iteration: 5; err: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495, 0.33525961032741153] ***
*** starting iteration: 6; err: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495, 0.33525961032741153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373] ***
*** starting iteration: 7; err: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373, 0.333410006447205] ***
*** finished computation of 3 references, err: [Inf, 2.912548083341308, 0.9679230266734692, 0.40908317950935424, 0.3516425818736056, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373, 0.333410006447205] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 21]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0477771454076374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0477771454076374, 0.4024062094051077] ***
*** starting iteration: 2; err: [Inf, 1.0477771454076374, 0.4024062094051077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558] ***
*** starting iteration: 3; err: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558, 0.3490139196276721] ***
*** starting iteration: 4; err: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558, 0.3490139196276721] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558, 0.3490139196276721, 0.34754903760899636] ***
*** starting iteration: 5; err: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558, 0.3490139196276721, 0.34754903760899636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558, 0.3490139196276721, 0.34754903760899636, 0.34751584148239817] ***
*** finished computation of 3 references, err: [Inf, 1.0477771454076374, 0.4024062094051077, 0.3528193907270558, 0.3490139196276721, 0.34754903760899636, 0.34751584148239817] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6622920971316952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6622920971316952, 0.4214561971504686] ***
*** starting iteration: 2; err: [Inf, 0.6622920971316952, 0.4214561971504686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6622920971316952, 0.4214561971504686, 0.4176875683576503] ***
*** starting iteration: 3; err: [Inf, 0.6622920971316952, 0.4214561971504686, 0.4176875683576503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6622920971316952, 0.4214561971504686, 0.4176875683576503, 0.4176875683576503] ***
*** finished computation of 3 references, err: [Inf, 0.6622920971316952, 0.4214561971504686, 0.4176875683576503, 0.4176875683576503] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2386999971433226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2386999971433226, 0.5445174354349762] ***
*** finished computation of 3 references, err: [Inf, 1.2386999971433226, 0.5445174354349762] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 30]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8066000039350092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8066000039350092, 0.510928851739521] ***
*** finished computation of 3 references, err: [Inf, 1.8066000039350092, 0.510928851739521] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5742000045191713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5742000045191713, 0.6116739190617156] ***
*** finished computation of 3 references, err: [Inf, 1.5742000045191713, 0.6116739190617156] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8664132392003548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8664132392003548, 0.37611349532559374] ***
*** starting iteration: 2; err: [Inf, 0.8664132392003548, 0.37611349532559374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827] ***
*** starting iteration: 3; err: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327] ***
*** starting iteration: 4; err: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327, 0.33525961032741153] ***
*** starting iteration: 5; err: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327, 0.33525961032741153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327, 0.33525961032741153, 0.3339838473873373] ***
*** starting iteration: 6; err: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327, 0.33525961032741153, 0.3339838473873373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327, 0.33525961032741153, 0.3339838473873373, 0.333410006447205] ***
*** finished computation of 3 references, err: [Inf, 0.8664132392003548, 0.37611349532559374, 0.3605973239887827, 0.33974373977271327, 0.33525961032741153, 0.3339838473873373, 0.333410006447205] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9592105081373604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592105081373604, 0.347720423040968] ***
*** starting iteration: 2; err: [Inf, 0.9592105081373604, 0.347720423040968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9592105081373604, 0.347720423040968, 0.34751584148239817] ***
*** finished computation of 3 references, err: [Inf, 0.9592105081373604, 0.347720423040968, 0.34751584148239817] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2137453892842662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2137453892842662, 0.4449551900996581] ***
*** starting iteration: 2; err: [Inf, 1.2137453892842662, 0.4449551900996581] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831] ***
*** starting iteration: 3; err: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831, 0.42427613342957615] ***
*** starting iteration: 4; err: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831, 0.42427613342957615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831, 0.42427613342957615, 0.4182258786449654] ***
*** starting iteration: 5; err: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831, 0.42427613342957615, 0.4182258786449654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831, 0.42427613342957615, 0.4182258786449654, 0.4176875683576503] ***
*** finished computation of 3 references, err: [Inf, 1.2137453892842662, 0.4449551900996581, 0.4295655758848831, 0.42427613342957615, 0.4182258786449654, 0.4176875683576503] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5263000013458037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5263000013458037, 0.2583210518388267] ***
*** starting iteration: 2; err: [Inf, 0.5263000013458037, 0.2583210518388267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607] ***
*** starting iteration: 3; err: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977] ***
*** starting iteration: 4; err: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977, 0.22323579219385928] ***
*** starting iteration: 5; err: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977, 0.22323579219385928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977, 0.22323579219385928, 0.22132649232949003] ***
*** starting iteration: 6; err: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977, 0.22323579219385928, 0.22132649232949003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977, 0.22323579219385928, 0.22132649232949003, 0.22062648617107672] ***
*** finished computation of 7 references, err: [Inf, 0.5263000013458037, 0.2583210518388267, 0.2292317688248607, 0.22479778985675977, 0.22323579219385928, 0.22132649232949003, 0.22062648617107672] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.660700004005305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.660700004005305, 0.3013779557342983] ***
*** starting iteration: 2; err: [Inf, 0.660700004005305, 0.3013779557342983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409] ***
*** starting iteration: 3; err: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944] ***
*** starting iteration: 4; err: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944, 0.2253109131328663] ***
*** starting iteration: 5; err: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944, 0.2253109131328663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944, 0.2253109131328663, 0.214801322255677] ***
*** starting iteration: 6; err: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944, 0.2253109131328663, 0.214801322255677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944, 0.2253109131328663, 0.214801322255677, 0.2144381009088458] ***
*** finished computation of 7 references, err: [Inf, 0.660700004005305, 0.3013779557342983, 0.2825420483694409, 0.2604665063588944, 0.2253109131328663, 0.214801322255677, 0.2144381009088458] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5304000019779574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304000019779574, 0.2931020074965937] ***
*** starting iteration: 2; err: [Inf, 0.5304000019779574, 0.2931020074965937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304000019779574, 0.2931020074965937, 0.2791872557022422] ***
*** starting iteration: 3; err: [Inf, 0.5304000019779574, 0.2931020074965937, 0.2791872557022422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304000019779574, 0.2931020074965937, 0.2791872557022422, 0.2765695573026091] ***
*** starting iteration: 4; err: [Inf, 0.5304000019779574, 0.2931020074965937, 0.2791872557022422, 0.2765695573026091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5304000019779574, 0.2931020074965937, 0.2791872557022422, 0.2765695573026091, 0.27576114252153183] ***
*** finished computation of 7 references, err: [Inf, 0.5304000019779574, 0.2931020074965937, 0.2791872557022422, 0.2765695573026091, 0.27576114252153183] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 7]]
** centroid: 1, normalized-entropy: 0.8256265261578954, [(2, 20), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36519153496154244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36519153496154244, 0.14973297690119178] ***
*** starting iteration: 2; err: [Inf, 0.36519153496154244, 0.14973297690119178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36519153496154244, 0.14973297690119178, 0.1460465263490423] ***
*** starting iteration: 3; err: [Inf, 0.36519153496154244, 0.14973297690119178, 0.1460465263490423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36519153496154244, 0.14973297690119178, 0.1460465263490423, 0.14578940514577834] ***
*** finished computation of 7 references, err: [Inf, 0.36519153496154244, 0.14973297690119178, 0.1460465263490423, 0.14578940514577834] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42276632019513427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42276632019513427, 0.19693669970892136] ***
*** starting iteration: 2; err: [Inf, 0.42276632019513427, 0.19693669970892136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914] ***
*** starting iteration: 3; err: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914, 0.15332858844995434] ***
*** starting iteration: 4; err: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914, 0.15332858844995434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914, 0.15332858844995434, 0.15087737613743604] ***
*** starting iteration: 5; err: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914, 0.15332858844995434, 0.15087737613743604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914, 0.15332858844995434, 0.15087737613743604, 0.15060771860959313] ***
*** finished computation of 7 references, err: [Inf, 0.42276632019513427, 0.19693669970892136, 0.16292766849646914, 0.15332858844995434, 0.15087737613743604, 0.15060771860959313] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 9]]
** centroid: 5, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4155380357048115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4155380357048115, 0.24110038877225443] ***
*** starting iteration: 2; err: [Inf, 0.4155380357048115, 0.24110038877225443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4155380357048115, 0.24110038877225443, 0.22789517412487936] ***
*** starting iteration: 3; err: [Inf, 0.4155380357048115, 0.24110038877225443, 0.22789517412487936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4155380357048115, 0.24110038877225443, 0.22789517412487936, 0.227912751198297] ***
*** finished computation of 7 references, err: [Inf, 0.4155380357048115, 0.24110038877225443, 0.22789517412487936, 0.227912751198297] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 24]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 10), (3, 24)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5488000048625016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5488000048625016, 0.2369129310673012] ***
*** starting iteration: 2; err: [Inf, 0.5488000048625016, 0.2369129310673012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5488000048625016, 0.2369129310673012, 0.2215394766303434] ***
*** starting iteration: 3; err: [Inf, 0.5488000048625016, 0.2369129310673012, 0.2215394766303434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5488000048625016, 0.2369129310673012, 0.2215394766303434, 0.21828547660070197] ***
*** finished computation of 7 references, err: [Inf, 0.5488000048625016, 0.2369129310673012, 0.2215394766303434, 0.21828547660070197] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 14]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 4), (3, 14)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5990999987075327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5990999987075327, 0.2599622705079738] ***
*** starting iteration: 2; err: [Inf, 0.5990999987075327, 0.2599622705079738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5990999987075327, 0.2599622705079738, 0.2267639806667902] ***
*** starting iteration: 3; err: [Inf, 0.5990999987075327, 0.2599622705079738, 0.2267639806667902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5990999987075327, 0.2599622705079738, 0.2267639806667902, 0.22372605204309068] ***
*** finished computation of 7 references, err: [Inf, 0.5990999987075327, 0.2599622705079738, 0.2267639806667902, 0.22372605204309068] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7884000070998822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7884000070998822, 0.256303270950508] ***
*** starting iteration: 2; err: [Inf, 0.7884000070998822, 0.256303270950508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7884000070998822, 0.256303270950508, 0.2491179184012105] ***
*** starting iteration: 3; err: [Inf, 0.7884000070998822, 0.256303270950508, 0.2491179184012105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7884000070998822, 0.256303270950508, 0.2491179184012105, 0.2491179184012105] ***
*** finished computation of 7 references, err: [Inf, 0.7884000070998822, 0.256303270950508, 0.2491179184012105, 0.2491179184012105] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 3]]
** centroid: 5, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6075000054449421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6075000054449421, 0.29546306393553257] ***
*** starting iteration: 2; err: [Inf, 0.6075000054449421, 0.29546306393553257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762] ***
*** starting iteration: 3; err: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059] ***
*** starting iteration: 4; err: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059, 0.23417891403454213] ***
*** starting iteration: 5; err: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059, 0.23417891403454213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059, 0.23417891403454213, 0.22825862358033955] ***
*** starting iteration: 6; err: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059, 0.23417891403454213, 0.22825862358033955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059, 0.23417891403454213, 0.22825862358033955, 0.22825862358033955] ***
*** finished computation of 7 references, err: [Inf, 0.6075000054449421, 0.29546306393553257, 0.2748484392991762, 0.2526080658192059, 0.23417891403454213, 0.22825862358033955, 0.22825862358033955] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 4, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47089999964802787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47089999964802787, 0.29742400875216446] ***
*** starting iteration: 2; err: [Inf, 0.47089999964802787, 0.29742400875216446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599] ***
*** starting iteration: 3; err: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599, 0.2553624723291879] ***
*** starting iteration: 4; err: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599, 0.2553624723291879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599, 0.2553624723291879, 0.24996313420654043] ***
*** starting iteration: 5; err: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599, 0.2553624723291879, 0.24996313420654043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599, 0.2553624723291879, 0.24996313420654043, 0.24996313420654043] ***
*** finished computation of 7 references, err: [Inf, 0.47089999964802787, 0.29742400875216446, 0.2659040550500599, 0.2553624723291879, 0.24996313420654043, 0.24996313420654043] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.682000011317411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338] ***
*** starting iteration: 2; err: [Inf, 4.682000011317411, 1.3555884509422338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768] ***
*** starting iteration: 3; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699] ***
*** starting iteration: 4; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686] ***
*** starting iteration: 5; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753] ***
*** starting iteration: 6; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873] ***
*** starting iteration: 7; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217] ***
*** starting iteration: 8; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217, 0.31880096628413757] ***
*** starting iteration: 9; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217, 0.31880096628413757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217, 0.31880096628413757, 0.3174753402678776] ***
*** starting iteration: 10; err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217, 0.31880096628413757, 0.3174753402678776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217, 0.31880096628413757, 0.3174753402678776, 0.3170439079997782] ***
*** finished computation of 7 references, err: [Inf, 4.682000011317411, 1.3555884509422338, 0.537325197262768, 0.413656816974699, 0.37108829793194686, 0.35363197692423753, 0.32797892139590873, 0.3205975963568217, 0.31880096628413757, 0.3174753402678776, 0.3170439079997782] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 5, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.41302059288555965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41302059288555965, 0.17297059550248797] ***
*** starting iteration: 2; err: [Inf, 0.41302059288555965, 0.17297059550248797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657] ***
*** starting iteration: 3; err: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126] ***
*** starting iteration: 4; err: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126, 0.14598478825886244] ***
*** starting iteration: 5; err: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126, 0.14598478825886244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126, 0.14598478825886244, 0.14462416876133471] ***
*** starting iteration: 6; err: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126, 0.14598478825886244, 0.14462416876133471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126, 0.14598478825886244, 0.14462416876133471, 0.14400343306378552] ***
*** finished computation of 7 references, err: [Inf, 0.41302059288555965, 0.17297059550248797, 0.15727299480179657, 0.15025641379904126, 0.14598478825886244, 0.14462416876133471, 0.14400343306378552] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4409358938852502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4409358938852502, 0.18258560035103572] ***
*** starting iteration: 2; err: [Inf, 0.4409358938852502, 0.18258560035103572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4409358938852502, 0.18258560035103572, 0.16271196517669761] ***
*** starting iteration: 3; err: [Inf, 0.4409358938852502, 0.18258560035103572, 0.16271196517669761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4409358938852502, 0.18258560035103572, 0.16271196517669761, 0.15864276361413016] ***
*** starting iteration: 4; err: [Inf, 0.4409358938852502, 0.18258560035103572, 0.16271196517669761, 0.15864276361413016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4409358938852502, 0.18258560035103572, 0.16271196517669761, 0.15864276361413016, 0.15778177714158498] ***
*** finished computation of 7 references, err: [Inf, 0.4409358938852502, 0.18258560035103572, 0.16271196517669761, 0.15864276361413016, 0.15778177714158498] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5138384568936343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5138384568936343, 0.21237793233145272] ***
*** starting iteration: 2; err: [Inf, 0.5138384568936343, 0.21237793233145272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992] ***
*** starting iteration: 3; err: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668] ***
*** starting iteration: 4; err: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668, 0.17091444858607982] ***
*** starting iteration: 5; err: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668, 0.17091444858607982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668, 0.17091444858607982, 0.16924961339681688] ***
*** starting iteration: 6; err: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668, 0.17091444858607982, 0.16924961339681688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668, 0.17091444858607982, 0.16924961339681688, 0.16917387451915172] ***
*** finished computation of 7 references, err: [Inf, 0.5138384568936343, 0.21237793233145272, 0.19462028738885992, 0.18142761622349668, 0.17091444858607982, 0.16924961339681688, 0.16917387451915172] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 7]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5203393353990802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5203393353990802, 0.19480430879541724] ***
*** finished computation of 7 references, err: [Inf, 0.5203393353990802, 0.19480430879541724] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4683835269583727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4683835269583727, 0.26057024215266417] ***
*** finished computation of 7 references, err: [Inf, 0.4683835269583727, 0.26057024215266417] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 2, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7084285992458181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7084285992458181, 0.4165928177281507] ***
*** finished computation of 7 references, err: [Inf, 0.7084285992458181, 0.4165928177281507] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 1, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 6 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 19
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 3.827399965593277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.827399965593277, 0.7598705758256641] ***
*** starting iteration: 2; err: [Inf, 3.827399965593277, 0.7598705758256641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.827399965593277, 0.7598705758256641, 0.4875670415562028] ***
*** starting iteration: 3; err: [Inf, 3.827399965593277, 0.7598705758256641, 0.4875670415562028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.827399965593277, 0.7598705758256641, 0.4875670415562028, 0.4823598867292421] ***
*** starting iteration: 4; err: [Inf, 3.827399965593277, 0.7598705758256641, 0.4875670415562028, 0.4823598867292421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.827399965593277, 0.7598705758256641, 0.4875670415562028, 0.4823598867292421, 0.48157231626238295] ***
*** finished computation of 3 references, err: [Inf, 3.827399965593277, 0.7598705758256641, 0.4875670415562028, 0.4823598867292421, 0.48157231626238295] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9871999854546363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9871999854546363, 0.5231236147542444] ***
*** starting iteration: 2; err: [Inf, 0.9871999854546363, 0.5231236147542444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9871999854546363, 0.5231236147542444, 0.48892947498888456] ***
*** starting iteration: 3; err: [Inf, 0.9871999854546363, 0.5231236147542444, 0.48892947498888456] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9871999854546363, 0.5231236147542444, 0.48892947498888456, 0.4867398858761029] ***
*** starting iteration: 4; err: [Inf, 0.9871999854546363, 0.5231236147542444, 0.48892947498888456, 0.4867398858761029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9871999854546363, 0.5231236147542444, 0.48892947498888456, 0.4867398858761029, 0.4867398858761029] ***
*** finished computation of 3 references, err: [Inf, 0.9871999854546363, 0.5231236147542444, 0.48892947498888456, 0.4867398858761029, 0.4867398858761029] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.931100003927585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931100003927585, 0.9371648418190596] ***
*** starting iteration: 2; err: [Inf, 2.931100003927585, 0.9371648418190596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908] ***
*** starting iteration: 3; err: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908, 0.6031829845081236] ***
*** starting iteration: 4; err: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908, 0.6031829845081236] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908, 0.6031829845081236, 0.5973090572766155] ***
*** starting iteration: 5; err: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908, 0.6031829845081236, 0.5973090572766155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908, 0.6031829845081236, 0.5973090572766155, 0.5973090572766155] ***
*** finished computation of 3 references, err: [Inf, 2.931100003927585, 0.9371648418190596, 0.6473910128148908, 0.6031829845081236, 0.5973090572766155, 0.5973090572766155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 2, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7242155605200881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7242155605200881, 0.36702441812728964] ***
*** starting iteration: 2; err: [Inf, 0.7242155605200881, 0.36702441812728964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644] ***
*** starting iteration: 3; err: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495] ***
*** starting iteration: 4; err: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495, 0.33525961032741153] ***
*** starting iteration: 5; err: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495, 0.33525961032741153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373] ***
*** starting iteration: 6; err: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373, 0.333410006447205] ***
*** finished computation of 3 references, err: [Inf, 0.7242155605200881, 0.36702441812728964, 0.34950740302569644, 0.33671836219125495, 0.33525961032741153, 0.3339838473873373, 0.333410006447205] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 2, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.420950350557278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.420950350557278, 0.567668612773612] ***
*** starting iteration: 2; err: [Inf, 2.420950350557278, 0.567668612773612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.420950350557278, 0.567668612773612, 0.3517193320171104] ***
*** starting iteration: 3; err: [Inf, 2.420950350557278, 0.567668612773612, 0.3517193320171104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.420950350557278, 0.567668612773612, 0.3517193320171104, 0.3478406198373784] ***
*** starting iteration: 4; err: [Inf, 2.420950350557278, 0.567668612773612, 0.3517193320171104, 0.3478406198373784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.420950350557278, 0.567668612773612, 0.3517193320171104, 0.3478406198373784, 0.34751584148239817] ***
*** finished computation of 3 references, err: [Inf, 2.420950350557278, 0.567668612773612, 0.3517193320171104, 0.3478406198373784, 0.34751584148239817] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9818265056042452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9818265056042452, 0.43194004759673243] ***
*** starting iteration: 2; err: [Inf, 1.9818265056042452, 0.43194004759673243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9818265056042452, 0.43194004759673243, 0.41892736287349874] ***
*** starting iteration: 3; err: [Inf, 1.9818265056042452, 0.43194004759673243, 0.41892736287349874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9818265056042452, 0.43194004759673243, 0.41892736287349874, 0.4176875683576503] ***
*** starting iteration: 4; err: [Inf, 1.9818265056042452, 0.43194004759673243, 0.41892736287349874, 0.4176875683576503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9818265056042452, 0.43194004759673243, 0.41892736287349874, 0.4176875683576503, 0.4176875683576503] ***
*** finished computation of 3 references, err: [Inf, 1.9818265056042452, 0.43194004759673243, 0.41892736287349874, 0.4176875683576503, 0.4176875683576503] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 2, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.6936999965319889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734] ***
*** starting iteration: 2; err: [Inf, 0.6936999965319889, 0.3472348883357734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996] ***
*** starting iteration: 3; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646] ***
*** starting iteration: 4; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657] ***
*** starting iteration: 5; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244] ***
*** starting iteration: 6; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126] ***
*** starting iteration: 7; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728] ***
*** starting iteration: 8; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728, 0.23241383870379972] ***
*** starting iteration: 9; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728, 0.23241383870379972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728, 0.23241383870379972, 0.23087537897753854] ***
*** starting iteration: 10; err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728, 0.23241383870379972, 0.23087537897753854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728, 0.23241383870379972, 0.23087537897753854, 0.23087537897753854] ***
*** finished computation of 7 references, err: [Inf, 0.6936999965319889, 0.3472348883357734, 0.31870091953103996, 0.275380811072646, 0.2529634391721657, 0.2427800977484244, 0.23664498481368126, 0.23395825661054728, 0.23241383870379972, 0.23087537897753854, 0.23087537897753854] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 9]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4060000000224815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4060000000224815, 0.2731520641278902] ***
*** starting iteration: 2; err: [Inf, 0.4060000000224815, 0.2731520641278902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388] ***
*** starting iteration: 3; err: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731] ***
*** starting iteration: 4; err: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731, 0.2281657043525544] ***
*** starting iteration: 5; err: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731, 0.2281657043525544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731, 0.2281657043525544, 0.22566427578548853] ***
*** starting iteration: 6; err: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731, 0.2281657043525544, 0.22566427578548853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731, 0.2281657043525544, 0.22566427578548853, 0.22480163871931172] ***
*** finished computation of 7 references, err: [Inf, 0.4060000000224815, 0.2731520641278902, 0.23563092670791388, 0.2294773903851731, 0.2281657043525544, 0.22566427578548853, 0.22480163871931172] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 9]]
** centroid: 4, normalized-entropy: 0.9426831892554921, [(2, 16), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.2068000173440616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2068000173440616, 0.28706744700109627] ***
*** starting iteration: 2; err: [Inf, 2.2068000173440616, 0.28706744700109627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2068000173440616, 0.28706744700109627, 0.26669902829573894] ***
*** starting iteration: 3; err: [Inf, 2.2068000173440616, 0.28706744700109627, 0.26669902829573894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2068000173440616, 0.28706744700109627, 0.26669902829573894, 0.26669902829573894] ***
*** finished computation of 7 references, err: [Inf, 2.2068000173440616, 0.28706744700109627, 0.26669902829573894, 0.26669902829573894] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9199999999999999, 0.9199999999999999, 0.9, 0.8999999999999999, 0.8933333333333334, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.9733333333333333
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.710000000000001, 2.8099999999999996, 4.200000000000001, 1.2799999999999998], [4.8, 3.215, 1.475, 0.22000000000000003], [7.4, 2.9875, 6.325, 2.0625], [6.3999999999999995, 2.9999999999999996, 4.6, 1.45625], [5.9625, 2.725, 4.949999999999999, 1.7875], [6.5, 3.0357142857142856, 5.471428571428571, 2.128571428571429], [5.444444444444445, 2.4444444444444446, 3.7222222222222223, 1.1333333333333335], [5.2666666666666675, 3.706666666666666, 1.5199999999999998, 0.29333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 2, 3, 3, 2, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.512499999999999, 2.63125, 3.9625, 1.24375], [6.1, 3.0599999999999996, 4.72, 1.52], [6.066666666666666, 2.7777777777777777, 4.966666666666666, 1.8111111111111111], [6.528571428571429, 3.2714285714285714, 5.414285714285714, 2.271428571428572], [6.4818181818181815, 2.772727272727273, 4.536363636363636, 1.4000000000000001], [5.011764705882353, 3.429411764705883, 1.4529411764705882, 0.25000000000000006], [7.533333333333334, 3.266666666666667, 6.25, 2.0500000000000003], [6.574999999999999, 2.9583333333333335, 5.641666666666667, 2.0916666666666672]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 3, 2, 1, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.006451612903227, 3.3967741935483873, 1.441935483870968, 0.22903225806451624], [5.5, 2.638095238095238, 3.9476190476190474, 1.2333333333333334], [7.5600000000000005, 2.8199999999999994, 6.42, 2.0599999999999996], [6.48, 3.066666666666667, 5.466666666666667, 2.1733333333333333], [6.385714285714286, 2.900000000000001, 4.721428571428572, 1.492857142857143], [5.975, 2.65, 5.0875, 1.7750000000000001], [7.6000000000000005, 3.733333333333333, 6.400000000000001, 2.2333333333333334], [7.033333333333334, 2.9, 5.866666666666667, 1.7333333333333334]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 3, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[95, 7, 2, 17, 1, 34, 2, 1, 34, 13, 5, 31, 7, 24, 25, 41, 20, 2, 38, 11, 23, 35, 2, 33, 2, 34, 35, 18, 3, 35, 37, 37, 37, 32, 20, 21, 30, 17, 45, 14, 43, 28, 42, 33, 3, 34, 34, 29, 13, 1, 23, 30, 33, 37, 29, 34, 22, 39, 32, 22, 35, 1, 49, 31, 36, 14, 38, 37, 21, 36, 46, 29, 52, 47, 22, 45, 44, 25, 38, 44, 50, 58, 30, 24, 8, 39, 29, 37, 49, 41, 34, 45, 15, 27, 38, 67, 27, 26, 7, 42, 40, 27, 32, 40, 33, 42, 48, 66, 37, 42, 35, 36, 35, 33, 43, 30, 37, 44, 34, 49, 27, 1, 46, 22, 30, 16, 46, 52, 28, 28, 43, 26, 18, 30, 37, 47, 27, 21, 26, 16, 23, 36, 32, 31, 35, 47, 41, 11, 41, 48, 46, 22, 29, 50, 42, 30, 33, 37, 34, 24, 24, 21, 51, 33, 42, 46, 40, 39, 23, 27, 40, 46, 11, 28, 48, 29, 26, 40, 38, 25, 74, 21, 47, 40, 32, 24, 28, 40, 43, 26, 31, 41, 55, 35, 29, 31, 22, 28, 45, 41, 21, 21, 23, 23, 64, 45, 34, 58, 37, 39, 46, 33, 36, 26, 65, 48, 25, 36, 30, 18, 15, 21, 42, 49, 23, 38, 38, 47, 40, 31, 41, 26, 64, 31, 41, 42, 57, 51, 29, 31, 30, 39, 56, 46, 31, 58, 1, 38, 39, 20, 29, 32, 27, 39, 32, 24, 31, 32, 39, 23, 17, 33, 46, 33, 55, 37, 1, 20, 34, 43, 36, 28, 51, 26, 37, 31, 46, 43, 30, 41, 35, 67, 32, 45, 31, 41, 34, 28, 22, 27, 33, 60, 54, 59, 68, 44, 37, 32, 35, 41]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6289999999999999, speedup = 0.3953718279226458, eval_ratio = 0.041147)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3793402777777779,"recall":0.3793402777777779,"f1":null,"seconds":6.906874477863312e-5,"exhaustive_search_seconds":0.00034675002098083496,"evaluations":339.0234375,"distances_sum":1724.7165516660164}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5425347222222222,"recall":0.5425347222222222,"f1":0.5425347222222222,"seconds":0.00010444782674312592,"exhaustive_search_seconds":0.00034675002098083496,"evaluations":378.0859375,"distances_sum":1612.3350076406548}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888886,"recall":0.6701388888888886,"f1":0.6701388888888886,"seconds":0.00024339556694030762,"exhaustive_search_seconds":0.00034675002098083496,"evaluations":419.3359375,"distances_sum":1563.6212139876402}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7447916666666659,"recall":0.7447916666666659,"f1":0.7447916666666659,"seconds":0.0001583639532327652,"exhaustive_search_seconds":0.00034675002098083496,"evaluations":458.65625,"distances_sum":1539.4750295966755}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7977430555555546,"recall":0.7977430555555546,"f1":0.7977430555555546,"seconds":0.0001994408667087555,"exhaustive_search_seconds":0.00034675002098083496,"evaluations":497.796875,"distances_sum":1526.6041418141383}
KCenters.DeloneInvIndex> reached performance {"precision":0.8454861111111098,"recall":0.8454861111111098,"f1":0.8454861111111098,"seconds":0.0002230815589427948,"exhaustive_search_seconds":0.00034675002098083496,"evaluations":536.921875,"distances_sum":1514.660753723283}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8079999999999998, speedup = 1.6668590298483537, eval_ratio = 0.053183)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
