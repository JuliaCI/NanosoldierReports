Julia Version 1.4.0-DEV.646
Commit ce260dc47d (2019-12-19 21:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataFrames ────────────────── v0.20.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Parsers ───────────────────── v0.3.10
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Missings ──────────────────── v0.4.3
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.4
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_3UA8ll/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_3UA8ll/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_3UA8ll/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 162.6
[ Info: 74.39
[ Info: 43.91000000000001
[ Info: 26.99999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 76.86000119157046
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.105161281515848
inertia(cdnet.distances) = 23.87555185212602
inertia(crand.distances) = 21.12632337814408
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8066907051282061,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":7.921875,"distances_sum":2018.1090900685774}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6993471805971812,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":7.3046875,"distances_sum":1567.409109383319}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.041699528694153e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":5.3671875,"distances_sum":479.68496932302503}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8066907051282061,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":7.921875,"distances_sum":2018.1090900685774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8495743839493849,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":8.046875,"distances_sum":2335.790084978788}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452609890109894,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":8.6953125,"distances_sum":2961.498333323663}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452609890109894,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":8.6953125,"distances_sum":2961.498333323663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452609890109894,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":8.6953125,"distances_sum":2961.498333323663}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9452609890109894,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":4.343688488006592e-6,"evaluations":8.6953125,"distances_sum":2961.498333323663}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6926108613608618,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1953125,"distances_sum":1348.5205216112224}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.65625,"distances_sum":1097.386355702784}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.54296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.54296875,"f1":0.6926108613608618,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1953125,"distances_sum":1348.5205216112224}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.7013857670107676,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.03125,"distances_sum":1424.7259973931698}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.7013857670107676,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.03125,"distances_sum":1424.7259973931698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.913075466200467,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2458.3355036970806}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9058987887112894,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2461.357929485704}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.791829004329005,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.265625,"distances_sum":1790.4960302528586}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8624000999001008,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9375,"distances_sum":2125.486011024457}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.913075466200467,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2458.3355036970806}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8505859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.913075466200467,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2458.3355036970806}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8467724983349991,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2578125,"distances_sum":2089.0051106272067}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.54296875,"f1":null,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.3203125,"distances_sum":1423.1274021891634}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8467724983349991,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2578125,"distances_sum":2089.0051106272067}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9139854936729945,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6796875,"distances_sum":2469.1832584230806}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9139854936729945,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6796875,"distances_sum":2469.1832584230806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.927673368298369,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7109375,"distances_sum":2603.959978440627}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575206043956048,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2751.9848322618277}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9473302738927746,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7109375,"distances_sum":2739.0307559590233}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622023809523814,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2826.790839963413}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622023809523814,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2826.790839963413}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622023809523814,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2826.790839963413}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.2265625,"distances_sum":939.3742345994642}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4033203125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4033203125,"f1":null,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.2265625,"distances_sum":939.3742345994642}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.91253173909424,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.484375,"distances_sum":2412.8080792303267}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8515625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.91253173909424,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.484375,"distances_sum":2412.8080792303267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9374713827838834,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.671875,"distances_sum":2624.4465810017227}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9450434981684989,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.625,"distances_sum":2662.182037399947}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9450434981684989,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.625,"distances_sum":2662.182037399947}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9450434981684989,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.625,"distances_sum":2662.182037399947}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4501953125,"f1":null,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.6171875,"distances_sum":1130.979663567485}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7989541708291716,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0078125,"distances_sum":1846.9518340967866}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7848425879675888,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.828125,"distances_sum":1784.8008676479212}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7989541708291716,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0078125,"distances_sum":1846.9518340967866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9510130494505501,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":2849.6379610960325}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8305470571095579,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.4609375,"distances_sum":2014.0263008233305}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9510130494505501,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":2849.6379610960325}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.972229853479854,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9375,"distances_sum":3000.568202563569}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523695054945059,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.84375,"distances_sum":2853.6889459312597}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755437271062275,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":3031.578653315424}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612980769230773,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.890625,"distances_sum":2906.0582080578083}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755437271062275,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":3031.578653315424}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9755437271062275,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":3031.578653315424}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.71875,"distances_sum":1006.955804419309}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7134178321678327,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.3671875,"distances_sum":1388.2647373746297}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7134178321678327,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.3671875,"distances_sum":1388.2647373746297}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8540381493506501,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.40625,"distances_sum":2039.856151842121}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9155282217782227,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7734375,"distances_sum":2411.376984105762}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9155282217782227,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7734375,"distances_sum":2411.376984105762}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9497309981684987,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7890625,"distances_sum":2671.950827965842}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9497309981684987,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7890625,"distances_sum":2671.950827965842}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9497309981684987,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.7890625,"distances_sum":2671.950827965842}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7077823218448226,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.4921875,"distances_sum":1547.293508003314}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.809087787212788,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.84375,"distances_sum":2009.6359474617404}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.809087787212788,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.84375,"distances_sum":2009.6359474617404}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8808040917415926,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.25,"distances_sum":2435.0331798481607}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9270776098901107,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5,"distances_sum":2827.83942563123}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.864529047341548,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.109375,"distances_sum":2338.0470072055286}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9399839743589753,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5234375,"distances_sum":2903.2247191295287}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9230998168498176,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.421875,"distances_sum":2763.6217984517766}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8752133283383291,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.2890625,"distances_sum":2411.71078453705}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9399839743589753,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5234375,"distances_sum":2903.2247191295287}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654075091575096,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.84375,"distances_sum":3177.1671867781}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719322344322349,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":3205.9911137307267}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934072,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.71875,"distances_sum":3065.2851487150297}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428456959706965,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5546875,"distances_sum":2974.753117397513}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9541494963369969,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7890625,"distances_sum":3058.9070393853185}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719322344322349,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":3205.9911137307267}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719322344322349,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":3205.9911137307267}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":4.578125,"distances_sum":626.1575203465202}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8655224983349994,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":7.8671875,"distances_sum":2127.1309994947746}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8655224983349994,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":7.8671875,"distances_sum":2127.1309994947746}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487637362637368,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.6640625,"distances_sum":2789.621172153703}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9487637362637368,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.6640625,"distances_sum":2789.621172153703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9778273809523812,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.890625,"distances_sum":3003.0441236083216}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9778273809523812,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.890625,"distances_sum":3003.0441236083216}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9778273809523812,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.890625,"distances_sum":3003.0441236083216}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":4.4296875,"distances_sum":507.4431877976322}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.466796875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.466796875,"f1":0.6190857753357756,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":6.1875,"distances_sum":1236.658060741689}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8695968961593972,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":7.9765625,"distances_sum":2258.655413620158}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8695968961593972,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":7.9765625,"distances_sum":2258.655413620158}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9295246420246429,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.6328125,"distances_sum":2700.8773219223417}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9075955294705303,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.390625,"distances_sum":2479.3320397309744}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9295246420246429,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.6328125,"distances_sum":2700.8773219223417}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9366159881784888,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.625,"distances_sum":2743.875982711977}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9543211996336999,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.7109375,"distances_sum":2891.951129273222}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9489068223443228,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.71875,"distances_sum":2818.4097635953303}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607200091575094,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.828125,"distances_sum":2885.6236236994187}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.932457646520147,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.5546875,"distances_sum":2726.4083783334017}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607200091575094,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.828125,"distances_sum":2885.6236236994187}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607200091575094,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.828125,"distances_sum":2885.6236236994187}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2529296875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.864988684654236e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.9453125,"distances_sum":664.5061590994015}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8005848318348325,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.65625,"distances_sum":1766.3155097647773}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.8005848318348325,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.65625,"distances_sum":1766.3155097647773}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8690460581085588,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.9453125,"distances_sum":2146.9157223132515}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8690460581085588,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.9453125,"distances_sum":2146.9157223132515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.935078983516484,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.5546875,"distances_sum":2692.6643818793623}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9361721611721616,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6328125,"distances_sum":2664.8957168440634}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8874979187479196,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.203125,"distances_sum":2281.939928232719}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9361721611721616,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6328125,"distances_sum":2664.8957168440634}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8896484375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9361721611721616,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.6328125,"distances_sum":2664.8957168440634}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5126953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5126953125,"f1":0.6630055708180714,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.4921875,"distances_sum":1351.920345560228}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5087890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5087890625,"f1":0.6601826992451996,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.5,"distances_sum":1361.2864978370358}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5126953125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5126953125,"f1":0.6630055708180714,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.4921875,"distances_sum":1351.920345560228}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9073150807525813,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.375,"distances_sum":2544.994241843886}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5205078125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5205078125,"f1":null,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.6015625,"distances_sum":1312.5575900067538}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9233261530136535,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.4375,"distances_sum":2675.4252182320843}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8624037420912426,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.9296875,"distances_sum":2240.4553556167075}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8961824633699643,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.296875,"distances_sum":2483.247153647361}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8786130536130544,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.046875,"distances_sum":2343.4205274449464}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8555224289599296,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.9765625,"distances_sum":2181.1793108326165}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9233261530136535,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.4375,"distances_sum":2675.4252182320843}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9334306318681325,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.484375,"distances_sum":2812.489548481419}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541755119880125,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7265625,"distances_sum":2914.517351570654}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625228937728942,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2949.9156184277367}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498798076923082,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6953125,"distances_sum":2890.140769410357}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":13,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485176282051287,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6953125,"distances_sum":2875.3658357080044}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9357429029304033,"seconds":6.61797821521759e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.515625,"distances_sum":2755.282681220803}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625228937728942,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2949.9156184277367}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625228937728942,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2949.9156184277367}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7873839701964708,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.3359375,"distances_sum":1521.4879583274226}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.699414127539128,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.5390625,"distances_sum":1196.5471370652917}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8459519647019655,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.921875,"distances_sum":1746.1629474025012}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8459519647019655,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.921875,"distances_sum":1746.1629474025012}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556433150183155,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8359375,"distances_sum":2464.8048374755413}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8884131493506501,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9453125,"distances_sum":1944.0467660983336}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.955846757409258,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8515625,"distances_sum":2483.9628526270644}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.89283476939727,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.046875,"distances_sum":2001.6691656967505}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.955846757409258,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8515625,"distances_sum":2483.9628526270644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642170329670333,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9140625,"distances_sum":2514.260555970327}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580586080586085,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.875,"distances_sum":2478.2295336348193}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587854853479858,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2500.073903894575}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642170329670333,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9140625,"distances_sum":2514.260555970327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642170329670333,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9140625,"distances_sum":2514.260555970327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.263671875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.263671875,"f1":null,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.3046875,"distances_sum":609.264619028372}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.2109375,"distances_sum":889.2510760456494}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4384765625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4384765625,"f1":null,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.2109375,"distances_sum":889.2510760456494}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7716075591075597,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.796875,"distances_sum":1449.638460920846}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8610899517149526,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.1484375,"distances_sum":1846.43148219795}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8610899517149526,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.1484375,"distances_sum":1846.43148219795}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543014277389279,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2464.696472432724}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620192307692313,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":2524.837610461636}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9069773976023984,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.34375,"distances_sum":2099.7417288160013}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.953582875457876,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8203125,"distances_sum":2490.185472581159}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620192307692313,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":2524.837610461636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9620192307692313,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":2524.837610461636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.2421875,"distances_sum":905.7354388005903}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.03125,"distances_sum":779.0035069719728}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.03125,"distances_sum":453.9722106197027}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2265625,"f1":null,"seconds":3.3657997846603394e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.1875,"distances_sum":503.4952927115464}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4248046875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.2421875,"distances_sum":905.7354388005903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7660256410256416,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.6328125,"distances_sum":1481.9895236087877}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9096871878121886,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2734375,"distances_sum":2153.0946123479976}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9166297244422251,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.359375,"distances_sum":2206.013952725555}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7815091158841166,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.84375,"distances_sum":1495.8239931901026}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8569742757242765,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1328125,"distances_sum":1865.3271360322142}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5244140625,"f1":0.6728185009435014,"seconds":4.069879651069641e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.453125,"distances_sum":1135.7127998058518}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.6983613608613612,"seconds":3.864988684654236e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.671875,"distances_sum":1217.9107489648684}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9166297244422251,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.359375,"distances_sum":2206.013952725555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491701007326012,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2489.234686486383}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9302744130869139,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.765625,"distances_sum":2334.684243796839}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546760531135537,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2495.185585650865}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617044413919419,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2587.7871111252884}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617044413919419,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2587.7871111252884}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617044413919419,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2587.7871111252884}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.671875,"distances_sum":590.2135682257365}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2509765625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.671875,"distances_sum":590.2135682257365}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2509765625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.671875,"distances_sum":590.2135682257365}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2509765625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.680586814880371e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.671875,"distances_sum":590.2135682257365}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7877003205128214,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.1640625,"distances_sum":1543.6052462617843}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.2354146242141724e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.25,"distances_sum":467.7692340696667}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.333984375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.333984375,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.71875,"distances_sum":778.40414681906}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7877003205128214,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.1640625,"distances_sum":1543.6052462617843}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547161172161176,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.765625,"distances_sum":2535.6418636636704}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9024496336996345,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7890625,"distances_sum":2075.1686423987962}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7912413974913982,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.1484375,"distances_sum":1507.203182924949}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9547161172161176,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.765625,"distances_sum":2535.6418636636704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599759615384621,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.796875,"distances_sum":2549.197210703838}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9710565476190482,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":2641.197157778222}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591975732600739,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7734375,"distances_sum":2553.112149421776}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9710565476190482,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":2641.197157778222}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9710565476190482,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":2641.197157778222}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8421961718836729,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1796875,"distances_sum":1840.8901677990978}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":2.913177013397217e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.0078125,"distances_sum":478.15863810981614}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":2.99699604511261e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.3125,"distances_sum":548.7408830965206}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8421961718836729,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1796875,"distances_sum":1840.8901677990978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9232517482517489,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.734375,"distances_sum":2340.3857677329543}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9473099816849826,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2567.324453806406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.857649642024643,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.34375,"distances_sum":1892.4715230028835}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9473099816849826,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2567.324453806406}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644402472527479,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2631.56947167619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9668154761904766,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2668.129205249519}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670959249084256,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2669.8173184787556}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578582875457882,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2596.84817646568}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566105769230775,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2602.869890637341}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670959249084256,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2669.8173184787556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670959249084256,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2669.8173184787556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":6.15625,"distances_sum":552.2879980723442}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7882117882117892,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.7109375,"distances_sum":1620.2083309520788}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7882117882117892,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.7109375,"distances_sum":1620.2083309520788}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9528159340659346,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.8203125,"distances_sum":2588.4945179894244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8560666763791771,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.046875,"distances_sum":1968.6421121142007}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.856321803196804,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.140625,"distances_sum":1928.7232317195276}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7887633200133207,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.875,"distances_sum":1618.387514060545}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9528159340659346,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.8203125,"distances_sum":2588.4945179894244}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664835164835168,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.890625,"distances_sum":2680.062657530539}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675054112554116,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.890625,"distances_sum":2687.807389544861}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675054112554116,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.890625,"distances_sum":2687.807389544861}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9675054112554116,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.890625,"distances_sum":2687.807389544861}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.453125,"distances_sum":899.7171542517875}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3681640625,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.453125,"distances_sum":899.7171542517875}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.6932390526140532,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.671875,"distances_sum":1311.4669083226777}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.5693359375,"f1":null,"seconds":4.02890145778656e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.75,"distances_sum":1290.2821788753995}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8509448884448892,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.875,"distances_sum":1997.1230948466055}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7802050380175389,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.21875,"distances_sum":1656.2459313939173}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8509448884448892,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.875,"distances_sum":1997.1230948466055}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9328385156510163,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6328125,"distances_sum":2536.478627271838}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8885796495171502,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.171875,"distances_sum":2187.604568654016}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9410027472527479,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.671875,"distances_sum":2598.1531983152595}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9023013444888452,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.34375,"distances_sum":2246.670277544859}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8805095945720952,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0859375,"distances_sum":2156.6648898178487}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9253605769230776,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.71875,"distances_sum":2449.6161291531844}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9410027472527479,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.671875,"distances_sum":2598.1531983152595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8955078125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9410027472527479,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.671875,"distances_sum":2598.1531983152595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3740234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3740234375,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.8828125,"distances_sum":921.5760048313074}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6025390625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.6025390625,"f1":0.7374420718170724,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.4453125,"distances_sum":1392.8220317699113}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7737963425463432,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.3984375,"distances_sum":1487.8287049445823}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7737963425463432,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.3984375,"distances_sum":1487.8287049445823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.898323031135532,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.546875,"distances_sum":2161.5685529682364}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9326179029304037,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7265625,"distances_sum":2491.922180560918}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.93729967948718,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2424.8643098279}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8575039543789552,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.1953125,"distances_sum":1950.2821775594205}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.93729967948718,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2424.8643098279}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168502,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2718.0391970271057}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533539377289382,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2573.7290719770485}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9631353021978027,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9296875,"distances_sum":2633.368635906621}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525755494505499,"seconds":4.63239848613739e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8203125,"distances_sum":2602.7428545189027}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168502,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2718.0391970271057}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168502,"seconds":6.2230974435806274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2718.0391970271057}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7761717449217455,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.5234375,"distances_sum":1613.6614045128324}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.7761717449217455,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.5234375,"distances_sum":1613.6614045128324}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472184065934072,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2632.1748458635093}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9472184065934072,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2632.1748458635093}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673763736263741,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8984375,"distances_sum":2734.965356112841}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9485748626373632,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2635.0066401676163}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673763736263741,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8984375,"distances_sum":2734.965356112841}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673763736263741,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8984375,"distances_sum":2734.965356112841}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8040287837162846,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.671875,"distances_sum":1710.5380916998886}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.583984375,"f1":null,"seconds":4.002824425697327e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.734375,"distances_sum":1350.5558478813152}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8040287837162846,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.671875,"distances_sum":1710.5380916998886}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8052473568098576,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.6015625,"distances_sum":1676.118084461413}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8588526057276066,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.125,"distances_sum":1985.1885291818514}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8490858100233108,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0703125,"distances_sum":1921.8778103272032}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8588526057276066,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.125,"distances_sum":1985.1885291818514}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611664377289381,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.796875,"distances_sum":2716.9339616796137}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9347272519147523,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.578125,"distances_sum":2563.0277671341278}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9144865551115557,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.40625,"distances_sum":2290.2095521582814}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9075122793872803,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.2734375,"distances_sum":2268.3413100343605}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9130239552114561,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.671875,"distances_sum":2334.251787771691}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9126659798534806,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3125,"distances_sum":2274.697903721842}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9611664377289381,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.796875,"distances_sum":2716.9339616796137}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9611664377289381,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.796875,"distances_sum":2716.9339616796137}}, n: 9
inertia(cfft.distances) = 18.189522150072154
inertia(cdnet.distances) = 27.19233938285083
inertia(crand.distances) = 19.652144334423745
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> k=7
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.88
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9177777777777777
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 1, 3, 3, 3, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 2, 1]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 14]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 9), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 8, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
nc.class_map = [2, 3, 1, 3, 2, 2, 3, 1, 2, 1, 3, 1, 3]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 13 centroids; started with 12
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.4217333365707918] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4217333365707918, 0.1767395472974708] ***
*** starting iteration: 2; err: [Inf, 0.4217333365707918, 0.1767395472974708] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4217333365707918, 0.1767395472974708, 0.16508101920836368] ***
*** starting iteration: 3; err: [Inf, 0.4217333365707918, 0.1767395472974708, 0.16508101920836368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4217333365707918, 0.1767395472974708, 0.16508101920836368, 0.16138446277218602] ***
*** starting iteration: 4; err: [Inf, 0.4217333365707918, 0.1767395472974708, 0.16508101920836368, 0.16138446277218602] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4217333365707918, 0.1767395472974708, 0.16508101920836368, 0.16138446277218602, 0.16058824682873996] ***
*** finished computation of 12 references, err: [Inf, 0.4217333365707918, 0.1767395472974708, 0.16508101920836368, 0.16138446277218602, 0.16058824682873996] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 10, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 2]]
** centroid: 12, normalized-entropy: 1.0, [(2, 2), (3, 2)]
finished with 14 centroids; started with 12
acc = 0.9466666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 11.178300047705527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795] ***
*** starting iteration: 2; err: [Inf, 11.178300047705527, 1.3138997604992795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054] ***
*** starting iteration: 3; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117] ***
*** starting iteration: 4; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596] ***
*** starting iteration: 5; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363] ***
*** starting iteration: 6; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464] ***
*** starting iteration: 7; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725] ***
*** starting iteration: 8; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509] ***
*** starting iteration: 9; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472] ***
*** starting iteration: 10; err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062] ***
*** finished computation of 3 references, err: [Inf, 11.178300047705527, 1.3138997604992795, 0.8959670752506054, 0.7422847981099117, 0.6262556272059596, 0.5907375962553363, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1288999983577657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1288999983577657, 0.9498382412410511] ***
*** starting iteration: 2; err: [Inf, 1.1288999983577657, 0.9498382412410511] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1288999983577657, 0.9498382412410511, 0.9489499618488481] ***
*** finished computation of 3 references, err: [Inf, 1.1288999983577657, 0.9498382412410511, 0.9489499618488481] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 36]]
** centroid: 1, normalized-entropy: 0.9916178297881032, [(2, 29), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.184399997529942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583] ***
*** starting iteration: 2; err: [Inf, 1.184399997529942, 0.9493941802891583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338] ***
*** starting iteration: 3; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362] ***
*** starting iteration: 4; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084] ***
*** starting iteration: 5; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593] ***
*** starting iteration: 6; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872] ***
*** starting iteration: 7; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186] ***
*** starting iteration: 8; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186, 0.6287714234013387] ***
*** starting iteration: 9; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186, 0.6287714234013387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186, 0.6287714234013387, 0.566140119940023] ***
*** starting iteration: 10; err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186, 0.6287714234013387, 0.566140119940023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186, 0.6287714234013387, 0.566140119940023, 0.5536429499329756] ***
*** finished computation of 3 references, err: [Inf, 1.184399997529942, 0.9493941802891583, 0.9411956439704338, 0.9293140830924362, 0.9196648138348084, 0.9158141393882593, 0.8849080447104872, 0.7595567327741186, 0.6287714234013387, 0.566140119940023, 0.5536429499329756] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 32]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 11), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.019841062203191] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.019841062203191, 0.6479220200014548] ***
*** finished computation of 3 references, err: [Inf, 3.019841062203191, 0.6479220200014548] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 24, 7]]
** centroid: 1, normalized-entropy: 0.7706290693639406, [(2, 24), (3, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 3, 0]]
** centroid: 2, normalized-entropy: 0.4220005168831531, [(1, 32), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 25]]
** centroid: 3, normalized-entropy: 0.8337649072106652, [(2, 9), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1134917008010816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1134917008010816, 0.39397916943241157] ***
*** finished computation of 3 references, err: [Inf, 1.1134917008010816, 0.39397916943241157] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 35]]
** centroid: 2, normalized-entropy: 0.6006085754131871, [(2, 6), (3, 35)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.813017727500245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.813017727500245, 0.6417502156251973] ***
*** finished computation of 3 references, err: [Inf, 2.813017727500245, 0.6417502156251973] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 6, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 2), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 32]]
** centroid: 3, normalized-entropy: 0.9982545693874832, [(2, 29), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.322900008198424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962] ***
*** starting iteration: 2; err: [Inf, 1.322900008198424, 0.6197873747152962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208] ***
*** starting iteration: 3; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464] ***
*** starting iteration: 4; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725] ***
*** starting iteration: 5; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509] ***
*** starting iteration: 6; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472] ***
*** starting iteration: 7; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062] ***
*** starting iteration: 8; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062, 0.5192760256297357] ***
*** starting iteration: 9; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062, 0.5192760256297357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062, 0.5192760256297357, 0.5181387932108957] ***
*** starting iteration: 10; err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062, 0.5192760256297357, 0.5181387932108957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062, 0.5192760256297357, 0.5181387932108957, 0.5181387932108957] ***
*** finished computation of 3 references, err: [Inf, 1.322900008198424, 0.6197873747152962, 0.5872228708321208, 0.5799645731499464, 0.5756465233021725, 0.5638142703646509, 0.5441219801402472, 0.5267291218126062, 0.5192760256297357, 0.5181387932108957, 0.5181387932108957] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 12]]
** centroid: 3, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.227899999373916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.227899999373916, 0.6090230278306282] ***
*** starting iteration: 2; err: [Inf, 1.227899999373916, 0.6090230278306282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541] ***
*** starting iteration: 3; err: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541, 0.5242886403824005] ***
*** starting iteration: 4; err: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541, 0.5242886403824005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541, 0.5242886403824005, 0.5213181047059554] ***
*** starting iteration: 5; err: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541, 0.5242886403824005, 0.5213181047059554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541, 0.5242886403824005, 0.5213181047059554, 0.5205546558105992] ***
*** finished computation of 3 references, err: [Inf, 1.227899999373916, 0.6090230278306282, 0.5455310422646541, 0.5242886403824005, 0.5213181047059554, 0.5205546558105992] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 11]]
** centroid: 3, normalized-entropy: 0.8582307926411409, [(2, 28), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.138599947885736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.138599947885736, 1.199055219812641] ***
*** starting iteration: 2; err: [Inf, 6.138599947885736, 1.199055219812641] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376] ***
*** starting iteration: 3; err: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554] ***
*** starting iteration: 4; err: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554, 0.5424549115942855] ***
*** starting iteration: 5; err: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554, 0.5424549115942855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554, 0.5424549115942855, 0.5204598137961431] ***
*** starting iteration: 6; err: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554, 0.5424549115942855, 0.5204598137961431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554, 0.5424549115942855, 0.5204598137961431, 0.5197562914374724] ***
*** finished computation of 3 references, err: [Inf, 6.138599947885736, 1.199055219812641, 0.6794144033097376, 0.5923703497223554, 0.5424549115942855, 0.5204598137961431, 0.5197562914374724] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 6]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7321000001921516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066] ***
*** starting iteration: 2; err: [Inf, 0.7321000001921516, 0.3232435270112066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506] ***
*** starting iteration: 3; err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844] ***
*** starting iteration: 4; err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302] ***
*** starting iteration: 5; err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497] ***
*** starting iteration: 6; err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497, 0.23453757059331382] ***
*** starting iteration: 7; err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497, 0.23453757059331382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497, 0.23453757059331382, 0.2334428286716489] ***
*** starting iteration: 8; err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497, 0.23453757059331382, 0.2334428286716489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497, 0.23453757059331382, 0.2334428286716489, 0.2334428286716489] ***
*** finished computation of 7 references, err: [Inf, 0.7321000001921516, 0.3232435270112066, 0.2622832609557506, 0.24463908797288844, 0.24061283248943302, 0.23602054309101497, 0.23453757059331382, 0.2334428286716489, 0.2334428286716489] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 11]]
** centroid: 1, normalized-entropy: 0.9480782435939054, [(2, 19), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8223000043369649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442] ***
*** starting iteration: 2; err: [Inf, 0.8223000043369649, 0.3415423956625442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419] ***
*** starting iteration: 3; err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564] ***
*** starting iteration: 4; err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111] ***
*** starting iteration: 5; err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257] ***
*** starting iteration: 6; err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257, 0.2510309060141827] ***
*** starting iteration: 7; err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257, 0.2510309060141827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257, 0.2510309060141827, 0.2486769290249989] ***
*** starting iteration: 8; err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257, 0.2510309060141827, 0.2486769290249989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257, 0.2510309060141827, 0.2486769290249989, 0.2486769290249989] ***
*** finished computation of 7 references, err: [Inf, 0.8223000043369649, 0.3415423956625442, 0.3017828404659419, 0.2800818085057564, 0.2691169771408111, 0.25997391315014257, 0.2510309060141827, 0.2486769290249989, 0.2486769290249989] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 11]]
** centroid: 1, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8405000074710596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8405000074710596, 0.3371553165006301] ***
*** starting iteration: 2; err: [Inf, 0.8405000074710596, 0.3371553165006301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584] ***
*** starting iteration: 3; err: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314] ***
*** starting iteration: 4; err: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314, 0.3219811731174639] ***
*** starting iteration: 5; err: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314, 0.3219811731174639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314, 0.3219811731174639, 0.31977913890713017] ***
*** starting iteration: 6; err: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314, 0.3219811731174639, 0.31977913890713017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314, 0.3219811731174639, 0.31977913890713017, 0.31977913890713017] ***
*** finished computation of 7 references, err: [Inf, 0.8405000074710596, 0.3371553165006301, 0.33158612031806584, 0.32726867198910314, 0.3219811731174639, 0.31977913890713017, 0.31977913890713017] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 18]]
** centroid: 5, normalized-entropy: 0.9975025463691153, [(2, 16), (3, 18)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6108665860561604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6108665860561604, 0.2712460986027491] ***
*** starting iteration: 2; err: [Inf, 0.6108665860561604, 0.2712460986027491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6108665860561604, 0.2712460986027491, 0.2375161948999767] ***
*** starting iteration: 3; err: [Inf, 0.6108665860561604, 0.2712460986027491, 0.2375161948999767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6108665860561604, 0.2712460986027491, 0.2375161948999767, 0.2177664993389712] ***
*** finished computation of 7 references, err: [Inf, 0.6108665860561604, 0.2712460986027491, 0.2375161948999767, 0.2177664993389712] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 11]]
** centroid: 5, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2745351452861094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2745351452861094, 0.23058004661878959] ***
*** starting iteration: 2; err: [Inf, 0.2745351452861094, 0.23058004661878959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2745351452861094, 0.23058004661878959, 0.2273912179795362] ***
*** starting iteration: 3; err: [Inf, 0.2745351452861094, 0.23058004661878959, 0.2273912179795362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2745351452861094, 0.23058004661878959, 0.2273912179795362, 0.22354986785260705] ***
*** finished computation of 7 references, err: [Inf, 0.2745351452861094, 0.23058004661878959, 0.2273912179795362, 0.22354986785260705] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 12]]
** centroid: 3, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38985337677479137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38985337677479137, 0.215425814087666] ***
*** starting iteration: 2; err: [Inf, 0.38985337677479137, 0.215425814087666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38985337677479137, 0.215425814087666, 0.20936579209366923] ***
*** starting iteration: 3; err: [Inf, 0.38985337677479137, 0.215425814087666, 0.20936579209366923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38985337677479137, 0.215425814087666, 0.20936579209366923, 0.2049036331727253] ***
*** finished computation of 7 references, err: [Inf, 0.38985337677479137, 0.215425814087666, 0.20936579209366923, 0.2049036331727253] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 9]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7884850835837435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7884850835837435, 0.3785959449475507] ***
*** finished computation of 3 references, err: [Inf, 0.7884850835837435, 0.3785959449475507] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 13]]
** centroid: 2, normalized-entropy: 0.842657877202239, [(2, 35), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 3, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4083551861398809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4083551861398809, 0.4760163218108891] ***
*** finished computation of 3 references, err: [Inf, 1.4083551861398809, 0.4760163218108891] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 27]]
** centroid: 1, normalized-entropy: 0.9990797181805819, [(2, 29), (3, 27)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.558158120525049] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.558158120525049, 0.6407900351207491] ***
*** finished computation of 3 references, err: [Inf, 7.558158120525049, 0.6407900351207491] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [11, 3, 0]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(1, 11), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 32]]
** centroid: 3, normalized-entropy: 1.0, [(2, 32), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5853000026536529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5853000026536529, 0.26925779580502207] ***
*** starting iteration: 2; err: [Inf, 0.5853000026536529, 0.26925779580502207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5853000026536529, 0.26925779580502207, 0.2311957723832214] ***
*** starting iteration: 3; err: [Inf, 0.5853000026536529, 0.26925779580502207, 0.2311957723832214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5853000026536529, 0.26925779580502207, 0.2311957723832214, 0.2218899905673648] ***
*** finished computation of 7 references, err: [Inf, 0.5853000026536529, 0.26925779580502207, 0.2311957723832214, 0.2218899905673648] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 11]]
** centroid: 1, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7558000063616994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7558000063616994, 0.35104765841432267] ***
*** starting iteration: 2; err: [Inf, 0.7558000063616994, 0.35104765841432267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7558000063616994, 0.35104765841432267, 0.2935776174151584] ***
*** starting iteration: 3; err: [Inf, 0.7558000063616994, 0.35104765841432267, 0.2935776174151584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7558000063616994, 0.35104765841432267, 0.2935776174151584, 0.28491620023438907] ***
*** finished computation of 7 references, err: [Inf, 0.7558000063616994, 0.35104765841432267, 0.2935776174151584, 0.28491620023438907] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 4: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.625100005514767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.625100005514767, 0.3298261663643663] ***
*** starting iteration: 2; err: [Inf, 0.625100005514767, 0.3298261663643663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.625100005514767, 0.3298261663643663, 0.23758816579974254] ***
*** starting iteration: 3; err: [Inf, 0.625100005514767, 0.3298261663643663, 0.23758816579974254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.625100005514767, 0.3298261663643663, 0.23758816579974254, 0.23071766782404585] ***
*** finished computation of 7 references, err: [Inf, 0.625100005514767, 0.3298261663643663, 0.23758816579974254, 0.23071766782404585] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 7]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7917033776354843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7917033776354843, 0.3667028463906422] ***
*** starting iteration: 2; err: [Inf, 0.7917033776354843, 0.3667028463906422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7917033776354843, 0.3667028463906422, 0.3653638467420785] ***
*** starting iteration: 3; err: [Inf, 0.7917033776354843, 0.3667028463906422, 0.3653638467420785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7917033776354843, 0.3667028463906422, 0.3653638467420785, 0.3648404960692945] ***
*** finished computation of 3 references, err: [Inf, 0.7917033776354843, 0.3667028463906422, 0.3653638467420785, 0.3648404960692945] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 12]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 36), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.126400692746691] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126400692746691, 0.3785783397604281] ***
*** starting iteration: 2; err: [Inf, 1.126400692746691, 0.3785783397604281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126400692746691, 0.3785783397604281, 0.3659861779367104] ***
*** starting iteration: 3; err: [Inf, 1.126400692746691, 0.3785783397604281, 0.3659861779367104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.126400692746691, 0.3785783397604281, 0.3659861779367104, 0.3659861779367104] ***
*** finished computation of 3 references, err: [Inf, 1.126400692746691, 0.3785783397604281, 0.3659861779367104, 0.3659861779367104] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7193890871544382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193890871544382, 0.3842958495304686] ***
*** starting iteration: 2; err: [Inf, 0.7193890871544382, 0.3842958495304686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193890871544382, 0.3842958495304686, 0.3799423816730912] ***
*** starting iteration: 3; err: [Inf, 0.7193890871544382, 0.3842958495304686, 0.3799423816730912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193890871544382, 0.3842958495304686, 0.3799423816730912, 0.3762130453558868] ***
*** finished computation of 3 references, err: [Inf, 0.7193890871544382, 0.3842958495304686, 0.3799423816730912, 0.3762130453558868] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 32]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1963999952201774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1963999952201774, 0.5181387932108957] ***
*** starting iteration: 2; err: [Inf, 1.1963999952201774, 0.5181387932108957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1963999952201774, 0.5181387932108957, 0.5181387932108957] ***
*** finished computation of 3 references, err: [Inf, 1.1963999952201774, 0.5181387932108957, 0.5181387932108957] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 12]]
** centroid: 3, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8122999986844406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8122999986844406, 0.5271328819617276] ***
*** starting iteration: 2; err: [Inf, 1.8122999986844406, 0.5271328819617276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8122999986844406, 0.5271328819617276, 0.5205546558105992] ***
*** starting iteration: 3; err: [Inf, 1.8122999986844406, 0.5271328819617276, 0.5205546558105992] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8122999986844406, 0.5271328819617276, 0.5205546558105992, 0.5205546558105992] ***
*** finished computation of 3 references, err: [Inf, 1.8122999986844406, 0.5271328819617276, 0.5205546558105992, 0.5205546558105992] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 11]]
** centroid: 3, normalized-entropy: 0.8582307926411409, [(2, 28), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5140999972219868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5140999972219868, 0.5601905261362894] ***
*** starting iteration: 2; err: [Inf, 1.5140999972219868, 0.5601905261362894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5140999972219868, 0.5601905261362894, 0.5244724865128916] ***
*** starting iteration: 3; err: [Inf, 1.5140999972219868, 0.5601905261362894, 0.5244724865128916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5140999972219868, 0.5601905261362894, 0.5244724865128916, 0.5197562914374724] ***
*** finished computation of 3 references, err: [Inf, 1.5140999972219868, 0.5601905261362894, 0.5244724865128916, 0.5197562914374724] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1593000100295534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1593000100295534, 0.5214139819099121] ***
*** starting iteration: 2; err: [Inf, 1.1593000100295534, 0.5214139819099121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1593000100295534, 0.5214139819099121, 0.5184172902084859] ***
*** starting iteration: 3; err: [Inf, 1.1593000100295534, 0.5214139819099121, 0.5184172902084859] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1593000100295534, 0.5214139819099121, 0.5184172902084859, 0.5184172902084859] ***
*** finished computation of 3 references, err: [Inf, 1.1593000100295534, 0.5214139819099121, 0.5184172902084859, 0.5184172902084859] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 12]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 36), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1839000101657682] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1839000101657682, 0.5970846235787374] ***
*** starting iteration: 2; err: [Inf, 1.1839000101657682, 0.5970846235787374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1839000101657682, 0.5970846235787374, 0.5455310422646541] ***
*** starting iteration: 3; err: [Inf, 1.1839000101657682, 0.5970846235787374, 0.5455310422646541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1839000101657682, 0.5970846235787374, 0.5455310422646541, 0.5242886403824005] ***
*** finished computation of 3 references, err: [Inf, 1.1839000101657682, 0.5970846235787374, 0.5455310422646541, 0.5242886403824005] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9566999957493643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9566999957493643, 0.5222976141110568] ***
*** starting iteration: 2; err: [Inf, 0.9566999957493643, 0.5222976141110568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9566999957493643, 0.5222976141110568, 0.521684313423283] ***
*** finished computation of 3 references, err: [Inf, 0.9566999957493643, 0.5222976141110568, 0.521684313423283] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 30]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 4), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 2]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(2, 31), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.097724236812594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.097724236812594, 0.37094571363154855] ***
*** finished computation of 3 references, err: [Inf, 1.097724236812594, 0.37094571363154855] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 13]]
** centroid: 3, normalized-entropy: 0.834648285181383, [(2, 36), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6311148578121064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6311148578121064, 0.39068771519427414] ***
*** finished computation of 3 references, err: [Inf, 0.6311148578121064, 0.39068771519427414] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 35]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 10), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7973274536608224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7973274536608224, 0.3609182668572196] ***
*** finished computation of 3 references, err: [Inf, 1.7973274536608224, 0.3609182668572196] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 5]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(2, 32), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.088500011199661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.088500011199661, 0.5900168634688824] ***
*** finished computation of 3 references, err: [Inf, 1.088500011199661, 0.5900168634688824] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 15]]
** centroid: 1, normalized-entropy: 0.8739810481273581, [(2, 36), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6381999934297977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6381999934297977, 0.5457845868455355] ***
*** finished computation of 3 references, err: [Inf, 1.6381999934297977, 0.5457845868455355] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 3, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9874999975245811] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9874999975245811, 0.5206018087198707] ***
*** finished computation of 3 references, err: [Inf, 0.9874999975245811, 0.5206018087198707] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 28]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 4]]
** centroid: 3, normalized-entropy: 0.5127091420308771, [(2, 31), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8525231313995133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8525231313995133, 0.3648404960692945] ***
*** starting iteration: 2; err: [Inf, 0.8525231313995133, 0.3648404960692945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8525231313995133, 0.3648404960692945, 0.3648404960692945] ***
*** finished computation of 3 references, err: [Inf, 0.8525231313995133, 0.3648404960692945, 0.3648404960692945] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 12]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 36), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7885554344990615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7885554344990615, 0.4171648562146818] ***
*** starting iteration: 2; err: [Inf, 0.7885554344990615, 0.4171648562146818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795] ***
*** starting iteration: 3; err: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094] ***
*** starting iteration: 4; err: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094, 0.3679488049543451] ***
*** starting iteration: 5; err: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094, 0.3679488049543451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094, 0.3679488049543451, 0.36655984482802767] ***
*** starting iteration: 6; err: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094, 0.3679488049543451, 0.36655984482802767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094, 0.3679488049543451, 0.36655984482802767, 0.3659861779367104] ***
*** finished computation of 3 references, err: [Inf, 0.7885554344990615, 0.4171648562146818, 0.39082632235912795, 0.3731780382212094, 0.3679488049543451, 0.36655984482802767, 0.3659861779367104] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 10]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6893499194244117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6893499194244117, 0.414175834016618] ***
*** starting iteration: 2; err: [Inf, 0.6893499194244117, 0.414175834016618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864] ***
*** starting iteration: 3; err: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864, 0.3619797532565168] ***
*** starting iteration: 4; err: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864, 0.3619797532565168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204] ***
*** starting iteration: 5; err: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204, 0.3589019380990204] ***
*** finished computation of 3 references, err: [Inf, 0.6893499194244117, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204, 0.3589019380990204] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 6]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36109178164352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36109178164352, 0.16120706987914482] ***
*** starting iteration: 2; err: [Inf, 0.36109178164352, 0.16120706987914482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36109178164352, 0.16120706987914482, 0.15168503933448196] ***
*** starting iteration: 3; err: [Inf, 0.36109178164352, 0.16120706987914482, 0.15168503933448196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36109178164352, 0.16120706987914482, 0.15168503933448196, 0.15168503933448196] ***
*** finished computation of 7 references, err: [Inf, 0.36109178164352, 0.16120706987914482, 0.15168503933448196, 0.15168503933448196] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 11]]
** centroid: 1, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35074424639517715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35074424639517715, 0.18549188269825106] ***
*** starting iteration: 2; err: [Inf, 0.35074424639517715, 0.18549188269825106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35074424639517715, 0.18549188269825106, 0.1822650940996348] ***
*** starting iteration: 3; err: [Inf, 0.35074424639517715, 0.18549188269825106, 0.1822650940996348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35074424639517715, 0.18549188269825106, 0.1822650940996348, 0.1816583542328487] ***
*** finished computation of 7 references, err: [Inf, 0.35074424639517715, 0.18549188269825106, 0.1822650940996348, 0.1816583542328487] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 2]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3623803447948676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3623803447948676, 0.18735068446295833] ***
*** starting iteration: 2; err: [Inf, 0.3623803447948676, 0.18735068446295833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3623803447948676, 0.18735068446295833, 0.18111832963766214] ***
*** starting iteration: 3; err: [Inf, 0.3623803447948676, 0.18735068446295833, 0.18111832963766214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3623803447948676, 0.18735068446295833, 0.18111832963766214, 0.1776664802555949] ***
*** starting iteration: 4; err: [Inf, 0.3623803447948676, 0.18735068446295833, 0.18111832963766214, 0.1776664802555949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3623803447948676, 0.18735068446295833, 0.18111832963766214, 0.1776664802555949, 0.1776664802555949] ***
*** finished computation of 7 references, err: [Inf, 0.3623803447948676, 0.18735068446295833, 0.18111832963766214, 0.1776664802555949, 0.1776664802555949] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 25, 5]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 25), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 4, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3735952126242826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3735952126242826, 0.19183811144829777] ***
*** starting iteration: 2; err: [Inf, 0.3735952126242826, 0.19183811144829777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3735952126242826, 0.19183811144829777, 0.1837011830120661] ***
*** starting iteration: 3; err: [Inf, 0.3735952126242826, 0.19183811144829777, 0.1837011830120661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3735952126242826, 0.19183811144829777, 0.1837011830120661, 0.1820521194460238] ***
*** finished computation of 7 references, err: [Inf, 0.3735952126242826, 0.19183811144829777, 0.1837011830120661, 0.1820521194460238] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42465157547502613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42465157547502613, 0.17642402335181973] ***
*** starting iteration: 2; err: [Inf, 0.42465157547502613, 0.17642402335181973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42465157547502613, 0.17642402335181973, 0.16718335898174583] ***
*** starting iteration: 3; err: [Inf, 0.42465157547502613, 0.17642402335181973, 0.16718335898174583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42465157547502613, 0.17642402335181973, 0.16718335898174583, 0.16130015127783204] ***
*** finished computation of 7 references, err: [Inf, 0.42465157547502613, 0.17642402335181973, 0.16718335898174583, 0.16130015127783204] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 5]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 4]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3531434396707314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3531434396707314, 0.18452347656572926] ***
*** starting iteration: 2; err: [Inf, 0.3531434396707314, 0.18452347656572926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3531434396707314, 0.18452347656572926, 0.1709574261864352] ***
*** starting iteration: 3; err: [Inf, 0.3531434396707314, 0.18452347656572926, 0.1709574261864352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3531434396707314, 0.18452347656572926, 0.1709574261864352, 0.16862256335716175] ***
*** finished computation of 7 references, err: [Inf, 0.3531434396707314, 0.18452347656572926, 0.1709574261864352, 0.16862256335716175] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 6]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 1.2450714639595732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2450714639595732, 0.3687303350380351] ***
*** starting iteration: 2; err: [Inf, 1.2450714639595732, 0.3687303350380351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2450714639595732, 0.3687303350380351, 0.3653638467420785] ***
*** starting iteration: 3; err: [Inf, 1.2450714639595732, 0.3687303350380351, 0.3653638467420785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2450714639595732, 0.3687303350380351, 0.3653638467420785, 0.3648404960692945] ***
*** finished computation of 3 references, err: [Inf, 1.2450714639595732, 0.3687303350380351, 0.3653638467420785, 0.3648404960692945] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 12]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 36), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6707849217108128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194] ***
*** starting iteration: 2; err: [Inf, 0.6707849217108128, 0.3884294245153194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079] ***
*** starting iteration: 3; err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676] ***
*** starting iteration: 4; err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624] ***
*** starting iteration: 5; err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433] ***
*** starting iteration: 6; err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433, 0.3662388640330933] ***
*** starting iteration: 7; err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433, 0.3662388640330933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433, 0.3662388640330933, 0.36389916096903663] ***
*** starting iteration: 8; err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433, 0.3662388640330933, 0.36389916096903663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433, 0.3662388640330933, 0.36389916096903663, 0.3637813092515944] ***
*** finished computation of 3 references, err: [Inf, 0.6707849217108128, 0.3884294245153194, 0.3792896525058079, 0.37760208925188676, 0.37624854992783624, 0.3708416048330433, 0.3662388640330933, 0.36389916096903663, 0.3637813092515944] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 8]]
** centroid: 3, normalized-entropy: 0.787126586201269, [(2, 26), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7273766990017747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273766990017747, 0.414175834016618] ***
*** starting iteration: 2; err: [Inf, 0.7273766990017747, 0.414175834016618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864] ***
*** starting iteration: 3; err: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864, 0.3619797532565168] ***
*** starting iteration: 4; err: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864, 0.3619797532565168] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204] ***
*** starting iteration: 5; err: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204, 0.3589019380990204] ***
*** finished computation of 3 references, err: [Inf, 0.7273766990017747, 0.414175834016618, 0.3769996470138864, 0.3619797532565168, 0.3589019380990204, 0.3589019380990204] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.487300005373762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487300005373762, 0.2549164161303544] ***
*** starting iteration: 2; err: [Inf, 0.487300005373762, 0.2549164161303544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487300005373762, 0.2549164161303544, 0.23035543514677528] ***
*** starting iteration: 3; err: [Inf, 0.487300005373762, 0.2549164161303544, 0.23035543514677528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487300005373762, 0.2549164161303544, 0.23035543514677528, 0.22640133606011045] ***
*** starting iteration: 4; err: [Inf, 0.487300005373762, 0.2549164161303544, 0.23035543514677528, 0.22640133606011045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.487300005373762, 0.2549164161303544, 0.23035543514677528, 0.22640133606011045, 0.2261150583050263] ***
*** finished computation of 7 references, err: [Inf, 0.487300005373762, 0.2549164161303544, 0.23035543514677528, 0.22640133606011045, 0.2261150583050263] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 11]]
** centroid: 7, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5729000022826126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5729000022826126, 0.2405584176792231] ***
*** starting iteration: 2; err: [Inf, 0.5729000022826126, 0.2405584176792231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5729000022826126, 0.2405584176792231, 0.232305033415878] ***
*** starting iteration: 3; err: [Inf, 0.5729000022826126, 0.2405584176792231, 0.232305033415878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5729000022826126, 0.2405584176792231, 0.232305033415878, 0.2314894651587577] ***
*** finished computation of 7 references, err: [Inf, 0.5729000022826126, 0.2405584176792231, 0.232305033415878, 0.2314894651587577] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 6]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 6, 4]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44210000284919176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44210000284919176, 0.2716926475024509] ***
*** starting iteration: 2; err: [Inf, 0.44210000284919176, 0.2716926475024509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194] ***
*** starting iteration: 3; err: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194, 0.2603549333771441] ***
*** starting iteration: 4; err: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194, 0.2603549333771441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194, 0.2603549333771441, 0.2585446682353993] ***
*** starting iteration: 5; err: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194, 0.2603549333771441, 0.2585446682353993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194, 0.2603549333771441, 0.2585446682353993, 0.25813822059707836] ***
*** finished computation of 7 references, err: [Inf, 0.44210000284919176, 0.2716926475024509, 0.2630115317836194, 0.2603549333771441, 0.2585446682353993, 0.25813822059707836] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 6, 9]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.7118999939358817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118999939358817, 0.3189660448867423] ***
*** starting iteration: 2; err: [Inf, 0.7118999939358817, 0.3189660448867423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636] ***
*** starting iteration: 3; err: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861] ***
*** starting iteration: 4; err: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861, 0.2375279899052229] ***
*** starting iteration: 5; err: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861, 0.2375279899052229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861, 0.2375279899052229, 0.2354535846723278] ***
*** starting iteration: 6; err: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861, 0.2375279899052229, 0.2354535846723278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861, 0.2375279899052229, 0.2354535846723278, 0.2354535846723278] ***
*** finished computation of 7 references, err: [Inf, 0.7118999939358817, 0.3189660448867423, 0.24603463595728636, 0.2390289316870861, 0.2375279899052229, 0.2354535846723278, 0.2354535846723278] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6051000053129241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6051000053129241, 0.3345658492807364] ***
*** starting iteration: 2; err: [Inf, 0.6051000053129241, 0.3345658492807364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897] ***
*** starting iteration: 3; err: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075] ***
*** starting iteration: 4; err: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075, 0.28768259634989063] ***
*** starting iteration: 5; err: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075, 0.28768259634989063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075, 0.28768259634989063, 0.2811651101979436] ***
*** starting iteration: 6; err: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075, 0.28768259634989063, 0.2811651101979436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075, 0.28768259634989063, 0.2811651101979436, 0.2811651101979436] ***
*** finished computation of 7 references, err: [Inf, 0.6051000053129241, 0.3345658492807364, 0.3106794280766897, 0.29607445235471075, 0.28768259634989063, 0.2811651101979436, 0.2811651101979436] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5494000006481715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5494000006481715, 0.2744162631328231] ***
*** starting iteration: 2; err: [Inf, 0.5494000006481715, 0.2744162631328231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206] ***
*** starting iteration: 3; err: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206, 0.2330253585304458] ***
*** starting iteration: 4; err: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206, 0.2330253585304458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206, 0.2330253585304458, 0.23109134726272615] ***
*** starting iteration: 5; err: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206, 0.2330253585304458, 0.23109134726272615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206, 0.2330253585304458, 0.23109134726272615, 0.23109134726272615] ***
*** finished computation of 7 references, err: [Inf, 0.5494000006481715, 0.2744162631328231, 0.2469362888535206, 0.2330253585304458, 0.23109134726272615, 0.23109134726272615] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 6]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 9), (3, 6)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.8252000075120894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8252000075120894, 0.4656363482022371] ***
*** starting iteration: 2; err: [Inf, 0.8252000075120894, 0.4656363482022371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8252000075120894, 0.4656363482022371, 0.3407192627754027] ***
*** starting iteration: 3; err: [Inf, 0.8252000075120894, 0.4656363482022371, 0.3407192627754027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8252000075120894, 0.4656363482022371, 0.3407192627754027, 0.3049694464294314] ***
*** finished computation of 7 references, err: [Inf, 0.8252000075120894, 0.4656363482022371, 0.3407192627754027, 0.3049694464294314] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8433999988692666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8433999988692666, 0.39299708043941395] ***
*** starting iteration: 2; err: [Inf, 0.8433999988692666, 0.39299708043941395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8433999988692666, 0.39299708043941395, 0.3367670905448189] ***
*** starting iteration: 3; err: [Inf, 0.8433999988692666, 0.39299708043941395, 0.3367670905448189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8433999988692666, 0.39299708043941395, 0.3367670905448189, 0.3284793035034836] ***
*** finished computation of 7 references, err: [Inf, 0.8433999988692666, 0.39299708043941395, 0.3367670905448189, 0.3284793035034836] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5349000012243762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000012243762, 0.28493589898655985] ***
*** starting iteration: 2; err: [Inf, 0.5349000012243762, 0.28493589898655985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000012243762, 0.28493589898655985, 0.25475560493760935] ***
*** starting iteration: 3; err: [Inf, 0.5349000012243762, 0.28493589898655985, 0.25475560493760935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5349000012243762, 0.28493589898655985, 0.25475560493760935, 0.2543347998389432] ***
*** finished computation of 7 references, err: [Inf, 0.5349000012243762, 0.28493589898655985, 0.25475560493760935, 0.2543347998389432] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666666, 0.8999999999999999, 0.8733333333333334, 0.86, 0.8533333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.505000000000001, 2.6450000000000005, 3.995, 1.23], [7.566666666666667, 2.85, 6.45, 2.0666666666666664], [4.8, 3.221052631578948, 1.4105263157894739, 0.21052631578947378], [6.771428571428572, 3.150000000000001, 5.664285714285714, 2.15], [6.44, 3.09, 4.59, 1.46], [5.407692307692307, 3.830769230769231, 1.538461538461538, 0.2923076923076924], [6.114285714285714, 2.6714285714285717, 4.7, 1.5142857142857142], [6.036363636363637, 2.7272727272727275, 4.981818181818182, 1.8363636363636362]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.491666666666666, 2.8749999999999996, 4.658333333333333, 1.425], [6.099999999999999, 2.8666666666666667, 5.05, 1.6833333333333336], [4.742857142857143, 3.1809523809523816, 1.4380952380952383, 0.2190476190476191], [7.633333333333334, 3.3333333333333335, 6.433333333333334, 2.183333333333333], [5.545454545454546, 2.5272727272727273, 3.8, 1.1818181818181817], [5.285714285714286, 3.692857142857143, 1.45, 0.2785714285714286], [6.545, 3.0599999999999996, 5.514999999999999, 2.1499999999999995], [5.633333333333333, 2.8833333333333333, 4.383333333333333, 1.383333333333333], [5.5, 2.625, 4.875, 1.9000000000000001]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.015151515151516, 3.403030303030303, 1.4878787878787878, 0.2454545454545455], [7.339999999999999, 2.9, 6.24, 1.98], [6.063636363636363, 2.8545454545454545, 4.336363636363636, 1.3363636363636362], [6.560000000000001, 3.0399999999999996, 5.58, 2.1333333333333337], [5.2625, 2.4250000000000003, 3.5250000000000004, 1.1], [6.583333333333335, 3.0, 4.8, 1.5666666666666667], [6.088888888888888, 2.6777777777777776, 5.111111111111111, 1.8111111111111116], [7.800000000000001, 3.8, 6.550000000000001, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[85, 18, 2, 22, 7, 16, 2, 27, 1, 6, 46, 8, 1, 24, 9, 17, 12, 14, 26, 22, 24, 40, 44, 1, 10, 30, 45, 38, 1, 29, 27, 25, 19, 13, 25, 27, 20, 24, 39, 39, 26, 4, 28, 26, 19, 35, 39, 22, 24, 27, 31, 33, 32, 22, 19, 36, 52, 24, 29, 24, 28, 18, 40, 50, 18, 46, 28, 54, 37, 18, 32, 37, 28, 49, 30, 27, 29, 30, 33, 28, 39, 22, 39, 38, 43, 22, 39, 45, 24, 10, 24, 32, 25, 17, 26, 18, 28, 31, 33, 28, 31, 60, 22, 63, 41, 41, 22, 45, 25, 21, 36, 62, 12, 22, 49, 35, 57, 37, 27, 49, 53, 34, 15, 31, 34, 30, 34, 46, 33, 21, 8, 54, 54, 52, 28, 1, 23, 30, 34, 25, 29, 23, 36, 29, 33, 33, 24, 30, 33, 44, 35, 42, 15, 36, 24, 42, 35, 32, 29, 29, 37, 23, 1, 38, 41, 47, 39, 33, 40, 46, 44, 35, 35, 60, 29, 58, 45, 32, 30, 39, 45, 35, 34, 25, 47, 36, 41, 16, 32, 22, 43, 38, 43, 39, 18, 38, 49, 35, 32, 62, 48, 40, 2, 41, 37, 54, 17, 30, 30, 42, 48, 40, 26, 1, 35, 34, 24, 36, 34, 45, 46, 31, 44, 30, 2, 53, 35, 23, 47, 42, 27, 43, 55, 40, 25, 22, 30, 52, 41, 28, 50, 29, 39, 27, 34, 27, 48, 47, 14, 61, 34, 32, 28, 48, 37, 64, 67, 57, 32, 12, 34, 40, 34, 43, 57, 26, 46, 40, 40, 40, 82, 66, 44, 22, 45, 35, 51, 26, 49, 31, 55, 37, 35, 46, 33, 40, 28, 44, 36, 26, 38, 21, 65, 30, 32, 63, 26, 28, 79, 28]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6249999999999998, speedup = 0.5424554752204529, eval_ratio = 0.041770999999999996)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3986855158730158,"recall":0.3984374999999999,"f1":null,"seconds":6.803125143051147e-5,"exhaustive_search_seconds":0.0003494527190923691,"evaluations":338.4375,"distances_sum":1793.9939472372166}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.568576388888889,"recall":0.568576388888889,"f1":0.568576388888889,"seconds":0.00010257028043270111,"exhaustive_search_seconds":0.0003494527190923691,"evaluations":375.984375,"distances_sum":1665.742321081258}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6796874999999998,"recall":0.6796874999999998,"f1":0.6796874999999998,"seconds":0.0001371372491121292,"exhaustive_search_seconds":0.0003494527190923691,"evaluations":416.2265625,"distances_sum":1614.1273203312492}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7456597222222219,"recall":0.7456597222222219,"f1":0.7456597222222219,"seconds":0.0001652408391237259,"exhaustive_search_seconds":0.0003494527190923691,"evaluations":454.359375,"distances_sum":1590.4960702048024}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7925347222222214,"recall":0.7925347222222214,"f1":0.7925347222222214,"seconds":0.0001963600516319275,"exhaustive_search_seconds":0.0003494527190923691,"evaluations":491.9921875,"distances_sum":1578.5954524877995}
KCenters.DeloneInvIndex> reached performance {"precision":0.8298611111111103,"recall":0.8298611111111103,"f1":0.8298611111111103,"seconds":0.00022998452186584473,"exhaustive_search_seconds":0.0003494527190923691,"evaluations":533.765625,"distances_sum":1569.0080245203078}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8129999999999998, speedup = 2.2346832389557822, eval_ratio = 0.053515999999999994)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
