Julia Version 1.4.0-DEV.614
Commit d9c411c119 (2019-12-16 04:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_0Y5yMH/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_0Y5yMH/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_0Y5yMH/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  7.243822 seconds (4.18 M allocations: 674.394 MiB, 8.94% gc time)
  2.500922 seconds (202.46 k allocations: 485.857 MiB, 2.25% gc time)

Testing LLL on 10x10 complex matrix...
  9.132460 seconds (11.46 M allocations: 534.677 MiB, 7.08% gc time)
  0.042415 seconds (1.49 k allocations: 153.922 KiB)
Testing Seysen on same 10x10 complex matrix...
  2.687481 seconds (2.70 M allocations: 133.080 MiB, 3.57% gc time)
  0.073525 seconds (322 allocations: 141.500 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.937421 seconds (2.31 M allocations: 107.548 MiB, 3.13% gc time)
  0.142435 seconds (240 allocations: 122.375 KiB)
Testing Brun on real part of same 10x10 matrix...
  1.635105 seconds (1.83 M allocations: 92.153 MiB, 2.53% gc time)
  0.000126 seconds (28 allocations: 12.297 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.303028 seconds (4.46 M allocations: 336.060 MiB, 6.37% gc time)
  0.483236 seconds (2.11 M allocations: 220.163 MiB, 4.41% gc time)
Error Rate is 0.02772. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  1.538662 seconds (860.02 k allocations: 361.681 MiB, 11.89% gc time)
min norm of lll-reduced basis is 29.30870177950569
  7.305049 seconds (5.18 M allocations: 1.256 GiB, 6.16% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
