Julia Version 1.4.0-DEV.614
Commit d9c411c119 (2019-12-16 04:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed PooledArrays ──────────────── v0.5.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Compat ────────────────────── v2.2.0
 Installed MacroTools ────────────────── v0.5.3
 Installed DataStructures ────────────── v0.17.6
 Installed CategoricalArrays ─────────── v0.7.4
 Installed OrderedCollections ────────── v1.1.0
 Installed WeakRefStrings ────────────── v0.6.1
 Installed Parsers ───────────────────── v0.3.10
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed FilePathsBase ─────────────── v0.7.0
 Installed Missings ──────────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed CSV ───────────────────────── v0.5.20
 Installed IterTools ─────────────────── v1.3.0
 Installed DataFrames ────────────────── v0.20.0
 Installed LightQuery ────────────────── v0.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [a6f99520] + LightQuery v0.5.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [336ed68f] + CSV v0.5.20
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v2.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [48062228] + FilePathsBase v0.7.0
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [a6f99520] + LightQuery v0.5.0
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [ea10d353] + WeakRefStrings v0.6.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing LightQuery
Path `/home/pkgeval/.julia/packages/LightQuery/jtQBU` exists and looks like the correct package. Using existing path.
 Installed Mocking ───────────── v0.7.0
 Installed BinaryProvider ────── v0.5.8
 Installed Unitful ───────────── v0.18.0
 Installed ConstructionBase ──── v1.0.0
 Installed DocStringExtensions ─ v0.8.1
 Installed EzXML ─────────────── v0.9.5
 Installed TimeZones ─────────── v0.10.3
 Installed Documenter ────────── v0.24.3
  Updating `/tmp/jl_ql2LgS/Project.toml`
  [e30172f5] + Documenter v0.24.3
  [a6f99520] + LightQuery v0.5.0 [`~/.julia/packages/LightQuery/jtQBU`]
  [f269a46b] + TimeZones v0.10.3
  [1986cc42] + Unitful v0.18.0
  Updating `/tmp/jl_ql2LgS/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [187b0558] + ConstructionBase v1.0.0
  [ffbed154] + DocStringExtensions v0.8.1
  [e30172f5] + Documenter v0.24.3
  [8f5d6c58] + EzXML v0.9.5
  [a6f99520] ~ LightQuery v0.5.0 ⇒ v0.5.0 [`~/.julia/packages/LightQuery/jtQBU`]
  [78c3b35d] + Mocking v0.7.0
  [f269a46b] + TimeZones v0.10.3
  [1986cc42] + Unitful v0.18.0
  Building EzXML ────→ `~/.julia/packages/EzXML/QtGgF/deps/build.log`
Path `/home/pkgeval/.julia/packages/EzXML/QtGgF` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_V2t6jl/Project.toml`
  [8f5d6c58] + EzXML v0.9.5 [`~/.julia/packages/EzXML/QtGgF`]
  Updating `/tmp/jl_V2t6jl/Manifest.toml`
  [8f5d6c58] ~ EzXML v0.9.5 ⇒ v0.9.5 [`~/.julia/packages/EzXML/QtGgF`]
  Building TimeZones → `~/.julia/packages/TimeZones/pjvlM/deps/build.log`
Path `/home/pkgeval/.julia/packages/TimeZones/pjvlM` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_6FNUEp/Project.toml`
  [f269a46b] + TimeZones v0.10.3 [`~/.julia/packages/TimeZones/pjvlM`]
  Updating `/tmp/jl_6FNUEp/Manifest.toml`
  [f269a46b] ~ TimeZones v0.10.3 ⇒ v0.10.3 [`~/.julia/packages/TimeZones/pjvlM`]
Running sandbox
Status `/tmp/jl_ql2LgS/Project.toml`
  [336ed68f] CSV v0.5.20
  [34da2185] Compat v2.2.0
  [e30172f5] Documenter v0.24.3
  [c8e1da08] IterTools v1.3.0
  [a6f99520] LightQuery v0.5.0 [`~/.julia/packages/LightQuery/jtQBU`]
  [1914dd2f] MacroTools v0.5.3
  [f269a46b] TimeZones v0.10.3
  [1986cc42] Unitful v0.18.0
  [ade2ca70] Dates 
  [d6f4376e] Markdown 
  [10745b16] Statistics 
  [8dfed614] Test 
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: Doctesting failed
│   exception =
│    BoundsError: attempt to access ((`name`, ["Lansdowne Airport", #undef, #undef, #undef]), (`airport_code`, ["04G", #undef, #undef, #undef]), (`altitude`, Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}[Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}(1044), Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}(140139538090800), Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}(140139538120864), Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}(0)]), (`latitude`, Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}[Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(41.1304722), Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(6.9238131394725e-310), Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(6.92381314096103e-310), Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(6.9238177062343e-310)]), (`longitude`, Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}[Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(-80.6195833), Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(6.9238131394725e-310), Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(6.9238131409642e-310), Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}(6.9238177062343e-310)]))
│      at index [`time_zone`]
│    Stacktrace:
│     [1] recursive_get at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/columns.jl:47 [inlined]
│     [2] recursive_get at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/columns.jl:53 [inlined] (repeats 5 times)
│     [3] Name at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/columns.jl:61 [inlined]
│     [4] column_setindex! at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/make_columns.jl:108 [inlined]
│     [5] partial_map at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/utilities.jl:36 [inlined] (repeats 6 times)
│     [6] setindex! at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/make_columns.jl:112 [inlined]
│     [7] copyto!(::LightQuery.Rows{Tuple{Tuple{LightQuery.Name{:name},String},Tuple{LightQuery.Name{:airport_code},String},Tuple{LightQuery.Name{:altitude},Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}},Tuple{LightQuery.Name{:latitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:longitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}}},1,Tuple{Array{String,1},Array{String,1},Array{Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1}},Tuple{LightQuery.Name{:name},LightQuery.Name{:airport_code},LightQuery.Name{:altitude},LightQuery.Name{:latitude},LightQuery.Name{:longitude}}}, ::Base.Iterators.Take{LightQuery.Rows{Tuple{Tuple{LightQuery.Name{:name},String},Tuple{LightQuery.Name{:airport_code},String},Tuple{LightQuery.Name{:altitude},Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}},Tuple{LightQuery.Name{:latitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:longitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:time_zone},Union{Missing, TimeZones.VariableTimeZone}}},1,Tuple{Array{String,1},Array{String,1},Array{Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Union{Missing, TimeZones.VariableTimeZone},1}},Tuple{LightQuery.Name{:name},LightQuery.Name{:airport_code},LightQuery.Name{:altitude},LightQuery.Name{:latitude},LightQuery.Name{:longitude},LightQuery.Name{:time_zone}}}}) at ./abstractarray.jl:724
│     [8] _collect at ./array.jl:580 [inlined]
│     [9] make_columns at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/make_columns.jl:276 [inlined]
│     [10] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::LightQuery.Peek{LightQuery.Rows{Tuple{Tuple{LightQuery.Name{:name},String},Tuple{LightQuery.Name{:airport_code},String},Tuple{LightQuery.Name{:altitude},Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}},Tuple{LightQuery.Name{:latitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:longitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:time_zone},Union{Missing, TimeZones.VariableTimeZone}}},1,Tuple{Array{String,1},Array{String,1},Array{Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Union{Missing, TimeZones.VariableTimeZone},1}},Tuple{LightQuery.Name{:name},LightQuery.Name{:airport_code},LightQuery.Name{:altitude},LightQuery.Name{:latitude},LightQuery.Name{:longitude},LightQuery.Name{:time_zone}}}}) at /home/pkgeval/.julia/packages/LightQuery/jtQBU/src/pivot.jl:45
│     [11] show(::IOContext{Base.GenericIOBuffer{Array{UInt8,1}}}, ::MIME{Symbol("text/plain")}, ::LightQuery.Peek{LightQuery.Rows{Tuple{Tuple{LightQuery.Name{:name},String},Tuple{LightQuery.Name{:airport_code},String},Tuple{LightQuery.Name{:altitude},Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}}},Tuple{LightQuery.Name{:latitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:longitude},Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}}},Tuple{LightQuery.Name{:time_zone},Union{Missing, TimeZones.VariableTimeZone}}},1,Tuple{Array{String,1},Array{String,1},Array{Unitful.Quantity{Int64,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),Unitful.FreeUnits{(Unitful.Unit{:Foot,Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}()}(0, 1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Unitful.Quantity{Float64,Unitful.Dimensions{()}(),Unitful.FreeUnits{(Unitful.Unit{:Degree,Unitful.Dimensions{()}()}(0, 1//1),),Unitful.Dimensions{()}(),nothing}},1},Array{Union{Missing, TimeZones.VariableTimeZone},1}},Tuple{LightQuery.Name{:name},LightQuery.Name{:airport_code},LightQuery.Name{:altitude},LightQuery.Name{:latitude},LightQuery.Name{:longitude},LightQuery.Name{:time_zone}}}}) at ./multimedia.jl:47
│     [12] #invokelatest#1 at ./essentials.jl:719 [inlined]
│     [13] invokelatest at ./essentials.jl:718 [inlined]
│     [14] result_to_string at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:317 [inlined]
│     [15] checkresult(::Module, ::Documenter.DocTests.Result, ::Dict{Symbol,Any}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:297
│     [16] eval_repl(::Documenter.DocTests.MutableMD2CodeBlock, ::Module, ::Dict{Symbol,Any}, ::Documenter.Documents.Document, ::String) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:226
│     [17] doctest(::Documenter.DocTests.DocTestContext, ::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:169
│     [18] (::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext})(::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:111
│     [19] walk(::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, ::Documenter.Utilities.Markdown2.CodeBlock) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Utilities/Markdown2.jl:297
│     [20] walk(::Function, ::Array{Documenter.Utilities.Markdown2.MarkdownBlockNode,1}) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Utilities/Markdown2.jl:306
│     [21] walk(::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, ::Documenter.Utilities.Markdown2.MD) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Utilities/Markdown2.jl:299
│     [22] doctest at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:108 [inlined]
│     [23] doctest at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:65 [inlined]
│     [24] doctest(::Documenter.Documents.DocumentBlueprint, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/DocTests.jl:49
│     [25] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Builder.jl:201
│     [26] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Utilities/Selectors.jl:167
│     [27] #2 at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:237 [inlined]
│     [28] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [29] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:236
│     [30] (::Documenter.var"#all_doctests#30"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:724
│     [31] macro expansion at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740 [inlined]
│     [32] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
│     [33] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740
│     [34] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:683
│     [35] doctest(::Module) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:670
│     [36] top-level scope at /home/pkgeval/.julia/packages/LightQuery/jtQBU/test/runtests.jl:4
│     [37] include(::String) at ./client.jl:439
│     [38] top-level scope at none:6
│     [39] eval(::Module, ::Any) at ./boot.jl:331
│     [40] exec_options(::Base.JLOptions) at ./client.jl:264
│     [41] _start() at ./client.jl:484
└ @ Documenter ~/.julia/packages/Documenter/BZNsm/src/Documenter.jl:733
Doctests: LightQuery: Test Failed at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
 [3] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740
Test Summary:        | Fail  Total
Doctests: LightQuery |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/LightQuery/jtQBU/test/runtests.jl:4
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/LightQuery/jtQBU/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/LightQuery/jtQBU/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package LightQuery errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
