Julia Version 1.4.0-DEV.614
Commit d9c411c119 (2019-12-16 04:01 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed OpenSpecFun_jll ── v0.5.3+1
 Installed AbstractNumbers ── v0.2.0
 Installed SpecialFunctions ─ v0.9.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [85c772de] + AbstractNumbers v0.2.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [85c772de] + AbstractNumbers v0.2.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [276daf66] + SpecialFunctions v0.9.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing AbstractNumbers
Path `/home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_WNgviE/Project.toml`
  [85c772de] + AbstractNumbers v0.2.0 [`~/.julia/packages/AbstractNumbers/VWdQ8`]
  [8dfed614] + Test 
  Updating `/tmp/jl_WNgviE/Manifest.toml`
  [85c772de] ~ AbstractNumbers v0.2.0 ⇒ v0.2.0 [`~/.julia/packages/AbstractNumbers/VWdQ8`]
  [8ba89e20] + Distributed 
  [8dfed614] + Test 
Running sandbox
Status `/tmp/jl_WNgviE/Project.toml`
  [85c772de] AbstractNumbers v0.2.0 [`~/.julia/packages/AbstractNumbers/VWdQ8`]
  [276daf66] SpecialFunctions v0.9.0
  [8dfed614] Test 
testing div: Error During Test at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:86
  Got exception outside of a @test
  MethodError: no method matching div(::Complex{Float64}, ::Complex{Float64}, ::RoundingMode{:ToZero})
  Closest candidates are:
    div(!Matched::Missing, ::Number, ::RoundingMode) at missing.jl:121
    div(::Number, !Matched::Missing, ::RoundingMode) at missing.jl:122
    div(::Any, ::Any) at div.jl:37
    ...
  Stacktrace:
   [1] div(::Complex{Float64}, ::Complex{Float64}) at ./div.jl:37
   [2] top-level scope at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:109
   [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:87
   [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:84
   [7] include(::String) at ./client.jl:439
   [8] top-level scope at none:6
   [9] eval(::Module, ::Any) at ./boot.jl:331
   [10] exec_options(::Base.JLOptions) at ./client.jl:264
   [11] _start() at ./client.jl:484
  
testing fld: Error During Test at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:86
  Got exception outside of a @test
  MethodError: no method matching div(::Complex{Float64}, ::Complex{Float64}, ::RoundingMode{:Down})
  Closest candidates are:
    div(!Matched::Missing, ::Number, ::RoundingMode) at missing.jl:121
    div(::Number, !Matched::Missing, ::RoundingMode) at missing.jl:122
    div(::Any, ::Any) at div.jl:37
    ...
  Stacktrace:
   [1] fld(::Complex{Float64}, ::Complex{Float64}) at ./div.jl:84
   [2] top-level scope at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:109
   [3] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:87
   [5] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:84
   [7] include(::String) at ./client.jl:439
   [8] top-level scope at none:6
   [9] eval(::Module, ::Any) at ./boot.jl:331
   [10] exec_options(::Base.JLOptions) at ./client.jl:264
   [11] _start() at ./client.jl:484
  
Test Summary:                                        | Pass  Error  Total
AbstractNumbers                                      |  583      2    585
  testing ~                                          |    2             2
  testing conj                                       |    5             5
  testing abs                                        |    5             5
  testing sin                                        |    5             5
  testing cos                                        |    5             5
  testing tan                                        |    5             5
  testing sinh                                       |    5             5
  testing cosh                                       |    5             5
  testing tanh                                       |    5             5
  testing asin                                       |    3             3
  testing acos                                       |    3             3
  testing atan                                       |    9             9
  testing asinh                                      |    5             5
  testing acosh                                      |    2             2
  testing atanh                                      |    3             3
  testing sec                                        |    5             5
  testing csc                                        |    5             5
  testing cot                                        |    5             5
  testing asec                                       |    3             3
  testing acsc                                       |    3             3
  testing acot                                       |    5             5
  testing sech                                       |    5             5
  testing csch                                       |    5             5
  testing coth                                       |    5             5
  testing asech                                      |    3             3
  testing acsch                                      |    5             5
  testing acoth                                      |    3             3
  testing sinc                                       |    5             5
  testing cosc                                       |    5             5
  testing cosd                                       |    4             4
  testing cotd                                       |    4             4
  testing cscd                                       |    4             4
  testing secd                                       |    4             4
  testing sind                                       |    4             4
  testing tand                                       |    4             4
  testing acosd                                      |    2             2
  testing acotd                                      |    4             4
  testing acscd                                      |    2             2
  testing asecd                                      |    2             2
  testing asind                                      |    2             2
  testing atand                                      |    8             8
  testing rad2deg                                    |    5             5
  testing deg2rad                                    |    5             5
  testing log                                        |    8             8
  testing log2                                       |    4             4
  testing log10                                      |    4             4
  testing log1p                                      |    4             4
  testing exponent                                   |    2             2
  testing exp                                        |    5             5
  testing exp2                                       |    5             5
  testing expm1                                      |    5             5
  testing cbrt                                       |    4             4
  testing sqrt                                       |    4             4
  testing ceil                                       |    4             4
  testing floor                                      |    4             4
  testing trunc                                      |    4             4
  testing round                                      |    5             5
  testing significand                                |    2             2
  testing frexp                                      |    2             2
  testing ldexp                                      |              No tests
  testing modf                                       |    4             4
  testing real                                       |    5             5
  testing imag                                       |    5             5
  testing !                                          |              No tests
  testing identity                                   |    5             5
  testing zero                                       |    5             5
  testing one                                        |    5             5
  testing <<                                         |    2             2
  testing >>                                         |    2             2
  testing abs2                                       |    5             5
  testing sign                                       |    5             5
  testing sinpi                                      |    5             5
  testing cospi                                      |    5             5
  testing exp10                                      |    5             5
  testing iseven                                     |    2             2
  testing ispow2                                     |    2             2
  testing isfinite                                   |    5             5
  testing isinf                                      |    5             5
  testing isodd                                      |    2             2
  testing isinteger                                  |    5             5
  testing isreal                                     |    5             5
  testing isnan                                      |    5             5
  testing isempty                                    |    5             5
  testing iszero                                     |    5             5
  testing transpose                                  |    5             5
  testing copysign                                   |    4             4
  testing flipsign                                   |    4             4
  testing signbit                                    |    4             4
  testing +                                          |   20            20
  testing -                                          |   10            10
  testing *                                          |   20            20
  testing /                                          |    5             5
  testing \                                          |    5             5
  testing ^                                          |    5             5
  testing ==                                         |   10            10
  testing !=                                         |   10            10
  testing <                                          |    8             8
  testing <=                                         |    8             8
  testing >                                          |    8             8
  testing >=                                         |    8             8
  testing ≈                                          |    5             5
  testing min                                        |   16            16
  testing max                                        |   16            16
  testing div                                        |    2      1      3
    Float32 (0.28702593f0, 0.30836833f0)             |    1             1
    Float64 (0.9715510967464158, 0.3397306718651063) |    1             1
  testing fld                                        |    2      1      3
    Float32 (0.28702593f0, 0.30836833f0)             |    1             1
    Float64 (0.9715510967464158, 0.3397306718651063) |    1             1
  testing rem                                        |    4             4
  testing mod                                        |    4             4
  testing mod1                                       |    4             4
  testing cmp                                        |    4             4
  testing &                                          |    8             8
  testing |                                          |    8             8
  testing xor                                        |    8             8
  testing clamp                                      |    4             4
  bessel functions                                   |   16            16
ERROR: LoadError: Some tests did not pass: 583 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl:82
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/AbstractNumbers/VWdQ8/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package AbstractNumbers errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
