Julia Version 1.4.0-DEV.564
Commit 1d8d9c1793 (2019-12-06 23:22 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  33.2 %    Fetching: [================================>        ]  78.4 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Rotations â”€â”€â”€â”€ v0.12.1
 Installed StaticArrays â”€ v0.10.3
  Updating `~/.julia/environments/v1.4/Project.toml`
  [6038ab10] + Rotations v0.12.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6038ab10] + Rotations v0.12.1
  [90137ffa] + StaticArrays v0.10.3
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
   Testing Rotations
 Resolving package versions...

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/rdeits/CommonSubexpressions.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaCI/BenchmarkTools.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/ForwardDiff.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaIO/JSON.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/DiffRules.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/mlubin/NaNMath.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/DiffResults.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaMath/SpecialFunctions.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaLang/Compat.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaData/Parsers.jl.git
â”” @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
   Cloning [bbf7d656-a473-5ed7-a52c-81e309532950] CommonSubexpressions from https://github.com/rdeits/CommonSubexpressions.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed CommonSubexpressions â”€ v0.2.0
   Cloning [6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf] BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Cloning [f6369f11-7733-5829-9624-2563aa707210] ForwardDiff from https://github.com/JuliaDiff/ForwardDiff.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
   Cloning [682c06a0-de6a-54ab-a142-c8b1cf79cde6] JSON from https://github.com/JuliaIO/JSON.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
   Cloning [b552c78f-8df3-52c6-915a-8e097449b14b] DiffRules from https://github.com/JuliaDiff/DiffRules.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
   Cloning [77ba4419-2d1f-58cd-9bb1-8ffee604a2e3] NaNMath from https://github.com/mlubin/NaNMath.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Cloning [163ba53b-c6d8-5494-b064-1a9d43ac40c5] DiffResults from https://github.com/JuliaDiff/DiffResults.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
   Cloning [efe28fd5-8261-553b-a9e1-b2916fc3738e] OpenSpecFun_jll from https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€ v0.5.3+1
   Cloning [276daf66-3868-5448-9aa4-cd146d93841b] SpecialFunctions from https://github.com/JuliaMath/SpecialFunctions.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed SpecialFunctions â”€â”€â”€â”€â”€ v0.9.0
   Cloning [34da2185-b29b-5c13-b0c7-acf172513d20] Compat from https://github.com/JuliaLang/Compat.jl.git
[?25l    Fetching: [>                                        ]  0.0 % Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
   Cloning [69de0a69-1ddd-5017-9359-2bf0b02dc9f0] Parsers from https://github.com/JuliaData/Parsers.jl.git
[2K[?25h[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
Status `/tmp/jl_Ed7sLF/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [f6369f11] ForwardDiff v0.10.7
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [69de0a69] Parsers v0.3.10
  [6038ab10] Rotations v0.12.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.10.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 190108  190108
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:            | Pass  Total
Principal Value (SPQuat) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (Quat) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                      | Pass  Total
Principal Value (Rodrigues Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.716265115 seconds)
done (took 2.983724834 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.023568649 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.976929302 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.985371271 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.982311258 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.898768038 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.968417966 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.995263555 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.899423009 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.984648048 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.013269484 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.93265238 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.00225353 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994801546 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.998187412 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.00750261 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.01231181 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.926818148 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.062236176 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.001131817 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.939749318 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.959661353 seconds)
done (took 21.265919514 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 0.933067957 seconds)
  (2/20) tuning "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 0.898198489 seconds)
  (3/20) tuning "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 0.942902847 seconds)
  (4/20) tuning "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.01837712 seconds)
  (5/20) tuning "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 0.938330457 seconds)
  (6/20) tuning "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 0.881879905 seconds)
  (7/20) tuning "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.855221383 seconds)
  (8/20) tuning "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 0.907825492 seconds)
  (9/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.890306233 seconds)
  (10/20) tuning "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.870915246 seconds)
  (11/20) tuning "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.926272469 seconds)
  (12/20) tuning "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 0.951389708 seconds)
  (13/20) tuning "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.883530431 seconds)
  (14/20) tuning "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 0.940356529 seconds)
  (15/20) tuning "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 0.897235246 seconds)
  (16/20) tuning "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.0272498 seconds)
  (17/20) tuning "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994010095 seconds)
  (18/20) tuning "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.027301459 seconds)
  (19/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.00406683 seconds)
  (20/20) tuning "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.965976143 seconds)
done (took 19.372329708 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 0.999157699 seconds)
done (took 1.614209183 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.890342862 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.783007992 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.41832408 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.740495145 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.495009153 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.868578454 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.984645157 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.147047172 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.695281444 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.786133694 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.467649144 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.065289438 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.45367319 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.500661031 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.128427029 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.107902566 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.400510765 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.023432563 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.898664837 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.341470873 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.853765473 seconds)
done (took 35.667378049 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 1.233661231 seconds)
  (2/20) benchmarking "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.142990317 seconds)
  (3/20) benchmarking "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.409638761 seconds)
  (4/20) benchmarking "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.931431349 seconds)
  (5/20) benchmarking "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 2.078992152 seconds)
  (6/20) benchmarking "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 1.677560401 seconds)
  (7/20) benchmarking "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.805792966 seconds)
  (8/20) benchmarking "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 1.602513482 seconds)
  (9/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.331917271 seconds)
  (10/20) benchmarking "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.931398261 seconds)
  (11/20) benchmarking "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.840054515 seconds)
  (12/20) benchmarking "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 2.38430165 seconds)
  (13/20) benchmarking "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.916722964 seconds)
  (14/20) benchmarking "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 1.981640341 seconds)
  (15/20) benchmarking "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.224011767 seconds)
  (16/20) benchmarking "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.863315992 seconds)
  (17/20) benchmarking "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.150601207 seconds)
  (18/20) benchmarking "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.382090332 seconds)
  (19/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.999298623 seconds)
  (20/20) benchmarking "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.850048753 seconds)
done (took 29.403008151 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 11.028 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 48.829 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 49.196 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  25.214 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 48.632 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  37.387 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 48.990 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 48.498 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   20.078 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 48.560 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 48.444 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  34.436 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 73.237 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  35.916 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  26.205 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 67.253 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   20.029 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  41.969 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 65.375 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 48.535 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   20.300 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 64.468 ns

Group: Non-Euler conversions
RotMatrix{3,Float64,9} -> SPQuat{Float64}       42.755 ns
AngleAxis{Float64} -> Quat{Float64}             20.471 ns
Quat{Float64} -> RodriguesVec{Float64}          42.779 ns
RodriguesVec{Float64} -> AngleAxis{Float64}     13.206 ns
SPQuat{Float64} -> RodriguesVec{Float64}        91.387 ns
AngleAxis{Float64} -> SPQuat{Float64}           70.620 ns
AngleAxis{Float64} -> RodriguesVec{Float64}     2.876 ns
RodriguesVec{Float64} -> Quat{Float64}          64.376 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}    20.790 ns
Quat{Float64} -> RotMatrix{3,Float64,9}         8.450 ns
RodriguesVec{Float64} -> RotMatrix{3,Float64,9} 85.065 ns
SPQuat{Float64} -> AngleAxis{Float64}           111.153 ns
Quat{Float64} -> SPQuat{Float64}                2.955 ns
RodriguesVec{Float64} -> SPQuat{Float64}        90.704 ns
RotMatrix{3,Float64,9} -> Quat{Float64}         22.131 ns
RotMatrix{3,Float64,9} -> RodriguesVec{Float64} 71.879 ns
SPQuat{Float64} -> RotMatrix{3,Float64,9}       28.939 ns
Quat{Float64} -> AngleAxis{Float64}             31.621 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}    82.297 ns
SPQuat{Float64} -> Quat{Float64}                6.398 ns

   Testing Rotations tests passed 
