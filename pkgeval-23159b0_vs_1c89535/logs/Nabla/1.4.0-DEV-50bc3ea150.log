Julia Version 1.4.0-DEV.661
Commit 50bc3ea150 (2019-12-23 18:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed OpenSpecFun_jll ── v0.5.3+1
 Installed Calculus ───────── v0.5.1
 Installed DualNumbers ────── v0.6.2
 Installed NaNMath ────────── v0.3.3
 Installed DiffRules ──────── v0.0.10
 Installed SpecialFunctions ─ v0.9.0
 Installed FDM ────────────── v0.6.1
 Installed Nabla ──────────── v0.12.1
  Updating `~/.julia/environments/v1.4/Project.toml`
  [49c96f43] + Nabla v0.12.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [49dc2e85] + Calculus v0.5.1
  [b552c78f] + DiffRules v0.0.10
  [fa6b7ba4] + DualNumbers v0.6.2
  [e25cca7e] + FDM v0.6.1
  [77ba4419] + NaNMath v0.3.3
  [49c96f43] + Nabla v0.12.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [276daf66] + SpecialFunctions v0.9.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing Nabla
Path `/home/pkgeval/.julia/packages/Nabla/D60dX` exists and looks like the correct package. Using existing path.
 Installed Parsers ──────────── v0.3.10
 Installed StatsFuns ────────── v0.9.3
 Installed SortingAlgorithms ── v0.3.1
 Installed PDMats ───────────── v0.9.10
 Installed Rmath ────────────── v0.6.0
 Installed Arpack_jll ───────── v3.5.0+2
 Installed BenchmarkTools ───── v0.4.3
 Installed Distributions ────── v0.21.11
 Installed OrderedCollections ─ v1.1.0
 Installed StatsBase ────────── v0.32.0
 Installed DataAPI ──────────── v1.1.0
 Installed BinaryProvider ───── v0.5.8
 Installed QuadGK ───────────── v2.3.1
 Installed JSON ─────────────── v0.21.0
 Installed Arpack ───────────── v0.4.0
 Installed Missings ─────────── v0.4.3
 Installed OpenBLAS_jll ─────── v0.3.7+1
 Installed DataStructures ───── v0.17.6
 Installed FillArrays ───────── v0.8.2
  Updating `/tmp/jl_cCjT3e/Project.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [31c24e10] + Distributions v0.21.11
  [49c96f43] + Nabla v0.12.1 [`~/.julia/packages/Nabla/D60dX`]
  Updating `/tmp/jl_cCjT3e/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [31c24e10] + Distributions v0.21.11
  [1a297f60] + FillArrays v0.8.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [49c96f43] ~ Nabla v0.12.1 ⇒ v0.12.1 [`~/.julia/packages/Nabla/D60dX`]
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [1fd47b50] + QuadGK v2.3.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [a63ad114] + Mmap 
  [4607b0f0] + SuiteSparse 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
Path `/home/pkgeval/.julia/packages/Rmath/BoBag` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_WpEJzB/Project.toml`
  [79098fc4] + Rmath v0.6.0 [`~/.julia/packages/Rmath/BoBag`]
  Updating `/tmp/jl_WpEJzB/Manifest.toml`
  [79098fc4] ~ Rmath v0.6.0 ⇒ v0.6.0 [`~/.julia/packages/Rmath/BoBag`]
Running sandbox
Status `/tmp/jl_cCjT3e/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [b552c78f] DiffRules v0.0.10
  [31c24e10] Distributions v0.21.11
  [fa6b7ba4] DualNumbers v0.6.2
  [e25cca7e] FDM v0.6.1
  [49c96f43] Nabla v0.12.1 [`~/.julia/packages/Nabla/D60dX`]
  [276daf66] SpecialFunctions v0.9.0
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
Test Summary: | Pass  Total
Core          |  234    234
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = in_domain(::Function, ::Float64) at finite_differencing.jl:128
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:128
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #Branch#13 at core.jl:82 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/core.jl:82
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #44 at finite_differencing.jl:24 [inlined]
└ @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = (::Nabla.var"#55#59"{Float64,typeof(lbeta)})(::Float64) at finite_differencing.jl:197
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:197
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = Branch(::Function, ::Tuple{Leaf{Float64},Leaf{Float64}}, ::Tape; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at core.jl:82
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/core.jl:82
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = (::Nabla.var"#44#45"{typeof(lbeta),Float64,Tuple{Float64,Float64},Tuple{Float64,Float64}})(::Float64) at finite_differencing.jl:24
└ @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = broadcast(::Function, ::Float64) at broadcast.jl:760
└ @ Base.Broadcast ./broadcast.jl:760
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf(::typeof(lgamma), ::Float64) at broadcast.jl:630
└ @ Base.Broadcast ./broadcast.jl:630
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
└ @ Core ./broadcast.jl:630
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = broadcast(::Function, ::Float64, ::Float64) at broadcast.jl:760
└ @ Base.Broadcast ./broadcast.jl:760
Functional: Test Failed at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237
  Expression: allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237 =# @benchmark(foo_small())) == allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237 =# @benchmark(foo_large()))
   Evaluated: 15 == 14
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:237
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
 [3] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:5
Functional: Test Failed at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238
  Expression: allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238 =# @benchmark(∇(foo_small()))) == allocs(#= /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238 =# @benchmark(∇(foo_large())))
   Evaluated: 55 == 54
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:238
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
 [3] top-level scope at /home/pkgeval/.julia/packages/Nabla/D60dX/test/sensitivities/functional/functional.jl:5
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
└ @ Base ./reduce.jl:397
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
└ @ Base ./reduce.jl:397
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:400
└ @ Base ./reduce.jl:400
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:90 [inlined]
└ @ Core ./reduce.jl:90
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:90 [inlined]
└ @ Core ./reduce.jl:90
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:90 [inlined]
└ @ Core ./reduce.jl:90
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:90 [inlined]
└ @ Core ./reduce.jl:90
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
└ @ Base ./reduce.jl:397
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
└ @ Base ./reduce.jl:397
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:400
└ @ Base ./reduce.jl:400
Test Summary:                                  | Pass  Fail  Total
Sensitivities                                  | 3341     2   3343
  Finite-difference estimates of sensitivities |   31           31
  Indexing                                     |    7            7
  Scalar domains                               |   10           10
  Scalar                                       |  910          910
  Array                                        |   10           10
  Functional                                   | 1146     2   1148
    Functional                                 |  698     2    700
    Issue #136                                 |   21           21
    Reduce                                     |  400          400
    Reduce dim                                 |   27           27
  Linear algebra                               | 1227         1227
ERROR: LoadError: Some tests did not pass: 3341 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Nabla/D60dX/test/runtests.jl:18
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Nabla/D60dX/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Nabla/D60dX/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Nabla errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#66 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
