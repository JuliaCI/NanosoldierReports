Julia Version 1.4.0-DEV.659
Commit 1c89535733 (2019-12-23 18:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed TableTraits ───────────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Missings ──────────────────── v0.4.3
 Installed PooledArrays ──────────────── v0.5.3
 Installed Parsers ───────────────────── v0.3.10
 Installed CategoricalArrays ─────────── v0.7.5
 Installed JSON ──────────────────────── v0.21.0
 Installed DataFrames ────────────────── v0.20.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Compat ────────────────────── v3.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataStructures ────────────── v0.17.6
 Installed MLDataPattern ─────────────── v0.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_7V9CT8/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_7V9CT8/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_7V9CT8/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 134.55000000000007
[ Info: 84.20000000000006
[ Info: 36.95999999999999
[ Info: 27.99
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 75.7800011588304
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.807411693858253
inertia(cdnet.distances) = 24.458287606928984
inertia(crand.distances) = 21.116527944699293
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1513671875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1513671875,"f1":null,"seconds":0.000924132764339447,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.34375,"distances_sum":422.0992071016959}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1513671875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1513671875,"f1":null,"seconds":0.000924132764339447,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.34375,"distances_sum":422.0992071016959}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":2.909451723098755e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0625,"distances_sum":452.53078505757816}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2353515625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":2.909451723098755e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0625,"distances_sum":452.53078505757816}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2353515625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":2.909451723098755e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.0625,"distances_sum":452.53078505757816}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4365234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4365234375,"f1":null,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.7109375,"distances_sum":826.5326739499532}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8198473401598411,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.265625,"distances_sum":1466.166181732256}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5947265625,"f1":null,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.609375,"distances_sum":1154.154692979267}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7099609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7099609375,"f1":0.8198473401598411,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.265625,"distances_sum":1466.166181732256}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511790293040301,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2014.3165064039813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8723677364302374,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3046875,"distances_sum":1620.68160627539}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9466632326007332,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":1969.0735603522187}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9378038628038634,"seconds":2.644956111907959e-5,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":1939.0809378217687}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8793649059274069,"seconds":5.219131708145142e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3515625,"distances_sum":1652.3575399245506}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9511790293040301,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2014.3165064039813}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672275641025645,"seconds":8.285045623779297e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2102.0833634341375}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":6.6552311182022095e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.953125,"distances_sum":2163.028236496513}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783138736263737,"seconds":7.594004273414612e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2176.0228322073585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9661687271062275,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":2115.5505009134004}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578754578754586,"seconds":6.992369890213013e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2046.1664768302317}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9526702464202467,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":1989.2045343607813}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665750915750918,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":2099.9659310259244}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9645547161172164,"seconds":3.719702363014221e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2103.0584553399162}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783138736263737,"seconds":7.594004273414612e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2176.0228322073585}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783138736263737,"seconds":7.594004273414612e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9609375,"distances_sum":2176.0228322073585}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8174091533466542,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9453125,"distances_sum":1356.105846929887}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.533203125,"f1":null,"seconds":4.239380359649658e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":6.8828125,"distances_sum":992.362941409071}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.8174091533466542,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":7.9453125,"distances_sum":1356.105846929887}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9395921786546788,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.65625,"distances_sum":1894.3974127405559}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9102709790209798,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.5625,"distances_sum":1698.0751748372581}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9377232142857147,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.6953125,"distances_sum":1858.501004934978}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9395921786546788,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.65625,"distances_sum":1894.3974127405559}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550652472527482,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.75,"distances_sum":1954.3244891568854}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9683608058608062,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8359375,"distances_sum":2027.1378354627104}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9683608058608062,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8359375,"distances_sum":2027.1378354627104}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9683608058608062,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":9.853392839431763e-7,"evaluations":8.8359375,"distances_sum":2027.1378354627104}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3212890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3212890625,"f1":null,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":4.7109375,"distances_sum":596.5928648037226}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8021660631035638,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.671875,"distances_sum":1205.6161529501696}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8021660631035638,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.671875,"distances_sum":1205.6161529501696}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447630494505501,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7421875,"distances_sum":1843.374713172184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8758444680319686,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.3203125,"distances_sum":1486.5969705568484}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447630494505501,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7421875,"distances_sum":1843.374713172184}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785542582417586,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2014.4069428630016}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9633413461538465,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.90625,"distances_sum":1915.5199888498025}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657394688644694,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.828125,"distances_sum":1945.2235588961428}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471268315018321,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8046875,"distances_sum":1813.3303974027579}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556433150183156,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":1873.9388274374232}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417586,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2014.4069428630016}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785542582417586,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2014.4069428630016}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.4943222999572754e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.5625,"distances_sum":523.0476350570345}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.22265625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.22265625,"f1":null,"seconds":3.4943222999572754e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.5625,"distances_sum":523.0476350570345}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":3.5855919122695923e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.9296875,"distances_sum":910.1318647150024}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7917228604728613,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.71875,"distances_sum":1466.0278206837563}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66796875,"f1":0.7917228604728613,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.71875,"distances_sum":1466.0278206837563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.94353250915751,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.78125,"distances_sum":2223.4559008039823}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541755119880125,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.828125,"distances_sum":2351.1910491073722}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9541755119880125,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.828125,"distances_sum":2351.1910491073722}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652586996337,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8828125,"distances_sum":2440.6777292467177}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685096153846154,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2451.8548984377458}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9586881868131875,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8671875,"distances_sum":2393.09933571718}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685096153846154,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2451.8548984377458}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685096153846154,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.890625,"distances_sum":2451.8548984377458}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2734375,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.5,"distances_sum":669.5635243326711}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8559497793872802,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.953125,"distances_sum":1859.6044906114964}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8559497793872802,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.953125,"distances_sum":1859.6044906114964}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9222215284715294,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6640625,"distances_sum":2211.733677229506}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9222215284715294,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6640625,"distances_sum":2211.733677229506}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.936521291208792,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7109375,"distances_sum":2318.7866340278606}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583733974358982,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.84375,"distances_sum":2531.8229945916287}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583733974358982,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.84375,"distances_sum":2531.8229945916287}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9583733974358982,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.84375,"distances_sum":2531.8229945916287}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.3546239137649536e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":5.734375,"distances_sum":531.9032459857615}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8502154095904104,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.8515625,"distances_sum":1691.971518260869}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.689193792318793,"seconds":4.101544618606567e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.921875,"distances_sum":1143.8667050217325}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8502154095904104,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.8515625,"distances_sum":1691.971518260869}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.85046411921412,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.9453125,"distances_sum":1703.7031018482805}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9357257326007331,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.625,"distances_sum":2194.8620871009257}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9096101814851821,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.578125,"distances_sum":2005.212717586915}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9357257326007331,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.625,"distances_sum":2194.8620871009257}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621336996337,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2387.7150601319636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612980769230776,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8671875,"distances_sum":2361.321931759681}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689045329670334,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.890625,"distances_sum":2436.3112422095387}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.956438873626374,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.828125,"distances_sum":2342.145502442525}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451007326007332,"seconds":7.211416959762573e-5,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.765625,"distances_sum":2284.56530842021}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451381951381957,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.765625,"distances_sum":2272.9837549782437}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689045329670334,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.890625,"distances_sum":2436.3112422095387}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689045329670334,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.890625,"distances_sum":2436.3112422095387}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8534949425574434,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.84375,"distances_sum":1845.280239499872}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6971511127761132,"seconds":4.304572939872742e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.875,"distances_sum":1260.8029445830089}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8534949425574434,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.84375,"distances_sum":1845.280239499872}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9530620421245427,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7421875,"distances_sum":2490.239785389971}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648523351648356,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2568.6852473207023}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648523351648356,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2568.6852473207023}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685496794871802,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9375,"distances_sum":2557.1652401158904}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131869,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2633.3927539027095}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131869,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2633.3927539027095}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131869,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2633.3927539027095}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.45703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.45703125,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.2265625,"distances_sum":992.3717804287224}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.45703125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.45703125,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":6.2265625,"distances_sum":992.3717804287224}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8702068764568771,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.8984375,"distances_sum":1947.8374119030657}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9004094863469873,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4140625,"distances_sum":2152.2691714478956}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9004094863469873,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4140625,"distances_sum":2152.2691714478956}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504407051282059,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.8671875,"distances_sum":2469.38931837486}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9375,"distances_sum":2650.027958471175}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9375,"distances_sum":2650.027958471175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9733459249084254,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9375,"distances_sum":2650.027958471175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.6171875,"distances_sum":820.668362602352}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.421679139137268e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.7578125,"distances_sum":920.6606566794331}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4111328125,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.421679139137268e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.7578125,"distances_sum":920.6606566794331}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.709839986402487,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9453125,"distances_sum":1272.8820768059456}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8538409507159515,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8984375,"distances_sum":1851.8041508354104}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7146277333777339,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9375,"distances_sum":1275.1047136504335}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8538409507159515,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8984375,"distances_sum":1851.8041508354104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9276931401931405,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5859375,"distances_sum":2345.705035822586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.96231684981685,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2560.4416659235794}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522206959706966,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8203125,"distances_sum":2476.5975625790848}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.96231684981685,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2560.4416659235794}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.96231684981685,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2560.4416659235794}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8500327797202805,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8359375,"distances_sum":1784.0592469154708}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.3918768167495728e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.2890625,"distances_sum":576.6288541541159}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.5,"distances_sum":625.3078091940379}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8500327797202805,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8359375,"distances_sum":1784.0592469154708}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553628663003666,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2440.4157201936014}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.891498085248086,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.1796875,"distances_sum":2014.312155372943}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9407712079587085,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7109375,"distances_sum":2363.764721365722}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553628663003666,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2440.4157201936014}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.977066163003663,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2579.2013251838366}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703697344322348,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8984375,"distances_sum":2540.884456998239}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593635531135537,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8359375,"distances_sum":2493.730652331143}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601991758241765,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.84375,"distances_sum":2490.3124257618056}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680860805860809,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2565.2649498936803}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977066163003663,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2579.2013251838366}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.977066163003663,"seconds":6.455928087234497e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2579.2013251838366}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8002221736596743,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.546875,"distances_sum":1588.5372413014302}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7861681721056729,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.5859375,"distances_sum":1510.0196612041595}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.034248948097229e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.296875,"distances_sum":504.31562504636145}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6967072857697861,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.7421875,"distances_sum":1149.3720916018679}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.8002221736596743,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.546875,"distances_sum":1588.5372413014302}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9354624542124548,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6015625,"distances_sum":2241.6209705972014}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8944404553779562,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3125,"distances_sum":1968.795658609791}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8592355561105571,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.078125,"distances_sum":1757.181054202711}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8517321220446228,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.0546875,"distances_sum":1757.5301374431335}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9354624542124548,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6015625,"distances_sum":2241.6209705972014}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824175,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2484.847489893466}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9501545329670336,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7265625,"distances_sum":2348.070391621735}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604739010989016,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7890625,"distances_sum":2403.289706662205}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453239468864475,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.5390625,"distances_sum":2299.480054921509}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824175,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2484.847489893466}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824175,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2484.847489893466}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.430992364883423e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":5.984375,"distances_sum":524.2016348885383}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.1953125,"distances_sum":1147.9775500452477}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5419921875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5419921875,"f1":null,"seconds":4.597008228302002e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.1953125,"distances_sum":1147.9775500452477}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.364177584648132e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.5,"distances_sum":1222.7953117036852}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5986328125,"f1":0.7359952547452554,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.5,"distances_sum":1274.8194740913727}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":7,"bsize":4}, perf: {"precision":null,"recall":0.6591796875,"f1":null,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.5625,"distances_sum":1452.2119657518554}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":7,"bsize":4},"perf":{"precision":null,"recall":0.6591796875,"f1":null,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.5625,"distances_sum":1452.2119657518554}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.905972673160174,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.46875,"distances_sum":2007.8379358359668}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.934792811355312,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.71875,"distances_sum":2203.0825954901966}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8697292291042299,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.0390625,"distances_sum":1827.64840570732}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9233807858807864,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.5859375,"distances_sum":2138.217256709537}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.853858641358642,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.9921875,"distances_sum":1759.949271643939}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8571319305694316,"seconds":5.0906091928482056e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.09375,"distances_sum":1806.3030930108498}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8975274725274733,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.3828125,"distances_sum":1955.2838032868572}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.934792811355312,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.71875,"distances_sum":2203.0825954901966}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.934792811355312,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.71875,"distances_sum":2203.0825954901966}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8621304043179051,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7421875,"distances_sum":1855.8176489329749}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.813677815240316,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.4375,"distances_sum":1620.4264417996199}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.3136457204818726e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.546875,"distances_sum":580.4234492147906}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.049390554428101e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.796875,"distances_sum":1240.9550852752952}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8621304043179051,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7421875,"distances_sum":1855.8176489329749}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541151556776563,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.703125,"distances_sum":2469.073800982166}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9257560148185154,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.328125,"distances_sum":2304.601948018374}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9285885989010995,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.3984375,"distances_sum":2276.8144306534477}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9015598984348993,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2421875,"distances_sum":2078.498932806075}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8994734432234441,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.21875,"distances_sum":2051.0084741399187}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541151556776563,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.703125,"distances_sum":2469.073800982166}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":2581.556650233677}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989013,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2537.678610262165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684752747252752,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8203125,"distances_sum":2543.9035626435198}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544013278388281,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6953125,"distances_sum":2455.1749785032766}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9581501831501835,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7734375,"distances_sum":2472.6485243026564}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":2581.556650233677}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":2581.556650233677}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8004079254079263,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.765625,"distances_sum":1528.1472884312666}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8713630119880128,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.125,"distances_sum":1870.99426134511}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.725753413253414,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.296875,"distances_sum":1291.283676048612}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8713630119880128,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.125,"distances_sum":1870.99426134511}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8806610056610064,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.328125,"distances_sum":1870.5478258154792}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9256868131868138,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":2136.0732736785008}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9256868131868138,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7890625,"distances_sum":2136.0732736785008}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657394688644693,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":2469.590611378537}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688072344322349,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.921875,"distances_sum":2476.358098094044}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2471.93207408299}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564789377289381,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":2407.8413075253816}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.94320054945055,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8203125,"distances_sum":2267.5188198209353}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2471.93207408299}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969700091575092,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9375,"distances_sum":2471.93207408299}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.263671875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.263671875,"f1":null,"seconds":3.5762786865234375e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.484375,"distances_sum":607.0568941263}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.263671875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.263671875,"f1":null,"seconds":3.5762786865234375e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.484375,"distances_sum":607.0568941263}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7934997294372301,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.75,"distances_sum":1546.428995544265}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7934997294372301,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.75,"distances_sum":1546.428995544265}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.895598672161173,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.265625,"distances_sum":2002.1578454811802}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.884054487179488,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.2734375,"distances_sum":1879.6979965828993}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8580667596292605,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.0703125,"distances_sum":1778.7823386833927}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.895598672161173,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.265625,"distances_sum":2002.1578454811802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9321027930402935,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.6171875,"distances_sum":2213.3868724377203}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9344093406593414,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.4296875,"distances_sum":2195.778606335929}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9615327380952386,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.78125,"distances_sum":2405.851072772404}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9615327380952386,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.78125,"distances_sum":2405.851072772404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9615327380952386,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.78125,"distances_sum":2405.851072772404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9788132440476189,"recall":0.732421875,"f1":0.8301227418414923,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.9375,"distances_sum":1506.6931613261972}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9664806547619044,"recall":0.720703125,"f1":0.8199461996336996,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.9609375,"distances_sum":1500.3579859418903}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.732421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":0.9788132440476189,"recall":0.732421875,"f1":0.8301227418414923,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.9375,"distances_sum":1506.6931613261972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9695312499999998,"recall":0.896484375,"f1":0.928831845238095,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7890625,"distances_sum":2022.3088017516673}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9667317708333333,"recall":0.7939453125,"f1":0.8663855025183151,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.34375,"distances_sum":1619.8611739772762}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.973930431547619,"recall":0.89453125,"f1":0.9294650011446887,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7421875,"distances_sum":2018.723708965812}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.968350074404762,"recall":0.8876953125,"f1":0.9229374141483516,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7734375,"distances_sum":2005.4489158213485}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":4,"bsize":9},"perf":{"precision":0.9695312499999998,"recall":0.896484375,"f1":0.928831845238095,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.7890625,"distances_sum":2022.3088017516673}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":10}, perf: {"precision":0.9717447916666666,"recall":0.916015625,"f1":0.9410070398351652,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8515625,"distances_sum":2104.1679814451345}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":8,"bsize":9}, perf: {"precision":0.9697916666666667,"recall":0.9052734375,"f1":0.9341603708791205,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8203125,"distances_sum":2053.9264810566547}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":13}, perf: {"precision":0.9648623511904761,"recall":0.927734375,"f1":0.9444468292124543,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.921875,"distances_sum":2167.012166665387}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":13}, perf: {"precision":0.9631417410714286,"recall":0.9189453125,"f1":0.9388943738553113,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.921875,"distances_sum":2131.0173847389633}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":11}, perf: {"precision":0.9647972470238095,"recall":0.9287109375,"f1":0.945025612408425,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.9296875,"distances_sum":2191.219683732439}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":12}, perf: {"precision":0.9667689732142858,"recall":0.9111328125,"f1":0.9361056261446886,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.921875,"distances_sum":2067.6683199661547}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":11}, perf: {"precision":0.967075892857143,"recall":0.92578125,"f1":0.9442708333333334,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8671875,"distances_sum":2161.9915632916873}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":11},"perf":{"precision":0.9647972470238095,"recall":0.9287109375,"f1":0.945025612408425,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.9296875,"distances_sum":2191.219683732439}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":11},"perf":{"precision":0.9647972470238095,"recall":0.9287109375,"f1":0.945025612408425,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.9296875,"distances_sum":2191.219683732439}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":2.956017851829529e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.8828125,"distances_sum":425.0769481499351}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.1907111406326294e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.03125,"distances_sum":435.84192317699956}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.521484375,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.953125,"distances_sum":971.9876111100323}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.521484375,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.521484375,"f1":null,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.953125,"distances_sum":971.9876111100323}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8536328255078263,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.359375,"distances_sum":1456.7090181320905}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9328411172161178,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1822.957818399611}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.849597798035299,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.28125,"distances_sum":1463.0174767936078}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9328411172161178,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1822.957818399611}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9481284340659347,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7421875,"distances_sum":1934.348509893227}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517227564102567,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1977.475391184789}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9517227564102567,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1977.475391184789}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9517227564102567,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1977.475391184789}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.0975788831710815e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.3984375,"distances_sum":477.88232770031163}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.852272727272728,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8203125,"distances_sum":1496.9254884676527}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6785414238539245,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.5703125,"distances_sum":978.3377098923183}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8563363719613727,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8671875,"distances_sum":1483.652319624956}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8563363719613727,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8671875,"distances_sum":1483.652319624956}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514594780219785,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6328125,"distances_sum":2076.1243485907567}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.939821116383617,"seconds":5.420297384262085e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.578125,"distances_sum":1986.208820936135}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8926745129870136,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3046875,"distances_sum":1636.816841234554}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9428685897435902,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.65625,"distances_sum":1981.0134450021042}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9360977564102569,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4765625,"distances_sum":1880.4495361937168}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8972527472527481,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2890625,"distances_sum":1698.9560349137362}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9514594780219785,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6328125,"distances_sum":2076.1243485907567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717834249084253,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2146.3218976552453}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962894917582418,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.796875,"distances_sum":2073.5635254169265}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9797447344322346,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2194.4437451864837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.962168040293041,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7890625,"distances_sum":2084.060304310683}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9699461996336999,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2123.7723250709582}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797447344322346,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2194.4437451864837}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797447344322346,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2194.4437451864837}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.015625,"distances_sum":542.5316709257926}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.9140625,"distances_sum":791.7556517518444}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3994140625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.9140625,"distances_sum":791.7556517518444}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3994140625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.9140625,"distances_sum":791.7556517518444}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.3994140625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.9140625,"distances_sum":791.7556517518444}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.794389291264292,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.53125,"distances_sum":1279.6658161652058}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8328419844044851,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.96875,"distances_sum":1433.52052005004}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2529296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.334134817123413e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.7265625,"distances_sum":411.31831905454965}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8328419844044851,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.96875,"distances_sum":1433.52052005004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8402706668331676,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9921875,"distances_sum":1428.5107966636676}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8422879204129212,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.015625,"distances_sum":1432.6873862453485}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9321517024642032,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":1822.9068003952352}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.901210768398269,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":1671.34252178768}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449893856143861,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.65625,"distances_sum":1904.5155219265082}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449893856143861,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.65625,"distances_sum":1904.5155219265082}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.956776556776557,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":2004.0829440820683}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9571314102564108,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.765625,"distances_sum":1984.0887941488966}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754693223443227,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2115.555795374001}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962574404761905,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2008.7034392309465}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":13,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603479853479858,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2004.8220631011563}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627289377289382,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2012.7050807997068}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":12,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9475904304029309,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5625,"distances_sum":1881.6688431030118}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9754693223443227,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2115.555795374001}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9754693223443227,"seconds":6.671994924545288e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2115.555795374001}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":5.8359375,"distances_sum":485.1049854265185}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8351778429903438,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":7.90625,"distances_sum":1561.7994118990425}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2578125,"f1":null,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":5.609375,"distances_sum":453.23217199003096}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8351778429903438,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":7.90625,"distances_sum":1561.7994118990425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661687271062275,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.8359375,"distances_sum":2153.9627889853773}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8449363136863145,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":7.8984375,"distances_sum":1565.9327953106897}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661687271062275,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.8359375,"distances_sum":2153.9627889853773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238099,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.9453125,"distances_sum":2220.64035725395}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238099,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.9453125,"distances_sum":2220.64035725395}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782738095238099,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.9453125,"distances_sum":2220.64035725395}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2646484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2646484375,"f1":null,"seconds":3.0566006898880005e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.5234375,"distances_sum":507.6385448613178}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2646484375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2646484375,"f1":null,"seconds":3.0566006898880005e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.5234375,"distances_sum":507.6385448613178}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5927734375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5927734375,"f1":0.7304270382395389,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.1328125,"distances_sum":1214.291848451796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.251953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.251953125,"f1":null,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.1640625,"distances_sum":547.0462379835808}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5927734375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5927734375,"f1":0.7304270382395389,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.1328125,"distances_sum":1214.291848451796}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.93094977938728,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5078125,"distances_sum":2199.052032699928}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7853311618936626,"seconds":4.492700099945068e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.7109375,"distances_sum":1386.1689594827203}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.93094977938728,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5078125,"distances_sum":2199.052032699928}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9430720321345325,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.578125,"distances_sum":2247.082068472892}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930406,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2482.093666076166}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9369307775557784,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5234375,"distances_sum":2239.892272314978}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":12,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930406,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2482.093666076166}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":12,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930406,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2482.093666076166}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7259906759906766,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":7.3359375,"distances_sum":1203.6984387983475}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8071978368853376,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.046875,"distances_sum":1521.9495340235933}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8071978368853376,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.046875,"distances_sum":1521.9495340235933}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9027904387279391,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.640625,"distances_sum":1933.5893894406988}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9336117007992013,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.828125,"distances_sum":2146.6537130831043}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8423201798201806,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.4375,"distances_sum":1632.1354087376412}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8577812812187819,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.625,"distances_sum":1683.5528400362775}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9336117007992013,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.828125,"distances_sum":2146.6537130831043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9614297161172164,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.8671875,"distances_sum":2341.7629904124783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634386446886452,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.875,"distances_sum":2356.32775401796}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9610920329670333,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.8515625,"distances_sum":2362.468413340399}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9507497710622717,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.7734375,"distances_sum":2309.1547594935437}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9634386446886452,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.875,"distances_sum":2356.32775401796}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9634386446886452,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":2.389773726463318e-6,"evaluations":8.875,"distances_sum":2356.32775401796}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.25390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.25390625,"f1":null,"seconds":3.1515955924987793e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":5.46875,"distances_sum":505.73924918912616}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.25390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.25390625,"f1":null,"seconds":3.1515955924987793e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":5.46875,"distances_sum":505.73924918912616}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8223484848484857,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.15625,"distances_sum":1785.9917877782361}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8223484848484857,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.15625,"distances_sum":1785.9917877782361}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9061417748917756,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.546875,"distances_sum":2249.9107845742037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9463598901098909,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2463.170511639845}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9463598901098909,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2463.170511639845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9547676282051287,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.671875,"distances_sum":2551.7518561240104}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551599442224449,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2558.487272881468}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9621108058608061,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7109375,"distances_sum":2605.0734723921214}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9621108058608061,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7109375,"distances_sum":2605.0734723921214}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9621108058608061,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7109375,"distances_sum":2605.0734723921214}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8228469447219455,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1484375,"distances_sum":1666.5186390148358}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7813743548118555,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.5625,"distances_sum":1440.7648595958653}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8228469447219455,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1484375,"distances_sum":1666.5186390148358}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9599187271062277,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2437.362575964891}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370280760905767,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.640625,"distances_sum":2276.6921183031054}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8453504828504838,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.328125,"distances_sum":1699.8859658187537}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9403362262737267,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5859375,"distances_sum":2271.6324981589723}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9599187271062277,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2437.362575964891}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813816391941395,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.96875,"distances_sum":2568.860779742148}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9821428571428574,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.984375,"distances_sum":2573.444841884258}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9691105769230773,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2523.1600115852048}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641769688644691,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8515625,"distances_sum":2441.516654722996}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635473901098904,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.859375,"distances_sum":2463.711986786936}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2515.333533378831}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9821428571428574,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.984375,"distances_sum":2573.444841884258}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9821428571428574,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.984375,"distances_sum":2573.444841884258}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5234375,"f1":0.6674873737373742,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.640625,"distances_sum":1108.2549982844073}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7662150349650357,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.25,"distances_sum":1449.975260744649}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8406348859473869,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.828125,"distances_sum":1778.212831825987}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8406348859473869,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.828125,"distances_sum":1778.212831825987}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8995483682983691,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5,"distances_sum":2001.4464290745407}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9233121045621051,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6328125,"distances_sum":2207.0453284180085}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9345727189477195,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2214.9439130228798}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9335622710622719,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6015625,"distances_sum":2272.636912098882}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9345727189477195,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2214.9439130228798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2470.663927666787}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9633444680319686,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.875,"distances_sum":2411.3610289460707}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537087912087919,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.75,"distances_sum":2369.993571764461}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2470.663927666787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2470.663927666787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.5625,"distances_sum":816.9898940456994}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.51171875,"f1":null,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.3046875,"distances_sum":1079.7229096772844}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8295605436230444,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.78125,"distances_sum":1648.8239345015247}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7265625,"f1":0.8295605436230444,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.78125,"distances_sum":1648.8239345015247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8551552614052621,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.8984375,"distances_sum":1788.7682510452717}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.87807400932401,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.8828125,"distances_sum":1878.7753314881277}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.87807400932401,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.8828125,"distances_sum":1878.7753314881277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9241185897435906,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.453125,"distances_sum":2115.939502572678}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9560325091575095,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.734375,"distances_sum":2362.3230207289594}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9440590659340667,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.609375,"distances_sum":2336.541811796995}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9239047410922417,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.3671875,"distances_sum":2185.3722585326987}, best_list's length: 8, n: 9
inertia(cfft.distances) = 23.66146727926465
inertia(cdnet.distances) = 25.951647995492653
inertia(crand.distances) = 22.59816408152832
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.925218531468532,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.34375,"distances_sum":2180.4883190414853}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9560325091575095,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.734375,"distances_sum":2362.3230207289594}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9560325091575095,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.734375,"distances_sum":2362.3230207289594}}, n: 9
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9444444444444443
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9511111111111111
===> k=7
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9155555555555557
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8644444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8533333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 1, 3, 3, 3, 2, 3, 3, 1, 3, 2, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(nc.class_map = [2, 1, 3, 2, 1, 3, 3, 2, 3, 2, 3, 3, 2, 3, 2]
acc = 0.9266666666666666
2, 5), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 9, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 11, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 15 centroids; started with 12
acc = 0.94
Test Summary:   | Pass  Total
NearestCentroid |   10     10
*** starting iteration: 1; err: [Inf, 0.31660000546250594] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144] ***
*** starting iteration: 2; err: [Inf, 0.31660000546250594, 0.1981707265724144] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177] ***
*** starting iteration: 3; err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919] ***
*** starting iteration: 4; err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559] ***
*** starting iteration: 5; err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559, 0.1595905490043706] ***
*** finished computation of 12 references, err: [Inf, 0.31660000546250594, 0.1981707265724144, 0.17745454881512177, 0.1640085833199919, 0.1599525693712559, 0.1595905490043706] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 13 centroids; started with 12
iteration 1 finished
*** starting iteration: 1; err: [Inf, 9.343900023140876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.343900023140876, 0.9900202483780983] ***
*** starting iteration: 2; err: [Inf, 9.343900023140876, 0.9900202483780983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.343900023140876, 0.9900202483780983, 0.4953331938427734] ***
*** starting iteration: 3; err: [Inf, 9.343900023140876, 0.9900202483780983, 0.4953331938427734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.343900023140876, 0.9900202483780983, 0.4953331938427734, 0.4912562357155672] ***
*** finished computation of 3 references, err: [Inf, 9.343900023140876, 0.9900202483780983, 0.4953331938427734, 0.4912562357155672] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 26, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2563000221892695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2563000221892695, 1.0449995425419896] ***
*** starting iteration: 2; err: [Inf, 2.2563000221892695, 1.0449995425419896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2563000221892695, 1.0449995425419896, 1.0343220057193276] ***
*** starting iteration: 3; err: [Inf, 2.2563000221892695, 1.0449995425419896, 1.0343220057193276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2563000221892695, 1.0449995425419896, 1.0343220057193276, 1.0319993286938995] ***
*** finished computation of 3 references, err: [Inf, 2.2563000221892695, 1.0449995425419896, 1.0343220057193276, 1.0319993286938995] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 37]]
** centroid: 1, normalized-entropy: 0.9976432959863935, [(2, 33), (3, 37)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [18, 2, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3340999816287615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3340999816287615, 0.9837866831443322] ***
*** starting iteration: 2; err: [Inf, 1.3340999816287615, 0.9837866831443322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3340999816287615, 0.9837866831443322, 0.9501265524328139] ***
*** starting iteration: 3; err: [Inf, 1.3340999816287615, 0.9837866831443322, 0.9501265524328139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3340999816287615, 0.9837866831443322, 0.9501265524328139, 0.9443308402537679] ***
*** finished computation of 3 references, err: [Inf, 1.3340999816287615, 0.9837866831443322, 0.9501265524328139, 0.9443308402537679] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 31]]
** centroid: 1, normalized-entropy: 0.9981341775041118, [(2, 28), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 3, 0]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(1, 23), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22362748063725835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22362748063725835, 0.14599444512422088] ***
*** finished computation of 7 references, err: [Inf, 0.22362748063725835, 0.14599444512422088] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 6]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2144967887193423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2144967887193423, 0.6798498948409534] ***
*** finished computation of 7 references, err: [Inf, 1.2144967887193423, 0.6798498948409534] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 37]]
** centroid: 1, normalized-entropy: 0.9987117514654895, [(2, 34), (3, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [11, 1, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 11), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.569853682636116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.569853682636116, 0.2518108674101383] ***
*** finished computation of 7 references, err: [Inf, 0.569853682636116, 0.2518108674101383] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 15]]
** centroid: 1, normalized-entropy: 0.9740248644357521, [(2, 22), (3, 15)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2228378885710283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2228378885710283, 0.4703128544877229] ***
*** finished computation of 3 references, err: [Inf, 1.2228378885710283, 0.4703128544877229] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 25]]
** centroid: 2, normalized-entropy: 0.9831491282282879, [(2, 34), (3, 25)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2024910527001444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2024910527001444, 0.5075993266564484] ***
*** finished computation of 3 references, err: [Inf, 1.2024910527001444, 0.5075993266564484] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 26]]
** centroid: 2, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 1, 0]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(1, 28), (2, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5855402386829263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5855402386829263, 0.667662604400283] ***
*** finished computation of 3 references, err: [Inf, 2.5855402386829263, 0.667662604400283] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [22, 4, 0]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(1, 22), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 31]]
** centroid: 3, normalized-entropy: 0.9965663713274552, [(2, 27), (3, 31)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5001000035012502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001000035012502, 0.3974516997961691] ***
*** starting iteration: 2; err: [Inf, 0.5001000035012502, 0.3974516997961691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476] ***
*** starting iteration: 3; err: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476, 0.2936681225923172] ***
*** starting iteration: 4; err: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476, 0.2936681225923172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476, 0.2936681225923172, 0.28801531314985807] ***
*** starting iteration: 5; err: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476, 0.2936681225923172, 0.28801531314985807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476, 0.2936681225923172, 0.28801531314985807, 0.28756561102909417] ***
*** finished computation of 7 references, err: [Inf, 0.5001000035012502, 0.3974516997961691, 0.32881081624637476, 0.2936681225923172, 0.28801531314985807, 0.28756561102909417] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 17]]
** centroid: 3, normalized-entropy: 0.9784493292686188, [(2, 12), (3, 17)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9244999963976841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9244999963976841, 0.5171351402519488] ***
*** starting iteration: 2; err: [Inf, 0.9244999963976841, 0.5171351402519488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9244999963976841, 0.5171351402519488, 0.48107614412436417] ***
*** starting iteration: 3; err: [Inf, 0.9244999963976841, 0.5171351402519488, 0.48107614412436417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9244999963976841, 0.5171351402519488, 0.48107614412436417, 0.47640940172973545] ***
*** starting iteration: 4; err: [Inf, 0.9244999963976841, 0.5171351402519488, 0.48107614412436417, 0.47640940172973545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9244999963976841, 0.5171351402519488, 0.48107614412436417, 0.47640940172973545, 0.475477626103617] ***
*** finished computation of 7 references, err: [Inf, 0.9244999963976841, 0.5171351402519488, 0.48107614412436417, 0.47640940172973545, 0.475477626103617] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.3482999291244933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3482999291244933, 0.6549804157037222] ***
*** starting iteration: 2; err: [Inf, 3.3482999291244933, 0.6549804157037222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461] ***
*** starting iteration: 3; err: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994] ***
*** starting iteration: 4; err: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994, 0.27283545800927317] ***
*** starting iteration: 5; err: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994, 0.27283545800927317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994, 0.27283545800927317, 0.2683807861009065] ***
*** starting iteration: 6; err: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994, 0.27283545800927317, 0.2683807861009065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994, 0.27283545800927317, 0.2683807861009065, 0.26779911186713773] ***
*** finished computation of 7 references, err: [Inf, 3.3482999291244933, 0.6549804157037222, 0.3088516024506461, 0.2776502055253994, 0.27283545800927317, 0.2683807861009065, 0.26779911186713773] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 9]]
** centroid: 1, normalized-entropy: 0.8691375806126381, [(2, 22), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27025672283838786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27025672283838786, 0.18851608623779448] ***
*** starting iteration: 2; err: [Inf, 0.27025672283838786, 0.18851608623779448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623] ***
*** starting iteration: 3; err: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623, 0.17698796449546556] ***
*** starting iteration: 4; err: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623, 0.17698796449546556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623, 0.17698796449546556, 0.17396260513721068] ***
*** starting iteration: 5; err: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623, 0.17698796449546556, 0.17396260513721068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623, 0.17698796449546556, 0.17396260513721068, 0.17380419893572138] ***
*** finished computation of 7 references, err: [Inf, 0.27025672283838786, 0.18851608623779448, 0.18031610812587623, 0.17698796449546556, 0.17396260513721068, 0.17380419893572138] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 4, 11]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.549075041994118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.549075041994118, 0.23984681062935703] ***
*** starting iteration: 2; err: [Inf, 1.549075041994118, 0.23984681062935703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947] ***
*** starting iteration: 3; err: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947, 0.21432497201910702] ***
*** starting iteration: 4; err: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947, 0.21432497201910702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947, 0.21432497201910702, 0.21261261237527188] ***
*** starting iteration: 5; err: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947, 0.21432497201910702, 0.21261261237527188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947, 0.21432497201910702, 0.21261261237527188, 0.21172372961765082] ***
*** finished computation of 7 references, err: [Inf, 1.549075041994118, 0.23984681062935703, 0.22301091369031947, 0.21432497201910702, 0.21261261237527188, 0.21172372961765082] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4712319255472756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414] ***
*** starting iteration: 2; err: [Inf, 0.4712319255472756, 0.33030811304151414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254] ***
*** starting iteration: 3; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039] ***
*** starting iteration: 4; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037] ***
*** starting iteration: 5; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364] ***
*** starting iteration: 6; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276] ***
*** starting iteration: 7; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276, 0.18854616769487176] ***
*** starting iteration: 8; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276, 0.18854616769487176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276, 0.18854616769487176, 0.18242032093808366] ***
*** starting iteration: 9; err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276, 0.18854616769487176, 0.18242032093808366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276, 0.18854616769487176, 0.18242032093808366, 0.18204004636943538] ***
*** finished computation of 7 references, err: [Inf, 0.4712319255472756, 0.33030811304151414, 0.25096588710010254, 0.2112525892743039, 0.20321916799420037, 0.19484921261936364, 0.19035613894908276, 0.18854616769487176, 0.18242032093808366, 0.18204004636943538] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7488424169021484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7488424169021484, 0.5810831986222706] ***
*** finished computation of 3 references, err: [Inf, 0.7488424169021484, 0.5810831986222706] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8639571116116553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8639571116116553, 0.3920540941650025] ***
*** finished computation of 3 references, err: [Inf, 0.8639571116116553, 0.3920540941650025] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 2]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 35]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 5), (3, 35)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.005274048590153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.005274048590153, 0.5885201705220969] ***
*** finished computation of 3 references, err: [Inf, 4.005274048590153, 0.5885201705220969] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 4, 0]]
** centroid: 1, normalized-entropy: 0.45371633918694493, [(1, 38), (2, 4)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 18]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 27), (3, 18)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4450999965865505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271] ***
*** starting iteration: 2; err: [Inf, 0.4450999965865505, 0.2954806670568271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795] ***
*** starting iteration: 3; err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226] ***
*** starting iteration: 4; err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591] ***
*** starting iteration: 5; err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243] ***
*** starting iteration: 6; err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243, 0.2220988674723337] ***
*** starting iteration: 7; err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243, 0.2220988674723337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243, 0.2220988674723337, 0.20966115748577102] ***
*** starting iteration: 8; err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243, 0.2220988674723337, 0.20966115748577102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243, 0.2220988674723337, 0.20966115748577102, 0.20966115748577102] ***
*** finished computation of 7 references, err: [Inf, 0.4450999965865505, 0.2954806670568271, 0.2521140896555795, 0.23816788349299226, 0.2333568099252591, 0.2286422235114243, 0.2220988674723337, 0.20966115748577102, 0.20966115748577102] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0987999976363738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0987999976363738, 0.5123767780518045] ***
*** starting iteration: 2; err: [Inf, 1.0987999976363738, 0.5123767780518045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354] ***
*** starting iteration: 3; err: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354, 0.4982449643831363] ***
*** starting iteration: 4; err: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354, 0.4982449643831363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354, 0.4982449643831363, 0.4958008023935131] ***
*** starting iteration: 5; err: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354, 0.4982449643831363, 0.4958008023935131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354, 0.4982449643831363, 0.4958008023935131, 0.4950690504791703] ***
*** finished computation of 7 references, err: [Inf, 1.0987999976363738, 0.5123767780518045, 0.5042735865054354, 0.4982449643831363, 0.4958008023935131, 0.4950690504791703] ***
*** center 1: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 5]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 32]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 4), (3, 32)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8574000032199335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8574000032199335, 0.3407017192636289] ***
*** starting iteration: 2; err: [Inf, 0.8574000032199335, 0.3407017192636289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8574000032199335, 0.3407017192636289, 0.32283314125368306] ***
*** starting iteration: 3; err: [Inf, 0.8574000032199335, 0.3407017192636289, 0.32283314125368306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8574000032199335, 0.3407017192636289, 0.32283314125368306, 0.3206156943160608] ***
*** starting iteration: 4; err: [Inf, 0.8574000032199335, 0.3407017192636289, 0.32283314125368306, 0.3206156943160608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8574000032199335, 0.3407017192636289, 0.32283314125368306, 0.3206156943160608, 0.3206156943160608] ***
*** finished computation of 7 references, err: [Inf, 0.8574000032199335, 0.3407017192636289, 0.32283314125368306, 0.3206156943160608, 0.3206156943160608] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 15]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 16), (3, 15)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5872000084199677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5872000084199677, 0.3154145026821455] ***
*** starting iteration: 2; err: [Inf, 0.5872000084199677, 0.3154145026821455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5872000084199677, 0.3154145026821455, 0.2698559623304321] ***
*** starting iteration: 3; err: [Inf, 0.5872000084199677, 0.3154145026821455, 0.2698559623304321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5872000084199677, 0.3154145026821455, 0.2698559623304321, 0.25008251652000574] ***
*** finished computation of 7 references, err: [Inf, 0.5872000084199677, 0.3154145026821455, 0.2698559623304321, 0.25008251652000574] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 9]]
** centroid: 1, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4614000045699166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4614000045699166, 0.350836479994604] ***
*** starting iteration: 2; err: [Inf, 0.4614000045699166, 0.350836479994604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4614000045699166, 0.350836479994604, 0.33213202598378155] ***
*** starting iteration: 3; err: [Inf, 0.4614000045699166, 0.350836479994604, 0.33213202598378155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4614000045699166, 0.350836479994604, 0.33213202598378155, 0.3286840961022092] ***
*** finished computation of 7 references, err: [Inf, 0.4614000045699166, 0.350836479994604, 0.33213202598378155, 0.3286840961022092] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 19]]
** centroid: 5, normalized-entropy: 0.9833761901392238, [(2, 14), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5177000088149848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5177000088149848, 0.2772135691691599] ***
*** starting iteration: 2; err: [Inf, 0.5177000088149848, 0.2772135691691599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5177000088149848, 0.2772135691691599, 0.26654263644443704] ***
*** starting iteration: 3; err: [Inf, 0.5177000088149848, 0.2772135691691599, 0.26654263644443704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5177000088149848, 0.2772135691691599, 0.26654263644443704, 0.2618064090719455] ***
*** finished computation of 7 references, err: [Inf, 0.5177000088149848, 0.2772135691691599, 0.26654263644443704, 0.2618064090719455] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 8]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 6: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.489699990226961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.489699990226961, 0.4815076925541192] ***
*** starting iteration: 2; err: [Inf, 2.489699990226961, 0.4815076925541192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.489699990226961, 0.4815076925541192, 0.4805816491078791] ***
*** finished computation of 3 references, err: [Inf, 2.489699990226961, 0.4815076925541192, 0.4805816491078791] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.356600004964813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.356600004964813, 0.6822396981283577] ***
*** starting iteration: 2; err: [Inf, 1.356600004964813, 0.6822396981283577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723] ***
*** starting iteration: 3; err: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006] ***
*** starting iteration: 4; err: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006, 0.5408132091943307] ***
*** starting iteration: 5; err: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006, 0.5408132091943307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006, 0.5408132091943307, 0.5384899284833808] ***
*** starting iteration: 6; err: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006, 0.5408132091943307, 0.5384899284833808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006, 0.5408132091943307, 0.5384899284833808, 0.5384899284833808] ***
*** finished computation of 3 references, err: [Inf, 1.356600004964813, 0.6822396981283577, 0.5863854316853723, 0.54714236533006, 0.5408132091943307, 0.5384899284833808, 0.5384899284833808] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1034000038971197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1034000038971197, 0.569381842071529] ***
*** starting iteration: 2; err: [Inf, 1.1034000038971197, 0.569381842071529] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756] ***
*** starting iteration: 3; err: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756, 0.5458844205185913] ***
*** starting iteration: 4; err: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756, 0.5458844205185913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664] ***
*** starting iteration: 5; err: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664, 0.5431207185114664] ***
*** finished computation of 3 references, err: [Inf, 1.1034000038971197, 0.569381842071529, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664, 0.5431207185114664] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9049094558400745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983] ***
*** starting iteration: 2; err: [Inf, 0.9049094558400745, 0.3724477593360983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121] ***
*** starting iteration: 3; err: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606] ***
*** starting iteration: 4; err: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706] ***
*** starting iteration: 5; err: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706, 0.3306603825753593] ***
*** starting iteration: 6; err: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706, 0.3306603825753593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706, 0.3306603825753593, 0.3292025359792728] ***
*** starting iteration: 7; err: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706, 0.3306603825753593, 0.3292025359792728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706, 0.3306603825753593, 0.3292025359792728, 0.3292025359792728] ***
*** finished computation of 3 references, err: [Inf, 0.9049094558400745, 0.3724477593360983, 0.338258053225121, 0.3344252195041606, 0.33193179842420706, 0.3306603825753593, 0.3292025359792728, 0.3292025359792728] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7175365909087777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7175365909087777, 0.3968181564587394] ***
*** starting iteration: 2; err: [Inf, 0.7175365909087777, 0.3968181564587394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7175365909087777, 0.3968181564587394, 0.3861861118558144] ***
*** starting iteration: 3; err: [Inf, 0.7175365909087777, 0.3968181564587394, 0.3861861118558144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7175365909087777, 0.3968181564587394, 0.3861861118558144, 0.38501195541180727] ***
*** starting iteration: 4; err: [Inf, 0.7175365909087777, 0.3968181564587394, 0.3861861118558144, 0.38501195541180727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7175365909087777, 0.3968181564587394, 0.3861861118558144, 0.38501195541180727, 0.384270778312837] ***
*** finished computation of 3 references, err: [Inf, 0.7175365909087777, 0.3968181564587394, 0.3861861118558144, 0.38501195541180727, 0.384270778312837] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 35]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 5), (3, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 2]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.124232232500079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.124232232500079, 0.3912557295592512] ***
*** starting iteration: 2; err: [Inf, 1.124232232500079, 0.3912557295592512] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356] ***
*** starting iteration: 3; err: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356, 0.3830866985910207] ***
*** finished computation of 3 references, err: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356, 0.3830866985910207] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7365227750649187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7365227750649187, 0.3533756535861579] ***
*** finished computation of 3 references, err: [Inf, 0.7365227750649187, 0.3533756535861579] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7624551761884756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7624551761884756, 0.41845516424199714] ***
*** finished computation of 3 references, err: [Inf, 0.7624551761884756, 0.41845516424199714] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 15]]
** centroid: 1, normalized-entropy: 0.8886466698980794, [(2, 34), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [28, 1, 0]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(1, 28), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7958440763142928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7958440763142928, 0.39455901971402807] ***
*** finished computation of 3 references, err: [Inf, 0.7958440763142928, 0.39455901971402807] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0584000046927478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0584000046927478, 0.6696419915698014] ***
*** finished computation of 3 references, err: [Inf, 1.0584000046927478, 0.6696419915698014] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 22]]
** centroid: 1, normalized-entropy: 0.9666186325481027, [(2, 34), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0559000034992525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0559000034992525, 0.6289923027873365] ***
*** finished computation of 3 references, err: [Inf, 1.0559000034992525, 0.6289923027873365] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 18]]
** centroid: 1, normalized-entropy: 0.9244571409964927, [(2, 35), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4619000046740205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4619000046740205, 0.5523147944980756] ***
*** finished computation of 3 references, err: [Inf, 1.4619000046740205, 0.5523147944980756] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4125999997367913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4125999997367913, 0.20979963527651055] ***
*** starting iteration: 2; err: [Inf, 0.4125999997367913, 0.20979963527651055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4125999997367913, 0.20979963527651055, 0.19848106654718195] ***
*** starting iteration: 3; err: [Inf, 0.4125999997367913, 0.20979963527651055, 0.19848106654718195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4125999997367913, 0.20979963527651055, 0.19848106654718195, 0.19830088648191746] ***
*** finished computation of 7 references, err: [Inf, 0.4125999997367913, 0.20979963527651055, 0.19848106654718195, 0.19830088648191746] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 7, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5936000028970195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5936000028970195, 0.30072479523181994] ***
*** starting iteration: 2; err: [Inf, 0.5936000028970195, 0.30072479523181994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5936000028970195, 0.30072479523181994, 0.2926187304231464] ***
*** starting iteration: 3; err: [Inf, 0.5936000028970195, 0.30072479523181994, 0.2926187304231464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5936000028970195, 0.30072479523181994, 0.2926187304231464, 0.2926187304231464] ***
*** finished computation of 7 references, err: [Inf, 0.5936000028970195, 0.30072479523181994, 0.2926187304231464, 0.2926187304231464] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6219000068826581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6219000068826581, 0.2841144037605326] ***
*** starting iteration: 2; err: [Inf, 0.6219000068826581, 0.2841144037605326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639] ***
*** starting iteration: 3; err: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639, 0.25220716837927776] ***
*** starting iteration: 4; err: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639, 0.25220716837927776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639, 0.25220716837927776, 0.2421802340950181] ***
*** starting iteration: 5; err: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639, 0.25220716837927776, 0.2421802340950181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639, 0.25220716837927776, 0.2421802340950181, 0.24172860882869057] ***
*** finished computation of 7 references, err: [Inf, 0.6219000068826581, 0.2841144037605326, 0.2749740854583639, 0.25220716837927776, 0.2421802340950181, 0.24172860882869057] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33732650259156555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33732650259156555, 0.15439063268051256] ***
*** starting iteration: 2; err: [Inf, 0.33732650259156555, 0.15439063268051256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33732650259156555, 0.15439063268051256, 0.14965516005400517] ***
*** starting iteration: 3; err: [Inf, 0.33732650259156555, 0.15439063268051256, 0.14965516005400517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33732650259156555, 0.15439063268051256, 0.14965516005400517, 0.14766532675193425] ***
*** starting iteration: 4; err: [Inf, 0.33732650259156555, 0.15439063268051256, 0.14965516005400517, 0.14766532675193425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33732650259156555, 0.15439063268051256, 0.14965516005400517, 0.14766532675193425, 0.14736083337027506] ***
*** finished computation of 7 references, err: [Inf, 0.33732650259156555, 0.15439063268051256, 0.14965516005400517, 0.14766532675193425, 0.14736083337027506] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4994094857158359] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4994094857158359, 0.19232391319749978] ***
*** starting iteration: 2; err: [Inf, 0.4994094857158359, 0.19232391319749978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4994094857158359, 0.19232391319749978, 0.1803313480179015] ***
*** starting iteration: 3; err: [Inf, 0.4994094857158359, 0.19232391319749978, 0.1803313480179015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4994094857158359, 0.19232391319749978, 0.1803313480179015, 0.17526038988479123] ***
*** starting iteration: 4; err: [Inf, 0.4994094857158359, 0.19232391319749978, 0.1803313480179015, 0.17526038988479123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4994094857158359, 0.19232391319749978, 0.1803313480179015, 0.17526038988479123, 0.175028398164448] ***
*** finished computation of 7 references, err: [Inf, 0.4994094857158359, 0.19232391319749978, 0.1803313480179015, 0.17526038988479123, 0.175028398164448] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45836794609027093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45836794609027093, 0.23440835696902462] ***
*** starting iteration: 2; err: [Inf, 0.45836794609027093, 0.23440835696902462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434] ***
*** starting iteration: 3; err: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215] ***
*** starting iteration: 4; err: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215, 0.1968538154990788] ***
*** starting iteration: 5; err: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215, 0.1968538154990788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215, 0.1968538154990788, 0.19311984290373513] ***
*** starting iteration: 6; err: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215, 0.1968538154990788, 0.19311984290373513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215, 0.1968538154990788, 0.19311984290373513, 0.19228048929019345] ***
*** finished computation of 7 references, err: [Inf, 0.45836794609027093, 0.23440835696902462, 0.20771581105965434, 0.2025937249061215, 0.1968538154990788, 0.19311984290373513, 0.19228048929019345] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 13]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 5, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41760000332953484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41760000332953484, 0.18978098357527748] ***
*** starting iteration: 2; err: [Inf, 0.41760000332953484, 0.18978098357527748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41760000332953484, 0.18978098357527748, 0.18653397711552822] ***
*** starting iteration: 3; err: [Inf, 0.41760000332953484, 0.18978098357527748, 0.18653397711552822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41760000332953484, 0.18978098357527748, 0.18653397711552822, 0.18653397711552822] ***
*** finished computation of 7 references, err: [Inf, 0.41760000332953484, 0.18978098357527748, 0.18653397711552822, 0.18653397711552822] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6593000044599794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6593000044599794, 0.2917191909368324] ***
*** starting iteration: 2; err: [Inf, 0.6593000044599794, 0.2917191909368324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6593000044599794, 0.2917191909368324, 0.27538322961433975] ***
*** starting iteration: 3; err: [Inf, 0.6593000044599794, 0.2917191909368324, 0.27538322961433975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6593000044599794, 0.2917191909368324, 0.27538322961433975, 0.2719910050005047] ***
*** finished computation of 7 references, err: [Inf, 0.6593000044599794, 0.2917191909368324, 0.27538322961433975, 0.2719910050005047] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 18, 5]]
** centroid: 6, normalized-entropy: 0.7553754125614286, [(2, 18), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6751000015679206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6751000015679206, 0.24933433085937245] ***
*** starting iteration: 2; err: [Inf, 0.6751000015679206, 0.24933433085937245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6751000015679206, 0.24933433085937245, 0.23941581032931944] ***
*** starting iteration: 3; err: [Inf, 0.6751000015679206, 0.24933433085937245, 0.23941581032931944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6751000015679206, 0.24933433085937245, 0.23941581032931944, 0.23531417670564253] ***
*** finished computation of 7 references, err: [Inf, 0.6751000015679206, 0.24933433085937245, 0.23941581032931944, 0.23531417670564253] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 7]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 4.816599995454909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.816599995454909, 0.9692127182282683] ***
*** starting iteration: 2; err: [Inf, 4.816599995454909, 0.9692127182282683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.816599995454909, 0.9692127182282683, 0.49526747450648956] ***
*** starting iteration: 3; err: [Inf, 4.816599995454909, 0.9692127182282683, 0.49526747450648956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.816599995454909, 0.9692127182282683, 0.49526747450648956, 0.48113350282751555] ***
*** finished computation of 3 references, err: [Inf, 4.816599995454909, 0.9692127182282683, 0.49526747450648956, 0.48113350282751555] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 2, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.2363999926204294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2363999926204294, 0.8010930261885519] ***
*** starting iteration: 2; err: [Inf, 2.2363999926204294, 0.8010930261885519] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2363999926204294, 0.8010930261885519, 0.6046407922727356] ***
*** starting iteration: 3; err: [Inf, 2.2363999926204294, 0.8010930261885519, 0.6046407922727356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.2363999926204294, 0.8010930261885519, 0.6046407922727356, 0.5511987122844323] ***
*** finished computation of 3 references, err: [Inf, 2.2363999926204294, 0.8010930261885519, 0.6046407922727356, 0.5511987122844323] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 2, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0287999946389565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0287999946389565, 0.6021741772200633] ***
*** starting iteration: 2; err: [Inf, 1.0287999946389565, 0.6021741772200633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0287999946389565, 0.6021741772200633, 0.5797830665786731] ***
*** starting iteration: 3; err: [Inf, 1.0287999946389565, 0.6021741772200633, 0.5797830665786731] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0287999946389565, 0.6021741772200633, 0.5797830665786731, 0.5530576740824269] ***
*** finished computation of 3 references, err: [Inf, 1.0287999946389565, 0.6021741772200633, 0.5797830665786731, 0.5530576740824269] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4505655391463907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505655391463907, 0.3271553733495034] ***
*** starting iteration: 2; err: [Inf, 0.4505655391463907, 0.3271553733495034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505655391463907, 0.3271553733495034, 0.3271553733495034] ***
*** finished computation of 3 references, err: [Inf, 0.4505655391463907, 0.3271553733495034, 0.3271553733495034] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 2]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(2, 31), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 30]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 3), (3, 30)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9093725268147834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9093725268147834, 0.6901885027260962] ***
*** starting iteration: 2; err: [Inf, 0.9093725268147834, 0.6901885027260962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9093725268147834, 0.6901885027260962, 0.6871703137033252] ***
*** starting iteration: 3; err: [Inf, 0.9093725268147834, 0.6901885027260962, 0.6871703137033252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9093725268147834, 0.6901885027260962, 0.6871703137033252, 0.6866752119256104] ***
*** finished computation of 3 references, err: [Inf, 0.9093725268147834, 0.6901885027260962, 0.6871703137033252, 0.6866752119256104] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 2, 0]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 37]]
** centroid: 3, normalized-entropy: 0.9976432959863935, [(2, 33), (3, 37)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6647357890396266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6647357890396266, 0.408566163758517] ***
*** starting iteration: 2; err: [Inf, 0.6647357890396266, 0.408566163758517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6647357890396266, 0.408566163758517, 0.39668372107937544] ***
*** starting iteration: 3; err: [Inf, 0.6647357890396266, 0.408566163758517, 0.39668372107937544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6647357890396266, 0.408566163758517, 0.39668372107937544, 0.39479971199346536] ***
*** finished computation of 3 references, err: [Inf, 0.6647357890396266, 0.408566163758517, 0.39668372107937544, 0.39479971199346536] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.8620275143340662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048] ***
*** starting iteration: 2; err: [Inf, 0.8620275143340662, 0.3109263682014048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574] ***
*** starting iteration: 3; err: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673] ***
*** starting iteration: 4; err: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855] ***
*** starting iteration: 5; err: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855, 0.19767422916635938] ***
*** starting iteration: 6; err: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855, 0.19767422916635938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855, 0.19767422916635938, 0.19075969705462487] ***
*** starting iteration: 7; err: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855, 0.19767422916635938, 0.19075969705462487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855, 0.19767422916635938, 0.19075969705462487, 0.19007934017004455] ***
*** finished computation of 7 references, err: [Inf, 0.8620275143340662, 0.3109263682014048, 0.24687642110114574, 0.22460043004803673, 0.2126977767232855, 0.19767422916635938, 0.19075969705462487, 0.19007934017004455] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1760756089551194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1760756089551194, 0.3917585707265414] ***
*** starting iteration: 2; err: [Inf, 1.1760756089551194, 0.3917585707265414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955] ***
*** starting iteration: 3; err: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592] ***
*** starting iteration: 4; err: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592, 0.22077893232972595] ***
*** starting iteration: 5; err: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592, 0.22077893232972595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592, 0.22077893232972595, 0.2180121652767864] ***
*** starting iteration: 6; err: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592, 0.22077893232972595, 0.2180121652767864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592, 0.22077893232972595, 0.2180121652767864, 0.2180121652767864] ***
*** finished computation of 7 references, err: [Inf, 1.1760756089551194, 0.3917585707265414, 0.2702717402899955, 0.23199881795689592, 0.22077893232972595, 0.2180121652767864, 0.2180121652767864] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 13]]
** centroid: 3, normalized-entropy: 0.9922666387194963, [(2, 16), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4617408640251608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4617408640251608, 0.34245409001159743] ***
*** starting iteration: 2; err: [Inf, 0.4617408640251608, 0.34245409001159743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813] ***
*** starting iteration: 3; err: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756] ***
*** starting iteration: 4; err: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756, 0.32082197613655583] ***
*** starting iteration: 5; err: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756, 0.32082197613655583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756, 0.32082197613655583, 0.3181851990375987] ***
*** starting iteration: 6; err: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756, 0.32082197613655583, 0.3181851990375987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756, 0.32082197613655583, 0.3181851990375987, 0.31751109115087406] ***
*** finished computation of 7 references, err: [Inf, 0.4617408640251608, 0.34245409001159743, 0.32603974236024813, 0.32216528872221756, 0.32082197613655583, 0.3181851990375987, 0.31751109115087406] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [11, 1, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 11), (2, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.6495000008625492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6495000008625492, 0.4308238803523918] ***
*** finished computation of 7 references, err: [Inf, 0.6495000008625492, 0.4308238803523918] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0854000070004026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0854000070004026, 0.4330683048775504] ***
*** finished computation of 7 references, err: [Inf, 1.0854000070004026, 0.4330683048775504] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 12]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 32), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 2, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 1), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.148399968319617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.148399968319617, 0.6074619657731604] ***
*** finished computation of 7 references, err: [Inf, 3.148399968319617, 0.6074619657731604] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 18]]
** centroid: 2, normalized-entropy: 0.9807983646944296, [(2, 25), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3645019069124241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3645019069124241, 0.23074161549310054] ***
*** finished computation of 7 references, err: [Inf, 0.3645019069124241, 0.23074161549310054] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 20, 5]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 20), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 7, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2606907103856489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2606907103856489, 0.1841371034455838] ***
*** finished computation of 7 references, err: [Inf, 0.2606907103856489, 0.1841371034455838] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 5, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6275139158896104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6275139158896104, 0.32888434609884926] ***
*** finished computation of 7 references, err: [Inf, 0.6275139158896104, 0.32888434609884926] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 6, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 1, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4067000044212938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4067000044212938, 0.2639219015674915] ***
*** finished computation of 7 references, err: [Inf, 0.4067000044212938, 0.2639219015674915] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 27]]
** centroid: 5, normalized-entropy: 0.625262405223423, [(2, 5), (3, 27)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5653999971896202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5653999971896202, 0.3716517588711803] ***
*** finished computation of 7 references, err: [Inf, 0.5653999971896202, 0.3716517588711803] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 9]]
** centroid: 2, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5807000051600615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5807000051600615, 0.43275746459028325] ***
*** finished computation of 7 references, err: [Inf, 0.5807000051600615, 0.43275746459028325] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 23
iteration 6 finished
*** starting iteration: 1; err: [Inf, 1.1380204727421352] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1380204727421352, 0.33952606385204787] ***
*** starting iteration: 2; err: [Inf, 1.1380204727421352, 0.33952606385204787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254] ***
*** starting iteration: 3; err: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961] ***
*** starting iteration: 4; err: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961, 0.3306603825753593] ***
*** starting iteration: 5; err: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961, 0.3306603825753593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961, 0.3306603825753593, 0.3292025359792728] ***
*** starting iteration: 6; err: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961, 0.3306603825753593, 0.3292025359792728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961, 0.3306603825753593, 0.3292025359792728, 0.3292025359792728] ***
*** finished computation of 3 references, err: [Inf, 1.1380204727421352, 0.33952606385204787, 0.33549633046397254, 0.3330885319183961, 0.3306603825753593, 0.3292025359792728, 0.3292025359792728] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.228300988899452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.228300988899452, 0.39559660943089753] ***
*** starting iteration: 2; err: [Inf, 1.228300988899452, 0.39559660943089753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.228300988899452, 0.39559660943089753, 0.3792131648856969] ***
*** starting iteration: 3; err: [Inf, 1.228300988899452, 0.39559660943089753, 0.3792131648856969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.228300988899452, 0.39559660943089753, 0.3792131648856969, 0.37759023297149275] ***
*** starting iteration: 4; err: [Inf, 1.228300988899452, 0.39559660943089753, 0.3792131648856969, 0.37759023297149275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.228300988899452, 0.39559660943089753, 0.3792131648856969, 0.37759023297149275, 0.37759023297149275] ***
*** finished computation of 3 references, err: [Inf, 1.228300988899452, 0.39559660943089753, 0.3792131648856969, 0.37759023297149275, 0.37759023297149275] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.124232232500079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.124232232500079, 0.3912557295592512] ***
*** starting iteration: 2; err: [Inf, 1.124232232500079, 0.3912557295592512] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356] ***
*** starting iteration: 3; err: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356, 0.3830866985910207] ***
*** finished computation of 3 references, err: [Inf, 1.124232232500079, 0.3912557295592512, 0.38385669044337356, 0.3830866985910207] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9424000097677893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9424000097677893, 0.5718848347885654] ***
*** starting iteration: 2; err: [Inf, 0.9424000097677893, 0.5718848347885654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813] ***
*** starting iteration: 3; err: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813, 0.4825397722013732] ***
*** starting iteration: 4; err: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813, 0.4825397722013732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813, 0.4825397722013732, 0.4805549095530083] ***
*** starting iteration: 5; err: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813, 0.4825397722013732, 0.4805549095530083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813, 0.4825397722013732, 0.4805549095530083, 0.4805549095530083] ***
*** finished computation of 3 references, err: [Inf, 0.9424000097677893, 0.5718848347885654, 0.49212263908251813, 0.4825397722013732, 0.4805549095530083, 0.4805549095530083] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2041999989592969] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2041999989592969, 0.6405905228621623] ***
*** starting iteration: 2; err: [Inf, 1.2041999989592969, 0.6405905228621623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381] ***
*** starting iteration: 3; err: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822] ***
*** starting iteration: 4; err: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822, 0.5408132091943307] ***
*** starting iteration: 5; err: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822, 0.5408132091943307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822, 0.5408132091943307, 0.5384899284833808] ***
*** starting iteration: 6; err: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822, 0.5408132091943307, 0.5384899284833808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822, 0.5408132091943307, 0.5384899284833808, 0.5384899284833808] ***
*** finished computation of 3 references, err: [Inf, 1.2041999989592969, 0.6405905228621623, 0.5782118716655381, 0.5446583058716822, 0.5408132091943307, 0.5384899284833808, 0.5384899284833808] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5985000093319883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5985000093319883, 0.5523147944980756] ***
*** starting iteration: 2; err: [Inf, 1.5985000093319883, 0.5523147944980756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5985000093319883, 0.5523147944980756, 0.5458844205185913] ***
*** starting iteration: 3; err: [Inf, 1.5985000093319883, 0.5523147944980756, 0.5458844205185913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5985000093319883, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664] ***
*** starting iteration: 4; err: [Inf, 1.5985000093319883, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5985000093319883, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664, 0.5431207185114664] ***
*** finished computation of 3 references, err: [Inf, 1.5985000093319883, 0.5523147944980756, 0.5458844205185913, 0.5431207185114664, 0.5431207185114664] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 23)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 23
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 23)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 23
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 23)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9266666666666666, 0.9266666666666666, 0.8933333333333334, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1) => 0.9733333333333333
finished with 23
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1), 0.9733333333333333)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.568421052631579, 2.6263157894736846, 3.9578947368421056, 1.2], [6.42, 2.92, 4.586666666666667, 1.4333333333333333], [6.069999999999999, 2.82, 5.01, 1.8900000000000001], [6.772727272727274, 3.059090909090909, 5.749999999999999, 2.1318181818181823], [4.642857142857143, 3.0714285714285716, 1.3857142857142857, 0.19999999999999998], [5.20909090909091, 3.6272727272727265, 1.5272727272727271, 0.30000000000000004], [4.98, 3.2700000000000005, 1.48, 0.22000000000000003], [5.533333333333334, 4.016666666666667, 1.4833333333333334, 0.30000000000000004]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 3, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.917391304347827, 3.1, 5.834782608695652, 2.1], [5.5249999999999995, 2.605, 3.91, 1.235], [6.3, 2.8812499999999996, 4.6312500000000005, 1.46875], [6.015384615384614, 2.715384615384615, 5.084615384615385, 1.869230769230769], [4.663636363636363, 3.163636363636364, 1.3818181818181818, 0.19090909090909092], [5.3500000000000005, 3.966666666666667, 1.5499999999999998, 0.25], [5.110000000000001, 3.4599999999999995, 1.53, 0.3], [4.5, 2.3, 1.3, 0.3]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 2, 3, 1, 1, 1, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.999999999999999, 2.8366666666666664, 4.373333333333334, 1.3566666666666665], [5.955555555555555, 2.7444444444444445, 4.9111111111111105, 1.7777777777777777], [5.442857142857142, 3.928571428571428, 1.4857142857142858, 0.2857142857142857], [4.866666666666666, 3.1, 1.6916666666666667, 0.2750000000000001], [5.125000000000001, 3.4416666666666664, 1.4416666666666667, 0.24166666666666672], [4.574999999999999, 3.3499999999999996, 1.25, 0.22499999999999998], [6.968181818181819, 3.0954545454545452, 5.89090909090909, 2.1136363636363633], [4.4, 2.8, 1.2750000000000001, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 1, 1, 1, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 1))]
[53, 1, 12, 1, 1, 7, 22, 1, 16, 29, 13, 1, 13, 47, 17, 19, 17, 27, 15, 41, 46, 1, 14, 1, 5, 18, 59, 39, 14, 31, 6, 25, 28, 41, 4, 44, 22, 26, 44, 24, 6, 25, 2, 14, 23, 3, 1, 34, 28, 6, 37, 22, 39, 44, 32, 45, 41, 28, 31, 17, 17, 20, 32, 3, 33, 29, 57, 56, 30, 52, 35, 10, 36, 32, 50, 45, 55, 12, 55, 33, 34, 32, 5, 36, 29, 22, 58, 33, 10, 36, 39, 34, 64, 30, 31, 33, 23, 27, 42, 45, 42, 40, 55, 54, 34, 25, 38, 14, 22, 35, 26, 29, 50, 54, 27, 43, 40, 47, 23, 35, 37, 44, 43, 35, 47, 28, 62, 26, 29, 30, 30, 29, 21, 25, 17, 27, 34, 45, 45, 39, 41, 33, 40, 37, 19, 46, 43, 42, 37, 34, 28, 45, 43, 37, 46, 31, 19, 37, 42, 57, 23, 49, 92, 23, 37, 37, 25, 58, 43, 27, 34, 10, 24, 44, 42, 25, 54, 30, 20, 34, 40, 38, 42, 32, 1, 13, 45, 46, 40, 68, 35, 17, 34, 54, 17, 24, 58, 19, 41, 29, 36, 28, 34, 53, 40, 1, 38, 56, 27, 45, 2, 25, 37, 44, 29, 39, 37, 37, 1, 37, 38, 50, 33, 33, 46, 37, 34, 82, 40, 5, 32, 29, 22, 31, 57, 40, 42, 20, 48, 39, 14, 25, 56, 55, 23, 38, 35, 65, 15, 37, 53, 40, 14, 25, 37, 24, 44, 48, 46, 23, 50, 32, 50, 41, 30, 32, 34, 35, 52, 46, 21, 42, 47, 48, 38, 46, 25, 20, 51, 25, 46, 11, 53, 37, 37, 51, 43, 53, 22, 33, 55, 36, 72, 40, 21, 36, 36, 52, 46, 49]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.653, speedup = 0.3460605574207586, eval_ratio = 0.042163)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3822916666666668,"recall":0.3802083333333335,"f1":null,"seconds":7.066316902637482e-5,"exhaustive_search_seconds":0.0003733038902282715,"evaluations":341.71875,"distances_sum":1750.0111132631214}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5529513888888888,"recall":0.5529513888888888,"f1":null,"seconds":0.00010449253022670746,"exhaustive_search_seconds":0.0003733038902282715,"evaluations":382.8515625,"distances_sum":1628.487799884453}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6545138888888885,"recall":0.6545138888888885,"f1":0.6545138888888885,"seconds":0.0001393686980009079,"exhaustive_search_seconds":0.0003733038902282715,"evaluations":421.5078125,"distances_sum":1582.1575850018692}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7413194444444441,"recall":0.7413194444444441,"f1":0.7413194444444441,"seconds":0.00016522780060768127,"exhaustive_search_seconds":0.0003733038902282715,"evaluations":462.8359375,"distances_sum":1554.3971839166234}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7960069444444439,"recall":0.7960069444444439,"f1":0.7960069444444439,"seconds":0.000196162611246109,"exhaustive_search_seconds":0.0003733038902282715,"evaluations":502.3828125,"distances_sum":1539.618998825571}
KCenters.DeloneInvIndex> reached performance {"precision":0.8394097222222215,"recall":0.8394097222222215,"f1":0.8394097222222215,"seconds":0.00023120269179344177,"exhaustive_search_seconds":0.0003733038902282715,"evaluations":541.4765625,"distances_sum":1529.4462964473867}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8249999999999998, speedup = 1.6103469023610937, eval_ratio = 0.054236)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
