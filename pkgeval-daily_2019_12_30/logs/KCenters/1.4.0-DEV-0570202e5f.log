Julia Version 1.4.0-DEV.668
Commit 0570202e5f (2019-12-28 22:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed PooledArrays ──────────────── v0.5.3
 Installed Reexport ──────────────────── v0.2.0
 Installed KCenters ──────────────────── v0.1.8
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed LearnBase ─────────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed Missings ──────────────────── v0.4.3
 Installed JSON ──────────────────────── v0.21.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Compat ────────────────────── v3.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.5
 Installed MLDataPattern ─────────────── v0.5.0
 Installed InvertedIndices ───────────── v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_HkdeZw/Project.toml`
 [no changes]
  Updating `/tmp/jl_HkdeZw/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_HkdeZw/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 134.98999999999995
[ Info: 69.21999999999998
[ Info: 44.99999999999999
[ Info: 27.339999999999996
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 76.58000118467912
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.833025227137032
inertia(cdnet.distances) = 25.873305847841788
inertia(crand.distances) = 22.28207098820185
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8402897449772456,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.71875,"distances_sum":2184.137914280102}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8460633116883125,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.6171875,"distances_sum":2274.915595686021}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8460633116883125,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.6171875,"distances_sum":2274.915595686021}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9175740925740933,"seconds":6.932765245437622e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.890625,"distances_sum":2742.4523953342677}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9546588827838834,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9375,"distances_sum":3044.3164952681464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.933868735431236,"seconds":7.27921724319458e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.921875,"distances_sum":2873.221510663528}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9546588827838834,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9375,"distances_sum":3044.3164952681464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9686641483516488,"seconds":6.504356861114502e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.984375,"distances_sum":3175.0948659192445}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9749484890109892,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9609375,"distances_sum":3237.0431421991166}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601018772893778,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.90625,"distances_sum":3097.589263854368}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959603937728938,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.921875,"distances_sum":3109.7712094593185}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9749484890109892,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9609375,"distances_sum":3237.0431421991166}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9749484890109892,"seconds":6.5267086029052734e-6,"exhaustive_search_seconds":1.7415732145309448e-6,"evaluations":8.9609375,"distances_sum":3237.0431421991166}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.7421875,"distances_sum":644.1503845838652}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6971060189810196,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.9609375,"distances_sum":1435.2712090801103}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2392578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.6484375,"distances_sum":619.5720456730069}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5546875,"f1":0.6971060189810196,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.9609375,"distances_sum":1435.2712090801103}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7117448523698531,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.046875,"distances_sum":1484.419355963435}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8571943681318689,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.46875,"distances_sum":2138.3355503225466}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7153686591186597,"seconds":4.375353455543518e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.84375,"distances_sum":1458.3903612745794}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8484952547452556,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.4375,"distances_sum":2092.3312585051367}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8571943681318689,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.46875,"distances_sum":2138.3355503225466}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.953222298534799,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2844.1564777257754}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9559783966033972,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2904.4953453784146}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9553259240759244,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8671875,"distances_sum":2916.6976842157883}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9025989635364644,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6328125,"distances_sum":2461.295869085635}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8986034798534808,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7109375,"distances_sum":2397.780418321808}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9392971611721617,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7578125,"distances_sum":2746.0543578705942}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9298165376290383,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6484375,"distances_sum":2695.053077388036}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9559783966033972,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2904.4953453784146}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9559783966033972,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2904.4953453784146}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.40625,"distances_sum":530.3161578136825}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.201171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.40625,"distances_sum":530.3161578136825}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.770417603230104,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7734375,"distances_sum":1516.2581221956311}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.1640625,"distances_sum":934.5368258932832}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6435546875,"f1":0.770417603230104,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7734375,"distances_sum":1516.2581221956311}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9024616008991017,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.359375,"distances_sum":2136.750452858163}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9276156135531143,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6640625,"distances_sum":2328.7431555571643}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9276156135531143,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6640625,"distances_sum":2328.7431555571643}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948557692307693,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8203125,"distances_sum":2425.7694894364054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9686813186813191,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8828125,"distances_sum":2619.3621426068185}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9850446428571429,"seconds":7.448717951774597e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2723.814443000291}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9416011072261079,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7265625,"distances_sum":2429.130036518639}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715602106227108,"seconds":6.640329957008362e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8828125,"distances_sum":2641.7320200549243}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9850446428571429,"seconds":7.448717951774597e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2723.814443000291}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9850446428571429,"seconds":7.448717951774597e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2723.814443000291}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.3046875,"distances_sum":446.029310312199}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7183703449328456,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.609375,"distances_sum":1301.5322221232223}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.580078125,"f1":0.7183703449328456,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.609375,"distances_sum":1301.5322221232223}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8860009781884789,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.859375,"distances_sum":1982.5038806777725}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9402987637362642,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.875,"distances_sum":2350.628416846901}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9402987637362642,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.875,"distances_sum":2350.628416846901}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9697973901098903,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.984375,"distances_sum":2564.885612656362}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9502346611721616,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8828125,"distances_sum":2444.644733938667}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.944972215284716,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.859375,"distances_sum":2406.943062898298}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025645,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.953125,"distances_sum":2495.7786136205664}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9697973901098903,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.984375,"distances_sum":2564.885612656362}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9697973901098903,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.984375,"distances_sum":2564.885612656362}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7189324564324572,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.828125,"distances_sum":1317.998984385718}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.85357246919747,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7734375,"distances_sum":1877.5133278422038}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.85357246919747,"seconds":6.893649697303772e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7734375,"distances_sum":1877.5133278422038}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8700617091242101,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.578125,"distances_sum":1986.6021809404167}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8921396312021321,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":2091.483787746168}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.81640625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.81640625,"f1":0.8921396312021321,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8125,"distances_sum":2091.483787746168}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9001748251748257,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2167.8687168410856}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604223901098905,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.984375,"distances_sum":2547.3925343585875}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604223901098905,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.984375,"distances_sum":2547.3925343585875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604223901098905,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.984375,"distances_sum":2547.3925343585875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.867088120213121,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6953125,"distances_sum":1976.12444356395}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.867088120213121,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.6953125,"distances_sum":1976.12444356395}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9445913461538468,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8984375,"distances_sum":2455.2723069247977}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9445913461538468,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8984375,"distances_sum":2455.2723069247977}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406598,"seconds":7.899478077888489e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2623.4409257931115}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611492673992675,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.921875,"distances_sum":2587.800559445553}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406598,"seconds":7.899478077888489e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2623.4409257931115}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406598,"seconds":7.899478077888489e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.953125,"distances_sum":2623.4409257931115}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.140625,"f1":null,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":4.2890625,"distances_sum":529.8110897350915}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.32421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.32421875,"f1":null,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":5.515625,"distances_sum":951.4381190097287}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1494140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1494140625,"f1":null,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":4.40625,"distances_sum":561.8819512155677}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9823381696428571,"recall":0.744140625,"f1":0.8380633038836168,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.3359375,"distances_sum":2194.3629871692688}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9823381696428571,"recall":0.744140625,"f1":0.8380633038836168,"seconds":6.729736924171448e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.3359375,"distances_sum":2194.3629871692688}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":0.9890252976190477,"recall":0.8662109375,"f1":0.9172707500832504,"seconds":7.82310962677002e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.7421875,"distances_sum":2736.905563867177}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":0.9870814732142856,"recall":0.8173828125,"f1":0.8875827948093578,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.75,"distances_sum":2473.228923710918}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":4,"bsize":7},"perf":{"precision":0.9890252976190477,"recall":0.8662109375,"f1":0.9172707500832504,"seconds":7.82310962677002e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.7421875,"distances_sum":2736.905563867177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":0.9880952380952382,"recall":0.880859375,"f1":0.9275898580586087,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.8828125,"distances_sum":2776.0950120201187}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":10}, perf: {"precision":0.9900204613095238,"recall":0.9345703125,"f1":0.9589106856684982,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.875,"distances_sum":3055.0525908827362}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":7,"bsize":7}, perf: {"precision":0.9854910714285716,"recall":0.8779296875,"f1":0.9239060418747921,"seconds":7.724389433860779e-5,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.7890625,"distances_sum":2788.658062254112}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9894903273809524,"recall":0.923828125,"f1":0.9534240499084253,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.8046875,"distances_sum":3062.7659775802576}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9875372023809524,"recall":0.892578125,"f1":0.9336741383616388,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.8359375,"distances_sum":2878.5140899041908}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":8,"bsize":10},"perf":{"precision":0.9900204613095238,"recall":0.9345703125,"f1":0.9589106856684982,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.875,"distances_sum":3055.0525908827362}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":8,"bsize":10},"perf":{"precision":0.9900204613095238,"recall":0.9345703125,"f1":0.9589106856684982,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.875,"distances_sum":3055.0525908827362}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.234375,"distances_sum":926.3343856948243}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.390625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.390625,"f1":null,"seconds":3.7569552659988403e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.234375,"distances_sum":926.3343856948243}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8542650058275066,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.7734375,"distances_sum":2030.000521279284}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6810803779553783,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.984375,"distances_sum":1274.9694791449992}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8542650058275066,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.7734375,"distances_sum":2030.000521279284}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9153674450549456,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.53125,"distances_sum":2450.969663769376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8925969863469873,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.3359375,"distances_sum":2287.406985137604}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9153674450549456,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.53125,"distances_sum":2450.969663769376}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8544921875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9153674450549456,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.53125,"distances_sum":2450.969663769376}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":4.96875,"distances_sum":461.9872768631542}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7736343517593526,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.984375,"distances_sum":1529.0513593318144}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3720703125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":5.6015625,"distances_sum":877.1839444680235}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7736343517593526,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":6.984375,"distances_sum":1529.0513593318144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8908882783882793,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.46875,"distances_sum":2249.8542189784002}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9427712912087918,"seconds":7.936730980873108e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.75,"distances_sum":2594.360268520567}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.780687368187369,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.2421875,"distances_sum":1589.7847935939953}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8604541292041301,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.984375,"distances_sum":1965.023015433181}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9427712912087918,"seconds":7.936730980873108e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.75,"distances_sum":2594.360268520567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648466117216121,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.8828125,"distances_sum":2743.8431165930565}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882787,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9296875,"distances_sum":2727.5227634057746}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572630494505499,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7890625,"distances_sum":2693.5643137297116}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882787,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9296875,"distances_sum":2727.5227634057746}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882787,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9296875,"distances_sum":2727.5227634057746}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.7734375,"distances_sum":830.3014486351367}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7811896436896445,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.46875,"distances_sum":1567.7597416766332}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6794268231768237,"seconds":4.388391971588135e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.921875,"distances_sum":1251.4509063104902}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7811896436896445,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.46875,"distances_sum":1567.7597416766332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9446917665667673,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.734375,"distances_sum":2585.8532550350487}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8904023060273067,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3359375,"distances_sum":2233.796426925266}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8573296495171504,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.046875,"distances_sum":1976.806257880421}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9446917665667673,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.734375,"distances_sum":2585.8532550350487}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2812.509821581578}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9548420329670333,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.765625,"distances_sum":2686.7684212622967}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.960868818681319,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2722.035262040226}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2812.509821581578}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512823,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2812.509821581578}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.7890625,"distances_sum":805.8287593201766}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8559112762237772,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.78125,"distances_sum":1969.1495467037873}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.40625,"distances_sum":571.279117735964}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8559112762237772,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.78125,"distances_sum":1969.1495467037873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499484890109897,"seconds":6.623566150665283e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":2594.0975667898947}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548248626373631,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2646.5827833619896}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8627440268065276,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.7734375,"distances_sum":1969.767188091665}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.95370618964369,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":2649.4717769085755}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548248626373631,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2646.5827833619896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607028388278392,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8046875,"distances_sum":2690.2933825144282}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9716517857142862,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":2730.5660694724306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9615041208791213,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7890625,"distances_sum":2715.391566317323}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9716517857142862,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":2730.5660694724306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9716517857142862,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.90625,"distances_sum":2730.5660694724306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.781114545177046,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.6328125,"distances_sum":1595.403260682121}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7992642773892781,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.6953125,"distances_sum":1682.27470807848}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7992642773892781,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.6953125,"distances_sum":1682.27470807848}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9528502747252754,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.765625,"distances_sum":2688.8800307615606}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9528502747252754,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.765625,"distances_sum":2688.8800307615606}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593635531135536,"seconds":0.0002896394580602646,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.84375,"distances_sum":2699.580717863057}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765853937728941,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9453125,"distances_sum":2839.468707952955}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765853937728941,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9453125,"distances_sum":2839.468707952955}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765853937728941,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9453125,"distances_sum":2839.468707952955}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.271484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.271484375,"f1":null,"seconds":3.0212104320526123e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.703125,"distances_sum":802.9846764439186}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3291015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3291015625,"f1":null,"seconds":3.3080577850341797e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.4140625,"distances_sum":835.9063575398735}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8646436896436905,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.0234375,"distances_sum":2007.873656260291}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8646436896436905,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.0234375,"distances_sum":2007.873656260291}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9420647061272065,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":2539.194512487826}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9056833791208797,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.578125,"distances_sum":2245.49225012734}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8942370129870137,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.4296875,"distances_sum":2191.7798932715555}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9420647061272065,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":2539.194512487826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713770604395606,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2762.439116274749}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713770604395606,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2762.439116274749}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713770604395606,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.875,"distances_sum":2762.439116274749}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.244140625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.244140625,"f1":null,"seconds":1.9315630197525024e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.0703125,"distances_sum":521.0778674812517}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.244140625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.244140625,"f1":null,"seconds":1.9315630197525024e-6,"exhaustive_search_seconds":8.977949619293213e-7,"evaluations":6.0703125,"distances_sum":521.0778674812517}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7862500346875354,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1015625,"distances_sum":1269.392384556349}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.67872416973114e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3046875,"distances_sum":426.607453965596}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7862500346875354,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1015625,"distances_sum":1269.392384556349}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8702875249750257,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6953125,"distances_sum":1609.606784278098}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8025713869463877,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2734375,"distances_sum":1362.8285832716085}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8702875249750257,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6953125,"distances_sum":1609.606784278098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682692307692311,"seconds":7.865950465202332e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2074.151629599219}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498798076923082,"seconds":7.536262273788452e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":1967.0184436911245}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9468635531135535,"seconds":7.1767717599868774e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":1957.7725246591308}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9363953754578761,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8515625,"distances_sum":1891.5031223337016}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.945135073260074,"seconds":6.983056664466858e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":1941.8330142430689}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9154850357975365,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.890625,"distances_sum":1780.5664435249464}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9424195596070598,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":1910.577492350538}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9116732226107233,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.90625,"distances_sum":1773.5952386730567}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9682692307692311,"seconds":7.865950465202332e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2074.151629599219}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9682692307692311,"seconds":7.865950465202332e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2074.151629599219}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7030195498945505,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.09375,"distances_sum":999.5260062497049}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.9140625,"distances_sum":418.0785286696074}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7754764332889341,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.2734375,"distances_sum":1167.001401180341}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6484375,"f1":0.7754764332889341,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.2734375,"distances_sum":1167.001401180341}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.958957188644689,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.953125,"distances_sum":1893.4476706930918}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9150240384615392,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":1652.9612812851478}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8737465659340669,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6796875,"distances_sum":1518.3274364392207}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9017544955044962,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":1607.1662815400966}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8451515498390507,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6640625,"distances_sum":1378.4377614505584}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.958957188644689,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.953125,"distances_sum":1893.4476706930918}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227111,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.96875,"distances_sum":1930.93595955987}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716346153846157,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.984375,"distances_sum":1960.9775512379977}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9716346153846157,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.984375,"distances_sum":1960.9775512379977}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9716346153846157,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.984375,"distances_sum":1960.9775512379977}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8114510489510497,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3203125,"distances_sum":1326.73152100469}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.3471733331680298e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.2109375,"distances_sum":396.6073676357429}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8114510489510497,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3203125,"distances_sum":1326.73152100469}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8603027181152191,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.546875,"distances_sum":1481.142270711516}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8603027181152191,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.546875,"distances_sum":1481.142270711516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491872710622714,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.890625,"distances_sum":1889.7071399761653}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444826007326015,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9453125,"distances_sum":1861.6158346359616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8690252455877466,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.65625,"distances_sum":1473.5058908963035}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9182036713286721,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9609375,"distances_sum":1723.6296996977285}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9008049242424249,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":1636.6780809151383}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521062271062276,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":1899.8995263931488}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521062271062276,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":1899.8995263931488}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521062271062276,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":1899.8995263931488}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":3.1534582376480103e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.421875,"distances_sum":386.8521073903843}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8581704753579762,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6171875,"distances_sum":1379.1916309712942}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8581704753579762,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6171875,"distances_sum":1379.1916309712942}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8615847693972701,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6328125,"distances_sum":1414.0796226259179}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9341262903762909,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":1714.4599078164647}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506009615384622,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":1799.2015436289453}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9506009615384622,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":1799.2015436289453}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972825091575092,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":1916.697896974252}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9650869963369968,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":1874.4798720958827}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616300366300369,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8671875,"distances_sum":1888.539545994107}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650183150183156,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":1874.1165057846838}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575950091575096,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8984375,"distances_sum":1812.0186413367069}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972825091575092,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":1916.697896974252}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972825091575092,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9296875,"distances_sum":1916.697896974252}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8168118339993348,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4765625,"distances_sum":1282.972734791797}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.1640625,"distances_sum":661.0178182699605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6966436341436346,"seconds":5.9699639678001404e-5,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0703125,"distances_sum":963.0571973413907}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7041015625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.7041015625,"f1":0.8168118339993348,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.4765625,"distances_sum":1282.972734791797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8650011446886456,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.625,"distances_sum":1442.00550437979}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9030568389943398,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.828125,"distances_sum":1590.0440691668648}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9040178571428577,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":1580.0025337085212}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9030568389943398,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.828125,"distances_sum":1590.0440691668648}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9536572802197806,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":1864.2999499674822}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9357600732600737,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":1700.9841861654368}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9592490842490847,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8515625,"distances_sum":1859.597961947218}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9067198426573435,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7890625,"distances_sum":1626.510074565017}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9592490842490847,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8515625,"distances_sum":1859.597961947218}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9592490842490847,"seconds":6.468966603279114e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8515625,"distances_sum":1859.597961947218}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6941156066156071,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.625,"distances_sum":1063.5553383501601}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":3.6284327507019043e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.28125,"distances_sum":681.9810453118552}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6941156066156071,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.625,"distances_sum":1063.5553383501601}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8519235972360981,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3203125,"distances_sum":1509.9270927964446}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.662109375,"f1":null,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.9140625,"distances_sum":1272.7607818743284}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9075466200466209,"seconds":6.5695494413375854e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":1755.431857771823}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7914085914085922,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0078125,"distances_sum":1312.1912155881098}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9075466200466209,"seconds":6.5695494413375854e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":1755.431857771823}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622714,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2063.2239379930775}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9412717490842499,"seconds":6.660819053649902e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":1972.8433123957311}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9326579670329677,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7421875,"distances_sum":1854.715721720776}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500286172161175,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":1985.806291168654}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9377320596070604,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7578125,"distances_sum":1895.9554464478563}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622714,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2063.2239379930775}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622714,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2063.2239379930775}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.53125,"f1":null,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.796875,"distances_sum":903.0871579218568}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7979863886113894,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.2734375,"distances_sum":1194.6107143408285}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.0546875,"distances_sum":357.3818610012986}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7979863886113894,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.2734375,"distances_sum":1194.6107143408285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8585097194472202,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5859375,"distances_sum":1423.1442544564618}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9109978563103571,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":1587.7713697597123}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9041437728937736,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1553.7410118635178}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9149496336996343,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1602.4352144380748}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8504448676323683,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":1366.7867059212272}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8980514277389284,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":1555.8810527688568}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8699867840492849,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5859375,"distances_sum":1440.1829666949925}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9149496336996343,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1602.4352144380748}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514766483516491,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":1802.8895115681491}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9260989010989015,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":1669.061031775088}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1896.8041406500347}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9315991300366305,"seconds":6.580725312232971e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":1707.2899714541134}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9416755119880127,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9375,"distances_sum":1744.2799305799426}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1896.8041406500347}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1896.8041406500347}}, n: 9
inertia(cfft.distances) = 20.98366044318929
inertia(cdnet.distances) = 29.106488095238102
inertia(crand.distances) = 20.52949525766632
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.94
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9511111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777777
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9422222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8822222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 1, 2, 3, 3, 3, 3, 3, 1, 3, 2, 2, 3, 3, 2, 3, 1, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.38780000206983173] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844] ***
*** starting iteration: 2; err: [Inf, 0.38780000206983173, 0.18206704781429844] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934] ***
*** starting iteration: 3; err: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964] ***
*** starting iteration: 4; err: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.38780000206983173, 0.18206704781429844, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 3.17620002483367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.17620002483367, 1.0818034767914673] ***
*** starting iteration: 2; err: [Inf, 3.17620002483367, 1.0818034767914673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727] ***
*** starting iteration: 3; err: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973] ***
*** starting iteration: 4; err: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973, 0.4816583802409409] ***
*** starting iteration: 5; err: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973, 0.4816583802409409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877] ***
*** starting iteration: 6; err: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877, 0.4791589041102877] ***
*** finished computation of 3 references, err: [Inf, 3.17620002483367, 1.0818034767914673, 0.580773292581727, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877, 0.4791589041102877] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8370000012259549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8370000012259549, 0.5677437652104551] ***
*** starting iteration: 2; err: [Inf, 0.8370000012259549, 0.5677437652104551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8370000012259549, 0.5677437652104551, 0.5473971446046315] ***
*** starting iteration: 3; err: [Inf, 0.8370000012259549, 0.5677437652104551, 0.5473971446046315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8370000012259549, 0.5677437652104551, 0.5473971446046315, 0.5415512814678956] ***
*** starting iteration: 4; err: [Inf, 0.8370000012259549, 0.5677437652104551, 0.5473971446046315, 0.5415512814678956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8370000012259549, 0.5677437652104551, 0.5473971446046315, 0.5415512814678956, 0.5415512814678956] ***
*** finished computation of 3 references, err: [Inf, 0.8370000012259549, 0.5677437652104551, 0.5473971446046315, 0.5415512814678956, 0.5415512814678956] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4199000042049903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808] ***
*** starting iteration: 2; err: [Inf, 1.4199000042049903, 0.9694469076813808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944] ***
*** starting iteration: 3; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466] ***
*** starting iteration: 4; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176] ***
*** starting iteration: 5; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671] ***
*** starting iteration: 6; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387] ***
*** starting iteration: 7; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857] ***
*** starting iteration: 8; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857, 0.5487978640156334] ***
*** starting iteration: 9; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857, 0.5487978640156334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857, 0.5487978640156334, 0.5474208345840432] ***
*** starting iteration: 10; err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857, 0.5487978640156334, 0.5474208345840432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857, 0.5487978640156334, 0.5474208345840432, 0.5442473510146002] ***
*** finished computation of 3 references, err: [Inf, 1.4199000042049903, 0.9694469076813808, 0.9631500151717944, 0.9612541549302466, 0.9595356679891176, 0.9362707555782671, 0.7136909545234387, 0.5814278715921857, 0.5487978640156334, 0.5474208345840432, 0.5442473510146002] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 35]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(2, 8), (3, 35)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 26, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3901064356942942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926] ***
*** starting iteration: 2; err: [Inf, 0.3901064356942942, 0.21698701285310926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533] ***
*** starting iteration: 3; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814] ***
*** starting iteration: 4; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841] ***
*** starting iteration: 5; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316] ***
*** starting iteration: 6; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782] ***
*** starting iteration: 7; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782, 0.19133791978206677] ***
*** starting iteration: 8; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782, 0.19133791978206677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782, 0.19133791978206677, 0.18991470265882138] ***
*** starting iteration: 9; err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782, 0.19133791978206677, 0.18991470265882138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782, 0.19133791978206677, 0.18991470265882138, 0.18991470265882138] ***
*** finished computation of 7 references, err: [Inf, 0.3901064356942942, 0.21698701285310926, 0.20797229533878533, 0.20149151979554814, 0.1996932705282841, 0.19803151972719316, 0.19559737962936782, 0.19133791978206677, 0.18991470265882138, 0.18991470265882138] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 16]]
** centroid: 3, normalized-entropy: 0.975119064940866, [(2, 11), (3, 16)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5837031366672045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601] ***
*** starting iteration: 2; err: [Inf, 0.5837031366672045, 0.3210239820199601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915] ***
*** starting iteration: 3; err: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854] ***
*** starting iteration: 4; err: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737] ***
*** starting iteration: 5; err: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737, 0.22220861152372323] ***
*** starting iteration: 6; err: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737, 0.22220861152372323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737, 0.22220861152372323, 0.219885498683606] ***
*** starting iteration: 7; err: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737, 0.22220861152372323, 0.219885498683606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737, 0.22220861152372323, 0.219885498683606, 0.219885498683606] ***
*** finished computation of 7 references, err: [Inf, 0.5837031366672045, 0.3210239820199601, 0.2738668271804915, 0.24780607390748854, 0.23287682606740737, 0.22220861152372323, 0.219885498683606, 0.219885498683606] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 8]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 18), (3, 8)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.1467221852453973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402] ***
*** starting iteration: 2; err: [Inf, 3.1467221852453973, 0.7788144505064402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372] ***
*** starting iteration: 3; err: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885] ***
*** starting iteration: 4; err: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029] ***
*** starting iteration: 5; err: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029, 0.1972798759108174] ***
*** starting iteration: 6; err: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029, 0.1972798759108174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029, 0.1972798759108174, 0.19282021574059724] ***
*** starting iteration: 7; err: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029, 0.1972798759108174, 0.19282021574059724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029, 0.1972798759108174, 0.19282021574059724, 0.19216375894544702] ***
*** finished computation of 7 references, err: [Inf, 3.1467221852453973, 0.7788144505064402, 0.3211588259310372, 0.23942222843972885, 0.2082569442089029, 0.1972798759108174, 0.19282021574059724, 0.19216375894544702] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 10]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2097279635465352] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2097279635465352, 0.6576626712287847] ***
*** finished computation of 3 references, err: [Inf, 1.2097279635465352, 0.6576626712287847] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 32]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 34), (3, 32)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.0659923882615026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.0659923882615026, 1.3413389716054547] ***
*** finished computation of 3 references, err: [Inf, 5.0659923882615026, 1.3413389716054547] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [35, 14, 1]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(1, 35), (2, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 18, 27]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 18), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5634253432584173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5634253432584173, 1.332016599589541] ***
*** finished computation of 3 references, err: [Inf, 2.5634253432584173, 1.332016599589541] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 30]]
** centroid: 1, normalized-entropy: 0.8841151220488478, [(2, 13), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [31, 21, 0]]
** centroid: 2, normalized-entropy: 0.9731560354421095, [(1, 31), (2, 21)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.569299993918499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.569299993918499, 1.4796225192561019] ***
*** starting iteration: 2; err: [Inf, 5.569299993918499, 1.4796225192561019] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085] ***
*** starting iteration: 3; err: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973] ***
*** starting iteration: 4; err: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973, 0.4816583802409409] ***
*** starting iteration: 5; err: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973, 0.4816583802409409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877] ***
*** starting iteration: 6; err: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877, 0.4791589041102877] ***
*** finished computation of 3 references, err: [Inf, 5.569299993918499, 1.4796225192561019, 0.6506375280298085, 0.5030018292401973, 0.4816583802409409, 0.4791589041102877, 0.4791589041102877] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6646999931514024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6646999931514024, 0.9141130215907883] ***
*** starting iteration: 2; err: [Inf, 1.6646999931514024, 0.9141130215907883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465] ***
*** starting iteration: 3; err: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465, 0.5451274228816227] ***
*** starting iteration: 4; err: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465, 0.5451274228816227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465, 0.5451274228816227, 0.5415512814678956] ***
*** starting iteration: 5; err: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465, 0.5451274228816227, 0.5415512814678956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465, 0.5451274228816227, 0.5415512814678956, 0.5415512814678956] ***
*** finished computation of 3 references, err: [Inf, 1.6646999931514024, 0.9141130215907883, 0.61145502052465, 0.5451274228816227, 0.5415512814678956, 0.5415512814678956] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.7208000072921004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7208000072921004, 0.7513558011159331] ***
*** starting iteration: 2; err: [Inf, 2.7208000072921004, 0.7513558011159331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7208000072921004, 0.7513558011159331, 0.5426892865936036] ***
*** starting iteration: 3; err: [Inf, 2.7208000072921004, 0.7513558011159331, 0.5426892865936036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7208000072921004, 0.7513558011159331, 0.5426892865936036, 0.540269695650119] ***
*** starting iteration: 4; err: [Inf, 2.7208000072921004, 0.7513558011159331, 0.5426892865936036, 0.540269695650119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7208000072921004, 0.7513558011159331, 0.5426892865936036, 0.540269695650119, 0.540269695650119] ***
*** finished computation of 3 references, err: [Inf, 2.7208000072921004, 0.7513558011159331, 0.5426892865936036, 0.540269695650119, 0.540269695650119] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 33]]
** centroid: 1, normalized-entropy: 0.5617526078313283, [(2, 5), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 29, 2]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 29), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.08469996274258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.08469996274258, 1.737320950686381] ***
*** starting iteration: 2; err: [Inf, 6.08469996274258, 1.737320950686381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462] ***
*** starting iteration: 3; err: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023] ***
*** starting iteration: 4; err: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023, 0.4816583802409409] ***
*** starting iteration: 5; err: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023, 0.4816583802409409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023, 0.4816583802409409, 0.4791589041102877] ***
*** starting iteration: 6; err: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023, 0.4816583802409409, 0.4791589041102877] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023, 0.4816583802409409, 0.4791589041102877, 0.4791589041102877] ***
*** finished computation of 3 references, err: [Inf, 6.08469996274258, 1.737320950686381, 0.8174064714104462, 0.4960218020502023, 0.4816583802409409, 0.4791589041102877, 0.4791589041102877] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.42549999533657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121] ***
*** starting iteration: 2; err: [Inf, 1.42549999533657, 0.9158751038245121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785] ***
*** starting iteration: 3; err: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228] ***
*** starting iteration: 4; err: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172] ***
*** starting iteration: 5; err: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172, 0.5865885157936507] ***
*** starting iteration: 6; err: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172, 0.5865885157936507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172, 0.5865885157936507, 0.5824449846678474] ***
*** starting iteration: 7; err: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172, 0.5865885157936507, 0.5824449846678474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172, 0.5865885157936507, 0.5824449846678474, 0.5815177508682544] ***
*** finished computation of 3 references, err: [Inf, 1.42549999533657, 0.9158751038245121, 0.7514004545959785, 0.6151056242696228, 0.5967498116114172, 0.5865885157936507, 0.5824449846678474, 0.5815177508682544] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 2]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 22), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 31]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 10), (3, 31)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.115100032024326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.115100032024326, 1.262979189456053] ***
*** starting iteration: 2; err: [Inf, 4.115100032024326, 1.262979189456053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037] ***
*** starting iteration: 3; err: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037, 0.5513105792410318] ***
*** starting iteration: 4; err: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037, 0.5513105792410318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037, 0.5513105792410318, 0.5433334656701283] ***
*** starting iteration: 5; err: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037, 0.5513105792410318, 0.5433334656701283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037, 0.5513105792410318, 0.5433334656701283, 0.5423697941411567] ***
*** finished computation of 3 references, err: [Inf, 4.115100032024326, 1.262979189456053, 0.6388060644066037, 0.5513105792410318, 0.5433334656701283, 0.5423697941411567] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 1, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9142917795927555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9142917795927555, 0.3752931151605166] ***
*** starting iteration: 2; err: [Inf, 0.9142917795927555, 0.3752931151605166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935] ***
*** starting iteration: 3; err: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935, 0.34376043601963685] ***
*** starting iteration: 4; err: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935, 0.34376043601963685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935, 0.34376043601963685, 0.3416250622728626] ***
*** starting iteration: 5; err: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935, 0.34376043601963685, 0.3416250622728626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935, 0.34376043601963685, 0.3416250622728626, 0.3416250622728626] ***
*** finished computation of 3 references, err: [Inf, 0.9142917795927555, 0.3752931151605166, 0.35608853722198935, 0.34376043601963685, 0.3416250622728626, 0.3416250622728626] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7582145696429613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713] ***
*** starting iteration: 2; err: [Inf, 0.7582145696429613, 0.47561731355904713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644] ***
*** starting iteration: 3; err: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354] ***
*** starting iteration: 4; err: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985] ***
*** starting iteration: 5; err: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985, 0.38052989337201937] ***
*** starting iteration: 6; err: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985, 0.38052989337201937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985, 0.38052989337201937, 0.37829911516026654] ***
*** starting iteration: 7; err: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985, 0.38052989337201937, 0.37829911516026654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985, 0.38052989337201937, 0.37829911516026654, 0.37853689692769776] ***
*** finished computation of 3 references, err: [Inf, 0.7582145696429613, 0.47561731355904713, 0.3999174837769644, 0.3934481317244354, 0.38424939856429985, 0.38052989337201937, 0.37829911516026654, 0.37853689692769776] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7897139051244975] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043] ***
*** starting iteration: 2; err: [Inf, 1.7897139051244975, 0.6729618150183043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205] ***
*** starting iteration: 3; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189] ***
*** starting iteration: 4; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317] ***
*** starting iteration: 5; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575] ***
*** starting iteration: 6; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026] ***
*** starting iteration: 7; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972] ***
*** starting iteration: 8; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972, 0.37131957960318585] ***
*** starting iteration: 9; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972, 0.37131957960318585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972, 0.37131957960318585, 0.36837330606182794] ***
*** starting iteration: 10; err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972, 0.37131957960318585, 0.36837330606182794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972, 0.37131957960318585, 0.36837330606182794, 0.36829562942661764] ***
*** finished computation of 3 references, err: [Inf, 1.7897139051244975, 0.6729618150183043, 0.649875989434205, 0.5845493231726189, 0.4639746489323317, 0.38542805414063575, 0.3750878066331026, 0.3730659374309972, 0.37131957960318585, 0.36837330606182794, 0.36829562942661764] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 34]]
** centroid: 1, normalized-entropy: 0.6098403047164005, [(2, 6), (3, 34)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 28, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2653044836301109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653044836301109, 0.17712608399231786] ***
*** starting iteration: 2; err: [Inf, 0.2653044836301109, 0.17712608399231786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653044836301109, 0.17712608399231786, 0.16875742219912782] ***
*** starting iteration: 3; err: [Inf, 0.2653044836301109, 0.17712608399231786, 0.16875742219912782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653044836301109, 0.17712608399231786, 0.16875742219912782, 0.16451467696601368] ***
*** finished computation of 7 references, err: [Inf, 0.2653044836301109, 0.17712608399231786, 0.16875742219912782, 0.16451467696601368] ***
*** center 1: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8136909467511764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8136909467511764, 0.3481284979453646] ***
*** starting iteration: 2; err: [Inf, 0.8136909467511764, 0.3481284979453646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8136909467511764, 0.3481284979453646, 0.3380156274279226] ***
*** starting iteration: 3; err: [Inf, 0.8136909467511764, 0.3481284979453646, 0.3380156274279226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8136909467511764, 0.3481284979453646, 0.3380156274279226, 0.3344417054528313] ***
*** finished computation of 7 references, err: [Inf, 0.8136909467511764, 0.3481284979453646, 0.3380156274279226, 0.3344417054528313] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 31]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 9), (3, 31)]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 23, 2]]
** centroid: 7, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5865080274479654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5865080274479654, 0.2316551788547315] ***
*** starting iteration: 2; err: [Inf, 0.5865080274479654, 0.2316551788547315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5865080274479654, 0.2316551788547315, 0.2014696994514135] ***
*** starting iteration: 3; err: [Inf, 0.5865080274479654, 0.2316551788547315, 0.2014696994514135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5865080274479654, 0.2316551788547315, 0.2014696994514135, 0.19488679271841508] ***
*** finished computation of 7 references, err: [Inf, 0.5865080274479654, 0.2316551788547315, 0.2014696994514135, 0.19488679271841508] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 6, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8786644152100651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8786644152100651, 0.36944887403825477] ***
*** finished computation of 3 references, err: [Inf, 0.8786644152100651, 0.36944887403825477] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 30]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 4), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 2]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6682452653106238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6682452653106238, 0.4029108341023354] ***
*** finished computation of 3 references, err: [Inf, 0.6682452653106238, 0.4029108341023354] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 3, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.287208913863076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.287208913863076, 1.3570466983786615] ***
*** finished computation of 3 references, err: [Inf, 3.287208913863076, 1.3570466983786615] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 20, 0]]
** centroid: 1, normalized-entropy: 0.9661773513883509, [(1, 31), (2, 20)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 29]]
** centroid: 3, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1327999883349198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1327999883349198, 0.4800725330681057] ***
*** starting iteration: 2; err: [Inf, 1.1327999883349198, 0.4800725330681057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1327999883349198, 0.4800725330681057, 0.47906964346335] ***
*** starting iteration: 3; err: [Inf, 1.1327999883349198, 0.4800725330681057, 0.47906964346335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1327999883349198, 0.4800725330681057, 0.47906964346335, 0.47906964346335] ***
*** finished computation of 3 references, err: [Inf, 1.1327999883349198, 0.4800725330681057, 0.47906964346335, 0.47906964346335] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.433500040221962] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.433500040221962, 0.8512122107946506] ***
*** starting iteration: 2; err: [Inf, 2.433500040221962, 0.8512122107946506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.433500040221962, 0.8512122107946506, 0.5685068339374415] ***
*** starting iteration: 3; err: [Inf, 2.433500040221962, 0.8512122107946506, 0.5685068339374415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.433500040221962, 0.8512122107946506, 0.5685068339374415, 0.5504124378376908] ***
*** finished computation of 3 references, err: [Inf, 2.433500040221962, 0.8512122107946506, 0.5685068339374415, 0.5504124378376908] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.622199996345262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.622199996345262, 0.5447816817812965] ***
*** starting iteration: 2; err: [Inf, 0.622199996345262, 0.5447816817812965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.622199996345262, 0.5447816817812965, 0.5436304228893092] ***
*** starting iteration: 3; err: [Inf, 0.622199996345262, 0.5447816817812965, 0.5436304228893092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.622199996345262, 0.5447816817812965, 0.5436304228893092, 0.5428354667049363] ***
*** finished computation of 3 references, err: [Inf, 0.622199996345262, 0.5447816817812965, 0.5436304228893092, 0.5428354667049363] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 35]]
** centroid: 1, normalized-entropy: 0.6006085754131871, [(2, 6), (3, 35)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.8048999824286724] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.8048999824286724, 1.0164905415068592] ***
*** finished computation of 3 references, err: [Inf, 4.8048999824286724, 1.0164905415068592] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 3, 0]]
** centroid: 2, normalized-entropy: 0.40597703847557104, [(1, 34), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 14]]
** centroid: 3, normalized-entropy: 0.8944518845341284, [(2, 31), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9930999945802895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9930999945802895, 0.5562506379313521] ***
*** finished computation of 3 references, err: [Inf, 0.9930999945802895, 0.5562506379313521] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 7]]
** centroid: 2, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.1810000188931786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1810000188931786, 1.1351902734282977] ***
*** finished computation of 3 references, err: [Inf, 3.1810000188931786, 1.1351902734282977] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 11]]
** centroid: 1, normalized-entropy: 0.8779620013943914, [(2, 26), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [31, 8, 0]]
** centroid: 2, normalized-entropy: 0.7320666900931937, [(1, 31), (2, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8408896079910586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8408896079910586, 0.3465030675384642] ***
*** starting iteration: 2; err: [Inf, 0.8408896079910586, 0.3465030675384642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8408896079910586, 0.3465030675384642, 0.3420338100068949] ***
*** starting iteration: 3; err: [Inf, 0.8408896079910586, 0.3465030675384642, 0.3420338100068949] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8408896079910586, 0.3465030675384642, 0.3420338100068949, 0.3416250622728626] ***
*** finished computation of 3 references, err: [Inf, 0.8408896079910586, 0.3465030675384642, 0.3420338100068949, 0.3416250622728626] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6537995514350243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283] ***
*** starting iteration: 2; err: [Inf, 0.6537995514350243, 0.41412939390283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886] ***
*** starting iteration: 3; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986] ***
*** starting iteration: 4; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746] ***
*** starting iteration: 5; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433] ***
*** starting iteration: 6; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033] ***
*** starting iteration: 7; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033, 0.38052989337201937] ***
*** starting iteration: 8; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033, 0.38052989337201937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033, 0.38052989337201937, 0.37829911516026654] ***
*** starting iteration: 9; err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033, 0.38052989337201937, 0.37829911516026654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033, 0.38052989337201937, 0.37829911516026654, 0.37853689692769776] ***
*** finished computation of 3 references, err: [Inf, 0.6537995514350243, 0.41412939390283, 0.4041307300463886, 0.39907905203522986, 0.39702091525163746, 0.39254073295725433, 0.3830927016504033, 0.38052989337201937, 0.37829911516026654, 0.37853689692769776] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8975326766953197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8975326766953197, 0.40401495751448] ***
*** starting iteration: 2; err: [Inf, 0.8975326766953197, 0.40401495751448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131] ***
*** starting iteration: 3; err: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566] ***
*** starting iteration: 4; err: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566, 0.37214197896653894] ***
*** starting iteration: 5; err: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566, 0.37214197896653894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566, 0.37214197896653894, 0.3700907003797891] ***
*** starting iteration: 6; err: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566, 0.37214197896653894, 0.3700907003797891] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566, 0.37214197896653894, 0.3700907003797891, 0.3696779633314988] ***
*** finished computation of 3 references, err: [Inf, 0.8975326766953197, 0.40401495751448, 0.381207002120131, 0.37504758612681566, 0.37214197896653894, 0.3700907003797891, 0.3696779633314988] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 27]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0416999967203329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0416999967203329, 0.4958559909772684] ***
*** finished computation of 3 references, err: [Inf, 1.0416999967203329, 0.4958559909772684] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.23080001072335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.23080001072335, 0.6879438560296002] ***
*** finished computation of 3 references, err: [Inf, 1.23080001072335, 0.6879438560296002] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 19]]
** centroid: 1, normalized-entropy: 0.9580420222262997, [(2, 31), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6748999849663209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6748999849663209, 0.5619132620289361] ***
*** finished computation of 3 references, err: [Inf, 1.6748999849663209, 0.5619132620289361] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4009233049229103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4009233049229103, 0.20156289495810376] ***
*** finished computation of 7 references, err: [Inf, 0.4009233049229103, 0.20156289495810376] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 7]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.436299384355579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.436299384355579, 0.20339633527629697] ***
*** finished computation of 7 references, err: [Inf, 0.436299384355579, 0.20339633527629697] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 5, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 3]]
** centroid: 7, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43436635179138094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43436635179138094, 0.18041042762789763] ***
*** finished computation of 7 references, err: [Inf, 0.43436635179138094, 0.18041042762789763] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 10]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 20), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 13)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6214000014661252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183] ***
*** starting iteration: 2; err: [Inf, 0.6214000014661252, 0.35211851895238183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967] ***
*** starting iteration: 3; err: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354] ***
*** starting iteration: 4; err: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638] ***
*** starting iteration: 5; err: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638, 0.23473841195052947] ***
*** starting iteration: 6; err: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638, 0.23473841195052947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638, 0.23473841195052947, 0.23238924114498083] ***
*** starting iteration: 7; err: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638, 0.23473841195052947, 0.23238924114498083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638, 0.23473841195052947, 0.23238924114498083, 0.23238924114498083] ***
*** finished computation of 7 references, err: [Inf, 0.6214000014661252, 0.35211851895238183, 0.28507421113211967, 0.2673936088827354, 0.2481132036119638, 0.23473841195052947, 0.23238924114498083, 0.23238924114498083] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.931000000511034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.931000000511034, 0.33155809648004125] ***
*** starting iteration: 2; err: [Inf, 0.931000000511034, 0.33155809648004125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004] ***
*** starting iteration: 3; err: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004, 0.2910407886855928] ***
*** starting iteration: 4; err: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004, 0.2910407886855928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004, 0.2910407886855928, 0.2858420900447064] ***
*** starting iteration: 5; err: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004, 0.2910407886855928, 0.2858420900447064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004, 0.2910407886855928, 0.2858420900447064, 0.2858420900447064] ***
*** finished computation of 7 references, err: [Inf, 0.931000000511034, 0.33155809648004125, 0.3157023828798004, 0.2910407886855928, 0.2858420900447064, 0.2858420900447064] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6916000088931297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6916000088931297, 0.28880430771498616] ***
*** starting iteration: 2; err: [Inf, 0.6916000088931297, 0.28880430771498616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245] ***
*** starting iteration: 3; err: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245, 0.27504317246800425] ***
*** starting iteration: 4; err: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245, 0.27504317246800425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245, 0.27504317246800425, 0.27286785944716546] ***
*** starting iteration: 5; err: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245, 0.27504317246800425, 0.27286785944716546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245, 0.27504317246800425, 0.27286785944716546, 0.2724716571737533] ***
*** finished computation of 7 references, err: [Inf, 0.6916000088931297, 0.28880430771498616, 0.28166437471811245, 0.27504317246800425, 0.27286785944716546, 0.2724716571737533] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 10]]
** centroid: 4, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 14)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 14
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 14
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 14)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 16
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.364146805787091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.364146805787091, 0.18299454454818417] ***
*** starting iteration: 2; err: [Inf, 0.364146805787091, 0.18299454454818417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.364146805787091, 0.18299454454818417, 0.16907019663142503] ***
*** starting iteration: 3; err: [Inf, 0.364146805787091, 0.18299454454818417, 0.16907019663142503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.364146805787091, 0.18299454454818417, 0.16907019663142503, 0.15867294361415019] ***
*** starting iteration: 4; err: [Inf, 0.364146805787091, 0.18299454454818417, 0.16907019663142503, 0.15867294361415019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.364146805787091, 0.18299454454818417, 0.16907019663142503, 0.15867294361415019, 0.1579060095236114] ***
*** finished computation of 7 references, err: [Inf, 0.364146805787091, 0.18299454454818417, 0.16907019663142503, 0.15867294361415019, 0.1579060095236114] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 5]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4164728331606167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743] ***
*** starting iteration: 2; err: [Inf, 0.4164728331606167, 0.22781404851839743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746] ***
*** starting iteration: 3; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936] ***
*** starting iteration: 4; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203] ***
*** starting iteration: 5; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733] ***
*** starting iteration: 6; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503] ***
*** starting iteration: 7; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503, 0.17560651528382337] ***
*** starting iteration: 8; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503, 0.17560651528382337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503, 0.17560651528382337, 0.1727186970912458] ***
*** starting iteration: 9; err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503, 0.17560651528382337, 0.1727186970912458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503, 0.17560651528382337, 0.1727186970912458, 0.17230280770748657] ***
*** finished computation of 7 references, err: [Inf, 0.4164728331606167, 0.22781404851839743, 0.21272815082881746, 0.20894214993144936, 0.2074930149883203, 0.20080902898909733, 0.18642169616896503, 0.17560651528382337, 0.1727186970912458, 0.17230280770748657] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 17]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 2), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36247862942574216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035] ***
*** starting iteration: 2; err: [Inf, 0.36247862942574216, 0.18899241564883035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235] ***
*** starting iteration: 3; err: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203] ***
*** starting iteration: 4; err: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844] ***
*** starting iteration: 5; err: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844, 0.1763026611411104] ***
*** starting iteration: 6; err: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844, 0.1763026611411104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844, 0.1763026611411104, 0.1752414759616427] ***
*** starting iteration: 7; err: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844, 0.1763026611411104, 0.1752414759616427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844, 0.1763026611411104, 0.1752414759616427, 0.17534337922415072] ***
*** finished computation of 7 references, err: [Inf, 0.36247862942574216, 0.18899241564883035, 0.18376461943098235, 0.18056893363446203, 0.17808825433552844, 0.1763026611411104, 0.1752414759616427, 0.17534337922415072] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 10]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5270000033685445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5270000033685445, 0.2538586173670149] ***
*** starting iteration: 2; err: [Inf, 0.5270000033685445, 0.2538586173670149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316] ***
*** starting iteration: 3; err: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035] ***
*** starting iteration: 4; err: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035, 0.23189692177022636] ***
*** starting iteration: 5; err: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035, 0.23189692177022636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035, 0.23189692177022636, 0.23007646826567785] ***
*** starting iteration: 6; err: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035, 0.23189692177022636, 0.23007646826567785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035, 0.23189692177022636, 0.23007646826567785, 0.2295597648030795] ***
*** finished computation of 7 references, err: [Inf, 0.5270000033685445, 0.2538586173670149, 0.24263133479547316, 0.23522068935961035, 0.23189692177022636, 0.23007646826567785, 0.2295597648030795] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6130000027509133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065] ***
*** starting iteration: 2; err: [Inf, 0.6130000027509133, 0.30290458675049065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627] ***
*** starting iteration: 3; err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575] ***
*** starting iteration: 4; err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584] ***
*** starting iteration: 5; err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804] ***
*** starting iteration: 6; err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804, 0.24955292932840556] ***
*** starting iteration: 7; err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804, 0.24955292932840556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804, 0.24955292932840556, 0.24807784511838504] ***
*** starting iteration: 8; err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804, 0.24955292932840556, 0.24807784511838504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804, 0.24955292932840556, 0.24807784511838504, 0.24807784511838504] ***
*** finished computation of 7 references, err: [Inf, 0.6130000027509133, 0.30290458675049065, 0.2780507663696627, 0.2702313464382575, 0.2607664629531584, 0.25194442122827804, 0.24955292932840556, 0.24807784511838504, 0.24807784511838504] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 9]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5620000051447704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620000051447704, 0.24351438886595006] ***
*** starting iteration: 2; err: [Inf, 0.5620000051447704, 0.24351438886595006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655] ***
*** starting iteration: 3; err: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655, 0.22431341786264766] ***
*** starting iteration: 4; err: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655, 0.22431341786264766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655, 0.22431341786264766, 0.22203865215382076] ***
*** starting iteration: 5; err: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655, 0.22431341786264766, 0.22203865215382076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655, 0.22431341786264766, 0.22203865215382076, 0.22146434451590039] ***
*** finished computation of 7 references, err: [Inf, 0.5620000051447704, 0.24351438886595006, 0.2299066300604655, 0.22431341786264766, 0.22203865215382076, 0.22146434451590039] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 2]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 16
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 7 finished
*** starting iteration: 1; err: [Inf, 1.1168814101101012] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168814101101012, 0.3431651439301983] ***
*** starting iteration: 2; err: [Inf, 1.1168814101101012, 0.3431651439301983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168814101101012, 0.3431651439301983, 0.34136432997159116] ***
*** starting iteration: 3; err: [Inf, 1.1168814101101012, 0.3431651439301983, 0.34136432997159116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1168814101101012, 0.3431651439301983, 0.34136432997159116, 0.34136432997159116] ***
*** finished computation of 3 references, err: [Inf, 1.1168814101101012, 0.3431651439301983, 0.34136432997159116, 0.34136432997159116] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 8]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6787497110947405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6787497110947405, 0.410920501125584] ***
*** starting iteration: 2; err: [Inf, 0.6787497110947405, 0.410920501125584] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6787497110947405, 0.410920501125584, 0.4018575098822488] ***
*** starting iteration: 3; err: [Inf, 0.6787497110947405, 0.410920501125584, 0.4018575098822488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6787497110947405, 0.410920501125584, 0.4018575098822488, 0.39907905203522986] ***
*** finished computation of 3 references, err: [Inf, 0.6787497110947405, 0.410920501125584, 0.4018575098822488, 0.39907905203522986] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 31]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 9), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 2]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.935170829371594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.935170829371594, 0.4479109202392801] ***
*** starting iteration: 2; err: [Inf, 0.935170829371594, 0.4479109202392801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.935170829371594, 0.4479109202392801, 0.41269108350855327] ***
*** starting iteration: 3; err: [Inf, 0.935170829371594, 0.4479109202392801, 0.41269108350855327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.935170829371594, 0.4479109202392801, 0.41269108350855327, 0.3830039531225679] ***
*** finished computation of 3 references, err: [Inf, 0.935170829371594, 0.4479109202392801, 0.41269108350855327, 0.3830039531225679] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3984999945443173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3984999945443173, 0.4846516739006199] ***
*** starting iteration: 2; err: [Inf, 1.3984999945443173, 0.4846516739006199] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3984999945443173, 0.4846516739006199, 0.4797997451766615] ***
*** starting iteration: 3; err: [Inf, 1.3984999945443173, 0.4846516739006199, 0.4797997451766615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3984999945443173, 0.4846516739006199, 0.4797997451766615, 0.4791589041102877] ***
*** finished computation of 3 references, err: [Inf, 1.3984999945443173, 0.4846516739006199, 0.4797997451766615, 0.4791589041102877] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2888000059563904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2888000059563904, 0.5967498116114172] ***
*** starting iteration: 2; err: [Inf, 1.2888000059563904, 0.5967498116114172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2888000059563904, 0.5967498116114172, 0.5865885157936507] ***
*** starting iteration: 3; err: [Inf, 1.2888000059563904, 0.5967498116114172, 0.5865885157936507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2888000059563904, 0.5967498116114172, 0.5865885157936507, 0.5824449846678474] ***
*** finished computation of 3 references, err: [Inf, 1.2888000059563904, 0.5967498116114172, 0.5865885157936507, 0.5824449846678474] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 32]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1245000066644466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1245000066644466, 0.6022876707213942] ***
*** starting iteration: 2; err: [Inf, 1.1245000066644466, 0.6022876707213942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1245000066644466, 0.6022876707213942, 0.551969706663068] ***
*** starting iteration: 3; err: [Inf, 1.1245000066644466, 0.6022876707213942, 0.551969706663068] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1245000066644466, 0.6022876707213942, 0.551969706663068, 0.5433334656701283] ***
*** finished computation of 3 references, err: [Inf, 1.1245000066644466, 0.6022876707213942, 0.551969706663068, 0.5433334656701283] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.8218650892496755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915] ***
*** starting iteration: 2; err: [Inf, 0.8218650892496755, 0.38720758270556915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063] ***
*** starting iteration: 3; err: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437] ***
*** starting iteration: 4; err: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057] ***
*** starting iteration: 5; err: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057, 0.3438209873943981] ***
*** starting iteration: 6; err: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057, 0.3438209873943981] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057, 0.3438209873943981, 0.34190269196587847] ***
*** starting iteration: 7; err: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057, 0.3438209873943981, 0.34190269196587847] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057, 0.3438209873943981, 0.34190269196587847, 0.34190269196587847] ***
*** finished computation of 3 references, err: [Inf, 0.8218650892496755, 0.38720758270556915, 0.36880806420311063, 0.35790738611697437, 0.3456854991025057, 0.3438209873943981, 0.34190269196587847, 0.34190269196587847] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3336502927190963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3336502927190963, 0.6347356670951545] ***
*** starting iteration: 2; err: [Inf, 1.3336502927190963, 0.6347356670951545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679] ***
*** starting iteration: 3; err: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295] ***
*** starting iteration: 4; err: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295, 0.6206709843221339] ***
*** starting iteration: 5; err: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295, 0.6206709843221339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295, 0.6206709843221339, 0.6169318950815856] ***
*** starting iteration: 6; err: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295, 0.6206709843221339, 0.6169318950815856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295, 0.6206709843221339, 0.6169318950815856, 0.6161141623125828] ***
*** finished computation of 3 references, err: [Inf, 1.3336502927190963, 0.6347356670951545, 0.6294109995729679, 0.6281808002549295, 0.6206709843221339, 0.6169318950815856, 0.6161141623125828] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 3, 0]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8676973732061424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8676973732061424, 0.5581624221409156] ***
*** starting iteration: 2; err: [Inf, 1.8676973732061424, 0.5581624221409156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8676973732061424, 0.5581624221409156, 0.37542869019498776] ***
*** starting iteration: 3; err: [Inf, 1.8676973732061424, 0.5581624221409156, 0.37542869019498776] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8676973732061424, 0.5581624221409156, 0.37542869019498776, 0.36857882448324125] ***
*** starting iteration: 4; err: [Inf, 1.8676973732061424, 0.5581624221409156, 0.37542869019498776, 0.36857882448324125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8676973732061424, 0.5581624221409156, 0.37542869019498776, 0.36857882448324125, 0.36801231404705115] ***
*** finished computation of 3 references, err: [Inf, 1.8676973732061424, 0.5581624221409156, 0.37542869019498776, 0.36857882448324125, 0.36801231404705115] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 7]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 28]]
** centroid: 2, normalized-entropy: 0.6136190195993708, [(2, 5), (3, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.88, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1) => 0.9666666666666667
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1), 0.9666666666666667)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.944117647058823, 3.344117647058823, 1.45, 0.24117647058823527], [6.98695652173913, 3.130434782608696, 5.839130434782608, 2.126086956521739], [5.973529411764706, 2.7764705882352936, 4.341176470588236, 1.352941176470588], [5.922222222222222, 2.7333333333333334, 5.011111111111111, 1.8000000000000003]], [0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.028571428571428, 3.4428571428571426, 1.4685714285714286, 0.2485714285714285], [5.91, 2.743333333333333, 4.216666666666667, 1.3033333333333332], [5.833333333333332, 2.6555555555555554, 4.922222222222222, 1.8222222222222224], [6.796153846153846, 3.0692307692307685, 5.699999999999999, 2.0807692307692305]], [0.0, 0.0, 0.0, 0.0], [1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.048387096774195, 3.470967741935484, 1.4741935483870967, 0.2419354838709678], [6.624999999999999, 3.0, 4.7124999999999995, 1.45], [6.54857142857143, 2.948571428571429, 5.52, 2.0057142857142853], [5.62, 2.6919999999999997, 3.984, 1.252]], [0.0, 0.0, 0.0, 0.0], [1, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 10, 1.0, :rand, 0.6, 1))]
[50, 1, 3, 3, 1, 37, 8, 18, 20, 27, 13, 32, 1, 61, 27, 25, 20, 22, 41, 46, 38, 20, 27, 8, 36, 24, 28, 34, 25, 30, 44, 1, 14, 42, 1, 35, 32, 37, 13, 7, 43, 44, 35, 44, 35, 13, 37, 32, 18, 26, 53, 40, 28, 30, 38, 34, 20, 32, 27, 12, 46, 25, 38, 38, 39, 27, 35, 35, 30, 17, 32, 31, 16, 24, 23, 36, 50, 31, 24, 54, 39, 29, 60, 30, 51, 24, 32, 20, 11, 13, 12, 35, 45, 29, 37, 33, 15, 33, 32, 35, 45, 58, 49, 38, 45, 51, 34, 39, 31, 53, 34, 45, 29, 46, 27, 25, 34, 20, 21, 9, 1, 43, 34, 27, 37, 33, 38, 29, 41, 33, 38, 39, 34, 30, 29, 20, 37, 41, 38, 35, 32, 85, 1, 24, 26, 40, 27, 42, 33, 55, 43, 47, 49, 1, 33, 39, 56, 40, 45, 51, 37, 60, 42, 44, 35, 33, 27, 37, 21, 37, 26, 23, 39, 21, 46, 36, 27, 20, 26, 24, 50, 26, 39, 36, 39, 32, 1, 31, 10, 26, 29, 47, 1, 51, 23, 36, 48, 39, 21, 36, 29, 37, 35, 35, 36, 25, 34, 31, 35, 34, 33, 31, 28, 25, 1, 41, 44, 42, 53, 48, 32, 3, 59, 56, 43, 40, 49, 66, 79, 49, 40, 37, 27, 32, 28, 31, 1, 33, 25, 28, 37, 16, 44, 24, 32, 32, 38, 30, 44, 53, 34, 27, 23, 1, 73, 58, 43, 56, 41, 32, 38, 22, 55, 47, 58, 24, 59, 17, 51, 48, 73, 47, 34, 33, 31, 51, 28, 42, 48, 25, 47, 44, 46, 29, 23, 26, 63, 30, 28, 21, 28, 24, 32, 22, 21, 56, 36, 22, 57, 41]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5970000000000003, speedup = 0.3814373624443067, eval_ratio = 0.041510000000000005)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3758680555555554,"f1":null,"seconds":7.046200335025787e-5,"exhaustive_search_seconds":0.0004479996860027313,"evaluations":340.2890625,"distances_sum":1684.8895834092216}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5486111111111109,"recall":0.5486111111111109,"f1":null,"seconds":0.00010704807937145233,"exhaustive_search_seconds":0.0004479996860027313,"evaluations":379.2734375,"distances_sum":1608.15856026559}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.642361111111111,"recall":0.642361111111111,"f1":0.642361111111111,"seconds":0.00014044344425201416,"exhaustive_search_seconds":0.0004479996860027313,"evaluations":418.734375,"distances_sum":1569.3523591373844}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7222222222222217,"recall":0.7222222222222217,"f1":0.7222222222222217,"seconds":0.00016199424862861633,"exhaustive_search_seconds":0.0004479996860027313,"evaluations":458.8515625,"distances_sum":1542.701580083586}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7803819444444434,"recall":0.7803819444444434,"f1":0.7803819444444434,"seconds":0.00022785179316997528,"exhaustive_search_seconds":0.0004479996860027313,"evaluations":499.0234375,"distances_sum":1527.2513141388026}
KCenters.DeloneInvIndex> reached performance {"precision":0.8211805555555544,"recall":0.8211805555555544,"f1":0.8211805555555544,"seconds":0.0004069209098815918,"exhaustive_search_seconds":0.0004479996860027313,"evaluations":540.015625,"distances_sum":1517.075952551786}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7639999999999998, speedup = 1.579114307648794, eval_ratio = 0.053051999999999995)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
