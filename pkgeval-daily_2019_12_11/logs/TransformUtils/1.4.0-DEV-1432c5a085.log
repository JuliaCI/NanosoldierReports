Julia Version 1.4.0-DEV.577
Commit 1432c5a085 (2019-12-11 08:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
Status `/tmp/jl_KRqcMP/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.047947298498502204 0.0694859110188415; -0.047947298498502204 0.0 0.10078559998130798; -0.0694859110188415 -0.10078559998130798 0.0])
dAA = so3([0.0 -0.09520174166402362 -0.06872249486233437; 0.09520174166402362 0.0 -0.061408950290537036; 0.06872249486233437 0.061408950290537036 0.0])
dAA = so3([0.0 -0.04488996747410264 0.21018212187955695; 0.04488996747410264 0.0 -0.11206716753338507; -0.21018212187955695 0.11206716753338507 0.0])
dAA = Quaternion(0.9931351265656579, [-0.055526550120082445, 0.0982182796605488, -0.030864091655174335])
dAA = SO3([0.9988203735253407 -0.0037088211246121233 0.04841596923087247; 0.007818125031458876 0.9963533633052561 -0.08496382966473089; -0.04792429813457507 0.08524212618283615 0.9952070345270567])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9573107897117199 -0.2467432634843349 -0.1505782647881935; 0.22060747442443535 0.9602578240401989 -0.17098904525628084; 0.18678435193986498 0.1304709672482059 0.9736985840473027]), [-1.0078559998130798, 0.694859110188415, -0.479472984985022])
xj = SE3(SO3([0.8707148455172745 0.10389245189840479 0.4806891055915105; -0.24294069705853052 0.9407086722051824 0.23674250093863175; -0.42759265137341174 -0.32291415651299715 0.8443287108792141]), [1.1206716753338506, 2.1018212187955694, 0.4488996747410264])
Dx = SE3(SO3([0.7000825664818344 0.24666941805980977 0.6701034235864207; -0.5039171544883384 0.8355571776563023 0.2188874237579919; -0.5059168919107007 -0.49091587982165485 0.7092599646239359]), [2.52145435261448, 0.9469721868168857, 0.3428700327037081])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
