Julia Version 1.4.0-DEV.577
Commit 1432c5a085 (2019-12-11 08:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Tables ─────────────────────── v0.2.11
 Installed Conda ──────────────────────── v1.3.0
 Installed TableTraits ────────────────── v1.0.0
 Installed SpecialFunctions ───────────── v0.9.0
 Installed DataStructures ─────────────── v0.17.6
 Installed Symata ─────────────────────── v0.4.5
 Installed IterativeSolvers ───────────── v0.8.1
 Installed NumericalMethodsforEngineers ─ v1.2.0
 Installed VersionParsing ─────────────── v1.1.3
 Installed Compat ─────────────────────── v2.2.0
 Installed Polynomials ────────────────── v0.6.0
 Installed MacroTools ─────────────────── v0.5.3
 Installed Primes ─────────────────────── v0.4.0
 Installed Combinatorics ──────────────── v0.7.0
 Installed Roots ──────────────────────── v0.8.4
 Installed CategoricalArrays ──────────── v0.7.4
 Installed InvertedIndices ────────────── v1.0.0
 Installed PyCall ─────────────────────── v1.91.2
 Installed IteratorInterfaceExtensions ── v1.0.0
 Installed Formatting ─────────────────── v0.4.1
 Installed DataValueInterfaces ────────── v1.0.0
 Installed RecipesBase ────────────────── v0.7.0
 Installed DataAPI ────────────────────── v1.1.0
 Installed PooledArrays ───────────────── v0.5.2
 Installed GR ─────────────────────────── v0.44.0
 Installed JSON ───────────────────────── v0.21.0
 Installed BandedMatrices ─────────────── v0.14.2
 Installed Reexport ───────────────────── v0.2.0
 Installed Calculus ───────────────────── v0.5.1
 Installed SortingAlgorithms ──────────── v0.3.1
 Installed Missings ───────────────────── v0.4.3
 Installed DataFrames ─────────────────── v0.19.4
 Installed Memoize ────────────────────── v0.3.0
 Installed Parsers ────────────────────── v0.3.10
 Installed OpenSpecFun_jll ────────────── v0.5.3+1
 Installed ArrayLayouts ───────────────── v0.1.5
 Installed OrderedCollections ─────────── v1.1.0
 Installed QuadGK ─────────────────────── v2.3.0
 Installed FillArrays ─────────────────── v0.8.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [00e1d38a] + NumericalMethodsforEngineers v1.2.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [4c555306] + ArrayLayouts v0.1.5
  [aae01518] + BandedMatrices v0.14.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.4
  [861a8166] + Combinatorics v0.7.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [1a297f60] + FillArrays v0.8.2
  [59287772] + Formatting v0.4.1
  [28b8d3ca] + GR v0.44.0
  [41ab1584] + InvertedIndices v1.0.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.3
  [c03570c3] + Memoize v0.3.0
  [e1d29d7a] + Missings v0.4.3
  [00e1d38a] + NumericalMethodsforEngineers v1.2.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.2
  [27ebfcd6] + Primes v0.4.0
  [438e738f] + PyCall v1.91.2
  [1fd47b50] + QuadGK v2.3.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [f2b01f46] + Roots v0.8.4
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [a906b1d5] + Symata v0.4.5
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [81def892] + VersionParsing v1.1.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building GR ────→ `~/.julia/packages/GR/oiZD3/deps/build.log`
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
   Testing NumericalMethodsforEngineers
Status `/tmp/jl_Pci6sS/Manifest.toml`
  [4c555306] ArrayLayouts v0.1.5
  [aae01518] BandedMatrices v0.14.2
  [49dc2e85] Calculus v0.5.1
  [324d7699] CategoricalArrays v0.7.4
  [861a8166] Combinatorics v0.7.0
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [1a297f60] FillArrays v0.8.2
  [59287772] Formatting v0.4.1
  [28b8d3ca] GR v0.44.0
  [41ab1584] InvertedIndices v1.0.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.3
  [c03570c3] Memoize v0.3.0
  [e1d29d7a] Missings v0.4.3
  [00e1d38a] NumericalMethodsforEngineers v1.2.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.2
  [27ebfcd6] Primes v0.4.0
  [438e738f] PyCall v1.91.2
  [1fd47b50] QuadGK v2.3.0
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [f2b01f46] Roots v0.8.4
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [a906b1d5] Symata v0.4.5
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [81def892] VersionParsing v1.1.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: could not import Base.Test into Symata
WARNING: could not import Base.search into Symata
WARNING: could not import Base.next into Symata
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package sympy could not be found by pyimport. Usually this means
that you did not install sympy in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the sympy module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the sympy module, you can use `pyimport_conda("sympy", PKG)`,
where PKG is the Anaconda package the contains the module sympy,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'sympy'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
 [3] pyimport_conda at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:701 [inlined]
 [4] import_sympy() at /home/pkgeval/.julia/packages/Symata/1oDeR/src/sympy.jl:41
 [5] init_sympy() at /home/pkgeval/.julia/packages/Symata/1oDeR/src/sympy.jl:848
 [6] do_init() at /home/pkgeval/.julia/packages/Symata/1oDeR/src/Symata.jl:130
 [7] __init__() at /home/pkgeval/.julia/packages/Symata/1oDeR/src/Symata.jl:124
 [8] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:690
 [9] _require_from_serialized(::String) at ./loading.jl:741
 [10] _require(::Base.PkgId) at ./loading.jl:1032
 [11] require(::Base.PkgId) at ./loading.jl:920
 [12] require(::Module, ::Symbol) at ./loading.jl:915
 [13] include(::Module, ::String) at ./Base.jl:377
 [14] top-level scope at none:2
 [15] eval at ./boot.jl:331 [inlined]
 [16] eval(::Expr) at ./client.jl:449
 [17] top-level scope at ./none:3
during initialization of module Symata
in expression starting at /home/pkgeval/.julia/packages/NumericalMethodsforEngineers/CPlgS/src/NumericalMethodsforEngineers.jl:5
ERROR: LoadError: Failed to precompile NumericalMethodsforEngineers [00e1d38a-71a9-5665-8612-32ae585a75a3] to /home/pkgeval/.julia/compiled/v1.4/NumericalMethodsforEngineers/deVRs_osyeS.ji.
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1263
 [3] _require(::Base.PkgId) at ./loading.jl:1022
 [4] require(::Base.PkgId) at ./loading.jl:920
 [5] require(::Module, ::Symbol) at ./loading.jl:915
 [6] include(::String) at ./client.jl:439
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/NumericalMethodsforEngineers/CPlgS/test/runtests.jl:1
ERROR: Package NumericalMethodsforEngineers errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1391
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:287
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:274
 [5] #test#56 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [7] #test#55 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [11] top-level scope at none:12
