Julia Version 1.4.0-DEV.577
Commit 1432c5a085 (2019-12-11 08:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Requires â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed Reexport â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed ChainRulesCore â”€ v0.4.0
 Installed ChainRules â”€â”€â”€â”€â”€ v0.2.3
  Updating `~/.julia/environments/v1.4/Project.toml`
  [082447d4] + ChainRules v0.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [082447d4] + ChainRules v0.2.3
  [d360d2e6] + ChainRulesCore v0.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing ChainRules
 Resolving package versions...

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/mlubin/NaNMath.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaDiff/FiniteDifferences.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaMath/SpecialFunctions.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
   Cloning [efe28fd5-8261-553b-a9e1-b2916fc3738e] OpenSpecFun_jll from https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed OpenSpecFun_jll â”€â”€â”€ v0.5.3+1
   Cloning[?25l [77ba4419-2d1f-58cd-9bb1-8ffee604a2e3] NaNMath from https://github.com/mlubin/NaNMath.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
   Cloning [26cc04aa-876d-5657-8c51-4c34ba976000] FiniteDifferences from https://github.com/JuliaDiff/FiniteDifferences.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed FiniteDifferences â”€ v0.9.0
   Cloning [276daf66-3868-5448-9aa4-cd146d93841b] SpecialFunctions from https://github.com/JuliaMath/SpecialFunctions.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed SpecialFunctions â”€â”€ v0.9.0
Status `/tmp/jl_Z7anlV/Manifest.toml`
  [082447d4] ChainRules v0.2.3
  [d360d2e6] ChainRulesCore v0.4.0
  [26cc04aa] FiniteDifferences v0.9.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [276daf66] SpecialFunctions v0.9.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Method definition rrule(typeof(Base.sum), AbstractArray{#s677, N} where N where #s677<:Real) in module ChainRules at /home/pkgeval/.julia/packages/ChainRules/ziOpP/src/rulesets/Base/mapreduce.jl:61 overwritten at /home/pkgeval/.julia/packages/ChainRules/ziOpP/src/rulesets/Base/mapreduce.jl:76.
  ** incremental compilation may be fatally broken for this module **

Testing ChainRules.jl
sincos: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(sincos), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:78 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:74 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [8] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:55 [inlined]
   [9] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [10] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:3 [inlined]
   [11] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:2
  
sqrt at 6.93872911251267e-310 + 6.93872911251425e-310im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(1.4746463657433938e154 - 6.108185243952076e153im, 197.05765340445373 - 197.05765340445367im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(sqrt), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
sqrt at 6.93872911251267e-310 + 6.93872911251425e-310im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(1.4746463657433938e154 - 6.108185243952076e153im, 197.05765340445373 - 197.05765340445367im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(sqrt), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
log at 6.9387281893949e-310 + 6.938729112504e-310im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Inf - Inf*im, 1.1994628663772571e-8 - 131467.46002739188im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(log), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
log at 6.9387281893949e-310 + 6.938729112504e-310im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Inf - Inf*im, 1.1994628663772571e-8 - 131467.46002739188im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(log), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
log2 at 6.93872911251425e-310 + 1.5e-323im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Inf + NaN*im, 1.9788863743044604e-8 - 216966.16520005412im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(log2), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
log2 at 6.93872911251425e-310 + 1.5e-323im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Inf + NaN*im, 1.9788863743044604e-8 - 216966.16520005412im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(log2), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
log10 at 6.93872911251425e-310 + 1.5e-323im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Inf + NaN*im, 6.397993427978824e-9 - 69916.66403231198im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(log10), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
log10 at 6.93872911251425e-310 + 1.5e-323im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Inf + NaN*im, 6.397993427978824e-9 - 69916.66403231198im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(log10), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
angle at 1.8e-322 + 1.8e-322im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:54
  Expression: isapprox(wirtinger_primal(âˆ‚x), âˆ‚; rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(-Inf - Inf*im, -268358.569581767 - 268358.56958176696im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:54 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(angle), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
angle at 1.8e-322 + 1.8e-322im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:58
  Expression: isapprox(wirtinger_conjugate(âˆ‚x), âˆ‚Ì…; rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(-Inf + Inf*im, -268358.569581767 + 268358.56958176696im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:58 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(angle), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
angle at 1.8e-322 + 1.8e-322im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:54
  Expression: isapprox(wirtinger_primal(âˆ‚x), âˆ‚; rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(-Inf - Inf*im, -268358.569581767 - 268358.56958176696im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:54 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(angle), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
angle at 1.8e-322 + 1.8e-322im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:58
  Expression: isapprox(wirtinger_conjugate(âˆ‚x), âˆ‚Ì…; rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(-Inf + Inf*im, -268358.569581767 + 268358.56958176696im; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:58 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(angle), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
identity: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(identity), ::Float64, ::Tuple{Float64,Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:152 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:151 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:2
  
identity: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(identity), ::Array{Float64,1}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:153 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:151 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:2
  
mapreduce: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:25
  Test threw exception
  Expression: â‰ˆ(xÌ„_ad, xÌ„_fd, atol=1.0e-9, rtol=1.0e-9)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; atol=1.0e-9, rtol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#600#603"{Array{Float64,2},typeof(abs2),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:25
   [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:12
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
Vector: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,1}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(sum), ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:39
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:37
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [10] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [11] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
Matrix: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(sum), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:44
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:42
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [10] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [11] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
Array{T, 3}: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,3}, ::Tuple{Array{Float64,3}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,3}}}, ::Tuple{Array{Float64,3}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(sum), ::Float64, ::Tuple{Array{Float64,3},Array{Float64,3}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,3},Array{Float64,3}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:49
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:47
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [10] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [11] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
keyword arguments: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:65
  Test threw exception
  Expression: â‰ˆ(xÌ„_ad, xÌ„_fd, atol=1.0e-9, rtol=1.0e-9)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; atol=1.0e-9, rtol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#600#603"{Array{Float64,2},typeof(identity),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:65
   [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:58
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
 Basic: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#630#632"{Float64,ChainRules.var"#sum_pullback#622"{ChainRules.var"#sum_pullback#620"{ChainRules.var"#mapreduce_pullback#602"{typeof(identity),Array{Float64,1}}}},Int64}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(mean), ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:6
   [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:6
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:2
  
with dims kwargs: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:31
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-9, atol=1.0e-9)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:31
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:25
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:2
  
 inv: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(inv), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:37 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:34 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
det: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#724#726"{Float64,Array{Float64,2},Float64}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(det), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:43 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:40 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
logdet: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#728#730"{Float64,Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(logdet), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:49 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:46 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
tr: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#732#734"{Float64,Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(tr), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:54 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:52 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
Matrix: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:195
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#755#758"{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}([-0.9827718177516547 -3.049187087985662 -0.45753014518031915 0.049550548181828; -1.1457095184571038 -1.281790532097414 -0.7991285413217107 -0.8913053693383933; 0.25819205428715203 2.8015194483397003 1.0753460926351635 -0.7053146611866707; -2.282547976724439 0.5639614209301308 -0.5569593865129592 1.3970437844025363], [-0.34807928510100733 0.8718983568753548 -1.3002596896606895 -0.4385362125324239; -0.19506959830062723 -0.007206357093314457 -1.0059040824152614 -0.09173118968880091; -0.5497606187369344 -0.6163495955240155 0.6796485760534101 1.22561207137653; 1.0808323747949233 -0.5801739513350528 -0.043207370167515954 -0.232131676978592; -2.2125060475463463 -1.5612897485472592 -0.039839626218822005 -1.2139396904067505], [-0.23690460123730323 -1.7170129974387656 1.604831121738095 -0.330419660506073; -0.3827075659919168 -2.446261897220929 1.7480788262457672 -0.2672312785080624; -1.9688978438045297 -0.26713540122649804 0.9166815687612451 1.200964147356692; -1.5797479817238906 0.6778692338783507 1.1341703209400371 1.3170491877286854; -0.5654974841550139 -0.1689008828898645 -2.1775754411288144 0.6023924017880021], [-0.3162341605832586 0.4410185608089526 0.6775190618538066 0.3336809981458051; 1.7116615245412652 0.35751648886194604 -0.8628870265065961 -1.195470375407145; 1.2683824885596202 2.106437022846627 -2.341581668062198 -0.3755709619578594; -1.272062789754402 -1.1597991843364066 1.7767909510594972 0.4986289544382589]))
, [0.26686096499751677 0.13347269753366897 0.3196430110849233 0.8419908676476237; 0.6559056115790607 3.0495029976204893 3.2920065204492985 -3.2227056808361954; â€¦ ; 0.3666734338983696 0.73123403794996 2.6655741007828295 -0.8833723751836531; -0.28814178663132756 -1.708809012952866 -1.9517852999988166 1.5653470879092373]; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Vararg{Tuple{Array{Float64,2},Array{Float64,2}},N} where N; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:195
 [2] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:175
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:74 [inlined]
 [4] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:70 [inlined]
 [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:67 [inlined]
 [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
 [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
Diagonal: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#772#774"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:4 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:3 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Diagonal: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#772#774"{Diagonal{Float64,Array{Float64,1}}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:6 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:3 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Diagonal: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#772#774"{Diagonal{Float64,Array{Float64,1}}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:8 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:3 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(diag), ::Array{Float64,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:21 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(diag), ::Array{Float64,1}, ::Tuple{Diagonal{Float64,Array{Float64,1}},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:22 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(diag), ::Array{Float64,1}, ::Tuple{Array{Float64,2},Diagonal{Float64,Array{Float64,1}}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:23 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(diag), ::Array{Float64,1}, ::Tuple{Diagonal{Float64,Array{Float64,1}},Diagonal{Float64,Array{Float64,1}}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:24 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Symmetric: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#783#785"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:28 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:27 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Adjoint{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#786#788"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Adjoint{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#789#791"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Adjoint{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#792#794"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(adjoint), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Adjoint{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#795#797"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(adjoint), ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Transpose{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#798#800"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Transpose{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#801#803"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Transpose{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#804#806"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(transpose), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Transpose{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#807#809"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::typeof(transpose), ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124 [inlined]
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
UpperTriangular: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#810#812"{UpperTriangular{Float64,Array{Float64,2}}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::UpperTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Type, ::UpperTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:40 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:37 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
LowerTriangular: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] isapprox(::Thunk{ChainRules.var"#813#815"{LowerTriangular{Float64,Array{Float64,2}}}}, ::Tuple{Array{Float64,2}}; kwargs::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [3] rrule_test(::Type, ::LowerTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [4] rrule_test(::Type, ::LowerTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:40 [inlined]
   [6] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:37 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:1570
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
 erfcinv at 6.9387302178316e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  DomainError with -0.012863452771074375:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#576 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#580 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:241
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
erfcinv at 6.9387302178316e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  DomainError with -0.012863452771074375:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#576 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#580 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:241
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
bessely0 at 6.9387302178316e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  DomainError with -0.012729836536354906:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:160 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#576 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#580 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:241
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
bessely0 at 6.9387302178316e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  DomainError with -0.012729836536354906:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:160 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:397
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#576 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#580 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:241
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
bessely1 at 6.9387302178316e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
bessely1 at 6.9387302178316e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
gamma at 6.9387302178316e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
gamma at 6.9387302178316e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
digamma at 6.9387302178316e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
digamma at 6.9387302178316e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
trigamma at 6.9387302178316e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
trigamma at 6.9387302178316e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44
  Test threw exception
  Expression: isapprox(âˆ‚x, fdm(f, x); rtol=rtol, atol=atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:44 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  
dawson at 6.93872235816573e-310 - 3.105036184601418e231im, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(dawson),Complex{Float64}}, ::Int64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(dawson),Complex{Float64}}, ::Int64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Int64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(dawson), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [10] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [11] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:17 [inlined]
   [12] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [13] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [14] include(::String) at ./client.jl:439
   [15] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [22] include(::String) at ./client.jl:439
   [23] top-level scope at none:6
   [24] eval(::Module, ::Any) at ./boot.jl:331
   [25] exec_options(::Base.JLOptions) at ./client.jl:264
   [26] _start() at ./client.jl:484
  
dawson at 6.93872235816573e-310 - 3.105036184601418e231im, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(dawson),Complex{Float64}}, ::Int64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(dawson),Complex{Float64}}, ::Int64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Int64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(dawson), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [10] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [11] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:17 [inlined]
   [12] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [13] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [14] include(::String) at ./client.jl:439
   [15] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [22] include(::String) at ./client.jl:439
   [23] top-level scope at none:6
   [24] eval(::Module, ::Any) at ./boot.jl:331
   [25] exec_options(::Base.JLOptions) at ./client.jl:264
   [26] _start() at ./client.jl:484
  
bessely0 at 6.93872235816573e-310 - 3.105036184601418e231im, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  AmosException with id 4: input argument magnitude too large, complete loss of accuracy by argument reduction.
  Stacktrace:
   [1] _bessely(::Float64, ::Complex{Float64}, ::Int32) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:260
   [2] bessely(::Float64, ::Complex{Float64}) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:378
   [3] bessely at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:503 [inlined]
   [4] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:173 [inlined]
   [5] rrule(::typeof(bessely0), ::Complex{Float64}) at /home/pkgeval/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:207
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:27 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [8] test_scalar(::typeof(bessely0), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [9] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [10] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:29 [inlined]
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [13] include(::String) at ./client.jl:439
   [14] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [21] include(::String) at ./client.jl:439
   [22] top-level scope at none:6
   [23] eval(::Module, ::Any) at ./boot.jl:331
   [24] exec_options(::Base.JLOptions) at ./client.jl:264
   [25] _start() at ./client.jl:484
  
bessely0 at 6.93872235816573e-310 - 3.105036184601418e231im, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  AmosException with id 4: input argument magnitude too large, complete loss of accuracy by argument reduction.
  Stacktrace:
   [1] _bessely(::Float64, ::Complex{Float64}, ::Int32) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:260
   [2] bessely(::Float64, ::Complex{Float64}) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:378
   [3] bessely at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:503 [inlined]
   [4] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:173 [inlined]
   [5] frule(::typeof(bessely0), ::Complex{Float64}) at /home/pkgeval/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:178
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:27 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [8] test_scalar(::typeof(bessely0), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [9] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [10] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:29 [inlined]
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [13] include(::String) at ./client.jl:439
   [14] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [21] include(::String) at ./client.jl:439
   [22] top-level scope at none:6
   [23] eval(::Module, ::Any) at ./boot.jl:331
   [24] exec_options(::Base.JLOptions) at ./client.jl:264
   [25] _start() at ./client.jl:484
  
bessely1 at 6.93872235816573e-310 - 3.105036184601418e231im, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  AmosException with id 4: input argument magnitude too large, complete loss of accuracy by argument reduction.
  Stacktrace:
   [1] _bessely(::Float64, ::Complex{Float64}, ::Int32) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:260
   [2] bessely(::Float64, ::Complex{Float64}) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:378
   [3] bessely at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:503 [inlined]
   [4] bessely1 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:173 [inlined]
   [5] rrule(::typeof(bessely1), ::Complex{Float64}) at /home/pkgeval/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:207
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:27 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [8] test_scalar(::typeof(bessely1), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [9] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [10] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:30 [inlined]
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [13] include(::String) at ./client.jl:439
   [14] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [21] include(::String) at ./client.jl:439
   [22] top-level scope at none:6
   [23] eval(::Module, ::Any) at ./boot.jl:331
   [24] exec_options(::Base.JLOptions) at ./client.jl:264
   [25] _start() at ./client.jl:484
  
bessely1 at 6.93872235816573e-310 - 3.105036184601418e231im, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  AmosException with id 4: input argument magnitude too large, complete loss of accuracy by argument reduction.
  Stacktrace:
   [1] _bessely(::Float64, ::Complex{Float64}, ::Int32) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:260
   [2] bessely(::Float64, ::Complex{Float64}) at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:378
   [3] bessely at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:503 [inlined]
   [4] bessely1 at /home/pkgeval/.julia/packages/SpecialFunctions/O3MVw/src/bessel.jl:173 [inlined]
   [5] frule(::typeof(bessely1), ::Complex{Float64}) at /home/pkgeval/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:178
   [6] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:27 [inlined]
   [7] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [8] test_scalar(::typeof(bessely1), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [9] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [10] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:30 [inlined]
   [11] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [13] include(::String) at ./client.jl:439
   [14] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [15] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [17] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [19] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [21] include(::String) at ./client.jl:439
   [22] top-level scope at none:6
   [23] eval(::Module, ::Any) at ./boot.jl:331
   [24] exec_options(::Base.JLOptions) at ./client.jl:264
   [25] _start() at ./client.jl:484
  
trigamma at 6.93876752439254e-310 + 0.0im, rrule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30
  Expression: fx == f(x)
   Evaluated: Inf + NaN*im == Inf + NaN*im
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(trigamma), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
trigamma at 6.93876752439254e-310 + 0.0im, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(trigamma),Complex{Float64}}, ::Int64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(trigamma),Complex{Float64}}, ::Int64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Int64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [10] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [11] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:33 [inlined]
   [12] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [13] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [14] include(::String) at ./client.jl:439
   [15] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [22] include(::String) at ./client.jl:439
   [23] top-level scope at none:6
   [24] eval(::Module, ::Any) at ./boot.jl:331
   [25] exec_options(::Base.JLOptions) at ./client.jl:264
   [26] _start() at ./client.jl:484
  
trigamma at 6.93876752439254e-310 + 0.0im, frule: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30
  Expression: fx == f(x)
   Evaluated: Inf + NaN*im == Inf + NaN*im
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
 [3] test_scalar(::typeof(trigamma), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
trigamma at 6.93876752439254e-310 + 0.0im, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
  Got exception outside of a @test
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(trigamma),Complex{Float64}}, ::Int64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:225
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::var"#4#6"{typeof(trigamma),Complex{Float64}}, ::Int64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Int64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:274 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50 [inlined]
   [8] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, test_wirtinger::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:26
   [10] test_scalar at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:24 [inlined]
   [11] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:33 [inlined]
   [12] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1189 [inlined]
   [13] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:0
   [14] include(::String) at ./client.jl:439
   [15] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:52 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:51 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:26 [inlined]
   [20] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:23
   [22] include(::String) at ./client.jl:439
   [23] top-level scope at none:6
   [24] eval(::Module, ::Any) at ./boot.jl:331
   [25] exec_options(::Base.JLOptions) at ./client.jl:264
   [26] _start() at ./client.jl:484
  
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = rrule(::typeof(lgamma), ::Float64) at rule_definition_tools.jl:207
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:207
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = macro expansion at test_util.jl:30 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Float64, ::Val{true}) at methods.jl:222
â”” @ FiniteDifferences ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = frule(::typeof(lgamma), ::Float64) at rule_definition_tools.jl:178
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:178
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(logabsgamma), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:56 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:40
  
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(logabsgamma), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:56 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:40
  
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:258
   [2] rrule_test(::typeof(logabsgamma), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] macro expansion at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:56 [inlined]
   [5] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:40
  
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = rrule(::typeof(lgamma), ::Complex{Float64}) at rule_definition_tools.jl:207
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:207
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = macro expansion at test_util.jl:30 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = frule(::typeof(lgamma), ::Complex{Float64}) at rule_definition_tools.jl:178
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:178
Test Summary:                                                              | Pass  Fail  Error  Total
ChainRules                                                                 | 7476    15     82   7573
  helper functions                                                         |   12                  12
  rulesets                                                                 | 7464    15     82   7561
    Base                                                                   | 1435    12      8   1455
      base                                                                 | 1268    12      3   1283
        Trig                                                               |  568            1    569
          Basics                                                           |   56                  56
          Basics                                                           |   72                  72
          Hyperbolic                                                       |   42                  42
          Hyperbolic                                                       |   54                  54
          Degrees                                                          |   42                  42
          Inverses                                                         |   42                  42
          Inverses                                                         |   54                  54
          Inverse hyperbolic                                               |   42                  42
          Inverse hyperbolic                                               |   54                  54
          Inverse degrees                                                  |   42                  42
          Inverse degrees                                                  |   54                  54
          Multivariate                                                     |   14            1     15
            atan2                                                          |    5                   5
            sincos                                                         |    9            1     10
        math                                                               |  303     8           311
          deg2rad at -0.1, rrule                                           |    4                   4
          deg2rad at -0.1, frule                                           |    3                   3
          rad2deg at -0.1, rrule                                           |    4                   4
          rad2deg at -0.1, frule                                           |    3                   3
          inv at -0.1, rrule                                               |    4                   4
          inv at -0.1, frule                                               |    3                   3
          exp at -0.1, rrule                                               |    4                   4
          exp at -0.1, frule                                               |    3                   3
          exp2 at -0.1, rrule                                              |    4                   4
          exp2 at -0.1, frule                                              |    3                   3
          exp10 at -0.1, rrule                                             |    4                   4
          exp10 at -0.1, frule                                             |    3                   3
          cbrt at -0.1, rrule                                              |    4                   4
          cbrt at -0.1, frule                                              |    3                   3
          deg2rad at 6.4, rrule                                            |    4                   4
          deg2rad at 6.4, frule                                            |    3                   3
          rad2deg at 6.4, rrule                                            |    4                   4
          rad2deg at 6.4, frule                                            |    3                   3
          inv at 6.4, rrule                                                |    4                   4
          inv at 6.4, frule                                                |    3                   3
          exp at 6.4, rrule                                                |    4                   4
          exp at 6.4, frule                                                |    3                   3
          exp2 at 6.4, rrule                                               |    4                   4
          exp2 at 6.4, frule                                               |    3                   3
          exp10 at 6.4, rrule                                              |    4                   4
          exp10 at 6.4, frule                                              |    3                   3
          cbrt at 6.4, rrule                                               |    4                   4
          cbrt at 6.4, frule                                               |    3                   3
          sqrt at 6.4, rrule                                               |    4                   4
          sqrt at 6.4, frule                                               |    3                   3
          log at 6.4, rrule                                                |    4                   4
          log at 6.4, frule                                                |    3                   3
          log2 at 6.4, rrule                                               |    4                   4
          log2 at 6.4, frule                                               |    3                   3
          log10 at 6.4, rrule                                              |    4                   4
          log10 at 6.4, frule                                              |    3                   3
          log1p at 6.4, rrule                                              |    4                   4
          log1p at 6.4, frule                                              |    3                   3
          deg2rad at 1.0 + 0.5im, rrule                                    |    5                   5
          deg2rad at 1.0 + 0.5im, frule                                    |    4                   4
          rad2deg at 1.0 + 0.5im, rrule                                    |    5                   5
          rad2deg at 1.0 + 0.5im, frule                                    |    4                   4
          inv at 1.0 + 0.5im, rrule                                        |    5                   5
          inv at 1.0 + 0.5im, frule                                        |    4                   4
          exp at 1.0 + 0.5im, rrule                                        |    5                   5
          exp at 1.0 + 0.5im, frule                                        |    4                   4
          exp2 at 6.93872911251267e-310 + 6.93872911251425e-310im, rrule   |    5                   5
          exp2 at 6.93872911251267e-310 + 6.93872911251425e-310im, frule   |    4                   4
          exp10 at 6.93872911251267e-310 + 6.93872911251425e-310im, rrule  |    5                   5
          exp10 at 6.93872911251267e-310 + 6.93872911251425e-310im, frule  |    4                   4
          sqrt at 6.93872911251267e-310 + 6.93872911251425e-310im, rrule   |    3     1             4
          sqrt at 6.93872911251267e-310 + 6.93872911251425e-310im, frule   |    2     1             3
          log at 6.9387281893949e-310 + 6.938729112504e-310im, rrule       |    3     1             4
          log at 6.9387281893949e-310 + 6.938729112504e-310im, frule       |    2     1             3
          log2 at 6.93872911251425e-310 + 1.5e-323im, rrule                |    3     1             4
          log2 at 6.93872911251425e-310 + 1.5e-323im, frule                |    2     1             3
          log10 at 6.93872911251425e-310 + 1.5e-323im, rrule               |    3     1             4
          log10 at 6.93872911251425e-310 + 1.5e-323im, frule               |    2     1             3
          log1p at 6.93872911251425e-310 + 1.5e-323im, rrule               |    4                   4
          log1p at 6.93872911251425e-310 + 1.5e-323im, frule               |    3                   3
          deg2rad at -10.0 + 0.0im, rrule                                  |    5                   5
          deg2rad at -10.0 + 0.0im, frule                                  |    4                   4
          rad2deg at -10.0 + 0.0im, rrule                                  |    5                   5
          rad2deg at -10.0 + 0.0im, frule                                  |    4                   4
          inv at -10.0 + 0.0im, rrule                                      |    5                   5
          inv at -10.0 + 0.0im, frule                                      |    4                   4
          exp at -10.0 + 0.0im, rrule                                      |    5                   5
          exp at -10.0 + 0.0im, frule                                      |    4                   4
          exp2 at -10.0 + 0.0im, rrule                                     |    5                   5
          exp2 at -10.0 + 0.0im, frule                                     |    4                   4
          exp10 at -10.0 + 0.0im, rrule                                    |    5                   5
          exp10 at -10.0 + 0.0im, frule                                    |    4                   4
          sqrt at -10.0 + 0.0im, rrule                                     |    4                   4
          sqrt at -10.0 + 0.0im, frule                                     |    3                   3
          log at -10.0 + 0.0im, rrule                                      |    4                   4
          log at -10.0 + 0.0im, frule                                      |    3                   3
          log2 at -10.0 + 0.0im, rrule                                     |    4                   4
          log2 at -10.0 + 0.0im, frule                                     |    3                   3
          log10 at -10.0 + 0.0im, rrule                                    |    4                   4
          log10 at -10.0 + 0.0im, frule                                    |    3                   3
          log1p at -10.0 + 0.0im, rrule                                    |    4                   4
          log1p at -10.0 + 0.0im, frule                                    |    3                   3
        Unary complex functions                                            |  220     4           224
          real at -4.1, rrule                                              |    4                   4
          real at -4.1, frule                                              |    3                   3
          imag at -4.1, rrule                                              |    4                   4
          imag at -4.1, frule                                              |    3                   3
          abs at -4.1, rrule                                               |    4                   4
          abs at -4.1, frule                                               |    3                   3
          hypot at -4.1, rrule                                             |    4                   4
          hypot at -4.1, frule                                             |    3                   3
          angle at -4.1, rrule                                             |    4                   4
          angle at -4.1, frule                                             |    3                   3
          abs2 at -4.1, rrule                                              |    4                   4
          abs2 at -4.1, frule                                              |    3                   3
          conj at -4.1, rrule                                              |    4                   4
          conj at -4.1, frule                                              |    3                   3
          real at 6.4, rrule                                               |    4                   4
          real at 6.4, frule                                               |    3                   3
          imag at 6.4, rrule                                               |    4                   4
          imag at 6.4, frule                                               |    3                   3
          abs at 6.4, rrule                                                |    4                   4
          abs at 6.4, frule                                                |    3                   3
          hypot at 6.4, rrule                                              |    4                   4
          hypot at 6.4, frule                                              |    3                   3
          angle at 6.4, rrule                                              |    4                   4
          angle at 6.4, frule                                              |    3                   3
          abs2 at 6.4, rrule                                               |    4                   4
          abs2 at 6.4, frule                                               |    3                   3
          conj at 6.4, rrule                                               |    4                   4
          conj at 6.4, frule                                               |    3                   3
          real at 1.0 + 0.5im, rrule                                       |    5                   5
          real at 1.0 + 0.5im, frule                                       |    4                   4
          imag at 1.0 + 0.5im, rrule                                       |    5                   5
          imag at 1.0 + 0.5im, frule                                       |    4                   4
          abs at 1.0 + 0.5im, rrule                                        |    5                   5
          abs at 1.0 + 0.5im, frule                                        |    4                   4
          hypot at 1.0 + 0.5im, rrule                                      |    5                   5
          hypot at 1.0 + 0.5im, frule                                      |    4                   4
          angle at 1.8e-322 + 1.8e-322im, rrule                            |    3     2             5
          angle at 1.8e-322 + 1.8e-322im, frule                            |    2     2             4
          abs2 at 1.8e-322 + 1.8e-322im, rrule                             |    5                   5
          abs2 at 1.8e-322 + 1.8e-322im, frule                             |    4                   4
          conj at 1.8e-322 + 1.8e-322im, rrule                             |    5                   5
          conj at 1.8e-322 + 1.8e-322im, frule                             |    4                   4
          real at -10.0 + 1.5im, rrule                                     |    5                   5
          real at -10.0 + 1.5im, frule                                     |    4                   4
          imag at -10.0 + 1.5im, rrule                                     |    5                   5
          imag at -10.0 + 1.5im, frule                                     |    4                   4
          abs at -10.0 + 1.5im, rrule                                      |    5                   5
          abs at -10.0 + 1.5im, frule                                      |    4                   4
          hypot at -10.0 + 1.5im, rrule                                    |    5                   5
          hypot at -10.0 + 1.5im, frule                                    |    4                   4
          angle at -10.0 + 1.5im, rrule                                    |    5                   5
          angle at -10.0 + 1.5im, frule                                    |    4                   4
          abs2 at -10.0 + 1.5im, rrule                                     |    5                   5
          abs2 at -10.0 + 1.5im, frule                                     |    4                   4
          conj at -10.0 + 1.5im, rrule                                     |    5                   5
          conj at -10.0 + 1.5im, frule                                     |    4                   4
        *(x, y)                                                            |   16                  16
        binary trig (hypot)                                                |   16                  16
        binary trig (atan)                                                 |   16                  16
        identity                                                           |   17            2     19
        Constants                                                          |   14                  14
        Constants                                                          |   14                  14
        Constants                                                          |   18                  18
        Constants                                                          |   18                  18
        Constants                                                          |   18                  18
        sign                                                               |   30                  30
      reshape                                                              |    9                   9
      hcat                                                                 |    5                   5
      vcat                                                                 |    5                   5
      fill                                                                 |    8                   8
      Maps and Reductions                                                  |  132            5    137
        map                                                                |   33                  33
        mapreduce                                                          |   13            1     14
        mapfoldl                                                           |   13                  13
        mapfoldr                                                           |   13                  13
        sum                                                                |   60            4     64
          Vector                                                           |   12            1     13
          Matrix                                                           |   12            1     13
          Array{T, 3}                                                      |   12            1     13
          function argument                                                |   24                  24
          keyword arguments                                                |                 1      1
      broadcast                                                            |    8                   8
    Statistics                                                             |   22            2     24
      mean                                                                 |   22            2     24
        Basic                                                              |   10            1     11
        with function arg                                                  |   12                  12
        with dims kwargs                                                   |                 1      1
    LinearAlgebra                                                          | 5136     1     49   5186
      linalg                                                               | 1298     1      4   1303
        dot                                                                |   66                  66
        inv                                                                |   12            1     13
        det                                                                |   12            1     13
        logdet                                                             |   12            1     13
        tr                                                                 |   12            1     13
        *                                                                  |  500                 500
        /                                                                  |  260                 260
        \                                                                  |  359     1           360
          Matrix                                                           |  179     1           180
          Vector                                                           |   20                  20
          Diagonal on LHS                                                  |   40                  40
          UpperTriangular on LHS                                           |   40                  40
          LowerTriangular on LHS                                           |   40                  40
          Matrix \ Vector                                                  |   20                  20
          Vector \ Matrix                                                  |   20                  20
        norm                                                               |   65                  65
      Structured Matrices                                                  |  200           18    218
        Diagonal                                                           |   30            3     33
        ::Diagonal * ::AbstractVector                                      |   20                  20
        diag                                                               |   40            4     44
        Symmetric                                                          |   10            1     11
        Adjoint                                                            |   20            2     22
        adjoint                                                            |   20            2     22
        Transpose                                                          |   20            2     22
        transpose                                                          |   20            2     22
        UpperTriangular                                                    |   10            1     11
        LowerTriangular                                                    |   10            1     11
      Factorizations                                                       |  128           27    155
        svd                                                                |  102           27    129
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          Vt                                                               |    1                   1
          accumulate!                                                      |    9                   9
          Helper functions                                                 |    3                   3
        cholesky                                                           |   26                  26
      BLAS                                                                 | 3510                3510
    packages                                                               |  871     2     23    896
      SpecialFunctions                                                     |  119                 119
      SpecialFunctions                                                     |   84                  84
      SpecialFunctions                                                     |   84                  84
      SpecialFunctions                                                     |  121           12    133
        erf at 0.5, rrule                                                  |    4                   4
        erf at 0.5, frule                                                  |    3                   3
        erfc at 0.5, rrule                                                 |    4                   4
        erfc at 0.5, frule                                                 |    3                   3
        erfi at 0.5, rrule                                                 |    4                   4
        erfi at 0.5, frule                                                 |    3                   3
        airyai at 0.5, rrule                                               |    4                   4
        airyai at 0.5, frule                                               |    3                   3
        airyaiprime at 0.5, rrule                                          |    4                   4
        airyaiprime at 0.5, frule                                          |    3                   3
        airybi at 0.5, rrule                                               |    4                   4
        airybi at 0.5, frule                                               |    3                   3
        airybiprime at 0.5, rrule                                          |    4                   4
        airybiprime at 0.5, frule                                          |    3                   3
        besselj0 at 6.9387302001875e-310, rrule                            |    4                   4
        besselj0 at 6.9387302001875e-310, frule                            |    3                   3
        besselj1 at 6.9387302001875e-310, rrule                            |    4                   4
        besselj1 at 6.9387302001875e-310, frule                            |    3                   3
        erfcx at 6.9387302001875e-310, rrule                               |    4                   4
        erfcx at 6.9387302001875e-310, frule                               |    3                   3
        dawson at 6.9387302001875e-310, rrule                              |    4                   4
        dawson at 6.9387302001875e-310, frule                              |    3                   3
        invdigamma at 6.9387302001875e-310, rrule                          |    4                   4
        invdigamma at 6.9387302001875e-310, frule                          |    3                   3
        erfinv at 6.9387302001875e-310, rrule                              |    4                   4
        erfinv at 6.9387302001875e-310, frule                              |    3                   3
        erfcinv at 6.9387302178316e-310, rrule                             |    3            1      4
        erfcinv at 6.9387302178316e-310, frule                             |    2            1      3
        bessely0 at 6.9387302178316e-310, rrule                            |    3            1      4
        bessely0 at 6.9387302178316e-310, frule                            |    2            1      3
        bessely1 at 6.9387302178316e-310, rrule                            |    3            1      4
        bessely1 at 6.9387302178316e-310, frule                            |    2            1      3
        gamma at 6.9387302178316e-310, rrule                               |    3            1      4
        gamma at 6.9387302178316e-310, frule                               |    2            1      3
        digamma at 6.9387302178316e-310, rrule                             |    3            1      4
        digamma at 6.9387302178316e-310, frule                             |    2            1      3
        trigamma at 6.9387302178316e-310, rrule                            |    3            1      4
        trigamma at 6.9387302178316e-310, frule                            |    2            1      3
      SpecialFunctions                                                     |  119                 119
      SpecialFunctions                                                     |   84                  84
      SpecialFunctions                                                     |  116     2      8    126
        erf at 1.5 + 0.7im, rrule                                          |    5                   5
        erf at 1.5 + 0.7im, frule                                          |    4                   4
        erfc at 1.5 + 0.7im, rrule                                         |    5                   5
        erfc at 1.5 + 0.7im, frule                                         |    4                   4
        erfi at 1.5 + 0.7im, rrule                                         |    5                   5
        erfi at 1.5 + 0.7im, frule                                         |    4                   4
        airyai at 6.9387256592357e-310 + 2.0e-323im, rrule                 |    5                   5
        airyai at 6.9387256592357e-310 + 2.0e-323im, frule                 |    4                   4
        airyaiprime at 6.9387256592357e-310 + 2.0e-323im, rrule            |    5                   5
        airyaiprime at 6.9387256592357e-310 + 2.0e-323im, frule            |    4                   4
        airybi at 6.9387256592357e-310 + 2.0e-323im, rrule                 |    5                   5
        airybi at 6.9387256592357e-310 + 2.0e-323im, frule                 |    4                   4
        airybiprime at 6.9387251487062e-310 + 1.0e-323im, rrule            |    5                   5
        airybiprime at 6.9387251487062e-310 + 1.0e-323im, frule            |    4                   4
        besselj0 at 6.9387251487062e-310 + 1.0e-323im, rrule               |    5                   5
        besselj0 at 6.9387251487062e-310 + 1.0e-323im, frule               |    4                   4
        besselj1 at 6.9387251487062e-310 + 1.0e-323im, rrule               |    5                   5
        besselj1 at 6.9387251487062e-310 + 1.0e-323im, frule               |    4                   4
        erfcx at 6.93872235816573e-310 - 3.105036184601418e231im, rrule    |    5                   5
        erfcx at 6.93872235816573e-310 - 3.105036184601418e231im, frule    |    4                   4
        dawson at 6.93872235816573e-310 - 3.105036184601418e231im, rrule   |    3            1      4
        dawson at 6.93872235816573e-310 - 3.105036184601418e231im, frule   |    2            1      3
        bessely0 at 6.93872235816573e-310 - 3.105036184601418e231im, rrule |                 1      1
        bessely0 at 6.93872235816573e-310 - 3.105036184601418e231im, frule |                 1      1
        bessely1 at 6.93872235816573e-310 - 3.105036184601418e231im, rrule |                 1      1
        bessely1 at 6.93872235816573e-310 - 3.105036184601418e231im, frule |                 1      1
        gamma at 6.93872235816573e-310 - 3.105036184601418e231im, rrule    |    5                   5
        gamma at 6.93872235816573e-310 - 3.105036184601418e231im, frule    |    4                   4
        digamma at 6.93872235816573e-310 - 3.105036184601418e231im, rrule  |    5                   5
        digamma at 6.93872235816573e-310 - 3.105036184601418e231im, frule  |    4                   4
        trigamma at 6.93876752439254e-310 + 0.0im, rrule                   |    2     1      1      4
        trigamma at 6.93876752439254e-310 + 0.0im, frule                   |    1     1      1      3
      log gamma and co                                                     |  144            3    147
        lgamma at 1.5, rrule                                               |    4                   4
        lgamma at 1.5, frule                                               |    3                   3
        loggamma at 1.5, rrule                                             |    4                   4
        loggamma at 1.5, frule                                             |    3                   3
        lgamma at 2.5, rrule                                               |    4                   4
        lgamma at 2.5, frule                                               |    3                   3
        loggamma at 2.5, rrule                                             |    4                   4
        loggamma at 2.5, frule                                             |    3                   3
        lgamma at 10.5, rrule                                              |    4                   4
        lgamma at 10.5, frule                                              |    3                   3
        loggamma at 10.5, rrule                                            |    4                   4
        loggamma at 10.5, frule                                            |    3                   3
        lgamma at -0.6, rrule                                              |    4                   4
        lgamma at -0.6, frule                                              |    3                   3
        lgamma at -2.6, rrule                                              |    4                   4
        lgamma at -2.6, frule                                              |    3                   3
        lgamma at -3.3, rrule                                              |    4                   4
        lgamma at -3.3, frule                                              |    3                   3
        lgamma at 1.6 + 1.6im, rrule                                       |    5                   5
        lgamma at 1.6 + 1.6im, frule                                       |    4                   4
        loggamma at 1.6 + 1.6im, rrule                                     |    5                   5
        loggamma at 1.6 + 1.6im, frule                                     |    4                   4
        lgamma at 1.6 - 1.6im, rrule                                       |    5                   5
        lgamma at 1.6 - 1.6im, frule                                       |    4                   4
        loggamma at 1.6 - 1.6im, rrule                                     |    5                   5
        loggamma at 1.6 - 1.6im, frule                                     |    4                   4
        lgamma at -4.6 + 1.6im, rrule                                      |    5                   5
        lgamma at -4.6 + 1.6im, frule                                      |    4                   4
        loggamma at -4.6 + 1.6im, rrule                                    |    5                   5
        loggamma at -4.6 + 1.6im, frule                                    |    4                   4
ERROR: LoadError: Some tests did not pass: 7476 passed, 15 failed, 82 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:22
ERROR: Package ChainRules errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1391
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:287
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:274
 [5] #test#56 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [7] #test#55 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [11] top-level scope at none:12
