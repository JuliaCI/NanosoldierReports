Julia Version 1.4.0-DEV.666
Commit 2835347ff0 (2019-12-26 15:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ────────────── v1.1.0
 Installed Reexport ───────────── v0.2.0
 Installed OrderedCollections ─── v1.1.0
 Installed MutableArithmetics ─── v0.1.1
 Installed Syslogs ────────────── v0.3.0
 Installed PowerModelsAnalytics ─ v0.2.0
 Installed JSON ───────────────── v0.21.0
 Installed ForwardDiff ────────── v0.10.8
 Installed Conda ──────────────── v1.3.0
 Installed OpenSpecFun_jll ────── v0.5.3+1
 Installed Inflate ────────────── v0.1.1
 Installed Missings ───────────── v0.4.3
 Installed ColorVectorSpace ───── v0.7.1
 Installed Plots ──────────────── v0.28.4
 Installed Requires ───────────── v1.0.0
 Installed MathOptInterface ───── v0.9.8
 Installed LightGraphs ────────── v1.3.0
 Installed SimpleTraits ───────── v0.9.1
 Installed DiffRules ──────────── v1.0.0
 Installed PyCall ─────────────── v1.91.2
 Installed BinaryProvider ─────── v0.5.8
 Installed FixedPointNumbers ──── v0.6.1
 Installed GR ─────────────────── v0.44.0
 Installed BenchmarkTools ─────── v0.4.3
 Installed Contour ────────────── v0.5.1
 Installed DataStructures ─────── v0.17.6
 Installed EzXML ──────────────── v0.9.5
 Installed MacroTools ─────────── v0.5.3
 Installed JuMP ───────────────── v0.20.1
 Installed ArnoldiMethod ──────── v0.0.4
 Installed Showoff ────────────── v0.3.1
 Installed PlotUtils ──────────── v0.6.1
 Installed Mocking ────────────── v0.7.0
 Installed SpecialFunctions ───── v0.9.0
 Installed Colors ─────────────── v0.9.6
 Installed TimeZones ──────────── v0.10.3
 Installed FFMPEG ─────────────── v0.2.4
 Installed Measures ───────────── v0.3.1
 Installed Calculus ───────────── v0.5.1
 Installed PowerModels ────────── v0.13.1
 Installed StaticArrays ───────── v0.12.1
 Installed StatsBase ──────────── v0.32.0
 Installed ColorTypes ─────────── v0.8.1
 Installed CommonSubexpressions ─ v0.2.0
 Installed Memento ────────────── v0.12.1
 Installed GeometryTypes ──────── v0.7.6
 Installed NaNMath ────────────── v0.3.3
 Installed VersionParsing ─────── v1.2.0
 Installed Compat ─────────────── v2.2.0
 Installed Parsers ────────────── v0.3.10
 Installed InfrastructureModels ─ v0.3.2
 Installed IterTools ──────────── v1.3.0
 Installed SortingAlgorithms ──── v0.3.1
 Installed PlotThemes ─────────── v1.0.1
 Installed DiffResults ────────── v1.0.2
 Installed RecipesBase ────────── v0.7.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [7425d11c] + PowerModelsAnalytics v0.2.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.0.4
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [49dc2e85] + Calculus v0.5.1
  [3da002f7] + ColorTypes v0.8.1
  [c3611d14] + ColorVectorSpace v0.7.1
  [5ae59095] + Colors v0.9.6
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [d38c429a] + Contour v0.5.1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [8f5d6c58] + EzXML v0.9.5
  [c87230d0] + FFMPEG v0.2.4
  [53c48c17] + FixedPointNumbers v0.6.1
  [f6369f11] + ForwardDiff v0.10.8
  [28b8d3ca] + GR v0.44.0
  [4d00f742] + GeometryTypes v0.7.6
  [d25df0c9] + Inflate v0.1.1
  [2030c09a] + InfrastructureModels v0.3.2
  [c8e1da08] + IterTools v1.3.0
  [682c06a0] + JSON v0.21.0
  [4076af6c] + JuMP v0.20.1
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.3
  [b8f27783] + MathOptInterface v0.9.8
  [442fdcdd] + Measures v0.3.1
  [f28f55f0] + Memento v0.12.1
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.0
  [d8a4904e] + MutableArithmetics v0.1.1
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [ccf2f8ad] + PlotThemes v1.0.1
  [995b91a9] + PlotUtils v0.6.1
  [91a5bcdd] + Plots v0.28.4
  [c36e90e8] + PowerModels v0.13.1
  [7425d11c] + PowerModelsAnalytics v0.2.0
  [438e738f] + PyCall v1.91.2
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.0
  [992d4aef] + Showoff v0.3.1
  [699a6c99] + SimpleTraits v0.9.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [cea106d9] + Syslogs v0.3.0
  [f269a46b] + TimeZones v0.10.3
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_NEBJWR/Project.toml`
 [no changes]
  Updating `/tmp/jl_NEBJWR/Manifest.toml`
 [no changes]
  Building GR ───────→ `~/.julia/packages/GR/oiZD3/deps/build.log`
  Updating `/tmp/jl_CZa1SQ/Project.toml`
 [no changes]
  Updating `/tmp/jl_CZa1SQ/Manifest.toml`
 [no changes]
  Building FFMPEG ───→ `~/.julia/packages/FFMPEG/guN1x/deps/build.log`
  Updating `/tmp/jl_3YMLDY/Project.toml`
 [no changes]
  Updating `/tmp/jl_3YMLDY/Manifest.toml`
 [no changes]
  Building Plots ────→ `~/.julia/packages/Plots/qZHsp/deps/build.log`
  Updating `/tmp/jl_ciowEd/Project.toml`
 [no changes]
  Updating `/tmp/jl_ciowEd/Manifest.toml`
 [no changes]
  Building PyCall ───→ `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_P9M2Bu/Project.toml`
 [no changes]
  Updating `/tmp/jl_P9M2Bu/Manifest.toml`
 [no changes]
  Building EzXML ────→ `~/.julia/packages/EzXML/QtGgF/deps/build.log`
  Updating `/tmp/jl_IvbLTg/Project.toml`
 [no changes]
  Updating `/tmp/jl_IvbLTg/Manifest.toml`
 [no changes]
  Building TimeZones → `~/.julia/packages/TimeZones/pjvlM/deps/build.log`
  Updating `/tmp/jl_9xkHvn/Project.toml`
 [no changes]
  Updating `/tmp/jl_9xkHvn/Manifest.toml`
 [no changes]
   Testing PowerModelsAnalytics
  Updating `/tmp/jl_az4p9i/Project.toml`
 [no changes]
  Updating `/tmp/jl_az4p9i/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_az4p9i/Project.toml`
  [c3611d14] ColorVectorSpace v0.7.1
  [5ae59095] Colors v0.9.6
  [34da2185] Compat v2.2.0
  [2030c09a] InfrastructureModels v0.3.2
  [093fc24a] LightGraphs v1.3.0
  [91a5bcdd] Plots v0.28.4
  [c36e90e8] PowerModels v0.13.1
  [7425d11c] PowerModelsAnalytics v0.2.0
  [438e738f] PyCall v1.91.2
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package networkx could not be found by pyimport. Usually this means
that you did not install networkx in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the networkx module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the networkx module, you can use `pyimport_conda("networkx", PKG)`,
where PKG is the Anaconda package the contains the module networkx,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'networkx'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
 [3] pyimport_conda at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:701 [inlined]
 [4] __init__() at /home/pkgeval/.julia/packages/PowerModelsAnalytics/QGHUA/src/PowerModelsAnalytics.jl:24
 [5] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [6] _require_from_serialized(::String) at ./loading.jl:748
 [7] _require(::Base.PkgId) at ./loading.jl:1039
 [8] require(::Base.PkgId) at ./loading.jl:927
 [9] require(::Module, ::Symbol) at ./loading.jl:922
 [10] include(::String) at ./client.jl:439
 [11] top-level scope at none:6
during initialization of module PowerModelsAnalytics
in expression starting at /home/pkgeval/.julia/packages/PowerModelsAnalytics/QGHUA/test/runtests.jl:1
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/PowerModelsAnalytics/QGHUA/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/PowerModelsAnalytics/QGHUA/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package PowerModelsAnalytics errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
