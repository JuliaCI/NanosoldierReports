Julia Version 1.4.0-DEV.666
Commit 2835347ff0 (2019-12-26 15:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
  Updating `/tmp/jl_g68ePI/Project.toml`
 [no changes]
  Updating `/tmp/jl_g68ePI/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_g68ePI/Project.toml`
  [9b8138ad] TransformUtils v0.2.2
  [37e2e46d] LinearAlgebra 
  [9abbd945] Profile 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08616587937591208 -1.0775975842650681e-5; 0.08616587937591208 0.0 0.10834698528287873; 1.0775975842650681e-5 -0.10834698528287873 0.0])
dAA = so3([0.0 0.04867689991429075 0.05192776940688092; -0.04867689991429075 0.0 -0.0674998903826096; -0.05192776940688092 0.0674998903826096 0.0])
dAA = so3([0.0 -0.09207285341035688 0.06861640712583865; 0.09207285341035688 0.0 -0.09280115076421842; -0.06861640712583865 0.09280115076421842 0.0])
dAA = Quaternion(0.9957276440115034, [0.07487910275644134, 0.0026700982276800663, -0.053967114960368455])
dAA = SO3([0.9976512789113275 0.04699238633772035 -0.049836144643006314; -0.04117020275020131 0.9928519711891234 0.11202668303301355; 0.0547443156144958 -0.10971179942083897 0.9924547248997012])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9842481359450843 0.13137489152346826 0.11830572583701861; -0.10957746744128054 0.9784655095502106 -0.174922912306541; -0.13873855094306692 0.15920390855077543 0.9774485817598665]), [-1.0834698528287872, -0.00010775975842650681, 0.8616587937591207])
xj = SE3(SO3([0.9641100953089118 0.2649654068203478 -0.016883640364821945; -0.25267352128107723 0.8961382374677068 -0.36481824377584654; -0.08153413865898179 0.3559910006401842 0.9309256638939214]), [0.9280115076421842, 0.6861640712583864, 0.9207285341035688])
Dx = SE3(SO3([0.987922816955023 0.11320547363626249 -0.1057971099720654; -0.13355302011707706 0.9683253174405811 -0.21097315094865857; 0.07856270462031868 0.22255471314350397 0.9717496082326726]), [1.896401600132751, 0.9451555958990897, 0.1756627289673529])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
