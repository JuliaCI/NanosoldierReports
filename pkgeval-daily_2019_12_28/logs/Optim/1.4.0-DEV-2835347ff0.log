Julia Version 1.4.0-DEV.666
Commit 2835347ff0 (2019-12-26 15:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ──────────────── v1.1.0
 Installed OpenSpecFun_jll ──────── v0.5.3+1
 Installed PositiveFactorizations ─ v0.2.3
 Installed Missings ─────────────── v0.4.3
 Installed OrderedCollections ───── v1.1.0
 Installed DiffEqDiffTools ──────── v1.6.0
 Installed ForwardDiff ──────────── v0.10.8
 Installed Requires ─────────────── v1.0.0
 Installed Optim ────────────────── v0.19.7
 Installed DiffRules ────────────── v1.0.0
 Installed NLSolversBase ────────── v7.5.0
 Installed DataStructures ───────── v0.17.6
 Installed ArrayInterface ───────── v2.3.0
 Installed SpecialFunctions ─────── v0.9.0
 Installed StaticArrays ─────────── v0.12.1
 Installed Parameters ───────────── v0.12.0
 Installed StatsBase ────────────── v0.32.0
 Installed Calculus ─────────────── v0.5.1
 Installed CommonSubexpressions ─── v0.2.0
 Installed SortingAlgorithms ────── v0.3.1
 Installed FillArrays ───────────── v0.8.2
 Installed LineSearches ─────────── v7.0.1
 Installed DiffResults ──────────── v1.0.2
 Installed NaNMath ──────────────── v0.3.3
  Updating `~/.julia/environments/v1.4/Project.toml`
  [429524aa] + Optim v0.19.7
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [4fba245c] + ArrayInterface v2.3.0
  [49dc2e85] + Calculus v0.5.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [01453d9d] + DiffEqDiffTools v1.6.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [1a297f60] + FillArrays v0.8.2
  [f6369f11] + ForwardDiff v0.10.8
  [d3d80556] + LineSearches v7.0.1
  [e1d29d7a] + Missings v0.4.3
  [d41bc354] + NLSolversBase v7.5.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [429524aa] + Optim v0.19.7
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [ae029012] + Requires v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing Optim
┌ Error: Pkg.Resolve.ResolverError("Unsatisfiable requirements detected for package RecursiveArrayTools [731186ca]:\n RecursiveArrayTools [731186ca] log:\n ├─possible versions are: [0.16.0-0.16.3, 0.17.0-0.17.2, 0.18.0-0.18.6, 0.19.0-0.19.1, 0.20.0, 1.0.0-1.0.2, 1.1.0-1.1.1, 1.2.0] or uninstalled\n ├─restricted to versions * by an explicit requirement, leaving only versions [0.16.0-0.16.3, 0.17.0-0.17.2, 0.18.0-0.18.6, 0.19.0-0.19.1, 0.20.0, 1.0.0-1.0.2, 1.1.0-1.1.1, 1.2.0]\n ├─restricted by compatibility requirements with ArrayInterface [4fba245c] to versions: [0.16.0-0.16.3, 0.17.0-0.17.2, 0.18.0-0.18.6, 1.0.2, 1.2.0] or uninstalled, leaving only versions: [0.16.0-0.16.3, 0.17.0-0.17.2, 0.18.0-0.18.6, 1.0.2, 1.2.0]\n │ └─ArrayInterface [4fba245c] log:\n │   ├─possible versions are: [0.0.1, 0.1.0-0.1.1, 1.0.0, 1.1.0, 1.2.0-1.2.1, 2.0.0, 2.1.0, 2.2.0, 2.3.0] or uninstalled\n │   └─restricted to versions 2.3.0 by an explicit requirement, leaving only versions 2.3.0\n └─restricted by compatibility requirements with Requires [ae029012] to versions: uninstalled — no versions left\n   └─Requires [ae029012] log:\n     ├─possible versions are: [0.5.0-0.5.2, 1.0.0] or uninstalled\n     └─restricted to versions 1.0.0 by an explicit requirement, leaving only versions 1.0.0", nothing)
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1362
 Installed Suppressor ────────── v0.1.1
 Installed OptimTestProblems ─── v2.0.2
 Installed Requires ──────────── v0.5.2
 Installed RecursiveArrayTools ─ v1.2.0
 Installed RecipesBase ───────── v0.7.0
 Installed Compat ────────────── v2.2.0
  Updating `/tmp/jl_2bQwqZ/Project.toml`
  [429524aa] + Optim v0.19.7
  [cec144fc] + OptimTestProblems v2.0.2
  [731186ca] + RecursiveArrayTools v1.2.0
  [fd094767] + Suppressor v0.1.1
  Updating `/tmp/jl_2bQwqZ/Manifest.toml`
  [34da2185] + Compat v2.2.0
  [cec144fc] + OptimTestProblems v2.0.2
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.2.0
  [ae029012] ↓ Requires v1.0.0 ⇒ v0.5.2
  [fd094767] + Suppressor v0.1.1
  [8bb1440f] + DelimitedFiles 
  [a63ad114] + Mmap 
  [1a1011a3] + SharedArrays 
Running sandbox
Status `/tmp/jl_2bQwqZ/Project.toml`
  [49dc2e85] Calculus v0.5.1
  [01453d9d] DiffEqDiffTools v1.6.0
  [1a297f60] FillArrays v0.8.2
  [f6369f11] ForwardDiff v0.10.8
  [d3d80556] LineSearches v7.0.1
  [d41bc354] NLSolversBase v7.5.0
  [77ba4419] NaNMath v0.3.3
  [429524aa] Optim v0.19.7
  [cec144fc] OptimTestProblems v2.0.2
  [d96e819e] Parameters v0.12.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [731186ca] RecursiveArrayTools v1.2.0
  [2913bbd2] StatsBase v0.32.0
  [fd094767] Suppressor v0.1.1
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
./special/bigfloat/initial_convergence.jl
 19.124015 seconds (20.70 M allocations: 1.022 GiB, 6.03% gc time)
Test Summary: |
special       | No tests
./general/api.jl
 21.127546 seconds (18.62 M allocations: 933.754 MiB, 6.58% gc time)
./general/callables.jl
  0.235355 seconds (159.95 k allocations: 8.533 MiB, 5.50% gc time)
./general/callbacks.jl
  5.517819 seconds (4.04 M allocations: 212.426 MiB, 1.44% gc time)
./general/convergence.jl
  0.458286 seconds (282.96 k allocations: 14.884 MiB, 2.78% gc time)
./general/default_solvers.jl
  0.555694 seconds (306.66 k allocations: 16.047 MiB)
./general/deprecate.jl
  0.000159 seconds (94 allocations: 4.688 KiB)
./general/initial_convergence.jl
  3.396963 seconds (3.07 M allocations: 155.376 MiB, 2.58% gc time)
./general/objective_types.jl
  5.211456 seconds (4.36 M allocations: 228.731 MiB, 1.45% gc time)
./general/Optim.jl
  0.665059 seconds (547.60 k allocations: 27.111 MiB, 2.16% gc time)
./general/optimize.jl
  1.643618 seconds (1.66 M allocations: 84.987 MiB, 0.92% gc time)
./general/type_stability.jl
 17.144166 seconds (18.97 M allocations: 920.699 MiB, 4.94% gc time)
./general/counter.jl
 15.114950 seconds (13.37 M allocations: 659.850 MiB, 5.26% gc time)
./general/maximize.jl
  1.259277 seconds (1.15 M allocations: 60.814 MiB, 1.35% gc time)
Test Summary: | Pass  Total
general       | 2217   2217
./univariate/optimize/interface.jl
  0.000179 seconds (101 allocations: 5.031 KiB)
./univariate/optimize/optimize.jl
  0.177828 seconds (132.04 k allocations: 6.860 MiB)
./univariate/solvers/golden_section.jl
  1.934279 seconds (1.37 M allocations: 72.127 MiB, 3.28% gc time)
./univariate/solvers/brent.jl
  1.621648 seconds (1.41 M allocations: 73.868 MiB, 1.23% gc time)
./univariate/dual.jl
  2.316936 seconds (1.16 M allocations: 61.107 MiB, 2.88% gc time)
Test Summary: | Pass  Total
univariate    |   48     48
./multivariate/optimize/interface.jl
  3.651602 seconds (3.85 M allocations: 196.459 MiB, 2.80% gc time)
./multivariate/optimize/optimize.jl
  1.365540 seconds (815.97 k allocations: 42.039 MiB)
./multivariate/optimize/inplace.jl
  0.602081 seconds (499.68 k allocations: 23.805 MiB, 4.59% gc time)
./multivariate/solvers/constrained/fminbox.jl
 16.630205 seconds (15.59 M allocations: 786.942 MiB, 2.88% gc time)
./multivariate/solvers/constrained/ipnewton/constraints.jl
 50.805752 seconds (31.97 M allocations: 1.540 GiB, 2.60% gc time)
./multivariate/solvers/constrained/ipnewton/counter.jl
  0.569626 seconds (409.43 k allocations: 22.065 MiB)
./multivariate/solvers/constrained/ipnewton/ipnewton_unconstrained.jl
 10.528952 seconds (9.08 M allocations: 607.447 MiB, 4.80% gc time)
./multivariate/solvers/constrained/samin.jl
================================================================================
SAMIN results
==> Normal convergence <==
total number of objective function evaluations: 22951

     Obj. value:      0.0000000000

       parameter      search width
        -2.80512           0.00000 
         3.13131           0.00000 
================================================================================

  3.087052 seconds (3.04 M allocations: 152.525 MiB, 3.44% gc time)
./multivariate/solvers/first_order/accelerated_gradient_descent.jl
  4.889298 seconds (5.43 M allocations: 1.217 GiB, 6.53% gc time)
./multivariate/solvers/first_order/bfgs.jl
 38.805545 seconds (16.30 M allocations: 1.732 GiB, 8.86% gc time)
./multivariate/solvers/first_order/cg.jl
 15.138763 seconds (5.68 M allocations: 985.368 MiB, 3.18% gc time)
./multivariate/solvers/first_order/gradient_descent.jl
175.340734 seconds (56.80 M allocations: 12.391 GiB, 4.27% gc time)
./multivariate/solvers/first_order/l_bfgs.jl
 22.480760 seconds (5.13 M allocations: 1.136 GiB, 3.90% gc time)
./multivariate/solvers/first_order/momentum_gradient_descent.jl
Momentum Gradient Descent: Test Failed at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:151
  Expression: Optim.converged(results)
Stacktrace:
 [1] run_optim_tests(::MomentumGradientDescent{Float64,LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}}}; convergence_exceptions::NTuple{5,Tuple{String,Int64}}, minimizer_exceptions::Tuple{}, minimum_exceptions::Tuple{Tuple{String,Int64},Tuple{String,Int64}}, f_increase_exceptions::NTuple{4,String}, iteration_exceptions::Tuple{Tuple{String,Int64},Tuple{String,Int64},Tuple{String,Int64}}, skip::NTuple{6,String}, show_name::Bool, show_trace::Bool, show_res::Bool, show_itcalls::Bool) at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:151
 [2] macro expansion at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/solvers/first_order/momentum_gradient_descent.jl:5 [inlined]
 [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
 [4] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/solvers/first_order/momentum_gradient_descent.jl:3
Paraboloid Random Matrix did not converge with i = 1
 * Status: failure (reached maximum number of iterations) (line search failed)

 * Candidate solution
    Minimizer: [8.88e-01, 1.12e+00, 1.15e+00,  ...]
    Minimum:   1.912726e-01

 * Found with
    Algorithm:     Momentum Gradient Descent
    Initial Point: [0.00e+00, 0.00e+00, 0.00e+00,  ...]

 * Convergence measures
    |x - x'|               = 3.01e-05 ≰ 0.0e+00
    |x - x'|/|x'|          = 2.54e-05 ≰ 0.0e+00
    |f(x) - f(x')|         = 1.19e-05 ≰ 0.0e+00
    |f(x) - f(x')|/|f(x')| = 6.20e-05 ≰ 0.0e+00
    |g(x)|                 = 2.40e-02 ≰ 1.0e-08

 * Work counters
    Seconds run:   1651  (vs limit Inf)
    Iterations:    10000
    f(x) calls:    39493
    ∇f(x) calls:   39493

Momentum Gradient Descent: Test Failed at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:159
  Expression: Optim.minimum(results) < prob.minimum + sqrt(eps(typeof(prob.minimum)))
   Evaluated: 0.1912725814045097 < 1.4901161193847656e-8
Stacktrace:
 [1] run_optim_tests(::MomentumGradientDescent{Float64,LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}}}; convergence_exceptions::NTuple{5,Tuple{String,Int64}}, minimizer_exceptions::Tuple{}, minimum_exceptions::Tuple{Tuple{String,Int64},Tuple{String,Int64}}, f_increase_exceptions::NTuple{4,String}, iteration_exceptions::Tuple{Tuple{String,Int64},Tuple{String,Int64},Tuple{String,Int64}}, skip::NTuple{6,String}, show_name::Bool, show_trace::Bool, show_res::Bool, show_itcalls::Bool) at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:159
 [2] macro expansion at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/solvers/first_order/momentum_gradient_descent.jl:5 [inlined]
 [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
 [4] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/solvers/first_order/momentum_gradient_descent.jl:3
Momentum Gradient Descent: Test Failed at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:162
  Expression: norm(Optim.minimizer(results) - prob.solutions) < 0.01
   Evaluated: 1.281446679711507 < 0.01
Stacktrace:
 [1] run_optim_tests(::MomentumGradientDescent{Float64,LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}}}; convergence_exceptions::NTuple{5,Tuple{String,Int64}}, minimizer_exceptions::Tuple{}, minimum_exceptions::Tuple{Tuple{String,Int64},Tuple{String,Int64}}, f_increase_exceptions::NTuple{4,String}, iteration_exceptions::Tuple{Tuple{String,Int64},Tuple{String,Int64},Tuple{String,Int64}}, skip::NTuple{6,String}, show_name::Bool, show_trace::Bool, show_res::Bool, show_itcalls::Bool) at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:162
 [2] macro expansion at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/solvers/first_order/momentum_gradient_descent.jl:5 [inlined]
 [3] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
 [4] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/solvers/first_order/momentum_gradient_descent.jl:3
1661.411557 seconds (46.80 M allocations: 15.748 GiB, 1.12% gc time)
./multivariate/solvers/first_order/ngmres.jl
┌ Warning: Use caution. N-GMRES/O-ACCEL has only been tested with Gradient Descent and L-BFGS preconditioning.
└ @ Optim ~/.julia/packages/Optim/cJRng/src/multivariate/solvers/first_order/ngmres.jl:210
 52.042408 seconds (27.26 M allocations: 2.782 GiB, 2.92% gc time)
./multivariate/solvers/second_order/newton.jl
160.168764 seconds (42.37 M allocations: 10.444 GiB, 7.93% gc time)
./multivariate/solvers/second_order/newton_trust_region.jl
150.645476 seconds (28.55 M allocations: 7.131 GiB, 5.28% gc time)
./multivariate/solvers/second_order/krylov_trust_region.jl
  0.752468 seconds (172.94 k allocations: 46.570 MiB, 8.76% gc time)
./multivariate/solvers/zeroth_order/grid_search.jl
  0.378557 seconds (323.65 k allocations: 16.412 MiB)
./multivariate/solvers/zeroth_order/nelder_mead.jl
  3.796575 seconds (4.52 M allocations: 233.278 MiB, 4.21% gc time)
./multivariate/solvers/zeroth_order/particle_swarm.jl
  3.275985 seconds (2.88 M allocations: 135.574 MiB, 1.59% gc time)
./multivariate/solvers/zeroth_order/simulated_annealing.jl
  0.584566 seconds (599.53 k allocations: 16.623 MiB)
./multivariate/array.jl
 64.078262 seconds (52.98 M allocations: 2.435 GiB, 2.98% gc time)
./multivariate/extrapolate.jl
Extrapolation: Error During Test at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/extrapolate.jl:3
  Got exception outside of a @test
  MethodError: no method matching ldiv!(::SparseArrays.SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1})
  Closest candidates are:
    ldiv!(!Matched::Number, ::AbstractArray) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:239
    ldiv!(::AbstractArray, !Matched::Number, !Matched::AbstractArray) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:244
    ldiv!(!Matched::LinearAlgebra.LowerTriangular{T,#s631} where #s631<:(Union{DenseArray{T,2}, Base.ReinterpretArray{T,2,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReshapedArray{T,2,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, SubArray{T,2,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}} where T), ::Union{DenseArray{T,1}, DenseArray{T,2}, Base.ReinterpretArray{T,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReinterpretArray{T,2,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReshapedArray{T,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReshapedArray{T,2,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, SubArray{T,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}, SubArray{T,2,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}}) where T<:Union{Complex{Float32}, Complex{Float64}, Float32, Float64} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/triangular.jl:750
    ...
  Stacktrace:
   [1] ldiv!(::Array{Float64,1}, ::SparseArrays.SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:247
   [2] twoloop!(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Int64, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}, ::Bool, ::SparseArrays.SparseMatrixCSC{Float64,Int64}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/solvers/first_order/l_bfgs.jl:60
   [3] update_state!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Optim.LBFGSState{Array{Float64,1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1}}, ::LBFGS{SparseArrays.SparseMatrixCSC{Float64,Int64},LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var"#20#22"}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/solvers/first_order/l_bfgs.jl:189
   [4] optimize(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}, ::LBFGS{SparseArrays.SparseMatrixCSC{Float64,Int64},LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var"#20#22"}, ::Optim.Options{Float64,Nothing}, ::Optim.LBFGSState{Array{Float64,1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1}}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/optimize.jl:57
   [5] optimize(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}, ::LBFGS{SparseArrays.SparseMatrixCSC{Float64,Int64},LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var"#20#22"}, ::Optim.Options{Float64,Nothing}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/optimize.jl:33
   [6] optimize(::Function, ::Function, ::Array{Float64,1}, ::LBFGS{SparseArrays.SparseMatrixCSC{Float64,Int64},LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var"#20#22"}, ::Optim.Options{Float64,Nothing}; inplace::Bool, autodiff::Symbol) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/interface.jl:123
   [7] optimize(::Function, ::Function, ::Array{Float64,1}, ::LBFGS{SparseArrays.SparseMatrixCSC{Float64,Int64},LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var"#20#22"}, ::Optim.Options{Float64,Nothing}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/interface.jl:121 (repeats 2 times)
   [8] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/extrapolate.jl:44
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [10] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/extrapolate.jl:4
   [11] include(::String) at ./client.jl:439
   [12] macro expansion at ./util.jl:175 [inlined]
   [13] macro expansion at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:253 [inlined]
   [14] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [15] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:251
   [16] include(::String) at ./client.jl:439
   [17] top-level scope at none:6
   [18] eval(::Module, ::Any) at ./boot.jl:331
   [19] exec_options(::Base.JLOptions) at ./client.jl:264
   [20] _start() at ./client.jl:484
  
 22.618297 seconds (21.30 M allocations: 1.082 GiB, 5.24% gc time)
./multivariate/lsthrow.jl
  3.664887 seconds (3.04 M allocations: 157.670 MiB, 1.99% gc time)
./multivariate/precon.jl
Preconditioning: Error During Test at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/precon.jl:8
  Got exception outside of a @test
  MethodError: no method matching ldiv!(::SparseArrays.SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1})
  Closest candidates are:
    ldiv!(!Matched::Number, ::AbstractArray) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:239
    ldiv!(::AbstractArray, !Matched::Number, !Matched::AbstractArray) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:244
    ldiv!(!Matched::LinearAlgebra.LowerTriangular{T,#s631} where #s631<:(Union{DenseArray{T,2}, Base.ReinterpretArray{T,2,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReshapedArray{T,2,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, SubArray{T,2,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}} where T), ::Union{DenseArray{T,1}, DenseArray{T,2}, Base.ReinterpretArray{T,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReinterpretArray{T,2,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReshapedArray{T,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, Base.ReshapedArray{T,2,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}, SubArray{T,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}, SubArray{T,2,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}}) where T<:Union{Complex{Float32}, Complex{Float64}, Float32, Float64} at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/triangular.jl:750
    ...
  Stacktrace:
   [1] ldiv!(::Array{Float64,1}, ::SparseArrays.SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/LinearAlgebra/src/generic.jl:247
   [2] update_state!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Optim.GradientDescentState{Array{Float64,1},Float64}, ::GradientDescent{LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},SparseArrays.SparseMatrixCSC{Float64,Int64},Optim.var"#14#16"}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/solvers/first_order/gradient_descent.jl:67
   [3] optimize(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}, ::GradientDescent{LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},SparseArrays.SparseMatrixCSC{Float64,Int64},Optim.var"#14#16"}, ::Optim.Options{Float64,Nothing}, ::Optim.GradientDescentState{Array{Float64,1},Float64}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/optimize.jl:57
   [4] optimize at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/optimize.jl:33 [inlined]
   [5] optimize(::Function, ::Function, ::Array{Float64,1}, ::GradientDescent{LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},SparseArrays.SparseMatrixCSC{Float64,Int64},Optim.var"#14#16"}, ::Optim.Options{Float64,Nothing}; inplace::Bool, autodiff::Symbol) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/interface.jl:123
   [6] optimize(::Function, ::Function, ::Array{Float64,1}, ::GradientDescent{LineSearches.InitialPrevious{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},SparseArrays.SparseMatrixCSC{Float64,Int64},Optim.var"#14#16"}, ::Optim.Options{Float64,Nothing}) at /home/pkgeval/.julia/packages/Optim/cJRng/src/multivariate/optimize/interface.jl:121
   [7] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/precon.jl:27
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [9] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/multivariate/precon.jl:9
   [10] include(::String) at ./client.jl:439
   [11] macro expansion at ./util.jl:175 [inlined]
   [12] macro expansion at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:253 [inlined]
   [13] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [14] top-level scope at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:251
   [15] include(::String) at ./client.jl:439
   [16] top-level scope at none:6
   [17] eval(::Module, ::Any) at ./boot.jl:331
   [18] exec_options(::Base.JLOptions) at ./client.jl:264
   [19] _start() at ./client.jl:484
  
  3.858539 seconds (3.61 M allocations: 203.076 MiB, 2.24% gc time)
./multivariate/manifolds.jl
 51.894612 seconds (41.83 M allocations: 1.977 GiB, 3.17% gc time)
./multivariate/complex.jl
 14.510145 seconds (13.00 M allocations: 646.975 MiB, 3.61% gc time)
./multivariate/fdtime.jl
 25.990252 seconds (21.41 M allocations: 7.305 GiB, 21.70% gc time)
./multivariate/arbitrary_precision.jl
 20.803010 seconds (19.64 M allocations: 977.329 MiB, 3.06% gc time)
./multivariate/successive_f_tol.jl
  0.223128 seconds (178.28 k allocations: 9.756 MiB)
./multivariate/f_increase.jl
  0.205535 seconds (61.20 k allocations: 3.161 MiB, 11.52% gc time)
Test Summary:                     |   Pass  Fail  Error  Broken   Total
multivariate                      | 211880     3      2       1  211886
  interface                       |     38                           38
  only_fg!, only_fgh!             |      2                            2
  optimize                        |     12                           12
  inplace keyword                 |      7                            7
  Fminbox                         |     69                    1      70
  Constraints                     |    107                          107
  Function counter                |      3                            3
  IPNewton Unconstrained          |     40                           40
  SAMIN                           |      1                            1
  Accelerated Gradient Descent    |     62                           62
  BFGS                            |    127                          127
  Conjugate Gradient              |    119                          119
  Gradient Descent                |    111                          111
  L-BFGS                          |    128                          128
  Momentum Gradient Descent       |     78     3                     81
  N-GMRES                         |    155                          155
  O-ACCEL                         |    155                          155
  Newton                          |    176                          176
  Newton Trust Region             | 210213                       210213
  Krylov Trust Region             |     13                           13
  Grid Search                     |      1                            1
  Nelder Mead                     |     37                           37
  Particle Swarm                  |      4                            4
  Simulated Annealing             |      2                            2
  input types                     |     71                           71
  arraypartition input            |                              No tests
  Extrapolation                   |                   1               1
  Line search errors              |      7                            7
  Preconditioning                 |      1            1               2
  Manifolds                       |     29                           29
  Complex numbers                 |     47                           47
  Finite difference timing        |     45                           45
  Arbitrary Precision             |     15                           15
  Float32 doesn't work in Fminbox |                              No tests
  successive_f_tol                |      1                            1
  f increase behaviour            |      4                            4
ERROR: LoadError: Some tests did not pass: 211880 passed, 3 failed, 2 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl:250
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Optim/cJRng/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Optim/cJRng/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Optim errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
