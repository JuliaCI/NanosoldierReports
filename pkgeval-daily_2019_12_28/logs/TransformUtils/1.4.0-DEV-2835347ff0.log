Julia Version 1.4.0-DEV.666
Commit 2835347ff0 (2019-12-26 15:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
  Updating `/tmp/jl_8hTTI3/Project.toml`
 [no changes]
  Updating `/tmp/jl_8hTTI3/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_8hTTI3/Project.toml`
  [9b8138ad] TransformUtils v0.2.2
  [37e2e46d] LinearAlgebra 
  [9abbd945] Profile 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.12692634813521786 -0.10754848006454176; 0.12692634813521786 0.0 0.0494895175224548; 0.10754848006454176 -0.0494895175224548 0.0])
dAA = so3([0.0 -0.05713911275962186 -0.09862069620709216; 0.05713911275962186 0.0 0.18837612104238544; 0.09862069620709216 -0.18837612104238544 0.0])
dAA = so3([0.0 -0.039242074609520866 -0.11226717638561064; 0.039242074609520866 0.0 -0.08417164695535335; 0.11226717638561064 0.08417164695535335 0.0])
dAA = Quaternion(0.9967381414454821, [-0.008468346641174242, 0.017227919270361252, -0.07838726484949461])
dAA = SO3([0.9931010870658298 0.11645936049279108 0.013691173151986128; -0.11586816801444823 0.992534890720494 -0.03806649896474746; -0.01802216717387589 0.03621751035159174 0.9991814116737209])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9604180698024817 -0.07913847834292184 -0.2670846915164594; 0.19234748306000995 0.8819315901626031 0.43034766879087577; 0.20149336703066578 -0.4646867455811808 0.8622451226442608]), [-0.49489517522454796, -1.0754848006454176, 1.2692634813521786])
xj = SE3(SO3([0.9203773756366764 0.3805759181045203 0.0898190234585392; -0.38456499974957514 0.922555225018064 0.03164834528815984; -0.0708184113331651 -0.06366967371340017 0.9954551347325884]), [0.8417164695535335, -1.1226717638561063, 0.3924207460952086])
Dx = SE3(SO3([0.7957075126767643 0.5301341472610797 0.29292889952601997; -0.3790889096695244 0.8130988510303429 -0.4417712722877164; -0.47237818835688017 0.24047462311209566 0.8479568401774744]), [1.097951687263159, 0.260064111830548, -1.1333486802392772])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
