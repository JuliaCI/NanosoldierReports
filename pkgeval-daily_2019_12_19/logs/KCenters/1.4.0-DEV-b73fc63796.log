Julia Version 1.4.0-DEV.622
Commit b73fc63796 (2019-12-17 04:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed MLDataUtils ───────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed OrderedCollections ────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Compat ────────────────────── v3.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.6
 Installed DataAPI ───────────────────── v1.1.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Missings ──────────────────── v0.4.3
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed PooledArrays ──────────────── v0.5.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_SP74ih/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_SP74ih/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_SP74ih/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 140.41000000000005
[ Info: 70.65999999999998
[ Info: 45.65999999999998
[ Info: 24.94000000000001
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999839687118
[ Info: 76.6400011840614
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.335171091162422
inertia(cdnet.distances) = 30.869454612985052
inertia(crand.distances) = 20.617436894710547
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1982421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1982421875,"f1":null,"seconds":0.0009589102119207382,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.296875,"distances_sum":564.6308643722605}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1982421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1982421875,"f1":null,"seconds":0.0009589102119207382,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.296875,"distances_sum":564.6308643722605}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8959285506160514,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.6484375,"distances_sum":2127.210095803034}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":5.09375,"distances_sum":492.189245302756}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8959285506160514,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.6484375,"distances_sum":2127.210095803034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9417868589743595,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.7578125,"distances_sum":2442.295100746266}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604052197802203,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.84375,"distances_sum":2582.2228069601365}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9604052197802203,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.84375,"distances_sum":2582.2228069601365}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9661114926739932,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.90625,"distances_sum":2611.789568383443}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.953125,"distances_sum":2722.8079115728324}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969184981684982,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.9140625,"distances_sum":2647.5549234608447}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646978021978025,"seconds":8.17514955997467e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.90625,"distances_sum":2618.42293321067}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941396,"seconds":7.851049304008484e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.9140625,"distances_sum":2691.5060612484012}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.953125,"distances_sum":2722.8079115728324}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":8.953125,"distances_sum":2722.8079115728324}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8703218656343665,"seconds":1.6244128346443176e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.359375,"distances_sum":2024.1310288088816}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":7.5213611125946045e-6,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":6.25,"distances_sum":891.5744188960434}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":8.065253496170044e-6,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":6.609375,"distances_sum":939.8308177940465}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8703218656343665,"seconds":1.6244128346443176e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.359375,"distances_sum":2024.1310288088816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9110207500832509,"seconds":1.0233372449874878e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.375,"distances_sum":2297.619323894873}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9110207500832509,"seconds":1.0233372449874878e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.375,"distances_sum":2297.619323894873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":1.0268762707710266e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.9765625,"distances_sum":2735.8084224567233}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":1.0268762707710266e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.9765625,"distances_sum":2735.8084224567233}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120884,"seconds":1.0268762707710266e-5,"exhaustive_search_seconds":3.0081719160079956e-6,"evaluations":8.9765625,"distances_sum":2735.8084224567233}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1474609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1474609375,"f1":null,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":4.375,"distances_sum":396.989154027018}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8216871669996678,"seconds":7.409602403640747e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":7.59375,"distances_sum":1903.0245962378126}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7099609375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7099609375,"f1":0.8216871669996678,"seconds":7.409602403640747e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":7.59375,"distances_sum":1903.0245962378126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969568452380953,"seconds":6.720423698425293e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.875,"distances_sum":2890.36088778171}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9139022435897445,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.46875,"distances_sum":2510.089380177241}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519917582417586,"seconds":6.470829248428345e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.8203125,"distances_sum":2756.817133941025}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8186776764901773,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":7.671875,"distances_sum":1899.9962130953977}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.969568452380953,"seconds":6.720423698425293e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.875,"distances_sum":2890.36088778171}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972063873626374,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.8984375,"distances_sum":2920.465007747449}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718234890109892,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.9140625,"distances_sum":2891.6254355420597}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":10,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9829441391941393,"seconds":8.326023817062378e-6,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.9140625,"distances_sum":3013.124060275913}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.985119047619048,"seconds":1.2440606951713562e-5,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.9765625,"distances_sum":3008.5627358567413}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9761904761904765,"seconds":1.1203810572624207e-5,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.9296875,"distances_sum":2918.0914057995287}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.985119047619048,"seconds":1.2440606951713562e-5,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.9765625,"distances_sum":3008.5627358567413}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.985119047619048,"seconds":1.2440606951713562e-5,"exhaustive_search_seconds":2.5853514671325684e-6,"evaluations":8.9765625,"distances_sum":3008.5627358567413}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.961846232414246e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.015625,"distances_sum":430.92775860133116}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.890625,"distances_sum":905.2701276901428}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3955078125,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.890625,"distances_sum":905.2701276901428}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.681362387612388,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.6484375,"distances_sum":1252.0781385024793}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8948234057609065,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.0234375,"distances_sum":2217.4960805685687}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.91155481338501e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.015625,"distances_sum":992.110604439246}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8477486055611064,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.828125,"distances_sum":1953.7577060275494}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8615320443445452,"seconds":7.74487853050232e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.875,"distances_sum":2031.0675919119572}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4130859375,"f1":null,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":5.9296875,"distances_sum":942.2655033942772}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8498376623376631,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.7578125,"distances_sum":1919.956398661692}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8948234057609065,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.0234375,"distances_sum":2217.4960805685687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522352647352653,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.71875,"distances_sum":2706.510704974641}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9256441475191484,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7421875,"distances_sum":2481.373297236548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9111607142857151,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.640625,"distances_sum":2359.633925027219}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522352647352653,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.71875,"distances_sum":2706.510704974641}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522352647352653,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.71875,"distances_sum":2706.510704974641}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1337890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1337890625,"f1":null,"seconds":3.041699528694153e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":3.9453125,"distances_sum":332.637183273784}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1337890625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1337890625,"f1":null,"seconds":3.041699528694153e-6,"exhaustive_search_seconds":1.6726553440093994e-6,"evaluations":3.9453125,"distances_sum":332.637183273784}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":4.8125,"distances_sum":488.4347032181401}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4931640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4931640625,"f1":0.647454628704629,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":6.453125,"distances_sum":1112.2121625484924}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.777412171162172,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.5,"distances_sum":1497.916269330026}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.654296875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.654296875,"f1":0.777412171162172,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.5,"distances_sum":1497.916269330026}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8505879537129546,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.1640625,"distances_sum":1786.5456070033945}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9461023351648357,"seconds":7.048249244689941e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.6953125,"distances_sum":2399.136209633544}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8443925865800875,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.078125,"distances_sum":1769.0376331717298}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8887029637029644,"seconds":6.616115570068359e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.3828125,"distances_sum":2006.4547443353583}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9016030844155847,"seconds":6.6552311182022095e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.5390625,"distances_sum":2088.4957819813994}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.848429695304696,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.125,"distances_sum":1746.6702230370795}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8366981976356983,"seconds":6.88992440700531e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.0859375,"distances_sum":1745.7647224127757}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9461023351648357,"seconds":7.048249244689941e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.6953125,"distances_sum":2399.136209633544}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704613095238099,"seconds":7.895752787590027e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.875,"distances_sum":2516.2884893581418}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727335164835165,"seconds":2.5277957320213318e-5,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.90625,"distances_sum":2537.0734241777745}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9657451923076926,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.875,"distances_sum":2503.3830458742527}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":11,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9727335164835165,"seconds":2.5277957320213318e-5,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.90625,"distances_sum":2537.0734241777745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":11,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9727335164835165,"seconds":2.5277957320213318e-5,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.90625,"distances_sum":2537.0734241777745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.701624070374071,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.328125,"distances_sum":1217.867116344627}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.302734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.302734375,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.40625,"distances_sum":669.0533283538955}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.15625,"distances_sum":904.0699563163881}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7827587343212351,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.78125,"distances_sum":1475.8688466877354}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7827587343212351,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.78125,"distances_sum":1475.8688466877354}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.905815018315019,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.5390625,"distances_sum":2101.200674209135}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8722756410256419,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.28125,"distances_sum":1905.8604727596016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9350331959706967,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.71875,"distances_sum":2286.185079509544}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8616591741591749,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.296875,"distances_sum":1865.0359096658824}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9089061979686988,"seconds":9.080395102500916e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.5390625,"distances_sum":2153.444146301845}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8801198801198808,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.390625,"distances_sum":1961.0133344178194}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9350331959706967,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.71875,"distances_sum":2286.185079509544}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9485176282051287,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.84375,"distances_sum":2405.4663241310227}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.978199404761905,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.953125,"distances_sum":2620.535655558748}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941398,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9609375,"distances_sum":2557.9240953501226}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9633413461538467,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9140625,"distances_sum":2514.193248132359}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9655708874458878,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.875,"distances_sum":2554.035244420564}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.965127060439561,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8515625,"distances_sum":2530.308132684083}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544013278388286,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.875,"distances_sum":2449.7862736141274}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.978199404761905,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.953125,"distances_sum":2620.535655558748}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.978199404761905,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.953125,"distances_sum":2620.535655558748}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6774187617937623,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.875,"distances_sum":1209.7707597501299}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7975678835053843,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.7734375,"distances_sum":1568.6581884079803}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7767973346098355,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.6328125,"distances_sum":1484.8673717505724}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7975678835053843,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.7734375,"distances_sum":1568.6581884079803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8447521228771239,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0234375,"distances_sum":1753.2785320902265}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9389251373626377,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.671875,"distances_sum":2300.0015158015794}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9385333416583421,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.6484375,"distances_sum":2294.9709011033087}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8825809607059615,"seconds":4.889443516731262e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1640625,"distances_sum":1942.1572622853873}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8382412726162735,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.953125,"distances_sum":1734.2487704828968}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9389251373626377,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.671875,"distances_sum":2300.0015158015794}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669299450549453,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":2475.0954718420626}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9711710164835169,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.890625,"distances_sum":2494.051026631248}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561069139194144,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8046875,"distances_sum":2408.206876582593}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9659054487179489,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2457.595382312186}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570570054945061,"seconds":9.292736649513245e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.84375,"distances_sum":2388.794066373683}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9711710164835169,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.890625,"distances_sum":2494.051026631248}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9711710164835169,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.890625,"distances_sum":2494.051026631248}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.4296875,"distances_sum":918.1206779402504}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.860385968198469,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5078125,"distances_sum":1822.1697671476297}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.860385968198469,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5078125,"distances_sum":1822.1697671476297}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502346611721617,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2377.1337130330685}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586023351648356,"seconds":7.323920726776123e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2452.049418284285}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9586023351648356,"seconds":7.323920726776123e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2452.049418284285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9753720238095243,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8984375,"distances_sum":2574.843990478872}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813244047619051,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2594.909968053164}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465202,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.953125,"distances_sum":2557.305488962127}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673592032967036,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2526.4590712393842}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813244047619051,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2594.909968053164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813244047619051,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2594.909968053164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8007208069708079,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1484375,"distances_sum":1664.6429899587404}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2685546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2685546875,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.078125,"distances_sum":561.234242238642}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8007208069708079,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1484375,"distances_sum":1664.6429899587404}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9120592948717956,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6328125,"distances_sum":2194.667677783761}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9472756410256418,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2477.14221041183}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9472756410256418,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2477.14221041183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500858516483522,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2489.9537519853125}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9515682234432238,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2522.8649138744436}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9564076548451554,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2551.1133312849147}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495592948717955,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2463.30854833957}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607543498168502,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2547.5978602081223}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9489640567765573,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2470.8291648901904}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9607543498168502,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2547.5978602081223}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9607543498168502,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2547.5978602081223}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3330078125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3330078125,"f1":null,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.3359375,"distances_sum":763.596221255438}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":3.2316893339157104e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.953125,"distances_sum":494.83976829546356}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.7578125,"distances_sum":477.57957015402314}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3330078125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3330078125,"f1":null,"seconds":3.511086106300354e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.3359375,"distances_sum":763.596221255438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8056256243756252,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.96875,"distances_sum":1668.790713302363}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8611268939393949,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.34375,"distances_sum":1927.0044948936293}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.684923236485737,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.0234375,"distances_sum":1270.1121023954602}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8611268939393949,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.34375,"distances_sum":1927.0044948936293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520375457875462,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2490.087739476369}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9544871794871801,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2525.7648569315365}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9425137362637367,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2447.454568957282}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8909866175491187,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.53125,"distances_sum":2092.4696949132835}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9312442765567771,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.671875,"distances_sum":2322.8929506664304}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9544871794871801,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2525.7648569315365}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9544871794871801,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2525.7648569315365}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.255859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.255859375,"f1":null,"seconds":3.3937394618988037e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.5546875,"distances_sum":564.6342175502933}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40234375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40234375,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.2265625,"distances_sum":811.5135511246723}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.40234375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.40234375,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.2265625,"distances_sum":811.5135511246723}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7794875263625272,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.609375,"distances_sum":1482.5090634620065}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7794875263625272,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.609375,"distances_sum":1482.5090634620065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8437921453546461,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.078125,"distances_sum":1734.7070066832237}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9209420787545797,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.78125,"distances_sum":2150.3923908681927}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9209420787545797,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.78125,"distances_sum":2150.3923908681927}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.861328125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9209420787545797,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.78125,"distances_sum":2150.3923908681927}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":2.942979335784912e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.3046875,"distances_sum":507.99015937712284}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2353515625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":2.942979335784912e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.3046875,"distances_sum":507.99015937712284}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7088035228660234,"seconds":3.958120942115784e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.2109375,"distances_sum":1203.2876301774459}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.715968233155734,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.2265625,"distances_sum":1149.2474011940837}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.715968233155734,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.2265625,"distances_sum":1149.2474011940837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8754500707625715,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.921875,"distances_sum":1795.330941264799}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7920249888999896,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.9765625,"distances_sum":1405.8750386929512}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9200091575091581,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5,"distances_sum":2063.6807790040143}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":null,"recall":0.7373046875,"f1":null,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.5390625,"distances_sum":1611.2473900642653}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9200091575091581,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5,"distances_sum":2063.6807790040143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8623046875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9200091575091581,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.5,"distances_sum":2063.6807790040143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7931334290709299,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.1640625,"distances_sum":1451.4909492809613}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2919921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2919921875,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.3984375,"distances_sum":635.1655232839221}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.5837292671203613e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.9453125,"distances_sum":847.471159612212}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5947265625,"f1":0.7280686327561333,"seconds":4.189088940620422e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.6328125,"distances_sum":1219.362433328634}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7931334290709299,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.1640625,"distances_sum":1451.4909492809613}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.886032717282718,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1328125,"distances_sum":1895.387505945202}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8872263153513161,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.09375,"distances_sum":1889.428362338772}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7197265625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7197265625,"f1":0.8299258033633042,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.8359375,"distances_sum":1566.2459226951983}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8095703125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8095703125,"f1":0.8872263153513161,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.09375,"distances_sum":1889.428362338772}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560496794871799,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8203125,"distances_sum":2342.5492363840594}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8880416458541466,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.15625,"distances_sum":1880.425751678982}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9644402472527477,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":2364.1194335916175}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589342948717953,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8671875,"distances_sum":2340.318218918618}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9643486721611725,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8984375,"distances_sum":2370.7850629051345}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9189274267399274,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7734375,"distances_sum":2062.8399743831765}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9644402472527477,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":2364.1194335916175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9644402472527477,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9296875,"distances_sum":2364.1194335916175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3115234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.3115234375,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":6.3984375,"distances_sum":756.9944620696989}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6931169524919532,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":6.5625,"distances_sum":1142.230159479057}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5517578125,"f1":0.6931169524919532,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":6.5625,"distances_sum":1142.230159479057}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8801484973359983,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.2109375,"distances_sum":1877.4056342582603}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7963005744255752,"seconds":4.561617970466614e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":7.1171875,"distances_sum":1480.3514977912516}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.591796875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.591796875,"f1":null,"seconds":3.919005393981934e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":6.6796875,"distances_sum":1269.0592233894497}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8801484973359983,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.2109375,"distances_sum":1877.4056342582603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.960983287545788,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2422.8844738494786}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9539548992673996,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8828125,"distances_sum":2348.3375178732676}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9581673534798542,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8671875,"distances_sum":2399.2019641999286}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9160828754578763,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.765625,"distances_sum":2128.6260884865546}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9256727647352655,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.8125,"distances_sum":2160.680760222958}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.960983287545788,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2422.8844738494786}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.960983287545788,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.1958181858062744e-6,"evaluations":8.875,"distances_sum":2422.8844738494786}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8349234099234109,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.96875,"distances_sum":1681.5980348521093}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.359375,"f1":null,"seconds":3.376975655555725e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":5.296875,"distances_sum":760.8996031780591}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7820122585747594,"seconds":4.684552550315857e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.328125,"distances_sum":1441.998001786818}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7314453125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7314453125,"f1":0.8349234099234109,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.96875,"distances_sum":1681.5980348521093}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8805980477855487,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5078125,"distances_sum":1819.6660005710555}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9010760073260081,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5,"distances_sum":1977.4569366657988}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.9010760073260081,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5,"distances_sum":1977.4569366657988}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9627435064935069,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8125,"distances_sum":2393.40925883788}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9438358516483525,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.6796875,"distances_sum":2315.048730993131}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9547332875457879,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.734375,"distances_sum":2357.371112398542}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9516311813186819,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.765625,"distances_sum":2328.8969457688186}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9627435064935069,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8125,"distances_sum":2393.40925883788}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9627435064935069,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8125,"distances_sum":2393.40925883788}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7849707584082591,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.109375,"distances_sum":1421.1380044775117}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8447666916416924,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.984375,"distances_sum":1628.138602996332}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8447666916416924,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.984375,"distances_sum":1628.138602996332}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8972475441225449,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.3125,"distances_sum":1953.5154039572703}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9293383699633707,"seconds":6.0908496379852295e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9453125,"distances_sum":2094.386612333582}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9289179570429577,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7421875,"distances_sum":2146.954346951205}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9289179570429577,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7421875,"distances_sum":2146.954346951205}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726591117216119,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.90625,"distances_sum":2416.154409922119}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9586710164835172,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.890625,"distances_sum":2318.42612631978}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9745535714285717,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2426.4705183955352}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645146520146526,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9375,"distances_sum":2358.776809867172}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532566391941398,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.859375,"distances_sum":2285.434742898685}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9745535714285717,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2426.4705183955352}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9745535714285717,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.953125,"distances_sum":2426.4705183955352}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7778726481851487,"seconds":4.373490810394287e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.0,"distances_sum":1166.2312804871478}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6376953125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6376953125,"f1":0.764982760295261,"seconds":4.0687620639801025e-5,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.8984375,"distances_sum":1112.0432562460664}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7778726481851487,"seconds":4.373490810394287e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.0,"distances_sum":1166.2312804871478}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9047619047619055,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.296875,"distances_sum":1760.6440654056269}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8772409881784888,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.296875,"distances_sum":1571.181793245362}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.925932921245422,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.46875,"distances_sum":1866.5592338187319}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9471840659340662,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":1978.5692336521067}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9471840659340662,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":1978.5692336521067}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9611092032967037,"seconds":7.992610335350037e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7890625,"distances_sum":2035.2875422047205}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9537030677655682,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.78125,"distances_sum":1974.4964461562681}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9749313186813191,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.921875,"distances_sum":2090.91698953641}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972195512820513,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8984375,"distances_sum":2078.421096018779}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705757783882789,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8359375,"distances_sum":2080.4500257955865}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9628548534798539,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2018.3836142072228}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9749313186813191,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.921875,"distances_sum":2090.91698953641}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9749313186813191,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.921875,"distances_sum":2090.91698953641}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":4.7734375,"distances_sum":415.294207315629}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8208572677322684,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.46875,"distances_sum":1453.613008221134}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7109375,"f1":0.8208572677322684,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.46875,"distances_sum":1453.613008221134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9339259698634704,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.546875,"distances_sum":1968.7430345409464}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.875,"f1":0.925444347319348,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6015625,"distances_sum":1905.919069294626}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521863553113555,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2013.6057553154387}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9521863553113555,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2013.6057553154387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454215,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2115.7794326262633}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566620879120886,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2036.7593590631216}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971766254578755,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2138.4631416187303}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2135.7762997275186}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2135.7762997275186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728994963369966,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2135.7762997275186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7724289599289607,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.6640625,"distances_sum":1165.036609712975}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8852728868353879,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.1171875,"distances_sum":1591.1580177517537}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8852728868353879,"seconds":5.174428224563599e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.1171875,"distances_sum":1591.1580177517537}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8975675366300373,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.4140625,"distances_sum":1637.301517843657}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9342605311355315,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.578125,"distances_sum":1894.1185015850435}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9342605311355315,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.578125,"distances_sum":1894.1185015850435}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962986492673993,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8359375,"distances_sum":2049.861146763809}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537259615384621,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.796875,"distances_sum":2006.902086514524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9574607683982685,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.796875,"distances_sum":2032.7322379093664}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9660370879120884,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2069.325962262854}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660370879120884,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2069.325962262854}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660370879120884,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2069.325962262854}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.54296875,"f1":null,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.703125,"distances_sum":952.2621595360783}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.171875,"distances_sum":728.4517527166853}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.54296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.54296875,"f1":null,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.703125,"distances_sum":952.2621595360783}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8929783757908765,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3984375,"distances_sum":1701.000778083499}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8692749958374966,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.71875,"distances_sum":1570.3505087531878}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.7059730200355206,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.8203125,"distances_sum":952.0532617231602}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8649054070929081,"seconds":0.00018847733736038208,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.734375,"distances_sum":1535.6272912074949}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8193359375,"f1":0.8929783757908765,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3984375,"distances_sum":1701.000778083499}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.953182234432235,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7421875,"distances_sum":2058.2322675984333}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9375629578754587,"seconds":6.822869181632996e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6484375,"distances_sum":1960.7329708625673}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9509901556776561,"seconds":7.793307304382324e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2038.931203519704}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9315392940392945,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4921875,"distances_sum":1951.8254690315114}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.953182234432235,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7421875,"distances_sum":2058.2322675984333}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.953182234432235,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7421875,"distances_sum":2058.2322675984333}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4599609375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4599609375,"f1":null,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":6.1796875,"distances_sum":817.0071506602828}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7913164960039968,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.2421875,"distances_sum":1262.959037125753}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2744140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2744140625,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":5.796875,"distances_sum":527.5914334599299}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7913164960039968,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.2421875,"distances_sum":1262.959037125753}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9520006035631039,"seconds":8.862465620040894e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7421875,"distances_sum":2088.614482542953}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8860467657342666,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.2578125,"distances_sum":1694.7143310534873}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8142035048285058,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.453125,"distances_sum":1370.7235196896318}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8802260239760249,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":7.8828125,"distances_sum":1633.9027968122996}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9520006035631039,"seconds":8.862465620040894e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7421875,"distances_sum":2088.614482542953}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633703,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8359375,"distances_sum":2134.7865028474585}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633703,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8359375,"distances_sum":2134.7865028474585}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633703,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8359375,"distances_sum":2134.7865028474585}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4072265625,"f1":0.5596015096015097,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.125,"distances_sum":673.0998758543242}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.953125,"distances_sum":1002.607660537713}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.55859375,"f1":null,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.953125,"distances_sum":1002.607660537713}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8743079836829846,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.734375,"distances_sum":1593.2422734930192}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9132586163836169,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5234375,"distances_sum":1797.6255542760857}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9132586163836169,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5234375,"distances_sum":1797.6255542760857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9357460248085255,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.625,"distances_sum":1928.2883844357477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602564102564106,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2108.532865668747}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9602564102564106,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2108.532865668747}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9602564102564106,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2108.532865668747}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8090503246753254,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.5859375,"distances_sum":1320.136554298667}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":4.015862941741943e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":6.3359375,"distances_sum":815.6735690610412}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8090503246753254,"seconds":4.565343260765076e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.5859375,"distances_sum":1320.136554298667}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9001233141858149,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.3515625,"distances_sum":1746.9960920164979}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.9001233141858149,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.3515625,"distances_sum":1746.9960920164979}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9308894230769235,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.5703125,"distances_sum":1929.8297292675807}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9308894230769235,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.5703125,"distances_sum":1929.8297292675807}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8798828125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9308894230769235,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.5703125,"distances_sum":1929.8297292675807}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.17208468914032e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.1875,"distances_sum":343.65576452510413}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1767578125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.17208468914032e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.1875,"distances_sum":343.65576452510413}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1767578125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.17208468914032e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.1875,"distances_sum":343.65576452510413}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7043737512487519,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.671875,"distances_sum":937.5481833779063}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.7758834915084922,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.2578125,"distances_sum":1165.0631536704093}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6484375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6484375,"f1":0.7758834915084922,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.2578125,"distances_sum":1165.0631536704093}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8414788336663344,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.6796875,"distances_sum":1402.5089048438108}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8826694139194146,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.34375,"distances_sum":1595.4263437839795}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8826694139194146,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.34375,"distances_sum":1595.4263437839795}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8904023060273067,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3671875,"distances_sum":1637.0933114929005}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8910516566766573,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3828125,"distances_sum":1630.5426268983617}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8904023060273067,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3671875,"distances_sum":1637.0933114929005}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8904023060273067,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3671875,"distances_sum":1637.0933114929005}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.298828125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.298828125,"f1":null,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.65625,"distances_sum":592.1445576838643}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.298828125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.298828125,"f1":null,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.65625,"distances_sum":592.1445576838643}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8539325258075267,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.6640625,"distances_sum":1607.6734422109812}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8539325258075267,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.6640625,"distances_sum":1607.6734422109812}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8891056859806866,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3203125,"distances_sum":1841.8546232514436}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8891056859806866,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3203125,"distances_sum":1841.8546232514436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9090321137196147,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5234375,"distances_sum":1904.6987749388925}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596211080586083,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2279.2681333316314}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596211080586083,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2279.2681333316314}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":10,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596211080586083,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2279.2681333316314}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":3.296881914138794e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.2421875,"distances_sum":724.8240623069444}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8467204670329679,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.671875,"distances_sum":1670.7652085258196}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8254162504162512,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4375,"distances_sum":1571.4883235670754}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8467204670329679,"seconds":4.665926098823547e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.671875,"distances_sum":1670.7652085258196}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593635531135535,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7890625,"distances_sum":2378.714799555961}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8529767107892116,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.6875,"distances_sum":1700.3065178498723}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593635531135535,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7890625,"distances_sum":2378.714799555961}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699233058608061,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2415.810862669648}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9699233058608061,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2415.810862669648}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9699233058608061,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2415.810862669648}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6884905025530033,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.7421875,"distances_sum":1066.6431920591147}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.54296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.54296875,"f1":0.6884905025530033,"seconds":4.064291715621948e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.7421875,"distances_sum":1066.6431920591147}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8829706751581761,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2109375,"distances_sum":1883.2216022821233}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7893788503163512,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.3125,"distances_sum":1396.7484808716422}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7921261030636039,"seconds":4.427507519721985e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.25,"distances_sum":1378.6200626709067}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8829706751581761,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2109375,"distances_sum":1883.2216022821233}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9542639652014655,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2264.339631029028}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531478937728943,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.765625,"distances_sum":2265.65072142688}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9463942307692312,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5859375,"distances_sum":2210.733486329864}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9542639652014655,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2264.339631029028}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9542639652014655,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2264.339631029028}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.509765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.509765625,"f1":0.6591982670107674,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.3828125,"distances_sum":1040.1477867001327}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3369140625,"f1":null,"seconds":3.2205134630203247e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.1796875,"distances_sum":661.4256416293139}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.1050294637680054e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.109375,"distances_sum":402.05233622511685}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.509765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.509765625,"f1":0.6591982670107674,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.3828125,"distances_sum":1040.1477867001327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
inertia(cfft.distances) = 19.214321269575333
inertia(cdnet.distances) = 23.98242985878855
inertia(crand.distances) = 33.12465329212443
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
  == End Opt. BeamSearch. Iteration finished; {"score":0.509765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.509765625,"f1":0.6591982670107674,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.3828125,"distances_sum":1040.1477867001327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.509765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.509765625,"f1":0.6591982670107674,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.3828125,"distances_sum":1040.1477867001327}}, n: 9
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.888888888888889
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8688888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8799999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9177777777777777
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
Test Summary:                             | Pass  ===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8688888888888888
Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 2, 1, 3, 3, 3, 2, 3, 3, 2, 3, 1, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4555333352256544] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4555333352256544, 0.17566781600394624] ***
*** starting iteration: 2; err: [Inf, 0.4555333352256544, 0.17566781600394624] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4555333352256544, 0.17566781600394624, 0.16640413988701483] ***
*** starting iteration: 3; err: [Inf, 0.4555333352256544, 0.17566781600394624, 0.16640413988701483] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4555333352256544, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696] ***
*** starting iteration: 4; err: [Inf, 0.4555333352256544, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4555333352256544, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696, 0.16349131641382694] ***
*** finished computation of 12 references, err: [Inf, 0.4555333352256544, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696, 0.16349131641382694] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.0419132809441045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0419132809441045, 0.617594605739501] ***
*** starting iteration: 2; err: [Inf, 1.0419132809441045, 0.617594605739501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0419132809441045, 0.617594605739501, 0.6175874308406013] ***
*** finished computation of 3 references, err: [Inf, 1.0419132809441045, 0.617594605739501, 0.6175874308406013] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 1, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 14), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 33]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.5415637177361186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5415637177361186, 0.8309000135425505] ***
*** starting iteration: 2; err: [Inf, 3.5415637177361186, 0.8309000135425505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5415637177361186, 0.8309000135425505, 0.36974159278452506] ***
*** starting iteration: 3; err: [Inf, 3.5415637177361186, 0.8309000135425505, 0.36974159278452506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5415637177361186, 0.8309000135425505, 0.36974159278452506, 0.3612083852100061] ***
*** starting iteration: 4; err: [Inf, 3.5415637177361186, 0.8309000135425505, 0.36974159278452506, 0.3612083852100061] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5415637177361186, 0.8309000135425505, 0.36974159278452506, 0.3612083852100061, 0.3612083852100061] ***
*** finished computation of 3 references, err: [Inf, 3.5415637177361186, 0.8309000135425505, 0.36974159278452506, 0.3612083852100061, 0.3612083852100061] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 9]]
** centroid: 2, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.906092379464196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.906092379464196, 0.6455657126086229] ***
*** starting iteration: 2; err: [Inf, 0.906092379464196, 0.6455657126086229] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.906092379464196, 0.6455657126086229, 0.639228374520109] ***
*** starting iteration: 3; err: [Inf, 0.906092379464196, 0.6455657126086229, 0.639228374520109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.906092379464196, 0.6455657126086229, 0.639228374520109, 0.6387244757320645] ***
*** finished computation of 3 references, err: [Inf, 0.906092379464196, 0.6455657126086229, 0.639228374520109, 0.6387244757320645] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 38]]
** centroid: 1, normalized-entropy: 0.9833761901392238, [(2, 28), (3, 38)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [17, 3, 0]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(1, 17), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8626999990734743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8626999990734743, 0.522781261447466] ***
*** starting iteration: 2; err: [Inf, 0.8626999990734743, 0.522781261447466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8626999990734743, 0.522781261447466, 0.5162259585665372] ***
*** starting iteration: 3; err: [Inf, 0.8626999990734743, 0.522781261447466, 0.5162259585665372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8626999990734743, 0.522781261447466, 0.5162259585665372, 0.5156911049372432] ***
*** finished computation of 3 references, err: [Inf, 0.8626999990734743, 0.522781261447466, 0.5162259585665372, 0.5156911049372432] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.297500042062134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.297500042062134, 1.4788687458087235] ***
*** starting iteration: 2; err: [Inf, 4.297500042062134, 1.4788687458087235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.297500042062134, 1.4788687458087235, 0.5919977508740766] ***
*** starting iteration: 3; err: [Inf, 4.297500042062134, 1.4788687458087235, 0.5919977508740766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.297500042062134, 1.4788687458087235, 0.5919977508740766, 0.5130474393036351] ***
*** finished computation of 3 references, err: [Inf, 4.297500042062134, 1.4788687458087235, 0.5919977508740766, 0.5130474393036351] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 9]]
** centroid: 3, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.76840008267328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.76840008267328, 3.0797036205202577] ***
*** starting iteration: 2; err: [Inf, 8.76840008267328, 3.0797036205202577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.76840008267328, 3.0797036205202577, 1.9111989834220497] ***
*** starting iteration: 3; err: [Inf, 8.76840008267328, 3.0797036205202577, 1.9111989834220497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.76840008267328, 3.0797036205202577, 1.9111989834220497, 1.0675902028683562] ***
*** finished computation of 3 references, err: [Inf, 8.76840008267328, 3.0797036205202577, 1.9111989834220497, 1.0675902028683562] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 32]]
** centroid: 1, normalized-entropy: 0.9922666387194963, [(2, 26), (3, 32)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [31, 5, 0]]
** centroid: 3, normalized-entropy: 0.581321498763703, [(1, 31), (2, 5)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8516000094967435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8516000094967435, 0.3847925579825824] ***
*** finished computation of 7 references, err: [Inf, 0.8516000094967435, 0.3847925579825824] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 6]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 2]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 4), (3, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7825000113627355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7825000113627355, 0.30714506281633286] ***
*** finished computation of 7 references, err: [Inf, 0.7825000113627355, 0.30714506281633286] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 11]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.9050000142381263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9050000142381263, 0.3573561909023391] ***
*** finished computation of 7 references, err: [Inf, 1.9050000142381263, 0.3573561909023391] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.881799992960368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.881799992960368, 0.9263251884729321] ***
*** starting iteration: 2; err: [Inf, 1.881799992960368, 0.9263251884729321] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.881799992960368, 0.9263251884729321, 0.8957358613560927] ***
*** starting iteration: 3; err: [Inf, 1.881799992960368, 0.9263251884729321, 0.8957358613560927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.881799992960368, 0.9263251884729321, 0.8957358613560927, 0.8954501535236532] ***
*** finished computation of 3 references, err: [Inf, 1.881799992960368, 0.9263251884729321, 0.8957358613560927, 0.8954501535236532] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 33]]
** centroid: 1, normalized-entropy: 0.995148095654003, [(2, 28), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [12, 3, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 12), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.69830007203294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.69830007203294, 2.2743701918952315] ***
*** starting iteration: 2; err: [Inf, 5.69830007203294, 2.2743701918952315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442] ***
*** starting iteration: 3; err: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442, 0.5290047091434463] ***
*** starting iteration: 4; err: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442, 0.5290047091434463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442, 0.5290047091434463, 0.5109957204958053] ***
*** starting iteration: 5; err: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442, 0.5290047091434463, 0.5109957204958053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442, 0.5290047091434463, 0.5109957204958053, 0.5109957204958053] ***
*** finished computation of 3 references, err: [Inf, 5.69830007203294, 2.2743701918952315, 0.8853825386568442, 0.5290047091434463, 0.5109957204958053, 0.5109957204958053] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 9]]
** centroid: 3, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.490400003811135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.490400003811135, 1.1094609711421777] ***
*** starting iteration: 2; err: [Inf, 4.490400003811135, 1.1094609711421777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602] ***
*** starting iteration: 3; err: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128] ***
*** starting iteration: 4; err: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128, 0.5396255132554221] ***
*** starting iteration: 5; err: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128, 0.5396255132554221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128, 0.5396255132554221, 0.5369706156872528] ***
*** starting iteration: 6; err: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128, 0.5396255132554221, 0.5369706156872528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128, 0.5396255132554221, 0.5369706156872528, 0.5361466817733964] ***
*** finished computation of 3 references, err: [Inf, 4.490400003811135, 1.1094609711421777, 0.6403345203632602, 0.5686060545816128, 0.5396255132554221, 0.5369706156872528, 0.5361466817733964] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 30]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5591175915717267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5591175915717267, 0.3646673530766712] ***
*** finished computation of 3 references, err: [Inf, 0.5591175915717267, 0.3646673530766712] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8229435720886957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8229435720886957, 0.38380988752250816] ***
*** finished computation of 3 references, err: [Inf, 0.8229435720886957, 0.38380988752250816] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 38, 11]]
** centroid: 2, normalized-entropy: 0.7682814090975241, [(2, 38), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2064124168389667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2064124168389667, 0.6491312267365875] ***
*** finished computation of 3 references, err: [Inf, 3.2064124168389667, 0.6491312267365875] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 4, 0]]
** centroid: 1, normalized-entropy: 0.5127091420308771, [(1, 31), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 6]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 27), (3, 6)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 32]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6253000046710046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6253000046710046, 0.38626157948355827] ***
*** starting iteration: 2; err: [Inf, 0.6253000046710046, 0.38626157948355827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6253000046710046, 0.38626157948355827, 0.29934403570940815] ***
*** starting iteration: 3; err: [Inf, 0.6253000046710046, 0.38626157948355827, 0.29934403570940815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6253000046710046, 0.38626157948355827, 0.29934403570940815, 0.28342846279232287] ***
*** finished computation of 7 references, err: [Inf, 0.6253000046710046, 0.38626157948355827, 0.29934403570940815, 0.28342846279232287] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 14]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 6), (3, 14)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6206000043989296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6206000043989296, 0.31833342455814667] ***
*** starting iteration: 2; err: [Inf, 0.6206000043989296, 0.31833342455814667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6206000043989296, 0.31833342455814667, 0.279929250509903] ***
*** starting iteration: 3; err: [Inf, 0.6206000043989296, 0.31833342455814667, 0.279929250509903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6206000043989296, 0.31833342455814667, 0.279929250509903, 0.2594904657644203] ***
*** finished computation of 7 references, err: [Inf, 0.6206000043989296, 0.31833342455814667, 0.279929250509903, 0.2594904657644203] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 7]]
** centroid: 5, normalized-entropy: 0.8256265261578954, [(2, 20), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6829000144006733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6829000144006733, 0.3996634960574428] ***
*** starting iteration: 2; err: [Inf, 0.6829000144006733, 0.3996634960574428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6829000144006733, 0.3996634960574428, 0.3833803052991229] ***
*** starting iteration: 3; err: [Inf, 0.6829000144006733, 0.3996634960574428, 0.3833803052991229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6829000144006733, 0.3996634960574428, 0.3833803052991229, 0.3814004061676449] ***
*** finished computation of 7 references, err: [Inf, 0.6829000144006733, 0.3996634960574428, 0.3833803052991229, 0.3814004061676449] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 28]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 31, 3]]
** centroid: 6, normalized-entropy: 0.43055186701043935, [(2, 31), (3, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6288000075004985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6288000075004985, 0.3219541640207193] ***
*** finished computation of 7 references, err: [Inf, 0.6288000075004985, 0.3219541640207193] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 13]]
** centroid: 6, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7376000027393994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7376000027393994, 0.3105420152910164] ***
*** finished computation of 7 references, err: [Inf, 0.7376000027393994, 0.3105420152910164] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 13]]
** centroid: 2, normalized-entropy: 0.9811522341999134, [(2, 18), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.9555000088878085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9555000088878085, 0.3133407693957303] ***
*** finished computation of 7 references, err: [Inf, 1.9555000088878085, 0.3133407693957303] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 7: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7313000074043362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313000074043362, 0.4591169772950296] ***
*** starting iteration: 2; err: [Inf, 0.7313000074043362, 0.4591169772950296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766] ***
*** starting iteration: 3; err: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766, 0.446603258414777] ***
*** starting iteration: 4; err: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766, 0.446603258414777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766, 0.446603258414777, 0.4453958568206345] ***
*** starting iteration: 5; err: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766, 0.446603258414777, 0.4453958568206345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766, 0.446603258414777, 0.4453958568206345, 0.4453958568206345] ***
*** finished computation of 7 references, err: [Inf, 0.7313000074043362, 0.4591169772950296, 0.4500218009898766, 0.446603258414777, 0.4453958568206345, 0.4453958568206345] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 4]]
** centroid: 3, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8948000150859357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383] ***
*** starting iteration: 2; err: [Inf, 0.8948000150859357, 0.36711620383908383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615] ***
*** starting iteration: 3; err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033] ***
*** starting iteration: 4; err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197] ***
*** starting iteration: 5; err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553] ***
*** starting iteration: 6; err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553, 0.26820055875808324] ***
*** starting iteration: 7; err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553, 0.26820055875808324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553, 0.26820055875808324, 0.2661998201182333] ***
*** starting iteration: 8; err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553, 0.26820055875808324, 0.2661998201182333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553, 0.26820055875808324, 0.2661998201182333, 0.2658128464064761] ***
*** finished computation of 7 references, err: [Inf, 0.8948000150859357, 0.36711620383908383, 0.30538501410316615, 0.29052993235010033, 0.2771105391876197, 0.2725961567718553, 0.26820055875808324, 0.2661998201182333, 0.2658128464064761] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 6, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6725999961471061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779] ***
*** starting iteration: 2; err: [Inf, 0.6725999961471061, 0.2915286005982779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837] ***
*** starting iteration: 3; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849] ***
*** starting iteration: 4; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018] ***
*** starting iteration: 5; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712] ***
*** starting iteration: 6; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185] ***
*** starting iteration: 7; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185, 0.26099376233471533] ***
*** starting iteration: 8; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185, 0.26099376233471533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185, 0.26099376233471533, 0.25973310405976874] ***
*** starting iteration: 9; err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185, 0.26099376233471533, 0.25973310405976874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185, 0.26099376233471533, 0.25973310405976874, 0.25939896900006265] ***
*** finished computation of 7 references, err: [Inf, 0.6725999961471061, 0.2915286005982779, 0.27897500414062837, 0.2713060177849849, 0.2688895897544018, 0.2666390619688712, 0.26336624587465185, 0.26099376233471533, 0.25973310405976874, 0.25939896900006265] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 9]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.591911417013621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.591911417013621, 0.3070286831715415] ***
*** finished computation of 7 references, err: [Inf, 0.591911417013621, 0.3070286831715415] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 11]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9918314862229074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9918314862229074, 0.2991390616935282] ***
*** finished computation of 7 references, err: [Inf, 0.9918314862229074, 0.2991390616935282] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3399800679260683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3399800679260683, 0.19876028449483105] ***
*** finished computation of 7 references, err: [Inf, 0.3399800679260683, 0.19876028449483105] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 16]]
** centroid: 2, normalized-entropy: 0.975119064940866, [(2, 11), (3, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1196341074102614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1196341074102614, 0.3818027794330496] ***
*** finished computation of 3 references, err: [Inf, 1.1196341074102614, 0.3818027794330496] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 13]]
** centroid: 3, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9518292138234337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9518292138234337, 0.3622175188581883] ***
*** finished computation of 3 references, err: [Inf, 0.9518292138234337, 0.3622175188581883] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 9]]
** centroid: 1, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0221402221247318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0221402221247318, 0.38650671353156624] ***
*** finished computation of 3 references, err: [Inf, 1.0221402221247318, 0.38650671353156624] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 36]]
** centroid: 1, normalized-entropy: 0.6409441847875289, [(2, 7), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 2]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7692050413041522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7692050413041522, 0.3531449271192544] ***
*** starting iteration: 2; err: [Inf, 0.7692050413041522, 0.3531449271192544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7692050413041522, 0.3531449271192544, 0.3526627108905834] ***
*** finished computation of 3 references, err: [Inf, 0.7692050413041522, 0.3531449271192544, 0.3526627108905834] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 9]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7315344646682562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7315344646682562, 0.3690361535187529] ***
*** starting iteration: 2; err: [Inf, 0.7315344646682562, 0.3690361535187529] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7315344646682562, 0.3690361535187529, 0.3612083852100061] ***
*** starting iteration: 3; err: [Inf, 0.7315344646682562, 0.3690361535187529, 0.3612083852100061] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7315344646682562, 0.3690361535187529, 0.3612083852100061, 0.3612083852100061] ***
*** finished computation of 3 references, err: [Inf, 0.7315344646682562, 0.3690361535187529, 0.3612083852100061, 0.3612083852100061] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 9]]
** centroid: 1, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0527511669789522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475] ***
*** starting iteration: 2; err: [Inf, 1.0527511669789522, 0.48413412534371475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245] ***
*** starting iteration: 3; err: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016] ***
*** starting iteration: 4; err: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683] ***
*** starting iteration: 5; err: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683, 0.37458850168652275] ***
*** starting iteration: 6; err: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683, 0.37458850168652275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683, 0.37458850168652275, 0.3732988956173175] ***
*** starting iteration: 7; err: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683, 0.37458850168652275, 0.3732988956173175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683, 0.37458850168652275, 0.3732988956173175, 0.3732988956173175] ***
*** finished computation of 3 references, err: [Inf, 1.0527511669789522, 0.48413412534371475, 0.45542718631493245, 0.41456484800360016, 0.38350844157142683, 0.37458850168652275, 0.3732988956173175, 0.3732988956173175] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 30]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.480199997679432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.480199997679432, 0.5462126657664202] ***
*** finished computation of 3 references, err: [Inf, 1.480199997679432, 0.5462126657664202] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 14]]
** centroid: 3, normalized-entropy: 0.8944518845341284, [(2, 31), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2614000094113658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2614000094113658, 0.5109957204958053] ***
*** finished computation of 3 references, err: [Inf, 1.2614000094113658, 0.5109957204958053] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 9]]
** centroid: 1, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.587299994499105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.587299994499105, 0.5742041653912119] ***
*** finished computation of 3 references, err: [Inf, 1.587299994499105, 0.5742041653912119] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6464908379093456] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6464908379093456, 0.3720207575349026] ***
*** starting iteration: 2; err: [Inf, 0.6464908379093456, 0.3720207575349026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6464908379093456, 0.3720207575349026, 0.36007685700519376] ***
*** starting iteration: 3; err: [Inf, 0.6464908379093456, 0.3720207575349026, 0.36007685700519376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6464908379093456, 0.3720207575349026, 0.36007685700519376, 0.35913319982923025] ***
*** finished computation of 3 references, err: [Inf, 0.6464908379093456, 0.3720207575349026, 0.36007685700519376, 0.35913319982923025] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 32]]
** centroid: 1, normalized-entropy: 0.6789538995185759, [(2, 7), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.791331952323753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952] ***
*** starting iteration: 2; err: [Inf, 0.791331952323753, 0.4130721523908952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708] ***
*** starting iteration: 3; err: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896] ***
*** starting iteration: 4; err: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723] ***
*** starting iteration: 5; err: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723, 0.36887872358411167] ***
*** starting iteration: 6; err: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723, 0.36887872358411167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723, 0.36887872358411167, 0.36392155589577785] ***
*** starting iteration: 7; err: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723, 0.36887872358411167, 0.36392155589577785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723, 0.36887872358411167, 0.36392155589577785, 0.36329778783486033] ***
*** finished computation of 3 references, err: [Inf, 0.791331952323753, 0.4130721523908952, 0.4000744625821708, 0.3905480982932896, 0.3760429141022723, 0.36887872358411167, 0.36392155589577785, 0.36329778783486033] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 20]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 9]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2472823822498538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2472823822498538, 0.3938064338433132] ***
*** starting iteration: 2; err: [Inf, 1.2472823822498538, 0.3938064338433132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2472823822498538, 0.3938064338433132, 0.37458850168652275] ***
*** starting iteration: 3; err: [Inf, 1.2472823822498538, 0.3938064338433132, 0.37458850168652275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2472823822498538, 0.3938064338433132, 0.37458850168652275, 0.3732988956173175] ***
*** starting iteration: 4; err: [Inf, 1.2472823822498538, 0.3938064338433132, 0.37458850168652275, 0.3732988956173175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2472823822498538, 0.3938064338433132, 0.37458850168652275, 0.3732988956173175, 0.3732988956173175] ***
*** finished computation of 3 references, err: [Inf, 1.2472823822498538, 0.3938064338433132, 0.37458850168652275, 0.3732988956173175, 0.3732988956173175] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 30]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1179318706084733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1179318706084733, 0.38420466409644194] ***
*** finished computation of 3 references, err: [Inf, 1.1179318706084733, 0.38420466409644194] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 1, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 14]]
** centroid: 3, normalized-entropy: 0.9023932827949788, [(2, 30), (3, 14)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9578029437292657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9578029437292657, 0.4103124257372106] ***
*** finished computation of 3 references, err: [Inf, 0.9578029437292657, 0.4103124257372106] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 14]]
** centroid: 1, normalized-entropy: 0.8403586716091169, [(2, 38), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.361037706608131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.361037706608131, 0.39226314757605907] ***
*** finished computation of 3 references, err: [Inf, 1.361037706608131, 0.39226314757605907] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 1, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40734280829766534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40734280829766534, 0.19631414289232704] ***
*** finished computation of 7 references, err: [Inf, 0.40734280829766534, 0.19631414289232704] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 24]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4801950684663798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4801950684663798, 0.19015010147374817] ***
*** finished computation of 7 references, err: [Inf, 0.4801950684663798, 0.19015010147374817] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 11]]
** centroid: 1, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44030449190918347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44030449190918347, 0.1760331622761337] ***
*** finished computation of 7 references, err: [Inf, 0.44030449190918347, 0.1760331622761337] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 5]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5421000007323948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000007323948, 0.26769778125110216] ***
*** starting iteration: 2; err: [Inf, 0.5421000007323948, 0.26769778125110216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067] ***
*** starting iteration: 3; err: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224] ***
*** starting iteration: 4; err: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224, 0.23594675645320953] ***
*** starting iteration: 5; err: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224, 0.23594675645320953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224, 0.23594675645320953, 0.2332194992146581] ***
*** starting iteration: 6; err: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224, 0.23594675645320953, 0.2332194992146581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224, 0.23594675645320953, 0.2332194992146581, 0.2327975175173257] ***
*** finished computation of 7 references, err: [Inf, 0.5421000007323948, 0.26769778125110216, 0.25075780140622067, 0.24190432050753224, 0.23594675645320953, 0.2332194992146581, 0.2327975175173257] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.559300005987028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516] ***
*** starting iteration: 2; err: [Inf, 0.559300005987028, 0.25085280302558516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867] ***
*** starting iteration: 3; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983] ***
*** starting iteration: 4; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353] ***
*** starting iteration: 5; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632] ***
*** starting iteration: 6; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684] ***
*** starting iteration: 7; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684, 0.21681192576110725] ***
*** starting iteration: 8; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684, 0.21681192576110725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684, 0.21681192576110725, 0.2134116725848364] ***
*** starting iteration: 9; err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684, 0.21681192576110725, 0.2134116725848364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684, 0.21681192576110725, 0.2134116725848364, 0.21267446831582462] ***
*** finished computation of 7 references, err: [Inf, 0.559300005987028, 0.25085280302558516, 0.23470300927691867, 0.23061870771764983, 0.2290429625525353, 0.22717382452315632, 0.22329861419953684, 0.21681192576110725, 0.2134116725848364, 0.21267446831582462] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 7, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48890000788306653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48890000788306653, 0.26379887041066846] ***
*** starting iteration: 2; err: [Inf, 0.48890000788306653, 0.26379887041066846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817] ***
*** starting iteration: 3; err: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817, 0.2311350090535487] ***
*** starting iteration: 4; err: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817, 0.2311350090535487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817, 0.2311350090535487, 0.2203849111722996] ***
*** starting iteration: 5; err: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817, 0.2311350090535487, 0.2203849111722996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817, 0.2311350090535487, 0.2203849111722996, 0.2196083052369669] ***
*** finished computation of 7 references, err: [Inf, 0.48890000788306653, 0.26379887041066846, 0.24760859712353817, 0.2311350090535487, 0.2203849111722996, 0.2196083052369669] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 7, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 1.8333000199409348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.8333000199409348, 0.4067528977575513] ***
*** finished computation of 7 references, err: [Inf, 1.8333000199409348, 0.4067528977575513] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 13]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 4), (3, 13)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 15]]
** centroid: 7, normalized-entropy: 0.9971803988942641, [(2, 17), (3, 15)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9277000085317063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9277000085317063, 0.4365891318916195] ***
*** finished computation of 7 references, err: [Inf, 0.9277000085317063, 0.4365891318916195] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 6]]
** centroid: 5, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 23]]
** centroid: 7, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4794000011035702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4794000011035702, 0.2727173239806724] ***
*** finished computation of 7 references, err: [Inf, 0.4794000011035702, 0.2727173239806724] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 2]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1677246977298077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1677246977298077, 0.28110991802365864] ***
*** finished computation of 7 references, err: [Inf, 1.1677246977298077, 0.28110991802365864] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 1, 0]]
** centroid: 1, normalized-entropy: 0.1792560669283214, [(1, 36), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33394241227396293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33394241227396293, 0.21778532214018587] ***
*** finished computation of 7 references, err: [Inf, 0.33394241227396293, 0.21778532214018587] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 9]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7221998233212436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7221998233212436, 0.30139879351053706] ***
*** finished computation of 7 references, err: [Inf, 0.7221998233212436, 0.30139879351053706] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 14]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 28, 3]]
** centroid: 7, normalized-entropy: 0.45868581620054033, [(2, 28), (3, 3)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4371052978817956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4371052978817956, 0.1770184325472157] ***
*** starting iteration: 2; err: [Inf, 0.4371052978817956, 0.1770184325472157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283] ***
*** starting iteration: 3; err: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283, 0.15097754425443463] ***
*** starting iteration: 4; err: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283, 0.15097754425443463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283, 0.15097754425443463, 0.14593124313825562] ***
*** starting iteration: 5; err: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283, 0.15097754425443463, 0.14593124313825562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283, 0.15097754425443463, 0.14593124313825562, 0.14502965578164273] ***
*** finished computation of 7 references, err: [Inf, 0.4371052978817956, 0.1770184325472157, 0.16012634883939283, 0.15097754425443463, 0.14593124313825562, 0.14502965578164273] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 10]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37764468897531855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37764468897531855, 0.20862637048193636] ***
*** starting iteration: 2; err: [Inf, 0.37764468897531855, 0.20862637048193636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37764468897531855, 0.20862637048193636, 0.19824668254039604] ***
*** starting iteration: 3; err: [Inf, 0.37764468897531855, 0.20862637048193636, 0.19824668254039604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37764468897531855, 0.20862637048193636, 0.19824668254039604, 0.19824668254039604] ***
*** finished computation of 7 references, err: [Inf, 0.37764468897531855, 0.20862637048193636, 0.19824668254039604, 0.19824668254039604] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 15]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 16), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32998816485008925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32998816485008925, 0.19083919851657227] ***
*** starting iteration: 2; err: [Inf, 0.32998816485008925, 0.19083919851657227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32998816485008925, 0.19083919851657227, 0.1881800003460418] ***
*** starting iteration: 3; err: [Inf, 0.32998816485008925, 0.19083919851657227, 0.1881800003460418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32998816485008925, 0.19083919851657227, 0.1881800003460418, 0.1881800003460418] ***
*** finished computation of 7 references, err: [Inf, 0.32998816485008925, 0.19083919851657227, 0.1881800003460418, 0.1881800003460418] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 25, 6]]
** centroid: 6, normalized-entropy: 0.708835673332196, [(2, 25), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.0423000000996863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0423000000996863, 0.5193667711103287] ***
*** starting iteration: 2; err: [Inf, 1.0423000000996863, 0.5193667711103287] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0423000000996863, 0.5193667711103287, 0.5162259585665372] ***
*** starting iteration: 3; err: [Inf, 1.0423000000996863, 0.5193667711103287, 0.5162259585665372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0423000000996863, 0.5193667711103287, 0.5162259585665372, 0.5156911049372432] ***
*** finished computation of 3 references, err: [Inf, 1.0423000000996863, 0.5193667711103287, 0.5162259585665372, 0.5156911049372432] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 32]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5016999951310095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5016999951310095, 0.5109957204958053] ***
*** starting iteration: 2; err: [Inf, 1.5016999951310095, 0.5109957204958053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5016999951310095, 0.5109957204958053, 0.5109957204958053] ***
*** finished computation of 3 references, err: [Inf, 1.5016999951310095, 0.5109957204958053, 0.5109957204958053] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 9]]
** centroid: 1, normalized-entropy: 0.7045767128725937, [(2, 38), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.902899996610859] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.902899996610859, 0.5551031052436755] ***
*** starting iteration: 2; err: [Inf, 1.902899996610859, 0.5551031052436755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.902899996610859, 0.5551031052436755, 0.5369706156872528] ***
*** starting iteration: 3; err: [Inf, 1.902899996610859, 0.5551031052436755, 0.5369706156872528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.902899996610859, 0.5551031052436755, 0.5369706156872528, 0.5361466817733964] ***
*** finished computation of 3 references, err: [Inf, 1.902899996610859, 0.5551031052436755, 0.5369706156872528, 0.5361466817733964] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 30]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9133333333333332, 0.8933333333333334, 0.8866666666666667, 0.8866666666666666, 0.8666666666666667, 0.8266666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 21
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.6910999963337312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6910999963337312, 0.23410002001902463] ***
*** finished computation of 7 references, err: [Inf, 0.6910999963337312, 0.23410002001902463] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 2]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 8), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6552000055436373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6552000055436373, 0.23307074493612093] ***
*** finished computation of 7 references, err: [Inf, 0.6552000055436373, 0.23307074493612093] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 9]]
** centroid: 6, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5999000013406453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5999000013406453, 0.24238954885413033] ***
*** finished computation of 7 references, err: [Inf, 0.5999000013406453, 0.24238954885413033] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 13]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
finished with 9 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.857142857142857, 2.99047619047619, 5.780952380952381, 2.0428571428571427], [5.874074074074074, 2.725925925925926, 4.125925925925926, 1.2592592592592593], [5.550000000000001, 4.15, 1.6, 0.4], [5.129999999999999, 3.5499999999999994, 1.47, 0.29], [4.7, 3.0571428571428574, 1.4142857142857144, 0.19285714285714287], [6.25, 2.9, 4.85, 1.6], [6.115384615384615, 2.723076923076923, 5.053846153846153, 1.784615384615385], [6.4, 2.9, 4.3, 1.3]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 1, 1, 1, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.153333333333334, 3.2199999999999998, 6.0133333333333345, 2.1599999999999997], [6.405555555555555, 2.933333333333333, 4.65, 1.4666666666666666], [6.1230769230769235, 2.861538461538461, 5.084615384615384, 1.9384615384615385], [4.512499999999999, 3.075, 1.275, 0.2125], [4.9111111111111105, 3.1, 1.4555555555555555, 0.17777777777777776], [5.580000000000001, 2.6849999999999996, 4.04, 1.28], [5.23125, 3.6875, 1.5125, 0.2562500000000001], [4.6, 3.2, 1.4, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 1, 1, 2, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.57, 2.72, 4.34, 1.38], [6.409090909090909, 3.0, 4.618181818181818, 1.4545454545454546], [6.3, 2.75, 5.0, 1.65], [5.0, 2.0, 3.5, 1.0], [5.9750000000000005, 2.725, 4.1875, 1.3125000000000002], [6.985000000000002, 3.125, 5.9, 2.1950000000000003], [6.228571428571429, 2.9714285714285715, 5.3, 2.0142857142857142], [5.061764705882353, 3.394117647058824, 1.6500000000000001, 0.3176470588235294]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 3, 2, 2, 3, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[61, 5, 1, 24, 34, 23, 37, 27, 9, 26, 35, 11, 13, 7, 21, 2, 25, 16, 1, 27, 23, 19, 22, 44, 26, 41, 30, 41, 34, 16, 19, 46, 20, 25, 31, 2, 26, 26, 33, 26, 26, 32, 25, 17, 40, 33, 31, 29, 37, 38, 42, 32, 42, 38, 41, 39, 26, 39, 32, 40, 36, 22, 22, 9, 45, 48, 40, 9, 22, 38, 47, 33, 1, 21, 29, 36, 36, 30, 48, 22, 17, 21, 43, 25, 41, 40, 29, 2, 34, 44, 48, 1, 36, 38, 47, 43, 21, 53, 49, 24, 25, 33, 22, 55, 22, 30, 46, 27, 31, 30, 35, 41, 20, 21, 31, 38, 28, 1, 49, 16, 50, 28, 61, 27, 34, 31, 27, 22, 31, 2, 40, 37, 29, 35, 36, 32, 39, 41, 46, 30, 28, 59, 29, 34, 34, 40, 45, 47, 40, 39, 21, 34, 31, 20, 35, 31, 21, 41, 41, 35, 39, 16, 26, 41, 25, 24, 12, 30, 88, 34, 25, 78, 49, 26, 45, 21, 29, 62, 32, 55, 40, 30, 46, 40, 37, 23, 18, 31, 41, 43, 60, 34, 47, 32, 50, 22, 49, 39, 21, 34, 19, 33, 33, 40, 30, 15, 43, 44, 17, 25, 38, 31, 36, 39, 35, 40, 17, 31, 18, 42, 35, 59, 44, 51, 22, 21, 44, 37, 44, 29, 68, 38, 50, 42, 31, 53, 35, 33, 32, 41, 45, 44, 14, 23, 39, 58, 40, 41, 44, 27, 58, 38, 25, 38, 28, 39, 58, 20, 42, 30, 62, 32, 37, 30, 37, 26, 24, 28, 37, 51, 18, 58, 29, 33, 44, 30, 34, 36, 41, 64, 48, 35, 38, 40, 24, 28, 24, 3, 48, 21, 45, 46, 32, 39, 23, 69, 19, 32, 37, 50]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6269999999999998, speedup = 0.3696409061363353, eval_ratio = 0.041391000000000004)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37109375000000006,"recall":0.37065972222222227,"f1":null,"seconds":7.510744035243988e-5,"exhaustive_search_seconds":0.0003556087613105774,"evaluations":337.671875,"distances_sum":1801.0214929760702}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5373263888888887,"recall":0.5373263888888887,"f1":null,"seconds":0.00010359659790992737,"exhaustive_search_seconds":0.0003556087613105774,"evaluations":375.1171875,"distances_sum":1675.4223599060838}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6345486111111108,"recall":0.6345486111111108,"f1":null,"seconds":0.00013521499931812286,"exhaustive_search_seconds":0.0003556087613105774,"evaluations":412.296875,"distances_sum":1634.7688383678383}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7204861111111105,"recall":0.7204861111111105,"f1":0.7204861111111105,"seconds":0.00016929395496845245,"exhaustive_search_seconds":0.0003556087613105774,"evaluations":451.515625,"distances_sum":1605.9427449896968}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7829861111111106,"recall":0.7829861111111106,"f1":0.7829861111111106,"seconds":0.00020259246230125427,"exhaustive_search_seconds":0.0003556087613105774,"evaluations":490.828125,"distances_sum":1591.1082089297172}
KCenters.DeloneInvIndex> reached performance {"precision":0.8281249999999992,"recall":0.8281249999999992,"f1":0.8281249999999992,"seconds":0.0002314336597919464,"exhaustive_search_seconds":0.0003556087613105774,"evaluations":530.203125,"distances_sum":1580.1466428691}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8070000000000002, speedup = 1.9910143119197712, eval_ratio = 0.053006)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
