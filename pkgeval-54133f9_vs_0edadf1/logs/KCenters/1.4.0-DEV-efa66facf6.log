Julia Version 1.4.0-DEV.648
Commit efa66facf6 (2019-12-19 21:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Compat ────────────────────── v3.0.0
 Installed KCenters ──────────────────── v0.1.8
 Installed DataStructures ────────────── v0.17.6
 Installed DataFrames ────────────────── v0.20.0
 Installed TableTraits ───────────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Parsers ───────────────────── v0.3.10
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed JSON ──────────────────────── v0.21.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed StatsBase ─────────────────── v0.32.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_4Q1XJl/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_4Q1XJl/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_4Q1XJl/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 175.45000000000002
Test Summary:        | [ Info: 80.99999999999997
[ Info: 43.209999999999994
[ Info: 26.769999999999992
Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.00000116633946
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.35154687480834
inertia(cdnet.distances) = 21.55241518515723
inertia(crand.distances) = 22.18740076331944
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7664056429681437,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":7.265625,"distances_sum":1825.5882502503669}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6435546875,"f1":0.7664056429681437,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":7.265625,"distances_sum":1825.5882502503669}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9239619755244761,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.7265625,"distances_sum":2589.4171944149844}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.83877285908536,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.125,"distances_sum":2088.8151582003293}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9239619755244761,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.7265625,"distances_sum":2589.4171944149844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9351133241758246,"seconds":6.979331374168396e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.6875,"distances_sum":2685.8498645274135}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689961080586085,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.8671875,"distances_sum":2880.311572942056}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607200091575095,"seconds":6.7837536334991455e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.8671875,"distances_sum":2853.112275247169}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689961080586085,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.8671875,"distances_sum":2880.311572942056}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689961080586085,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":2.210959792137146e-6,"evaluations":8.8671875,"distances_sum":2880.311572942056}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5029296875,"f1":null,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.8203125,"distances_sum":1235.3302490405797}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7857709998335006,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.59375,"distances_sum":1714.4864948663742}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7857709998335006,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.59375,"distances_sum":1714.4864948663742}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9374401640026643,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7734375,"distances_sum":2419.6542059908525}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.833926490176491,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.15625,"distances_sum":1863.5304640944394}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9350191475191483,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7265625,"distances_sum":2422.4324145142104}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9374401640026643,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7734375,"distances_sum":2419.6542059908525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9397264194139201,"seconds":6.416812539100647e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2416.253899430217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670959249084252,"seconds":6.737187504768372e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9453125,"distances_sum":2594.488781475571}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9702953296703299,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2625.879456205442}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702953296703299,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2625.879456205442}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702953296703299,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2625.879456205442}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8467563686313696,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3984375,"distances_sum":1870.024401281757}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5009765625,"f1":0.6505914224664228,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.8046875,"distances_sum":1227.2745656037296}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7602666430791438,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.75,"distances_sum":1549.4208398391768}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8467563686313696,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.3984375,"distances_sum":1870.024401281757}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9454155219780226,"seconds":6.61797821521759e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.875,"distances_sum":2421.1643489469025}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8544086122211131,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.4140625,"distances_sum":1938.8924384501586}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8931603119103128,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.7421875,"distances_sum":2111.527200281234}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9511306401931408,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.875,"distances_sum":2472.93027050409}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8504157301032311,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.4609375,"distances_sum":1870.262019035905}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9511306401931408,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.875,"distances_sum":2472.93027050409}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9635276182151186,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2545.2111045948955}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737751831501834,"seconds":6.88992440700531e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9375,"distances_sum":2626.355918972084}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9751545329670332,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2629.7628610662427}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758928571428575,"seconds":6.77257776260376e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2620.830599178297}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549454,"seconds":6.880611181259155e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9609375,"distances_sum":2596.238846188546}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570398351648357,"seconds":6.4820051193237305e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.875,"distances_sum":2520.6456560227316}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9751545329670332,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2629.7628610662427}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9751545329670332,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.96875,"distances_sum":2629.7628610662427}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7623392232767239,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.8359375,"distances_sum":1579.240470206992}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7920490967365974,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.8671875,"distances_sum":1726.856606026693}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7078685203685211,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.2578125,"distances_sum":1424.20578412416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7920490967365974,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.8671875,"distances_sum":1726.856606026693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9009875541125548,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.703125,"distances_sum":2207.8432396883713}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566849816849822,"seconds":6.932765245437622e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.84375,"distances_sum":2550.8398691155885}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8996711621711627,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.640625,"distances_sum":2203.0445598231427}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8761273448773457,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.59375,"distances_sum":2085.4128875379747}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9566849816849822,"seconds":6.932765245437622e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.84375,"distances_sum":2550.8398691155885}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681032509157516,"seconds":7.1339309215545654e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.921875,"distances_sum":2638.96429946699}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358976,"seconds":6.7930668592453e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9453125,"distances_sum":2638.8882803958604}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630036630036635,"seconds":6.917864084243774e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.90625,"distances_sum":2603.529620168859}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358976,"seconds":6.7930668592453e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9453125,"distances_sum":2638.8882803958604}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358976,"seconds":6.7930668592453e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9453125,"distances_sum":2638.8882803958604}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.860967157842159,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.5390625,"distances_sum":1921.3477844449046}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8086751789876797,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.3828125,"distances_sum":1645.3435881925725}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":4.641711711883545e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":6.9921875,"distances_sum":959.8612245137718}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.860967157842159,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.5390625,"distances_sum":1921.3477844449046}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098903,"seconds":7.1730464696884155e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9140625,"distances_sum":2465.892395917372}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543612637362644,"seconds":7.027760148048401e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9140625,"distances_sum":2438.2122240934254}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670444139194145,"seconds":7.14324414730072e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2528.4052586180833}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9670444139194145,"seconds":7.14324414730072e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2528.4052586180833}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633704,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.9453125,"distances_sum":2534.561226370569}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9852678571428575,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.96875,"distances_sum":2663.189077188418}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9852678571428575,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.96875,"distances_sum":2663.189077188418}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9852678571428575,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.7117708921432495e-6,"evaluations":8.96875,"distances_sum":2663.189077188418}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8786520770895779,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":1958.655419431858}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8786520770895779,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":1958.655419431858}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9257045038295044,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.84375,"distances_sum":2230.4841364054228}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9257045038295044,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.84375,"distances_sum":2230.4841364054228}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495077838827845,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.78125,"distances_sum":2423.5856724649952}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9495077838827845,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.78125,"distances_sum":2423.5856724649952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9495077838827845,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.78125,"distances_sum":2423.5856724649952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7908058954933963,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.640625,"distances_sum":1614.9917414636889}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7908058954933963,"seconds":4.643574357032776e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.640625,"distances_sum":1614.9917414636889}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8337755994006001,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1328125,"distances_sum":1814.576286602674}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8337755994006001,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1328125,"distances_sum":1814.576286602674}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9453582875457882,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.671875,"distances_sum":2487.508485236817}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8789840367965376,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.2578125,"distances_sum":2026.8644648590182}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9453582875457882,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.671875,"distances_sum":2487.508485236817}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9453582875457882,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.671875,"distances_sum":2487.508485236817}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8149303821178829,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.203125,"distances_sum":1538.949629768153}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.70703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.70703125,"f1":0.8149303821178829,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.203125,"distances_sum":1538.949629768153}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.70703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.70703125,"f1":0.8149303821178829,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.203125,"distances_sum":1538.949629768153}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.70703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.70703125,"f1":0.8149303821178829,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.203125,"distances_sum":1538.949629768153}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7966628857253865,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.703125,"distances_sum":1483.0181177102254}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.3046875,"distances_sum":450.99687983903675}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":6.421875,"distances_sum":473.0413805831702}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7966628857253865,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.703125,"distances_sum":1483.0181177102254}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9172192390942399,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.484375,"distances_sum":2006.5741006921285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9194310897435902,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.5625,"distances_sum":2043.2144579485864}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474046786546791,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.75,"distances_sum":2242.4248700498965}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9474046786546791,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.75,"distances_sum":2242.4248700498965}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679346694971699,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.828125,"distances_sum":2401.030503916935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570341117216121,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8046875,"distances_sum":2292.692238448097}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949708104395605,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.7421875,"distances_sum":2280.8439280973666}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9679346694971699,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.828125,"distances_sum":2401.030503916935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9679346694971699,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.828125,"distances_sum":2401.030503916935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.4049153327941895e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.6484375,"distances_sum":427.0262842669369}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.6883602508602513,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.3515625,"distances_sum":1030.989610526372}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5419921875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5419921875,"f1":0.6883602508602513,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.3515625,"distances_sum":1030.989610526372}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9267029845154853,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.4375,"distances_sum":1867.5250725942087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8759053446553454,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.2109375,"distances_sum":1645.2945691871057}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8642538017538026,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.171875,"distances_sum":1608.4543935265315}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8680907634032643,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.265625,"distances_sum":1646.4708407664473}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.873046875,"f1":0.9267029845154853,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.4375,"distances_sum":1867.5250725942087}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685496794871797,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8515625,"distances_sum":2203.541529720029}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9341059981684988,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.546875,"distances_sum":1940.1611469453549}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9319342116217121,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.5703125,"distances_sum":1971.5944513070867}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9404106310356317,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.5390625,"distances_sum":2001.073831457302}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508814102564107,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.71875,"distances_sum":2093.8925501444496}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685496794871797,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8515625,"distances_sum":2203.541529720029}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685496794871797,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8515625,"distances_sum":2203.541529720029}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.805791604229105,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":7.796875,"distances_sum":1455.0801539239794}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.805791604229105,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":7.796875,"distances_sum":1455.0801539239794}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9081246878121882,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.46875,"distances_sum":1870.218628999036}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9111752830502838,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.421875,"distances_sum":1877.4214055850268}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9111752830502838,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.421875,"distances_sum":1877.4214055850268}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9140625,"distances_sum":2303.1566381000002}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9691620879120884,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.875,"distances_sum":2300.1731791375646}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9140625,"distances_sum":2303.1566381000002}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465205,"seconds":6.342306733131409e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9140625,"distances_sum":2303.1566381000002}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.7159770727157593e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.84375,"distances_sum":513.4021576608799}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8773159132534141,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2734375,"distances_sum":1788.4450715841815}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.46875,"distances_sum":865.1364558241379}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8773159132534141,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2734375,"distances_sum":1788.4450715841815}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9253262362637369,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.484375,"distances_sum":2057.9743747418524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587683150183155,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.828125,"distances_sum":2261.9324013332143}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586939102564106,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2282.7258050169703}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9587683150183155,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.828125,"distances_sum":2261.9324013332143}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047625,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.921875,"distances_sum":2357.404425808222}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972733516483517,"seconds":4.218891263008118e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":2358.7782276236735}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9615899725274729,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.84375,"distances_sum":2249.6268210648086}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639537545787548,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8671875,"distances_sum":2297.0977156890926}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047625,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.921875,"distances_sum":2357.404425808222}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047625,"seconds":4.041939973831177e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.921875,"distances_sum":2357.404425808222}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4130859375,"f1":0.5638791763791764,"seconds":2.639368176460266e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":6.3203125,"distances_sum":846.7459191275249}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8642414876789886,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.234375,"distances_sum":1707.499141147304}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8642414876789886,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.234375,"distances_sum":1707.499141147304}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528960622710627,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.765625,"distances_sum":2249.1305017059194}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9342032967032973,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.6015625,"distances_sum":2084.238928447406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9100248709623718,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.5546875,"distances_sum":1944.7005871941421}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9528960622710627,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.765625,"distances_sum":2249.1305017059194}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941395,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.9140625,"distances_sum":2346.5904277769737}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699404761904764,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.859375,"distances_sum":2351.261205132712}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967416437728938,"seconds":4.341825842857361e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.875,"distances_sum":2327.8211224932734}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941395,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.9140625,"distances_sum":2346.5904277769737}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941395,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.1175870895385742e-6,"evaluations":8.9140625,"distances_sum":2346.5904277769737}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.640625,"distances_sum":611.4392329607107}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7706375222000229,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.890625,"distances_sum":1517.2719489929516}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7706375222000229,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.890625,"distances_sum":1517.2719489929516}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502492299367302,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2383.7624232258645}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462339743589752,"seconds":1.0667368769645691e-5,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":2362.315437268251}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8083655927405936,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.109375,"distances_sum":1665.7979014034431}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9502492299367302,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2383.7624232258645}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692312,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2568.5852996510084}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9729567307692312,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2568.5852996510084}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9729567307692312,"seconds":6.05359673500061e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2568.5852996510084}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8012549950049958,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.90625,"distances_sum":1494.0833370620462}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8608329170829179,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.1796875,"distances_sum":1785.013272085143}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8608329170829179,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.1796875,"distances_sum":1785.013272085143}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9244848901098909,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.6796875,"distances_sum":2074.239103905877}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531307234432239,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.859375,"distances_sum":2270.8697562847237}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9381238553113558,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.6953125,"distances_sum":2136.5050163551296}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9108152264402273,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.640625,"distances_sum":2002.8727057089613}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9531307234432239,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.859375,"distances_sum":2270.8697562847237}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745192307692311,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9140625,"distances_sum":2416.9382176086556}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9818452380952384,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9609375,"distances_sum":2474.0921599333183}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9750400641025643,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9453125,"distances_sum":2441.249686594366}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759500915750918,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9765625,"distances_sum":2422.182141277756}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616872710622715,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.90625,"distances_sum":2334.2856003706547}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678972069597073,"seconds":7.010996341705322e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9375,"distances_sum":2357.169415991487}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.96544184981685,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9375,"distances_sum":2362.655140377134}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705185439560443,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9453125,"distances_sum":2391.3760857004972}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605139652014658,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.859375,"distances_sum":2335.618467432029}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952384,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9609375,"distances_sum":2474.0921599333183}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952384,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9609375,"distances_sum":2474.0921599333183}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7250620906870914,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.21875,"distances_sum":1281.1219974151581}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7250620906870914,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.21875,"distances_sum":1281.1219974151581}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9247309981684988,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.578125,"distances_sum":2126.201808102446}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8607491466866476,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.1953125,"distances_sum":1827.9877805531733}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9247309981684988,"seconds":6.327405571937561e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.578125,"distances_sum":2126.201808102446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9551396520146527,"seconds":6.863847374916077e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.7734375,"distances_sum":2394.0959880660903}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9251168969918973,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.5703125,"distances_sum":2180.694835760311}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601934523809528,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8125,"distances_sum":2400.8552487570373}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601934523809528,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8125,"distances_sum":2400.8552487570373}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601934523809528,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8125,"distances_sum":2400.8552487570373}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4716796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4716796875,"f1":null,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.453125,"distances_sum":998.285924613115}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4716796875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4716796875,"f1":null,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.453125,"distances_sum":998.285924613115}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9079561063936074,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.578125,"distances_sum":2056.310152501507}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8674773143523151,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.2421875,"distances_sum":1805.4381982831744}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7017798174048179,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.875,"distances_sum":1241.3277726871333}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8639142107892116,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3125,"distances_sum":1812.8197810778406}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8644090284715292,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.234375,"distances_sum":1809.018200959008}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7092613983238988,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.9140625,"distances_sum":1207.589511148332}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9079561063936074,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.578125,"distances_sum":2056.310152501507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9355368589743596,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2185.0390438355594}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9556433150183155,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.828125,"distances_sum":2336.2122202118885}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590831043956047,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.890625,"distances_sum":2357.9439238565906}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501717032967039,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.796875,"distances_sum":2317.2036071987463}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.972247023809524,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2455.1789148572902}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9358917124542131,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.59375,"distances_sum":2237.846543681967}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9652586996337001,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2416.891968568931}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972247023809524,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2455.1789148572902}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972247023809524,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.90625,"distances_sum":2455.1789148572902}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.51953125,"f1":null,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.796875,"distances_sum":1103.140841208528}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.758427336552337,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.421875,"distances_sum":1346.4543832182796}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7746425449550457,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.5546875,"distances_sum":1364.372554157603}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7746425449550457,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.5546875,"distances_sum":1364.372554157603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.901923597236098,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2578125,"distances_sum":1952.2948897088154}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9281192765567772,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.375,"distances_sum":2092.549048444463}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7830740440115447,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.5859375,"distances_sum":1431.186356819569}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8541713494838503,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0625,"distances_sum":1724.1516446511775}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8969150641025647,"seconds":3.6954879760742188e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1953125,"distances_sum":1953.933173663828}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9281192765567772,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.375,"distances_sum":2092.549048444463}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949708104395605,"seconds":3.771856427192688e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7265625,"distances_sum":2241.802125847281}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9296848984348989,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4140625,"distances_sum":2115.3404596827613}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9456158424908427,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6171875,"distances_sum":2231.525004271389}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9347787629037635,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5859375,"distances_sum":2165.7110717400774}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520547161172167,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6953125,"distances_sum":2250.844952531429}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520547161172167,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6953125,"distances_sum":2250.844952531429}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520547161172167,"seconds":3.7122517824172974e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6953125,"distances_sum":2250.844952531429}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.2890625,"distances_sum":892.3886553377506}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8438738344988355,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2578125,"distances_sum":1786.0309919040317}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8438738344988355,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2578125,"distances_sum":1786.0309919040317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9360805860805866,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.65625,"distances_sum":2247.8607500038806}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9583593489843494,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":2400.3113320022994}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9127422924297933,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5703125,"distances_sum":2103.7847194951505}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9583593489843494,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":2400.3113320022994}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751316391941396,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2526.7448801579376}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9629178113553116,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":2406.0391149359148}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751316391941396,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2526.7448801579376}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751316391941396,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2526.7448801579376}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44140625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.44140625,"f1":null,"seconds":2.5872141122817993e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":6.3515625,"distances_sum":979.2745301003382}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7846022033522041,"seconds":3.1366944313049316e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":7.640625,"distances_sum":1519.4071505757265}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":2.637505531311035e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":6.15625,"distances_sum":840.1716351224057}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7846022033522041,"seconds":3.1366944313049316e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":7.640625,"distances_sum":1519.4071505757265}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455299908424913,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.640625,"distances_sum":2304.394453888592}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8572812604062614,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.2734375,"distances_sum":1807.8247014886697}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9179346694971704,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.5859375,"distances_sum":2113.2252557461165}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9211595695970706,"seconds":3.471970558166504e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.640625,"distances_sum":2125.9710604403795}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9455299908424913,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.640625,"distances_sum":2304.394453888592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964234203296704,"seconds":7.554888725280762e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.875,"distances_sum":2421.8990114951926}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":7.776543498039246e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.890625,"distances_sum":2471.9868320907276}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.965908570596071,"seconds":7.620081305503845e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.890625,"distances_sum":2458.6050551830735}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9468292124542128,"seconds":7.163733243942261e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.6640625,"distances_sum":2292.3237127544094}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967244734432235,"seconds":7.37607479095459e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.90625,"distances_sum":2442.1314678387535}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":7.776543498039246e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.890625,"distances_sum":2471.9868320907276}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":7.776543498039246e-6,"exhaustive_search_seconds":8.530914783477783e-7,"evaluations":8.890625,"distances_sum":2471.9868320907276}}, n: 9
inertia(cfft.distances) = 18.368338480963473
inertia(cdnet.distances) = 24.369409271434744
inertia(crand.distances) = 19.487774531024538
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9355555555555556
===> k=5
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8755555555555555
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8933333333333332
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 3, 2, 2, 3, 3, 3, 3, 1, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9266666666666666
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
*** starting iteration: 1; err: [Inf, 0.3864666691259242] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3864666691259242, 0.19534129184447974] ***
*** starting iteration: 2; err: [Inf, 0.3864666691259242, 0.19534129184447974] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332] ***
*** starting iteration: 3; err: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** starting iteration: 4; err: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** starting iteration: 5; err: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** starting iteration: 6; err: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** finished computation of 12 references, err: [Inf, 0.3864666691259242, 0.19534129184447974, 0.17805814728706332, 0.16619682591598425, 0.1635783610426073, 0.1623779148122655, 0.16209971251282457] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.36462482748532493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36462482748532493, 0.25652933278873824] ***
*** finished computation of 7 references, err: [Inf, 0.36462482748532493, 0.25652933278873824] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 27]]
** centroid: 3, normalized-entropy: 0.625262405223423, [(2, 5), (3, 27)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 5]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 20), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4001200923835097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4001200923835097, 0.209551910208935] ***
*** finished computation of 7 references, err: [Inf, 0.4001200923835097, 0.209551910208935] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 10]]
** centroid: 2, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 6, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3684119441258062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3684119441258062, 0.2241812416224436] ***
*** finished computation of 7 references, err: [Inf, 0.3684119441258062, 0.2241812416224436] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9908000107630912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9908000107630912, 0.5638051057635856] ***
*** starting iteration: 2; err: [Inf, 0.9908000107630912, 0.5638051057635856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833] ***
*** starting iteration: 3; err: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833, 0.5394036234435065] ***
*** starting iteration: 4; err: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833, 0.5394036234435065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833, 0.5394036234435065, 0.5380253122001034] ***
*** starting iteration: 5; err: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833, 0.5394036234435065, 0.5380253122001034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833, 0.5394036234435065, 0.5380253122001034, 0.537417484541418] ***
*** finished computation of 3 references, err: [Inf, 0.9908000107630912, 0.5638051057635856, 0.543179580991833, 0.5394036234435065, 0.5380253122001034, 0.537417484541418] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 31]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 11), (3, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 2]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.102600006469569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.102600006469569, 0.6362712650917804] ***
*** starting iteration: 2; err: [Inf, 1.102600006469569, 0.6362712650917804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.102600006469569, 0.6362712650917804, 0.5251727664496844] ***
*** starting iteration: 3; err: [Inf, 1.102600006469569, 0.6362712650917804, 0.5251727664496844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.102600006469569, 0.6362712650917804, 0.5251727664496844, 0.5126383502533629] ***
*** starting iteration: 4; err: [Inf, 1.102600006469569, 0.6362712650917804, 0.5251727664496844, 0.5126383502533629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.102600006469569, 0.6362712650917804, 0.5251727664496844, 0.5126383502533629, 0.5117560232544688] ***
*** finished computation of 3 references, err: [Inf, 1.102600006469569, 0.6362712650917804, 0.5251727664496844, 0.5126383502533629, 0.5117560232544688] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.0294000181303433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0294000181303433, 0.8941845022231091] ***
*** starting iteration: 2; err: [Inf, 3.0294000181303433, 0.8941845022231091] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029] ***
*** starting iteration: 3; err: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029, 0.5233325667410098] ***
*** starting iteration: 4; err: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029, 0.5233325667410098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029, 0.5233325667410098, 0.5206135446658239] ***
*** starting iteration: 5; err: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029, 0.5233325667410098, 0.5206135446658239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029, 0.5233325667410098, 0.5206135446658239, 0.5198638787059893] ***
*** finished computation of 3 references, err: [Inf, 3.0294000181303433, 0.8941845022231091, 0.5735359827516029, 0.5233325667410098, 0.5206135446658239, 0.5198638787059893] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5002680569030693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5002680569030693, 0.2991186608806503] ***
*** finished computation of 7 references, err: [Inf, 0.5002680569030693, 0.2991186608806503] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 11, 6]]
** centroid: 5, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3629755504116753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3629755504116753, 0.2352108612323356] ***
*** finished computation of 7 references, err: [Inf, 0.3629755504116753, 0.2352108612323356] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5261528985620201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5261528985620201, 0.23415710535230386] ***
*** finished computation of 7 references, err: [Inf, 0.5261528985620201, 0.23415710535230386] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 8]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 5), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4538951063390557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4538951063390557, 0.23686747992954632] ***
*** finished computation of 7 references, err: [Inf, 0.4538951063390557, 0.23686747992954632] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 3]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 5]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4359630016935443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4359630016935443, 0.1949514608818509] ***
*** finished computation of 7 references, err: [Inf, 1.4359630016935443, 0.1949514608818509] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 7]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2848716353139928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2848716353139928, 0.20084354759170778] ***
*** finished computation of 7 references, err: [Inf, 0.2848716353139928, 0.20084354759170778] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5684999996086948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5684999996086948, 0.3254567206669051] ***
*** finished computation of 7 references, err: [Inf, 0.5684999996086948, 0.3254567206669051] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 4]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 19, 4]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(2, 19), (3, 4)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.567199994095486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.567199994095486, 0.25046740749019786] ***
*** finished computation of 7 references, err: [Inf, 0.567199994095486, 0.25046740749019786] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.010300000624037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.010300000624037, 0.5000307634158755] ***
*** finished computation of 7 references, err: [Inf, 1.010300000624037, 0.5000307634158755] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 15]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 33), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 7.9087045505399445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.9087045505399445, 0.8211457959885974] ***
*** finished computation of 3 references, err: [Inf, 7.9087045505399445, 0.8211457959885974] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 2, 0]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 33]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0075631505201768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0075631505201768, 0.37716563890384] ***
*** finished computation of 3 references, err: [Inf, 1.0075631505201768, 0.37716563890384] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 11]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(2, 31), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 3, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.925853886910078] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.925853886910078, 2.1157824996770818] ***
*** finished computation of 3 references, err: [Inf, 6.925853886910078, 2.1157824996770818] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [33, 32, 7]]
** centroid: 3, normalized-entropy: 0.8598004830640985, [(1, 33), (2, 32), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.7810999747106306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7810999747106306, 0.7928877335636941] ***
*** starting iteration: 2; err: [Inf, 3.7810999747106306, 0.7928877335636941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7810999747106306, 0.7928877335636941, 0.5360522863546983] ***
*** starting iteration: 3; err: [Inf, 3.7810999747106306, 0.7928877335636941, 0.5360522863546983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7810999747106306, 0.7928877335636941, 0.5360522863546983, 0.5267270251232058] ***
*** finished computation of 3 references, err: [Inf, 3.7810999747106306, 0.7928877335636941, 0.5360522863546983, 0.5267270251232058] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 7]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(2, 29), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 26]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3138000029009942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3138000029009942, 0.5486856143135905] ***
*** starting iteration: 2; err: [Inf, 1.3138000029009942, 0.5486856143135905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3138000029009942, 0.5486856143135905, 0.5434200263212898] ***
*** starting iteration: 3; err: [Inf, 1.3138000029009942, 0.5486856143135905, 0.5434200263212898] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3138000029009942, 0.5486856143135905, 0.5434200263212898, 0.5360978905159945] ***
*** finished computation of 3 references, err: [Inf, 1.3138000029009942, 0.5486856143135905, 0.5434200263212898, 0.5360978905159945] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 32]]
** centroid: 2, normalized-entropy: 0.4220005168831531, [(2, 3), (3, 32)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 2]]
** centroid: 3, normalized-entropy: 0.3451173149449528, [(2, 29), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3454000232176633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3454000232176633, 0.6116700312894278] ***
*** starting iteration: 2; err: [Inf, 1.3454000232176633, 0.6116700312894278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3454000232176633, 0.6116700312894278, 0.579541522604203] ***
*** starting iteration: 3; err: [Inf, 1.3454000232176633, 0.6116700312894278, 0.579541522604203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3454000232176633, 0.6116700312894278, 0.579541522604203, 0.5555209441301201] ***
*** finished computation of 3 references, err: [Inf, 1.3454000232176633, 0.6116700312894278, 0.579541522604203, 0.5555209441301201] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 6]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3105999971118445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3105999971118445, 0.5503420262411173] ***
*** starting iteration: 2; err: [Inf, 1.3105999971118445, 0.5503420262411173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192] ***
*** starting iteration: 3; err: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192, 0.530096401854079] ***
*** starting iteration: 4; err: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192, 0.530096401854079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192, 0.530096401854079, 0.5282681706265528] ***
*** starting iteration: 5; err: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192, 0.530096401854079, 0.5282681706265528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** finished computation of 3 references, err: [Inf, 1.3105999971118445, 0.5503420262411173, 0.5366627342753192, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.1846000053800627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1846000053800627, 1.025935198927513] ***
*** starting iteration: 2; err: [Inf, 2.1846000053800627, 1.025935198927513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1846000053800627, 1.025935198927513, 0.9956750292187772] ***
*** starting iteration: 3; err: [Inf, 2.1846000053800627, 1.025935198927513, 0.9956750292187772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1846000053800627, 1.025935198927513, 0.9956750292187772, 0.9929455906845389] ***
*** starting iteration: 4; err: [Inf, 2.1846000053800627, 1.025935198927513, 0.9956750292187772, 0.9929455906845389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1846000053800627, 1.025935198927513, 0.9956750292187772, 0.9929455906845389, 0.9925141846161213] ***
*** finished computation of 3 references, err: [Inf, 2.1846000053800627, 1.025935198927513, 0.9956750292187772, 0.9929455906845389, 0.9925141846161213] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [12, 3, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 12), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 2, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.665600004062801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.665600004062801, 1.1488095231993205] ***
*** starting iteration: 2; err: [Inf, 5.665600004062801, 1.1488095231993205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.665600004062801, 1.1488095231993205, 0.5273396730030746] ***
*** starting iteration: 3; err: [Inf, 5.665600004062801, 1.1488095231993205, 0.5273396730030746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.665600004062801, 1.1488095231993205, 0.5273396730030746, 0.5198638787059893] ***
*** starting iteration: 4; err: [Inf, 5.665600004062801, 1.1488095231993205, 0.5273396730030746, 0.5198638787059893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.665600004062801, 1.1488095231993205, 0.5273396730030746, 0.5198638787059893, 0.5198638787059893] ***
*** finished computation of 3 references, err: [Inf, 5.665600004062801, 1.1488095231993205, 0.5273396730030746, 0.5198638787059893, 0.5198638787059893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3556930066979852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556930066979852, 0.1937403332776838] ***
*** starting iteration: 2; err: [Inf, 0.3556930066979852, 0.1937403332776838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556930066979852, 0.1937403332776838, 0.17861651481891141] ***
*** starting iteration: 3; err: [Inf, 0.3556930066979852, 0.1937403332776838, 0.17861651481891141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556930066979852, 0.1937403332776838, 0.17861651481891141, 0.17583413528192604] ***
*** starting iteration: 4; err: [Inf, 0.3556930066979852, 0.1937403332776838, 0.17861651481891141, 0.17583413528192604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3556930066979852, 0.1937403332776838, 0.17861651481891141, 0.17583413528192604, 0.17601730562500098] ***
*** finished computation of 7 references, err: [Inf, 0.3556930066979852, 0.1937403332776838, 0.17861651481891141, 0.17583413528192604, 0.17601730562500098] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3445798197606156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3445798197606156, 0.1886956651244331] ***
*** starting iteration: 2; err: [Inf, 0.3445798197606156, 0.1886956651244331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475] ***
*** starting iteration: 3; err: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475, 0.15144370753775838] ***
*** starting iteration: 4; err: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475, 0.15144370753775838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475, 0.15144370753775838, 0.1499247766987438] ***
*** starting iteration: 5; err: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475, 0.15144370753775838, 0.1499247766987438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475, 0.15144370753775838, 0.1499247766987438, 0.14943180859991828] ***
*** finished computation of 7 references, err: [Inf, 0.3445798197606156, 0.1886956651244331, 0.15706792107289475, 0.15144370753775838, 0.1499247766987438, 0.14943180859991828] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 10]]
** centroid: 1, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4618282732018326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906] ***
*** starting iteration: 2; err: [Inf, 0.4618282732018326, 0.31757407538545906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921] ***
*** starting iteration: 3; err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348] ***
*** starting iteration: 4; err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862] ***
*** starting iteration: 5; err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248] ***
*** starting iteration: 6; err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248, 0.19450648115016392] ***
*** starting iteration: 7; err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248, 0.19450648115016392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248, 0.19450648115016392, 0.19334322207813204] ***
*** starting iteration: 8; err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248, 0.19450648115016392, 0.19334322207813204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248, 0.19450648115016392, 0.19334322207813204, 0.19248791365952936] ***
*** finished computation of 7 references, err: [Inf, 0.4618282732018326, 0.31757407538545906, 0.2583225530400921, 0.22120191296887348, 0.20472475604701862, 0.19807741932874248, 0.19450648115016392, 0.19334322207813204, 0.19248791365952936] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 10]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(2, 16), (3, 10)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5280999985513649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286] ***
*** starting iteration: 2; err: [Inf, 0.5280999985513649, 0.31195880780227286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366] ***
*** starting iteration: 3; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854] ***
*** starting iteration: 4; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996] ***
*** starting iteration: 5; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725] ***
*** starting iteration: 6; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769] ***
*** starting iteration: 7; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089] ***
*** starting iteration: 8; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089, 0.26519838967065607] ***
*** starting iteration: 9; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089, 0.26519838967065607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089, 0.26519838967065607, 0.2634223234995374] ***
*** starting iteration: 10; err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089, 0.26519838967065607, 0.2634223234995374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089, 0.26519838967065607, 0.2634223234995374, 0.2634223234995374] ***
*** finished computation of 7 references, err: [Inf, 0.5280999985513649, 0.31195880780227286, 0.2906189147828366, 0.2869386149643854, 0.2816017952206996, 0.27395413853913725, 0.2715596224505769, 0.2679692229847089, 0.26519838967065607, 0.2634223234995374, 0.2634223234995374] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6198000071173047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925] ***
*** starting iteration: 2; err: [Inf, 0.6198000071173047, 0.35795312566264925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004] ***
*** starting iteration: 3; err: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873] ***
*** starting iteration: 4; err: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543] ***
*** starting iteration: 5; err: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543, 0.26003403065326247] ***
*** starting iteration: 6; err: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543, 0.26003403065326247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543, 0.26003403065326247, 0.25863056466660655] ***
*** starting iteration: 7; err: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543, 0.26003403065326247, 0.25863056466660655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543, 0.26003403065326247, 0.25863056466660655, 0.25863056466660655] ***
*** finished computation of 7 references, err: [Inf, 0.6198000071173047, 0.35795312566264925, 0.31371658052725004, 0.26668522882082873, 0.26365189175832543, 0.26003403065326247, 0.25863056466660655, 0.25863056466660655] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 11]]
** centroid: 3, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9716000128010677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9716000128010677, 0.4751058454354354] ***
*** starting iteration: 2; err: [Inf, 0.9716000128010677, 0.4751058454354354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375] ***
*** starting iteration: 3; err: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375, 0.4301207256170602] ***
*** starting iteration: 4; err: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375, 0.4301207256170602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375, 0.4301207256170602, 0.4229149123168503] ***
*** starting iteration: 5; err: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375, 0.4301207256170602, 0.4229149123168503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375, 0.4301207256170602, 0.4229149123168503, 0.4225760042725773] ***
*** finished computation of 7 references, err: [Inf, 0.9716000128010677, 0.4751058454354354, 0.452264900502375, 0.4301207256170602, 0.4229149123168503, 0.4225760042725773] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0974000044771413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0974000044771413, 0.6796000042652901] ***
*** starting iteration: 2; err: [Inf, 1.0974000044771413, 0.6796000042652901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0974000044771413, 0.6796000042652901, 0.5959187810824761] ***
*** starting iteration: 3; err: [Inf, 1.0974000044771413, 0.6796000042652901, 0.5959187810824761] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0974000044771413, 0.6796000042652901, 0.5959187810824761, 0.5512215914451541] ***
*** finished computation of 3 references, err: [Inf, 1.0974000044771413, 0.6796000042652901, 0.5959187810824761, 0.5512215914451541] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1984999978613473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1984999978613473, 0.5259031880220506] ***
*** starting iteration: 2; err: [Inf, 1.1984999978613473, 0.5259031880220506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1984999978613473, 0.5259031880220506, 0.5126383502533629] ***
*** starting iteration: 3; err: [Inf, 1.1984999978613473, 0.5259031880220506, 0.5126383502533629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1984999978613473, 0.5259031880220506, 0.5126383502533629, 0.5117560232544688] ***
*** finished computation of 3 references, err: [Inf, 1.1984999978613473, 0.5259031880220506, 0.5126383502533629, 0.5117560232544688] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2637000010852875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2637000010852875, 0.6259120655059944] ***
*** starting iteration: 2; err: [Inf, 1.2637000010852875, 0.6259120655059944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2637000010852875, 0.6259120655059944, 0.5637646039514373] ***
*** starting iteration: 3; err: [Inf, 1.2637000010852875, 0.6259120655059944, 0.5637646039514373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2637000010852875, 0.6259120655059944, 0.5637646039514373, 0.5262170419658458] ***
*** finished computation of 3 references, err: [Inf, 1.2637000010852875, 0.6259120655059944, 0.5637646039514373, 0.5262170419658458] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 1, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1636230679702955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1636230679702955, 0.3896599442654643] ***
*** starting iteration: 2; err: [Inf, 1.1636230679702955, 0.3896599442654643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1636230679702955, 0.3896599442654643, 0.36853354590305215] ***
*** starting iteration: 3; err: [Inf, 1.1636230679702955, 0.3896599442654643, 0.36853354590305215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1636230679702955, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234] ***
*** finished computation of 3 references, err: [Inf, 1.1636230679702955, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 26]]
** centroid: 2, normalized-entropy: 0.6962122601251459, [(2, 6), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6559972114646178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6559972114646178, 0.3831739435960085] ***
*** starting iteration: 2; err: [Inf, 0.6559972114646178, 0.3831739435960085] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6559972114646178, 0.3831739435960085, 0.3731031397793585] ***
*** starting iteration: 3; err: [Inf, 0.6559972114646178, 0.3831739435960085, 0.3731031397793585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6559972114646178, 0.3831739435960085, 0.3731031397793585, 0.36976583764043197] ***
*** finished computation of 3 references, err: [Inf, 0.6559972114646178, 0.3831739435960085, 0.3731031397793585, 0.36976583764043197] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 34]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(2, 4), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 28, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3096965832297622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3096965832297622, 0.3793187731905661] ***
*** starting iteration: 2; err: [Inf, 1.3096965832297622, 0.3793187731905661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3096965832297622, 0.3793187731905661, 0.3690065032962484] ***
*** starting iteration: 3; err: [Inf, 1.3096965832297622, 0.3793187731905661, 0.3690065032962484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3096965832297622, 0.3793187731905661, 0.3690065032962484, 0.3685030129075876] ***
*** finished computation of 3 references, err: [Inf, 1.3096965832297622, 0.3793187731905661, 0.3690065032962484, 0.3685030129075876] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7767088305312341] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7767088305312341, 0.4127090049643984] ***
*** finished computation of 3 references, err: [Inf, 0.7767088305312341, 0.4127090049643984] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7286314410225385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7286314410225385, 0.38434566384806557] ***
*** finished computation of 3 references, err: [Inf, 0.7286314410225385, 0.38434566384806557] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1552261526377798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1552261526377798, 0.3793187731905661] ***
*** finished computation of 3 references, err: [Inf, 1.1552261526377798, 0.3793187731905661] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3075999894181773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3075999894181773, 0.5904705826965744] ***
*** starting iteration: 2; err: [Inf, 1.3075999894181773, 0.5904705826965744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345] ***
*** starting iteration: 3; err: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689] ***
*** starting iteration: 4; err: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689, 0.530096401854079] ***
*** starting iteration: 5; err: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689, 0.530096401854079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528] ***
*** starting iteration: 6; err: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** finished computation of 3 references, err: [Inf, 1.3075999894181773, 0.5904705826965744, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9841000122710135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9841000122710135, 0.6351083956119914] ***
*** starting iteration: 2; err: [Inf, 0.9841000122710135, 0.6351083956119914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197] ***
*** starting iteration: 3; err: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197, 0.5145826748673983] ***
*** starting iteration: 4; err: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197, 0.5145826748673983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688] ***
*** starting iteration: 5; err: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688, 0.510787316914656] ***
*** finished computation of 3 references, err: [Inf, 0.9841000122710135, 0.6351083956119914, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688, 0.510787316914656] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1659000007710099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1659000007710099, 0.6029536867500732] ***
*** starting iteration: 2; err: [Inf, 1.1659000007710099, 0.6029536867500732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853] ***
*** starting iteration: 3; err: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853, 0.5233325667410098] ***
*** starting iteration: 4; err: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853, 0.5233325667410098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853, 0.5233325667410098, 0.5206135446658239] ***
*** starting iteration: 5; err: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853, 0.5233325667410098, 0.5206135446658239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853, 0.5233325667410098, 0.5206135446658239, 0.5198638787059893] ***
*** finished computation of 3 references, err: [Inf, 1.1659000007710099, 0.6029536867500732, 0.5530283041070853, 0.5233325667410098, 0.5206135446658239, 0.5198638787059893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47109713185163243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47109713185163243, 0.1980945298992949] ***
*** finished computation of 7 references, err: [Inf, 0.47109713185163243, 0.1980945298992949] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 3]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 3]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3159079376165549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3159079376165549, 0.18580269480851302] ***
*** finished computation of 7 references, err: [Inf, 0.3159079376165549, 0.18580269480851302] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 25]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4061268724933029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4061268724933029, 0.1599339422449226] ***
*** finished computation of 7 references, err: [Inf, 0.4061268724933029, 0.1599339422449226] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 4, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.567400007953262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.567400007953262, 0.3057103371839621] ***
*** starting iteration: 2; err: [Inf, 0.567400007953262, 0.3057103371839621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635] ***
*** starting iteration: 3; err: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635, 0.27230937486671336] ***
*** starting iteration: 4; err: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635, 0.27230937486671336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635, 0.27230937486671336, 0.26946238076914497] ***
*** starting iteration: 5; err: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635, 0.27230937486671336, 0.26946238076914497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635, 0.27230937486671336, 0.26946238076914497, 0.26946238076914497] ***
*** finished computation of 7 references, err: [Inf, 0.567400007953262, 0.3057103371839621, 0.2789761367821635, 0.27230937486671336, 0.26946238076914497, 0.26946238076914497] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 4]]
** centroid: 6, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5258000067639211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5258000067639211, 0.27234443103520894] ***
*** starting iteration: 2; err: [Inf, 0.5258000067639211, 0.27234443103520894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5258000067639211, 0.27234443103520894, 0.2566765900281872] ***
*** starting iteration: 3; err: [Inf, 0.5258000067639211, 0.27234443103520894, 0.2566765900281872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5258000067639211, 0.27234443103520894, 0.2566765900281872, 0.25597188563893397] ***
*** finished computation of 7 references, err: [Inf, 0.5258000067639211, 0.27234443103520894, 0.2566765900281872, 0.25597188563893397] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 2]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(2, 21), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5529000035565355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896] ***
*** starting iteration: 2; err: [Inf, 0.5529000035565355, 0.3056212529040896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049] ***
*** starting iteration: 3; err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544] ***
*** starting iteration: 4; err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843] ***
*** starting iteration: 5; err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137] ***
*** starting iteration: 6; err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137, 0.23185746550197642] ***
*** starting iteration: 7; err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137, 0.23185746550197642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137, 0.23185746550197642, 0.22920976734824466] ***
*** starting iteration: 8; err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137, 0.23185746550197642, 0.22920976734824466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137, 0.23185746550197642, 0.22920976734824466, 0.22920976734824466] ***
*** finished computation of 7 references, err: [Inf, 0.5529000035565355, 0.3056212529040896, 0.2844193644174049, 0.26507524532804544, 0.24942391266622843, 0.23701216628349137, 0.23185746550197642, 0.22920976734824466, 0.22920976734824466] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 8]]
** centroid: 3, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.9, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.7644775090166577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7644775090166577, 0.37916837845287743] ***
*** starting iteration: 2; err: [Inf, 0.7644775090166577, 0.37916837845287743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215] ***
*** starting iteration: 3; err: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234] ***
*** starting iteration: 4; err: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234, 0.360630004158411] ***
*** starting iteration: 5; err: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234, 0.360630004158411] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187] ***
*** starting iteration: 6; err: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187, 0.35949123593737187] ***
*** finished computation of 3 references, err: [Inf, 0.7644775090166577, 0.37916837845287743, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187, 0.35949123593737187] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 27]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 6), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 6]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.702211708977141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.702211708977141, 0.3623274417563219] ***
*** starting iteration: 2; err: [Inf, 0.702211708977141, 0.3623274417563219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.702211708977141, 0.3623274417563219, 0.3563857394476132] ***
*** starting iteration: 3; err: [Inf, 0.702211708977141, 0.3623274417563219, 0.3563857394476132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.702211708977141, 0.3623274417563219, 0.3563857394476132, 0.35590973517615837] ***
*** finished computation of 3 references, err: [Inf, 0.702211708977141, 0.3623274417563219, 0.3563857394476132, 0.35590973517615837] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8706422271022822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8706422271022822, 0.397128078046888] ***
*** starting iteration: 2; err: [Inf, 0.8706422271022822, 0.397128078046888] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8706422271022822, 0.397128078046888, 0.3738266914020567] ***
*** starting iteration: 3; err: [Inf, 0.8706422271022822, 0.397128078046888, 0.3738266914020567] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8706422271022822, 0.397128078046888, 0.3738266914020567, 0.3685030129075876] ***
*** starting iteration: 4; err: [Inf, 0.8706422271022822, 0.397128078046888, 0.3738266914020567, 0.3685030129075876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8706422271022822, 0.397128078046888, 0.3738266914020567, 0.3685030129075876, 0.368310082932129] ***
*** finished computation of 3 references, err: [Inf, 0.8706422271022822, 0.397128078046888, 0.3738266914020567, 0.3685030129075876, 0.368310082932129] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3305000070065132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049] ***
*** starting iteration: 2; err: [Inf, 1.3305000070065132, 0.6625935593787049] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179] ***
*** starting iteration: 3; err: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541] ***
*** starting iteration: 4; err: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192] ***
*** starting iteration: 5; err: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192, 0.530096401854079] ***
*** starting iteration: 6; err: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192, 0.530096401854079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192, 0.530096401854079, 0.5282681706265528] ***
*** starting iteration: 7; err: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192, 0.530096401854079, 0.5282681706265528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** finished computation of 3 references, err: [Inf, 1.3305000070065132, 0.6625935593787049, 0.6029058570594179, 0.5512215914451541, 0.5366627342753192, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1298999825679998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1298999825679998, 0.646991712132338] ***
*** starting iteration: 2; err: [Inf, 1.1298999825679998, 0.646991712132338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197] ***
*** starting iteration: 3; err: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197, 0.5145826748673983] ***
*** starting iteration: 4; err: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197, 0.5145826748673983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688] ***
*** starting iteration: 5; err: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688, 0.510787316914656] ***
*** finished computation of 3 references, err: [Inf, 1.1298999825679998, 0.646991712132338, 0.5542181130309197, 0.5145826748673983, 0.5117560232544688, 0.510787316914656] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 2, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.957099984253785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.957099984253785, 1.7912848574416262] ***
*** starting iteration: 2; err: [Inf, 4.957099984253785, 1.7912848574416262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515] ***
*** starting iteration: 3; err: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926] ***
*** starting iteration: 4; err: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926, 0.530325856732532] ***
*** starting iteration: 5; err: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926, 0.530325856732532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926, 0.530325856732532, 0.5206135446658239] ***
*** starting iteration: 6; err: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926, 0.530325856732532, 0.5206135446658239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926, 0.530325856732532, 0.5206135446658239, 0.5198638787059893] ***
*** finished computation of 3 references, err: [Inf, 4.957099984253785, 1.7912848574416262, 0.9038170150282515, 0.5825635266868926, 0.530325856732532, 0.5206135446658239, 0.5198638787059893] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.6291000056734003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6291000056734003, 0.25818061466133546] ***
*** finished computation of 7 references, err: [Inf, 0.6291000056734003, 0.25818061466133546] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 3]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5324000021877828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5324000021877828, 0.2544376726593787] ***
*** finished computation of 7 references, err: [Inf, 0.5324000021877828, 0.2544376726593787] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 11]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6050000063668951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6050000063668951, 0.28847460580369705] ***
*** finished computation of 7 references, err: [Inf, 0.6050000063668951, 0.28847460580369705] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 20]]
** centroid: 1, normalized-entropy: 0.9774178175281716, [(2, 14), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.0296000015254336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882] ***
*** starting iteration: 2; err: [Inf, 1.0296000015254336, 0.3611565062760882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954] ***
*** starting iteration: 3; err: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319] ***
*** starting iteration: 4; err: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637] ***
*** starting iteration: 5; err: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637, 0.2817800786715317] ***
*** starting iteration: 6; err: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637, 0.2817800786715317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637, 0.2817800786715317, 0.2794392527256073] ***
*** starting iteration: 7; err: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637, 0.2817800786715317, 0.2794392527256073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637, 0.2817800786715317, 0.2794392527256073, 0.2794392527256073] ***
*** finished computation of 7 references, err: [Inf, 1.0296000015254336, 0.3611565062760882, 0.31716036699598954, 0.2991717907867319, 0.28616503244498637, 0.2817800786715317, 0.2794392527256073, 0.2794392527256073] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 4, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.2481999916232667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361] ***
*** starting iteration: 2; err: [Inf, 3.2481999916232667, 0.6379724678648361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754] ***
*** starting iteration: 3; err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364] ***
*** starting iteration: 4; err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856] ***
*** starting iteration: 5; err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351] ***
*** starting iteration: 6; err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351, 0.27503818154242177] ***
*** starting iteration: 7; err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351, 0.27503818154242177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351, 0.27503818154242177, 0.27314364525178664] ***
*** starting iteration: 8; err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351, 0.27503818154242177, 0.27314364525178664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351, 0.27503818154242177, 0.27314364525178664, 0.27314364525178664] ***
*** finished computation of 7 references, err: [Inf, 3.2481999916232667, 0.6379724678648361, 0.31715740265901754, 0.2983044935444364, 0.290648937074856, 0.279881264361351, 0.27503818154242177, 0.27314364525178664, 0.27314364525178664] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.5171000004055304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317] ***
*** starting iteration: 2; err: [Inf, 2.5171000004055304, 0.8048088741579317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285] ***
*** starting iteration: 3; err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167] ***
*** starting iteration: 4; err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758] ***
*** starting iteration: 5; err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283] ***
*** starting iteration: 6; err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283, 0.44058123858993853] ***
*** starting iteration: 7; err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283, 0.44058123858993853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283, 0.44058123858993853, 0.42863694307725525] ***
*** starting iteration: 8; err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283, 0.44058123858993853, 0.42863694307725525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283, 0.44058123858993853, 0.42863694307725525, 0.4278776670360621] ***
*** finished computation of 7 references, err: [Inf, 2.5171000004055304, 0.8048088741579317, 0.5538787736302285, 0.505538691516167, 0.4875553109342758, 0.46353473246019283, 0.44058123858993853, 0.42863694307725525, 0.4278776670360621] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 5 finished
*** starting iteration: 1; err: [Inf, 1.1780645821476918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1780645821476918, 0.3896599442654643] ***
*** starting iteration: 2; err: [Inf, 1.1780645821476918, 0.3896599442654643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215] ***
*** starting iteration: 3; err: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234] ***
*** starting iteration: 4; err: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234, 0.360630004158411] ***
*** starting iteration: 5; err: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234, 0.360630004158411] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187] ***
*** starting iteration: 6; err: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187, 0.35949123593737187] ***
*** finished computation of 3 references, err: [Inf, 1.1780645821476918, 0.3896599442654643, 0.36853354590305215, 0.36261721424476234, 0.360630004158411, 0.35949123593737187, 0.35949123593737187] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 27]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 6), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 6]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6477741766445502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6477741766445502, 0.38943713473685465] ***
*** starting iteration: 2; err: [Inf, 0.6477741766445502, 0.38943713473685465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6477741766445502, 0.38943713473685465, 0.3669385229796687] ***
*** starting iteration: 3; err: [Inf, 0.6477741766445502, 0.38943713473685465, 0.3669385229796687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6477741766445502, 0.38943713473685465, 0.3669385229796687, 0.3563857394476132] ***
*** starting iteration: 4; err: [Inf, 0.6477741766445502, 0.38943713473685465, 0.3669385229796687, 0.3563857394476132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6477741766445502, 0.38943713473685465, 0.3669385229796687, 0.3563857394476132, 0.35590973517615837] ***
*** finished computation of 3 references, err: [Inf, 0.6477741766445502, 0.38943713473685465, 0.3669385229796687, 0.3563857394476132, 0.35590973517615837] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6881950510351121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6881950510351121, 0.43169595384867504] ***
*** starting iteration: 2; err: [Inf, 0.6881950510351121, 0.43169595384867504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605] ***
*** starting iteration: 3; err: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093] ***
*** starting iteration: 4; err: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093, 0.3701009435579112] ***
*** starting iteration: 5; err: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093, 0.3701009435579112] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093, 0.3701009435579112, 0.3685030129075876] ***
*** starting iteration: 6; err: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093, 0.3701009435579112, 0.3685030129075876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093, 0.3701009435579112, 0.3685030129075876, 0.368310082932129] ***
*** finished computation of 3 references, err: [Inf, 0.6881950510351121, 0.43169595384867504, 0.40737893295409605, 0.38016867147168093, 0.3701009435579112, 0.3685030129075876, 0.368310082932129] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5546999833450554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5546999833450554, 0.5467408697629345] ***
*** starting iteration: 2; err: [Inf, 1.5546999833450554, 0.5467408697629345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689] ***
*** starting iteration: 3; err: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689, 0.530096401854079] ***
*** starting iteration: 4; err: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689, 0.530096401854079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528] ***
*** starting iteration: 5; err: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** finished computation of 3 references, err: [Inf, 1.5546999833450554, 0.5467408697629345, 0.5342134097722689, 0.530096401854079, 0.5282681706265528, 0.5282681706265528] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0387999961736754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0387999961736754, 0.5471300630856899] ***
*** starting iteration: 2; err: [Inf, 1.0387999961736754, 0.5471300630856899] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0387999961736754, 0.5471300630856899, 0.5145826748673983] ***
*** starting iteration: 3; err: [Inf, 1.0387999961736754, 0.5471300630856899, 0.5145826748673983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0387999961736754, 0.5471300630856899, 0.5145826748673983, 0.5117560232544688] ***
*** starting iteration: 4; err: [Inf, 1.0387999961736754, 0.5471300630856899, 0.5145826748673983, 0.5117560232544688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0387999961736754, 0.5471300630856899, 0.5145826748673983, 0.5117560232544688, 0.510787316914656] ***
*** finished computation of 3 references, err: [Inf, 1.0387999961736754, 0.5471300630856899, 0.5145826748673983, 0.5117560232544688, 0.510787316914656] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2418999923095742] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2418999923095742, 0.5222803154037892] ***
*** starting iteration: 2; err: [Inf, 1.2418999923095742, 0.5222803154037892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2418999923095742, 0.5222803154037892, 0.5198638787059893] ***
*** starting iteration: 3; err: [Inf, 1.2418999923095742, 0.5222803154037892, 0.5198638787059893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2418999923095742, 0.5222803154037892, 0.5198638787059893, 0.5198638787059893] ***
*** finished computation of 3 references, err: [Inf, 1.2418999923095742, 0.5222803154037892, 0.5198638787059893, 0.5198638787059893] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 23
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.1256930243958778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1256930243958778, 0.6243965331433513] ***
*** starting iteration: 2; err: [Inf, 1.1256930243958778, 0.6243965331433513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1256930243958778, 0.6243965331433513, 0.6049427509135961] ***
*** starting iteration: 3; err: [Inf, 1.1256930243958778, 0.6243965331433513, 0.6049427509135961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1256930243958778, 0.6243965331433513, 0.6049427509135961, 0.603232999538746] ***
*** finished computation of 3 references, err: [Inf, 1.1256930243958778, 0.6243965331433513, 0.6049427509135961, 0.603232999538746] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 33]]
** centroid: 3, normalized-entropy: 1.0, [(2, 33), (3, 33)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2821046988751403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2821046988751403, 0.7954746426289229] ***
*** starting iteration: 2; err: [Inf, 3.2821046988751403, 0.7954746426289229] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2821046988751403, 0.7954746426289229, 0.4309412826151947] ***
*** starting iteration: 3; err: [Inf, 3.2821046988751403, 0.7954746426289229, 0.4309412826151947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2821046988751403, 0.7954746426289229, 0.4309412826151947, 0.3822460815422858] ***
*** finished computation of 3 references, err: [Inf, 3.2821046988751403, 0.7954746426289229, 0.4309412826151947, 0.3822460815422858] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 13]]
** centroid: 2, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.625854529901578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.625854529901578, 0.7456945448419064] ***
*** starting iteration: 2; err: [Inf, 2.625854529901578, 0.7456945448419064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.625854529901578, 0.7456945448419064, 0.3827919633882708] ***
*** starting iteration: 3; err: [Inf, 2.625854529901578, 0.7456945448419064, 0.3827919633882708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.625854529901578, 0.7456945448419064, 0.3827919633882708, 0.3685030129075876] ***
*** finished computation of 3 references, err: [Inf, 2.625854529901578, 0.7456945448419064, 0.3827919633882708, 0.3685030129075876] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 23)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.82]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 24
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.4248700141569827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4248700141569827, 0.21260681938541848] ***
*** finished computation of 7 references, err: [Inf, 0.4248700141569827, 0.21260681938541848] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.5604553108788197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.5604553108788197, 0.6108186453272574] ***
*** finished computation of 7 references, err: [Inf, 2.5604553108788197, 0.6108186453272574] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 4]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [34, 3, 0]]
** centroid: 6, normalized-entropy: 0.40597703847557104, [(1, 34), (2, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.8216561904491435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8216561904491435, 0.6328020362561826] ***
*** finished computation of 7 references, err: [Inf, 2.8216561904491435, 0.6328020362561826] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 33, 33]]
** centroid: 7, normalized-entropy: 1.0, [(2, 33), (3, 33)]
finished with 7 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.817241379310345, 2.689655172413793, 4.20344827586207, 1.306896551724138], [5.742857142857143, 2.7142857142857144, 4.885714285714285, 1.8000000000000003], [4.987878787878786, 3.415151515151516, 1.4393939393939394, 0.2545454545454546], [6.82, 3.04, 4.819999999999999, 1.5000000000000002], [6.66923076923077, 3.088461538461538, 5.661538461538461, 2.076923076923077]], [0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.0441176470588225, 3.458823529411765, 1.476470588235294, 0.2529411764705883], [6.666666666666667, 3.1666666666666665, 4.8, 1.5666666666666667], [6.671875000000001, 2.9937499999999995, 5.6312500000000005, 2.0781249999999996], [5.782758620689655, 2.710344827586207, 4.1241379310344835, 1.2655172413793105], [5.85, 2.35, 5.0, 1.75]], [0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.8, 3.0, 4.8, 1.4666666666666668], [6.877777777777777, 3.0037037037037035, 5.7185185185185174, 2.0333333333333328], [4.984848484848485, 3.3787878787878785, 1.4757575757575756, 0.22424242424242424], [5.893548387096774, 2.7967741935483876, 4.24516129032258, 1.335483870967742], [5.716666666666666, 2.75, 4.866666666666666, 1.8499999999999999]], [0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 3, 3, 1.0, :rand, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[59, 44, 1, 1, 12, 2, 13, 34, 2, 21, 17, 1, 33, 35, 14, 38, 38, 26, 45, 2, 31, 1, 23, 27, 22, 40, 45, 23, 26, 37, 31, 47, 22, 7, 20, 18, 28, 17, 1, 1, 42, 3, 20, 19, 52, 16, 27, 30, 31, 36, 38, 24, 10, 34, 23, 48, 21, 30, 2, 37, 32, 27, 26, 47, 23, 35, 11, 109, 29, 1, 46, 27, 30, 12, 21, 38, 11, 35, 34, 48, 38, 31, 54, 36, 20, 10, 26, 30, 39, 23, 1, 1, 33, 31, 51, 3, 37, 56, 27, 44, 30, 23, 26, 47, 53, 42, 43, 15, 26, 43, 27, 56, 29, 28, 33, 22, 35, 13, 25, 26, 35, 37, 50, 21, 23, 9, 32, 26, 58, 34, 28, 27, 37, 53, 33, 39, 28, 42, 67, 47, 19, 43, 45, 35, 12, 22, 48, 1, 22, 57, 40, 36, 21, 56, 29, 35, 30, 36, 35, 30, 28, 45, 37, 34, 45, 30, 33, 32, 5, 31, 40, 62, 35, 28, 41, 68, 47, 40, 44, 32, 31, 24, 26, 29, 47, 36, 33, 44, 41, 47, 31, 27, 46, 29, 49, 34, 73, 39, 36, 40, 28, 56, 16, 40, 29, 30, 37, 26, 36, 61, 46, 34, 37, 31, 40, 37, 20, 20, 40, 29, 24, 47, 17, 50, 23, 41, 49, 26, 41, 22, 37, 24, 22, 41, 40, 32, 47, 49, 38, 27, 56, 36, 51, 44, 34, 1, 56, 29, 25, 14, 65, 47, 28, 26, 56, 39, 31, 75, 44, 49, 34, 45, 35, 47, 48, 65, 50, 47, 45, 41, 51, 19, 60, 27, 37, 36, 29, 37, 6, 43, 31, 31, 52, 34, 40, 26, 19, 64, 30, 29, 47, 39, 22, 41, 41, 63, 20, 34, 66, 53]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6080000000000001, speedup = 0.49547072695115874, eval_ratio = 0.042347)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.355034722222222,"recall":0.34809027777777757,"f1":null,"seconds":7.23470002412796e-5,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":343.0,"distances_sum":1740.4914653764426}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5104166666666667,"recall":0.5043402777777778,"f1":null,"seconds":0.00010780803859233856,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":383.3515625,"distances_sum":1621.7505815720904}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6006944444444443,"recall":0.6006944444444443,"f1":null,"seconds":0.00013945437967777252,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":421.0234375,"distances_sum":1601.871397903737}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.6927083333333334,"recall":0.6927083333333334,"f1":0.6927083333333334,"seconds":0.00017186999320983887,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":460.984375,"distances_sum":1567.3586359509386}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7534722222222217,"recall":0.7534722222222217,"f1":0.7534722222222217,"seconds":0.00020441226661205292,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":503.796875,"distances_sum":1550.1338906868946}
KCenters.DeloneInvIndex> optimize! step region_expansion=7, performance {"precision":0.7977430555555548,"recall":0.7977430555555548,"f1":0.7977430555555548,"seconds":0.00024753622710704803,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":544.7265625,"distances_sum":1537.439301495866}
KCenters.DeloneInvIndex> reached performance {"precision":0.8359374999999993,"recall":0.8359374999999993,"f1":0.8359374999999993,"seconds":0.00039260275661945343,"exhaustive_search_seconds":0.0003939066082239151,"evaluations":585.390625,"distances_sum":1529.340458184671}
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.834, speedup = 2.3778712830883353, eval_ratio = 0.058577)
   Testing KCenters tests passed 
