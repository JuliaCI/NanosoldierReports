Julia Version 1.4.0-DEV.642
Commit 0edadf1ce0 (2019-12-19 18:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_AvRMo1/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_AvRMo1/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_AvRMo1/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  7.275026 seconds (4.05 M allocations: 468.941 MiB, 7.62% gc time)
  3.631608 seconds (109.82 k allocations: 284.886 MiB, 11.50% gc time)

Testing LLL on 10x10 complex matrix...
  9.886238 seconds (11.40 M allocations: 525.256 MiB, 6.20% gc time)
  0.028743 seconds (606 allocations: 71.391 KiB)
Testing Seysen on same 10x10 complex matrix...
  2.440570 seconds (2.66 M allocations: 129.481 MiB, 2.72% gc time)
  0.086721 seconds (146 allocations: 76.359 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.834506 seconds (2.24 M allocations: 103.592 MiB, 2.44% gc time)
  0.183042 seconds (230 allocations: 122.219 KiB)
Testing Brun on real part of same 10x10 matrix...
  2.019627 seconds (1.80 M allocations: 88.707 MiB, 4.08% gc time)
  0.000217 seconds (37 allocations: 13.484 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.472640 seconds (4.33 M allocations: 322.612 MiB, 5.56% gc time)
  0.601662 seconds (2.00 M allocations: 210.011 MiB, 8.45% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  1.259051 seconds (857.22 k allocations: 361.541 MiB, 12.35% gc time)
min norm of lll-reduced basis is 29.30870177950569
  8.086134 seconds (5.14 M allocations: 1.251 GiB, 4.24% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
