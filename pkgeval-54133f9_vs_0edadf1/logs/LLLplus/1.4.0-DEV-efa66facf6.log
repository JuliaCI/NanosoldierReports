Julia Version 1.4.0-DEV.648
Commit efa66facf6 (2019-12-19 21:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_Ms4JrJ/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_Ms4JrJ/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_Ms4JrJ/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  5.052424 seconds (3.47 M allocations: 685.582 MiB, 9.19% gc time)
  1.907751 seconds (75.35 k allocations: 519.256 MiB, 1.56% gc time)

Testing LLL on 10x10 complex matrix...
  8.121737 seconds (9.87 M allocations: 475.602 MiB, 5.16% gc time)
  0.000396 seconds (307 allocations: 65.688 KiB)
Testing Seysen on same 10x10 complex matrix...
  2.537397 seconds (2.29 M allocations: 118.046 MiB, 4.83% gc time)
  0.047085 seconds (323 allocations: 141.562 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.469130 seconds (1.95 M allocations: 94.624 MiB, 2.14% gc time)
  0.166603 seconds (181 allocations: 121.000 KiB)
Testing Brun on real part of same 10x10 matrix...
  1.723902 seconds (1.55 M allocations: 80.799 MiB, 3.28% gc time)
  0.000138 seconds (24 allocations: 12.188 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.633199 seconds (4.27 M allocations: 337.577 MiB, 17.36% gc time)
  0.503410 seconds (2.27 M allocations: 235.149 MiB, 5.42% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  0.955926 seconds (312.40 k allocations: 335.329 MiB, 7.36% gc time)
min norm of lll-reduced basis is 29.30870177950569
  6.178595 seconds (4.43 M allocations: 1.230 GiB, 3.75% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
