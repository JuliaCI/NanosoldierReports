Julia Version 1.3.1-pre.13
Commit 8639e5771d (2019-12-07 10:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [============>                            ]  29.7 %    Fetching: [========================>                ]  59.8 %    Fetching: [======================================>  ]  93.0 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Requires â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed ChainRulesCore â”€ v0.4.0
 Installed Reexport â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed ChainRules â”€â”€â”€â”€â”€ v0.2.3
  Updating `~/.julia/environments/v1.3/Project.toml`
  [082447d4] + ChainRules v0.2.3
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [082447d4] + ChainRules v0.2.3
  [d360d2e6] + ChainRulesCore v0.4.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing ChainRules
 Resolving package versions...
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed SpecialFunctions â”€â”€ v0.9.0
 Installed OpenSpecFun_jll â”€â”€â”€ v0.5.3+1
 Installed FiniteDifferences â”€ v0.9.0
    Status `/tmp/jl_DrYygr/Manifest.toml`
  [082447d4] ChainRules v0.2.3
  [d360d2e6] ChainRulesCore v0.4.0
  [26cc04aa] FiniteDifferences v0.9.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [276daf66] SpecialFunctions v0.9.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Method definition rrule(typeof(Base.sum), AbstractArray{#s677, N} where N where #s677<:Real) in module ChainRules at /home/pkgeval/.julia/packages/ChainRules/ziOpP/src/rulesets/Base/mapreduce.jl:61 overwritten at /home/pkgeval/.julia/packages/ChainRules/ziOpP/src/rulesets/Base/mapreduce.jl:76.
  ** incremental compilation may be fatally broken for this module **

Testing ChainRules.jl
sincos: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(sincos), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:78
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:74
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:55
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:3
   [11] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:2
  
identity: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(identity), ::Float64, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Float64, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:152
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:151
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:2
  
identity: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(identity), ::Array{Float64,1}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Array{Float64,1}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:153
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:151
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/base.jl:2
  
mapreduce: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:25
  Test threw exception
  Expression: â‰ˆ(xÌ„_ad, xÌ„_fd, atol=1.0e-9, rtol=1.0e-9)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; atol=1.0e-9, rtol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Array{Float64,2},typeof(abs2),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Array{Float64,2},typeof(abs2),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:25
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:12
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
Vector: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,1}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,1}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(sum), ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:39
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:37
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [11] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
Matrix: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(sum), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:44
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:42
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [11] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
Array{T, 3}: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,3}, ::Tuple{Array{Float64,3}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,3}}}, ::Tuple{Array{Float64,3}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Float64,typeof(identity),Array{Float64,3}}}, ::Tuple{Array{Float64,3}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(sum), ::Float64, ::Tuple{Array{Float64,3},Array{Float64,3}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,3},Array{Float64,3}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:49
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:47
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [11] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
keyword arguments: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:65
  Test threw exception
  Expression: â‰ˆ(xÌ„_ad, xÌ„_fd, atol=1.0e-9, rtol=1.0e-9)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; atol=1.0e-9, rtol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Array{Float64,2},typeof(identity),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:atol, :rtol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#600#603"{Array{Float64,2},typeof(identity),Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:65
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:58
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:36
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Base/mapreduce.jl:2
  
 Basic: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#630#632"{Float64,ChainRules.var"#sum_pullback#622"{ChainRules.var"#sum_pullback#620"{ChainRules.var"#mapreduce_pullback#602"{typeof(identity),Array{Float64,1}}}},Int64}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#630#632"{Float64,ChainRules.var"#sum_pullback#622"{ChainRules.var"#sum_pullback#620"{ChainRules.var"#mapreduce_pullback#602"{typeof(identity),Array{Float64,1}}}},Int64}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(mean), ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:6
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:6
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:2
  
with dims kwargs: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:31
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-9, atol=1.0e-9)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:31
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:25
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/Statistics/statistics.jl:2
  
 inv: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(inv), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:37
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:34
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
det: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#724#726"{Float64,Array{Float64,2},Float64}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#724#726"{Float64,Array{Float64,2},Float64}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(det), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:43
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:40
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
logdet: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#728#730"{Float64,Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#728#730"{Float64,Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(logdet), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:49
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:46
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
tr: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#732#734"{Float64,Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#732#734"{Float64,Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(tr), ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Float64, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:54
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:52
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
  
Matrix: Test Failed at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:195
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
   Evaluated: isapprox(Thunk(ChainRules.var"#755#758"{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}([-0.9827718177516547 -3.049187087985662 -0.45753014518031915 0.049550548181828; -1.1457095184571038 -1.281790532097414 -0.7991285413217107 -0.8913053693383933; 0.25819205428715203 2.8015194483397003 1.0753460926351635 -0.7053146611866707; -2.282547976724439 0.5639614209301308 -0.5569593865129592 1.3970437844025363], [-0.34807928510100733 0.8718983568753548 -1.3002596896606895 -0.4385362125324239; -0.19506959830062723 -0.007206357093314457 -1.0059040824152614 -0.09173118968880091; -0.5497606187369344 -0.6163495955240155 0.6796485760534101 1.22561207137653; 1.0808323747949233 -0.5801739513350528 -0.043207370167515954 -0.232131676978592; -2.2125060475463463 -1.5612897485472592 -0.039839626218822005 -1.2139396904067505], [-0.23690460123730323 -1.7170129974387656 1.604831121738095 -0.330419660506073; -0.3827075659919168 -2.446261897220929 1.7480788262457672 -0.2672312785080624; -1.9688978438045297 -0.26713540122649804 0.9166815687612451 1.200964147356692; -1.5797479817238906 0.6778692338783507 1.1341703209400371 1.3170491877286854; -0.5654974841550139 -0.1689008828898645 -2.1775754411288144 0.6023924017880021], [-0.3162341605832586 0.4410185608089526 0.6775190618538066 0.3336809981458051; 1.7116615245412652 0.35751648886194604 -0.8628870265065961 -1.195470375407145; 1.2683824885596202 2.106437022846627 -2.341581668062198 -0.3755709619578594; -1.272062789754402 -1.1597991843364066 1.7767909510594972 0.4986289544382589]))
, [0.26686096499751677 0.13347269753366897 0.3196430110849233 0.8419908676476237; 0.6559056115790607 3.0495029976204893 3.2920065204492985 -3.2227056808361954; â€¦ ; 0.3666734338983696 0.73123403794996 2.6655741007828295 -0.8833723751836531; -0.28814178663132756 -1.708809012952866 -1.9517852999988166 1.5653470879092373]; rtol=1.0e-9, atol=1.0e-9)
Stacktrace:
 [1] #rrule_test#13(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Vararg{Tuple{Array{Float64,2},Array{Float64,2}},N} where N) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:195
 [2] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:175
 [3] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:74
 [4] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [5] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:70
 [6] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:67
 [8] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [9] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/dense.jl:7
Diagonal: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#772#774"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#772#774"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:4
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:3
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Diagonal: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#772#774"{Diagonal{Float64,Array{Float64,1}}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#772#774"{Diagonal{Float64,Array{Float64,1}}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:6
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:3
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Diagonal: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,1}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#772#774"{Diagonal{Float64,Array{Float64,1}}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#772#774"{Diagonal{Float64,Array{Float64,1}}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:8
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:3
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(diag), ::Array{Float64,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,1}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:21
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(diag), ::Array{Float64,1}, ::Tuple{Diagonal{Float64,Array{Float64,1}},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,1}, ::Tuple{Diagonal{Float64,Array{Float64,1}},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:22
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(diag), ::Array{Float64,1}, ::Tuple{Array{Float64,2},Diagonal{Float64,Array{Float64,1}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,1}, ::Tuple{Array{Float64,2},Diagonal{Float64,Array{Float64,1}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:23
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
diag: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Diagonal{Float64,Array{Float64,1}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#775#777"{Array{Float64,1}}}, ::Tuple{Diagonal{Float64,Array{Float64,1}}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(diag), ::Array{Float64,1}, ::Tuple{Diagonal{Float64,Array{Float64,1}},Diagonal{Float64,Array{Float64,1}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,1}, ::Tuple{Diagonal{Float64,Array{Float64,1}},Diagonal{Float64,Array{Float64,1}}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:24
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:20
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Symmetric: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#783#785"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#783#785"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:28
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:27
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Adjoint{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#786#788"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#786#788"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Adjoint{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#789#791"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#789#791"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Adjoint{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#792#794"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#792#794"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(adjoint), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Adjoint{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#795#797"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#795#797"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(adjoint), ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Transpose{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#798#800"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#798#800"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
Transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Transpose{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#801#803"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#801#803"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Transpose{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#804#806"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#804#806"{Array{Float64,2}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(transpose), ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:34
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
transpose: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Base.ReshapedArray{Float64,1,Transpose{Float64,Array{Float64,2}},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, ::Tuple{Array{Float64,1}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#807#809"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#807#809"{Array{Float64,2}}}, ::Tuple{Array{Float64,1}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(transpose), ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Function, ::Array{Float64,2}, ::Tuple{Array{Float64,1},Array{Float64,1}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:35
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:30
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
UpperTriangular: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#810#812"{UpperTriangular{Float64,Array{Float64,2}}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#810#812"{UpperTriangular{Float64,Array{Float64,2}}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::UpperTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::UpperTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:40
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:37
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
LowerTriangular: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] #isapprox#16(::Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol,Symbol},NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#813#815"{LowerTriangular{Float64,Array{Float64,2}}}}, ::Tuple{Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:216
   [2] (::Base.var"#kw##isapprox")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(isapprox), ::Thunk{ChainRules.var"#813#815"{LowerTriangular{Float64,Array{Float64,2}}}}, ::Tuple{Array{Float64,2}}) at ./none:0
   [3] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [4] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::Type, ::LowerTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [5] rrule_test(::Type, ::LowerTriangular{Float64,Array{Float64,2}}, ::Tuple{Array{Float64,2},Array{Float64,2}}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:40
   [7] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1180
   [8] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:37
   [9] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/structured.jl:2
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
svd: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
  Test threw exception
  Expression: â‰ˆ(XÌ„_ad, XÌ„_fd, rtol=1.0e-6, atol=1.0e-6)
  MethodError: no method matching isapprox(::Array{Float64,2}, ::Tuple{Array{Float64,2}}; rtol=1.0e-6, atol=1.0e-6)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::AbstractArray, !Matched::AbstractArray; atol, rtol, nans, norm) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/LinearAlgebra/src/generic.jl:1522
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:22
   [3] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:5
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/LinearAlgebra/factorization.jl:4
  
 â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = rrule(::typeof(lgamma), ::Float64) at rule_definition_tools.jl:207
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:207
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #test_scalar#3(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(test_scalar), ::typeof(lgamma), ::Float64) at test_util.jl:30
â”” @ Main ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Float64, ::Val{true}) at methods.jl:222
â”” @ FiniteDifferences ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:222
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::FiniteDifferences.var"#20#22"{typeof(lgamma),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at methods.jl:263
â”” @ Base ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::FiniteDifferences.var"#20#22"{typeof(lgamma),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at methods.jl:263
â”” @ Base ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::FiniteDifferences.var"#20#22"{typeof(lgamma),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at methods.jl:263
â”” @ Base ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #20 at methods.jl:263 [inlined]
â”” @ Core ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::FiniteDifferences.var"#20#22"{typeof(lgamma),Float64,UnitRange{Int64},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at methods.jl:263
â”” @ Base ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::FiniteDifferences.var"#20#22"{typeof(lgamma),Float64,UnitRange{Int64},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at methods.jl:263
â”” @ Base ~/.julia/packages/FiniteDifferences/SExlu/src/methods.jl:263
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = frule(::typeof(lgamma), ::Float64) at rule_definition_tools.jl:178
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:178
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(logabsgamma), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:56
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:40
  
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(logabsgamma), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:56
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:40
  
log gamma and co: Error During Test at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
  Test threw exception
  Expression: isapprox(xÌ„_ad, xÌ„_fd; rtol=rtol, atol=atol, kwargs...)
  MethodError: no method matching isapprox(::Float64, ::Tuple{Float64}; rtol=1.0e-9, atol=1.0e-9)
  Closest candidates are:
    isapprox(!Matched::Missing, ::Any; kwargs...) at missing.jl:90
    isapprox(::Any, !Matched::Missing; kwargs...) at missing.jl:91
    isapprox(::Number, !Matched::Number; atol, rtol, nans) at floatfuncs.jl:274
    ...
  Stacktrace:
   [1] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:257
   [2] #rrule_test#12(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(rrule_test), ::typeof(logabsgamma), ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:140
   [3] rrule_test(::Function, ::Tuple{Float64,Float64}, ::Tuple{Float64,Float64}) at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/test_util.jl:124
   [4] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:56
   [5] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [6] top-level scope at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/rulesets/packages/SpecialFunctions.jl:40
  
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = rrule(::typeof(lgamma), ::Complex{Float64}) at rule_definition_tools.jl:207
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:207
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #test_scalar#3(::Float64, ::Float64, ::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(test_scalar), ::typeof(lgamma), ::Complex{Float64}) at test_util.jl:30
â”” @ Main ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:30
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #4 at test_util.jl:50 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:50
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = #5 at test_util.jl:51 [inlined]
â”” @ Core ~/.julia/packages/ChainRules/ziOpP/test/test_util.jl:51
â”Œ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
â”‚   caller = frule(::typeof(lgamma), ::Complex{Float64}) at rule_definition_tools.jl:178
â”” @ ChainRules.SpecialFunctionsGlue ~/.julia/packages/ChainRulesCore/7Zuuq/src/rule_definition_tools.jl:178
Test Summary:                           | Pass  Fail  Error  Total
ChainRules                              | 7528     1     62   7591
  helper functions                      |   12                  12
  rulesets                              | 7516     1     62   7579
    Base                                | 1447            8   1455
      base                              | 1280            3   1283
        Trig                            |  568            1    569
          Basics                        |   56                  56
          Basics                        |   72                  72
          Hyperbolic                    |   42                  42
          Hyperbolic                    |   54                  54
          Degrees                       |   42                  42
          Inverses                      |   42                  42
          Inverses                      |   54                  54
          Inverse hyperbolic            |   42                  42
          Inverse hyperbolic            |   54                  54
          Inverse degrees               |   42                  42
          Inverse degrees               |   54                  54
          Multivariate                  |   14            1     15
            atan2                       |    5                   5
            sincos                      |    9            1     10
        math                            |  311                 311
        Unary complex functions         |  224                 224
        *(x, y)                         |   16                  16
        binary trig (hypot)             |   16                  16
        binary trig (atan)              |   16                  16
        identity                        |   17            2     19
        Constants                       |   14                  14
        Constants                       |   14                  14
        Constants                       |   18                  18
        Constants                       |   18                  18
        Constants                       |   18                  18
        sign                            |   30                  30
      reshape                           |    9                   9
      hcat                              |    5                   5
      vcat                              |    5                   5
      fill                              |    8                   8
      Maps and Reductions               |  132            5    137
        map                             |   33                  33
        mapreduce                       |   13            1     14
        mapfoldl                        |   13                  13
        mapfoldr                        |   13                  13
        sum                             |   60            4     64
          Vector                        |   12            1     13
          Matrix                        |   12            1     13
          Array{T, 3}                   |   12            1     13
          function argument             |   24                  24
          keyword arguments             |                 1      1
      broadcast                         |    8                   8
    Statistics                          |   22            2     24
      mean                              |   22            2     24
        Basic                           |   10            1     11
        with function arg               |   12                  12
        with dims kwargs                |                 1      1
    LinearAlgebra                       | 5136     1     49   5186
      linalg                            | 1298     1      4   1303
        dot                             |   66                  66
        inv                             |   12            1     13
        det                             |   12            1     13
        logdet                          |   12            1     13
        tr                              |   12            1     13
        *                               |  500                 500
        /                               |  260                 260
        \                               |  359     1           360
          Matrix                        |  179     1           180
          Vector                        |   20                  20
          Diagonal on LHS               |   40                  40
          UpperTriangular on LHS        |   40                  40
          LowerTriangular on LHS        |   40                  40
          Matrix \ Vector               |   20                  20
          Vector \ Matrix               |   20                  20
        norm                            |   65                  65
      Structured Matrices               |  200           18    218
        Diagonal                        |   30            3     33
        ::Diagonal * ::AbstractVector   |   20                  20
        diag                            |   40            4     44
        Symmetric                       |   10            1     11
        Adjoint                         |   20            2     22
        adjoint                         |   20            2     22
        Transpose                       |   20            2     22
        transpose                       |   20            2     22
        UpperTriangular                 |   10            1     11
        LowerTriangular                 |   10            1     11
      Factorizations                    |  128           27    155
        svd                             |  102           27    129
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          Vt                            |    1                   1
          accumulate!                   |    9                   9
          Helper functions              |    3                   3
        cholesky                        |   26                  26
      BLAS                              | 3510                3510
    packages                            |  911            3    914
      SpecialFunctions                  |  119                 119
      SpecialFunctions                  |   84                  84
      SpecialFunctions                  |   84                  84
      SpecialFunctions                  |  133                 133
      SpecialFunctions                  |  119                 119
      SpecialFunctions                  |   84                  84
      SpecialFunctions                  |  144                 144
      log gamma and co                  |  144            3    147
        lgamma at 1.5, rrule            |    4                   4
        lgamma at 1.5, frule            |    3                   3
        loggamma at 1.5, rrule          |    4                   4
        loggamma at 1.5, frule          |    3                   3
        lgamma at 2.5, rrule            |    4                   4
        lgamma at 2.5, frule            |    3                   3
        loggamma at 2.5, rrule          |    4                   4
        loggamma at 2.5, frule          |    3                   3
        lgamma at 10.5, rrule           |    4                   4
        lgamma at 10.5, frule           |    3                   3
        loggamma at 10.5, rrule         |    4                   4
        loggamma at 10.5, frule         |    3                   3
        lgamma at -0.6, rrule           |    4                   4
        lgamma at -0.6, frule           |    3                   3
        lgamma at -2.6, rrule           |    4                   4
        lgamma at -2.6, frule           |    3                   3
        lgamma at -3.3, rrule           |    4                   4
        lgamma at -3.3, frule           |    3                   3
        lgamma at 1.6 + 1.6im, rrule    |    5                   5
        lgamma at 1.6 + 1.6im, frule    |    4                   4
        loggamma at 1.6 + 1.6im, rrule  |    5                   5
        loggamma at 1.6 + 1.6im, frule  |    4                   4
        lgamma at 1.6 - 1.6im, rrule    |    5                   5
        lgamma at 1.6 - 1.6im, frule    |    4                   4
        loggamma at 1.6 - 1.6im, rrule  |    5                   5
        loggamma at 1.6 - 1.6im, frule  |    4                   4
        lgamma at -4.6 + 1.6im, rrule   |    5                   5
        lgamma at -4.6 + 1.6im, frule   |    4                   4
        loggamma at -4.6 + 1.6im, rrule |    5                   5
        loggamma at -4.6 + 1.6im, frule |    4                   4
ERROR: LoadError: Some tests did not pass: 7528 passed, 1 failed, 62 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ChainRules/ziOpP/test/runtests.jl:22
ERROR: Package ChainRules errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
