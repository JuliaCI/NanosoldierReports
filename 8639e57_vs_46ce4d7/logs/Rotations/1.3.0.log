Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [============>                            ]  29.8 %    Fetching: [==============================>          ]  72.6 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Rotations â”€â”€â”€â”€ v0.12.1
 Installed StaticArrays â”€ v0.10.3
  Updating `~/.julia/environments/v1.3/Project.toml`
  [6038ab10] + Rotations v0.12.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6038ab10] + Rotations v0.12.1
  [90137ffa] + StaticArrays v0.10.3
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
   Testing Rotations
 Resolving package versions...
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed SpecialFunctions â”€â”€â”€â”€â”€ v0.9.0
 Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
 Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€ v0.5.3+1
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
 Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed CommonSubexpressions â”€ v0.2.0
    Status `/tmp/jl_ulcxtu/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [f6369f11] ForwardDiff v0.10.7
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [69de0a69] Parsers v0.3.10
  [6038ab10] Rotations v0.12.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.10.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 190108  190108
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:            | Pass  Total
Principal Value (SPQuat) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (Quat) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                      | Pass  Total
Principal Value (Rodrigues Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.729204907 seconds)
done (took 2.408158132 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.000652817 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.218039807 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.949143773 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.97448384 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.931461569 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.05263823 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.024748002 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.903923263 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.11065719 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.974667976 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.07100809 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.122831265 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.991537487 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.122735493 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.959994697 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.106985031 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.679675471 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.289321536 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.130801784 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.940023148 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.098360165 seconds)
done (took 23.536130679 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 0.916411487 seconds)
  (2/20) tuning "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.371899882 seconds)
  (3/20) tuning "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.391323027 seconds)
  (4/20) tuning "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.087021285 seconds)
  (5/20) tuning "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.167275109 seconds)
  (6/20) tuning "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 1.077451918 seconds)
  (7/20) tuning "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 1.132210548 seconds)
  (8/20) tuning "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 0.908712728 seconds)
  (9/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.883276654 seconds)
  (10/20) tuning "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.030748049 seconds)
  (11/20) tuning "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.991963541 seconds)
  (12/20) tuning "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 1.157597156 seconds)
  (13/20) tuning "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.872420305 seconds)
  (14/20) tuning "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 1.177810889 seconds)
  (15/20) tuning "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.002374545 seconds)
  (16/20) tuning "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.095487398 seconds)
  (17/20) tuning "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.996493734 seconds)
  (18/20) tuning "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.05566299 seconds)
  (19/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 0.948939705 seconds)
  (20/20) tuning "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.966266606 seconds)
done (took 21.9653414 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.05237727 seconds)
done (took 1.658428725 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.88724458 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.894133897 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.584842945 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.76711987 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.379012466 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.09003395 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.066875365 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.169322075 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.85228343 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.817553426 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.443428818 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.9060462 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.735659198 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.436971906 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.812983561 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.211350536 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.630990028 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.794073477 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.92735017 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.323589366 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.90198353 seconds)
done (took 36.344942537 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 1.129281661 seconds)
  (2/20) benchmarking "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.120553709 seconds)
  (3/20) benchmarking "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.450822263 seconds)
  (4/20) benchmarking "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.857184037 seconds)
  (5/20) benchmarking "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.95746995 seconds)
  (6/20) benchmarking "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 1.652229299 seconds)
  (7/20) benchmarking "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.755573024 seconds)
  (8/20) benchmarking "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 1.605965748 seconds)
  (9/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.166123389 seconds)
  (10/20) benchmarking "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.831172522 seconds)
  (11/20) benchmarking "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.659335069 seconds)
  (12/20) benchmarking "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 2.122469328 seconds)
  (13/20) benchmarking "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.828555812 seconds)
  (14/20) benchmarking "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 1.862832151 seconds)
  (15/20) benchmarking "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.332892932 seconds)
  (16/20) benchmarking "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.802277728 seconds)
  (17/20) benchmarking "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.03695146 seconds)
  (18/20) benchmarking "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.512678078 seconds)
  (19/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.921221956 seconds)
  (20/20) benchmarking "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.842428529 seconds)
done (took 28.160797187 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 13.942 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 65.811 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 48.992 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  25.636 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 72.999 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  30.762 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 51.821 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 51.479 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   14.180 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 50.203 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 51.425 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  25.646 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 50.098 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  31.595 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  37.398 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 66.544 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   14.209 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  40.901 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 53.927 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 54.905 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   21.114 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 50.838 ns

Group: Non-Euler conversions
RotMatrix{3,Float64,9} -> SPQuat{Float64}       23.419 ns
AngleAxis{Float64} -> Quat{Float64}             21.066 ns
Quat{Float64} -> RodriguesVec{Float64}          31.633 ns
RodriguesVec{Float64} -> AngleAxis{Float64}     13.437 ns
SPQuat{Float64} -> RodriguesVec{Float64}        87.470 ns
AngleAxis{Float64} -> SPQuat{Float64}           47.711 ns
AngleAxis{Float64} -> RodriguesVec{Float64}     2.459 ns
RodriguesVec{Float64} -> Quat{Float64}          46.651 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}    20.470 ns
Quat{Float64} -> RotMatrix{3,Float64,9}         5.779 ns
RodriguesVec{Float64} -> RotMatrix{3,Float64,9} 70.224 ns
SPQuat{Float64} -> AngleAxis{Float64}           100.066 ns
Quat{Float64} -> SPQuat{Float64}                3.732 ns
RodriguesVec{Float64} -> SPQuat{Float64}        94.188 ns
RotMatrix{3,Float64,9} -> Quat{Float64}         21.676 ns
RotMatrix{3,Float64,9} -> RodriguesVec{Float64} 71.023 ns
SPQuat{Float64} -> RotMatrix{3,Float64,9}       26.920 ns
Quat{Float64} -> AngleAxis{Float64}             43.103 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}    76.737 ns
SPQuat{Float64} -> Quat{Float64}                6.521 ns

   Testing Rotations tests passed 
