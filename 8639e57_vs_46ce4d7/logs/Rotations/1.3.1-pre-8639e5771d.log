Julia Version 1.3.1-pre.13
Commit 8639e5771d (2019-12-07 10:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  31.0 %    Fetching: [================================>        ]  79.7 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Rotations â”€â”€â”€â”€ v0.12.1
 Installed StaticArrays â”€ v0.10.3
  Updating `~/.julia/environments/v1.3/Project.toml`
  [6038ab10] + Rotations v0.12.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6038ab10] + Rotations v0.12.1
  [90137ffa] + StaticArrays v0.10.3
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
   Testing Rotations
 Resolving package versions...
 Installed CommonSubexpressions â”€ v0.2.0
 Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed SpecialFunctions â”€â”€â”€â”€â”€ v0.9.0
 Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
 Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€ v0.5.3+1
    Status `/tmp/jl_wiDGXY/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [f6369f11] ForwardDiff v0.10.7
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [69de0a69] Parsers v0.3.10
  [6038ab10] Rotations v0.12.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.10.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 190108  190108
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:            | Pass  Total
Principal Value (SPQuat) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (Quat) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                      | Pass  Total
Principal Value (Rodrigues Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.640739943 seconds)
done (took 2.337867188 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.938995735 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.936659667 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.981119765 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994347998 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.943917404 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.017817571 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.988065713 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.894016987 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.978495556 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.983649873 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.937155899 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.100075544 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.98983345 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.907256435 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.951371704 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.86344886 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.985911652 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.985937714 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.967853504 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.909775872 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.016793318 seconds)
done (took 20.889643539 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 0.867935968 seconds)
  (2/20) tuning "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 0.943546085 seconds)
  (3/20) tuning "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 0.972542005 seconds)
  (4/20) tuning "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.953856338 seconds)
  (5/20) tuning "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.025803027 seconds)
  (6/20) tuning "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 0.934285741 seconds)
  (7/20) tuning "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.89021797 seconds)
  (8/20) tuning "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 1.004357469 seconds)
  (9/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.958249957 seconds)
  (10/20) tuning "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.927599999 seconds)
  (11/20) tuning "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.890198829 seconds)
  (12/20) tuning "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 0.967884453 seconds)
  (13/20) tuning "Quat{Float64} -> SPQuat{Float64}"...
  done (took 1.019738033 seconds)
  (14/20) tuning "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 0.962217199 seconds)
  (15/20) tuning "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.119963048 seconds)
  (16/20) tuning "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.034590178 seconds)
  (17/20) tuning "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.948440713 seconds)
  (18/20) tuning "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.102014708 seconds)
  (19/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 0.912884268 seconds)
  (20/20) tuning "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.83816166 seconds)
done (took 19.904889716 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.105101713 seconds)
done (took 1.716510905 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.879632646 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.951552935 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.478787185 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.864482412 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.49513873 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.874526944 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.855334231 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.123136392 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.806869001 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.079674264 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.438615125 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.853890802 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.476056837 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.470526571 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.897927244 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.16221932 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.447838975 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.827054962 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.810884699 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.125543352 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.110299675 seconds)
done (took 35.871882017 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 1.201537919 seconds)
  (2/20) benchmarking "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.480002359 seconds)
  (3/20) benchmarking "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.409453439 seconds)
  (4/20) benchmarking "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.051364071 seconds)
  (5/20) benchmarking "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 2.096950674 seconds)
  (6/20) benchmarking "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 1.70137697 seconds)
  (7/20) benchmarking "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.826295864 seconds)
  (8/20) benchmarking "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 1.667750092 seconds)
  (9/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.229983014 seconds)
  (10/20) benchmarking "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.999128775 seconds)
  (11/20) benchmarking "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.746342817 seconds)
  (12/20) benchmarking "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 2.117656637 seconds)
  (13/20) benchmarking "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.794929139 seconds)
  (14/20) benchmarking "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 1.934815906 seconds)
  (15/20) benchmarking "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.186339719 seconds)
  (16/20) benchmarking "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.916627869 seconds)
  (17/20) benchmarking "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.155825781 seconds)
  (18/20) benchmarking "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.543026115 seconds)
  (19/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 2.131161478 seconds)
  (20/20) benchmarking "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.856736372 seconds)
done (took 29.679781676 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 13.205 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 53.968 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 50.782 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  31.241 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 49.595 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  36.495 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 54.776 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 54.012 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   19.683 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 50.512 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 66.607 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  25.623 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 65.084 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  26.096 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  25.646 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 65.790 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   14.211 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  25.623 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 66.535 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 49.544 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   14.185 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 52.426 ns

Group: Non-Euler conversions
RotMatrix{3,Float64,9} -> SPQuat{Float64}       43.016 ns
AngleAxis{Float64} -> Quat{Float64}             28.414 ns
Quat{Float64} -> RodriguesVec{Float64}          31.526 ns
RodriguesVec{Float64} -> AngleAxis{Float64}     26.936 ns
SPQuat{Float64} -> RodriguesVec{Float64}        98.718 ns
AngleAxis{Float64} -> SPQuat{Float64}           71.768 ns
AngleAxis{Float64} -> RodriguesVec{Float64}     2.473 ns
RodriguesVec{Float64} -> Quat{Float64}          53.093 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}    32.338 ns
Quat{Float64} -> RotMatrix{3,Float64,9}         7.937 ns
RodriguesVec{Float64} -> RotMatrix{3,Float64,9} 72.695 ns
SPQuat{Float64} -> AngleAxis{Float64}           104.814 ns
Quat{Float64} -> SPQuat{Float64}                2.880 ns
RodriguesVec{Float64} -> SPQuat{Float64}        97.413 ns
RotMatrix{3,Float64,9} -> Quat{Float64}         21.852 ns
RotMatrix{3,Float64,9} -> RodriguesVec{Float64} 72.840 ns
SPQuat{Float64} -> RotMatrix{3,Float64,9}       26.834 ns
Quat{Float64} -> AngleAxis{Float64}             44.524 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}    76.981 ns
SPQuat{Float64} -> Quat{Float64}                6.556 ns

   Testing Rotations tests passed 
