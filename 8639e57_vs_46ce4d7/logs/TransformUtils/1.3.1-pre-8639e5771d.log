Julia Version 1.3.1-pre.13
Commit 8639e5771d (2019-12-07 10:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  30.8 %    Fetching: [===========================>             ]  66.9 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed TransformUtils â”€ v0.2.2
  Updating `~/.julia/environments/v1.3/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
    Status `/tmp/jl_WyzSlm/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.05506836412786308 0.23172776227840328; 0.05506836412786308 0.0 -0.010980235047229987; -0.23172776227840328 0.010980235047229987 0.0])
dAA = so3([0.0 0.07499441930045934 0.1596777046236075; -0.07499441930045934 0.0 0.042062189563843104; -0.1596777046236075 -0.042062189563843104 0.0])
dAA = so3([0.0 0.12678161399900004 0.24469127985934633; -0.12678161399900004 0.0 0.02348519597674729; -0.24469127985934633 -0.02348519597674729 0.0])
dAA = Quaternion(0.998021037882489, [-0.012565969133278312, 0.02741573814858046, 0.05517682181378041])
dAA = SO3([0.9944983674147259 -0.0925837033261845 0.04900260286815848; 0.08868201030434349 0.9931128326395176 0.07656632872937268; -0.055753908004961564 -0.07179943958780664 0.9958595996510007])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9044010794075332 0.16049668677696496 0.39534731705186205; -0.2017599672719522 0.9772887385422253 0.0648046072819421; -0.37596755601103343 -0.1383746185258075 0.9162427963017923]), [0.10980235047229986, 2.3172776227840326, 0.5506836412786308])
xj = SE3(SO3([0.9528365523775385 -0.2739734004205087 0.13054148886583888; 0.26628470303553453 0.9610920909687504 0.0734469169304766; -0.14558489407408823 -0.035221705514338314 0.9887186000465945]), [-0.2348519597674729, 2.446912798593463, -1.2678161399900003])
Dx = SE3(SO3([0.8627560103168875 -0.42844952934768143 -0.26848289976055606; 0.4333094053998917 0.9001664442376243 -0.044083237864117664; 0.2605667397310695 -0.0783030872337888 0.9622752208570992]), [0.34583599933825226, 0.32300933608292537, -1.7940445248691668])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
