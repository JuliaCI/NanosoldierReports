Julia Version 1.3.1-pre.13
Commit 8639e5771d (2019-12-07 10:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  33.1 %    Fetching: [=================================>       ]  81.4 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Media â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed SimpleTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.1
 Installed FileIO â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed NaiveNASlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
 Installed NaiveGAflux â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.1
 Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.4
 Installed ZipFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.3
 Installed ArnoldiMethod â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
 Installed GPUArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.4
 Installed ConstructionBase â”€â”€â”€â”€â”€ v1.0.0
 Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
 Installed CuArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.1
 Installed MetaGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.4
 Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed TranscodingStreams â”€â”€â”€ v0.9.5
 Installed CommonSubexpressions â”€ v0.2.0
 Installed CEnum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed Tracker â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.5
 Installed Inflate â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.1
 Installed SpecialFunctions â”€â”€â”€â”€â”€ v0.9.0
 Installed NNlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed VersionParsing â”€â”€â”€â”€â”€â”€â”€ v1.1.3
 Installed JLD2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.9
 Installed TimerOutputs â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
 Installed ColorTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.0
 Installed CUDAapi â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.0
 Installed FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed OrderedCollections â”€â”€â”€ v1.1.0
 Installed Flux â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.0
 Installed Juno â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.2
 Installed FixedPointNumbers â”€â”€â”€â”€ v0.6.1
 Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed Setfield â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.0
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed MathProgBase â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.7
 Installed JuMP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.20.1
 Installed MathOptInterface â”€â”€â”€â”€â”€ v0.9.7
 Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
 Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€ v0.5.8
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed LightGraphs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed CUDAnative â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.4.0
 Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed LLVM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.2
 Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed SortingAlgorithms â”€â”€â”€â”€ v0.3.1
 Installed AbstractTrees â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.1
 Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed NaiveNASflux â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
 Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
 Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed DataStructures â”€â”€â”€â”€â”€â”€â”€ v0.17.6
 Installed Cbc â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.6
 Installed Colors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.6
 Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€ v0.5.3+1
 Installed CUDAdrv â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.1.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [81ede08e] + NaiveGAflux v0.1.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [1520ce14] + AbstractTrees v0.2.1
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v1.2.0
  [c5f51814] + CUDAdrv v3.1.0
  [be33ccc6] + CUDAnative v2.4.0
  [49dc2e85] + Calculus v0.5.1
  [9961bab8] + Cbc v0.6.6
  [944b1d66] + CodecZlib v0.6.0
  [3da002f7] + ColorTypes v0.8.0
  [5ae59095] + Colors v0.9.6
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [187b0558] + ConstructionBase v1.0.0
  [3a865a2d] + CuArrays v1.2.1
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [7a1cc6ca] + FFTW v1.1.0
  [5789e2e9] + FileIO v1.1.0
  [1a297f60] + FillArrays v0.7.4
  [53c48c17] + FixedPointNumbers v0.6.1
  [587475ba] + Flux v0.9.0
  [f6369f11] + ForwardDiff v0.10.7
  [0c68f7d7] + GPUArrays v1.0.4
  [d25df0c9] + Inflate v0.1.1
  [033835bb] + JLD2 v0.1.9
  [682c06a0] + JSON v0.21.0
  [4076af6c] + JuMP v0.20.1
  [e5e0dc1b] + Juno v0.7.2
  [929cbde3] + LLVM v1.3.2
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.3
  [b8f27783] + MathOptInterface v0.9.7
  [fdba3010] + MathProgBase v0.7.7
  [e89f7d12] + Media v0.5.0
  [626554b9] + MetaGraphs v0.6.4
  [e1d29d7a] + Missings v0.4.3
  [872c559c] + NNlib v0.6.0
  [77ba4419] + NaNMath v0.3.3
  [81ede08e] + NaiveGAflux v0.1.1
  [85610aed] + NaiveNASflux v1.0.1
  [bd45eb3e] + NaiveNASlib v1.1.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [efcf1570] + Setfield v0.5.2
  [699a6c99] + SimpleTraits v0.9.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [a759f4b9] + TimerOutputs v0.5.3
  [9f7883ad] + Tracker v0.2.5
  [3bb67fe8] + TranscodingStreams v0.9.5
  [81def892] + VersionParsing v1.1.3
  [a5390f91] + ZipFile v0.8.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building ZipFile â”€â”€â†’ `~/.julia/packages/ZipFile/oD4uG/deps/build.log`
  Building Conda â”€â”€â”€â”€â†’ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building FFTW â”€â”€â”€â”€â”€â†’ `~/.julia/packages/FFTW/loJ3F/deps/build.log`
  Building CodecZlib â†’ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
  Building Cbc â”€â”€â”€â”€â”€â”€â†’ `~/.julia/packages/Cbc/vWzyC/deps/build.log`
   Testing NaiveGAflux
 Resolving package versions...
    Status `/tmp/jl_yOYxQq/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.2.1
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v1.2.0
  [c5f51814] CUDAdrv v3.1.0
  [be33ccc6] CUDAnative v2.4.0
  [49dc2e85] Calculus v0.5.1
  [9961bab8] Cbc v0.6.6
  [944b1d66] CodecZlib v0.6.0
  [3da002f7] ColorTypes v0.8.0
  [5ae59095] Colors v0.9.6
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [187b0558] ConstructionBase v1.0.0
  [3a865a2d] CuArrays v1.2.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.6
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [7a1cc6ca] FFTW v1.1.0
  [5789e2e9] FileIO v1.1.0
  [1a297f60] FillArrays v0.7.4
  [53c48c17] FixedPointNumbers v0.6.1
  [587475ba] Flux v0.9.0
  [f6369f11] ForwardDiff v0.10.7
  [0c68f7d7] GPUArrays v1.0.4
  [d25df0c9] Inflate v0.1.1
  [033835bb] JLD2 v0.1.9
  [682c06a0] JSON v0.21.0
  [4076af6c] JuMP v0.20.1
  [e5e0dc1b] Juno v0.7.2
  [929cbde3] LLVM v1.3.2
  [093fc24a] LightGraphs v1.3.0
  [1914dd2f] MacroTools v0.5.3
  [b8f27783] MathOptInterface v0.9.7
  [fdba3010] MathProgBase v0.7.7
  [e89f7d12] Media v0.5.0
  [626554b9] MetaGraphs v0.6.4
  [e1d29d7a] Missings v0.4.3
  [872c559c] NNlib v0.6.0
  [77ba4419] NaNMath v0.3.3
  [81ede08e] NaiveGAflux v0.1.1
  [85610aed] NaiveNASflux v1.0.1
  [bd45eb3e] NaiveNASlib v1.1.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [efcf1570] Setfield v0.5.2
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [a759f4b9] TimerOutputs v0.5.3
  [9f7883ad] Tracker v0.2.5
  [3bb67fe8] TranscodingStreams v0.9.5
  [81def892] VersionParsing v1.1.3
  [a5390f91] ZipFile v0.8.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
[ Info: Testing util
[ Info: Testing archspace
[ Info: Testing mutation
[ Info: Testing fitness
[ Info: Testing candidate
[ Info: Testing evolve
[ Info: Testing iterators
[ Info: Testing visualization
[ Info: Testing README examples
Basic example: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:18
  Expression: nv.(models) == [3, 5, 3, 4, 5]
   Evaluated: [3, 4, 3, 3, 3] == [3, 5, 3, 4, 5]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:18
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:2
ConvSpace example: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:96
  Expression: string(convlayer) == "Conv((5, 4), 16=>18, NNlib.elu)"
   Evaluated: "Conv((5, 4), 16=>18, elu)" == "Conv((5, 4), 16=>18, NNlib.elu)"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:96
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:85
ArchSpace example: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:158
  Expression: nv(graph2) == 75
   Evaluated: 35 == 75
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:158
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:100
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:186
  Expression: nout.(vertices(graph)) == [3, 5, 4]
   Evaluated: [3, 5, 8] == [3, 5, 4]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:186
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:194
  Expression: nout.(vertices(graph)) == [3, 4, 3, 10]
   Evaluated: [3, 6, 5, 10] == [3, 4, 3, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:194
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:201
  Expression: nout.(vertices(graph)) == [3, 4, 2, 10]
   Evaluated: [3, 6, 5, 10] == [3, 4, 2, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:201
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:208
  Expression: nout.(vertices(graph)) == [3, 4, 2, 10]
   Evaluated: [3, 6, 5, 10] == [3, 4, 2, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:208
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:216
  Expression: nout.(vertices(graph)) == nout_org.(vertices(graph)) == [3, 4, 2, 10]
   Evaluated: [3, 6, 5, 10] == [3, 6, 5, 10] == [3, 4, 2, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:216
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:224
  Expression: nout.(vertices(graph)) == [3, 5, 3, 10]
   Evaluated: [3, 5, 7, 10] == [3, 5, 3, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:224
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:225
  Expression: nout_org.(vertices(graph)) == [3, 4, 2, 10]
   Evaluated: [3, 6, 5, 10] == [3, 4, 2, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:225
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:229
  Expression: nout_org.(vertices(graph)) == [3, 5, 3, 10]
   Evaluated: [3, 5, 7, 10] == [3, 5, 3, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:229
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:237
  Expression: nout.(vertices(graph)) == [3, 5, 10]
   Evaluated: [3, 5, 7, 10] == [3, 5, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:237
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
Mutation examples: Test Failed at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:255
  Expression: nout.(vertices(graph)) == nout_org.(vertices(graph)) == [3, 6, 5, 10]
   Evaluated: [3, 7, 5, 8, 7, 10] == [3, 7, 5, 8, 7, 10] == [3, 6, 5, 10]
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:255
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/examples.jl:162
[ Info: Testing AutoFlux
Test Summary:               | Pass  Fail  Total
NaiveGAflux.jl              |  792    13    805
  Probability               |    9            9
  MutationShield            |    5            5
  VertexSelection           |    2            2
  remove_redundant_vertices |    3            3
  Clone ApplyIf             |    1            1
  PersistentArray           |    8            8
  Architecture Spaces       |  166          166
  Mutation                  |  272          272
  Fitness                   |   88           88
  Candidate                 |   21           21
  Evolution                 |    6            6
  RepeatPartitionIterator   |   36           36
  MapIterator               |    1            1
  GpuIterator               |    3            3
  BatchIterator             |    4            4
  FlipIterator              |    3            3
  ShiftIterator             |    2            2
  ShuffleIterator ndims 1   |    7            7
  ShuffleIterator ndims 2   |    5            5
  ShuffleIterator ndims 3   |    5            5
  ShuffleIterator ndims 4   |    7            7
  ShuffleIterator ndims 5   |    7            7
  ShuffleIterator ndims 6   |    9            9
  visualization             |   31           31
  Basic example             |    1     1      2
  ParSpace example          |    6            6
  ConvSpace example         |    1     1      2
  ArchSpace example         |    1     1      2
  Mutation examples         |    7    10     17
  Fitness functions         |   32           32
  Candidate handling        |    3            3
  Evolution strategies      |    7            7
  Iterators                 |   22           22
  AutoFlux                  |   11           11
ERROR: LoadError: Some tests did not pass: 792 passed, 13 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/NaiveGAflux/qqAgd/test/runtests.jl:6
ERROR: Package NaiveGAflux errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
