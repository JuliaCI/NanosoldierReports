Julia Version 1.3.1-pre.13
Commit 8639e5771d (2019-12-07 10:31 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==========>                              ]  23.4 %    Fetching: [=================>                       ]  40.6 %    Fetching: [==============================>          ]  73.2 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed ZygoteRules ───────────────── v0.1.0
 Installed NLSolversBase ─────────────── v7.5.0
 Installed OffsetArrays ──────────────── v0.11.2
 Installed StatsFuns ─────────────────── v0.8.0
 Installed Parameters ────────────────── v0.12.0
 Installed LogDensityProblems ────────── v0.9.2
 Installed Zygote ────────────────────── v0.3.4
 Installed Turing ────────────────────── v0.7.3
 Installed ForwardDiff ───────────────── v0.10.7
 Installed DistributionsAD ───────────── v0.1.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Calculus ──────────────────── v0.5.1
 Installed JSON ──────────────────────── v0.21.0
 Installed Showoff ───────────────────── v0.3.1
 Installed LineSearches ──────────────── v7.0.1
 Installed ArgCheck ──────────────────── v1.0.1
 Installed URIParser ─────────────────── v0.4.0
 Installed Bijectors ─────────────────── v0.4.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed FillArrays ────────────────── v0.8.2
 Installed ArrayInterface ────────────── v2.0.0
 Installed PDMats ────────────────────── v0.9.10
 Installed Libtask ───────────────────── v0.3.1
 Installed Missings ──────────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
 Installed StaticArrays ──────────────── v0.12.1
 Installed DocStringExtensions ───────── v0.8.1
 Installed Conda ─────────────────────── v1.3.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed InplaceOps ────────────────── v0.3.0
 Installed IntervalSets ──────────────── v0.3.2
 Installed WoodburyMatrices ──────────── v0.4.1
 Installed BinDeps ───────────────────── v0.8.10
 Installed Arpack ────────────────────── v0.4.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed Tracker ───────────────────── v0.2.5
 Installed VersionParsing ────────────── v1.1.3
 Installed SpecialFunctions ──────────── v0.8.0
 Installed NNlib ─────────────────────── v0.6.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed CategoricalArrays ─────────── v0.7.4
 Installed FFTW ──────────────────────── v1.1.0
 Installed TimerOutputs ──────────────── v0.5.3
 Installed Optim ─────────────────────── v0.19.6
 Installed OrderedCollections ────────── v1.1.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed Ratios ────────────────────── v0.3.1
 Installed RangeArrays ───────────────── v0.3.1
 Installed IterTools ─────────────────── v1.3.0
 Installed Adapt ─────────────────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed KernelDensity ─────────────── v0.5.1
 Installed NaNMath ───────────────────── v0.3.3
 Installed Rmath ─────────────────────── v0.6.0
 Installed LazyArrays ────────────────── v0.14.10
 Installed Compat ────────────────────── v2.2.0
 Installed AdvancedHMC ───────────────── v0.2.14
 Installed FiniteDifferences ─────────── v0.9.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed DiffRules ─────────────────── v0.1.0
 Installed DiffResults ───────────────── v0.0.4
 Installed AxisArrays ────────────────── v0.3.3
 Installed Roots ─────────────────────── v0.8.4
 Installed Requires ──────────────────── v0.5.2
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Combinatorics ─────────────── v1.0.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Polynomials ───────────────── v0.6.0
 Installed MCMCChains ────────────────── v0.3.15
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed MacroTools ────────────────── v0.5.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed BenchmarkTools ────────────── v0.4.3
 Installed PositiveFactorizations ────── v0.2.3
 Installed Reexport ──────────────────── v0.2.0
 Installed DiffEqDiffTools ───────────── v1.5.0
 Installed DataFrames ────────────────── v0.19.4
 Installed DataValueInterfaces ───────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed ProgressMeter ─────────────── v1.2.0
 Installed TransformVariables ────────── v0.3.8
 Installed DataStructures ────────────── v0.17.6
 Installed Interpolations ────────────── v0.12.5
 Installed Distributions ─────────────── v0.21.11
 Installed QuadGK ────────────────────── v2.2.0
 Installed ArrayLayouts ──────────────── v0.1.5
 Installed OpenBLAS_jll ──────────────── v0.3.7+1
 Installed IRTools ───────────────────── v0.2.3
  Updating `~/.julia/environments/v1.3/Project.toml`
  [fce5fe82] + Turing v0.7.3
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.0
  [0bf59076] + AdvancedHMC v0.2.14
  [dce04be8] + ArgCheck v1.0.1
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.3.3
  [6e4b80f9] + BenchmarkTools v0.4.3
  [76274a88] + Bijectors v0.4.0
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.4
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [01453d9d] + DiffEqDiffTools v1.5.0
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [31c24e10] + Distributions v0.21.11
  [ced4e74d] + DistributionsAD v0.1.1
  [ffbed154] + DocStringExtensions v0.8.1
  [7a1cc6ca] + FFTW v1.1.0
  [1a297f60] + FillArrays v0.8.2
  [26cc04aa] + FiniteDifferences v0.9.0
  [f6369f11] + ForwardDiff v0.10.7
  [7869d1d1] + IRTools v0.2.3
  [505f98c9] + InplaceOps v0.3.0
  [a98d9a8b] + Interpolations v0.12.5
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [5078a376] + LazyArrays v0.14.10
  [6f1fad26] + Libtask v0.3.1
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.9.2
  [c7f686f2] + MCMCChains v0.3.15
  [1914dd2f] + MacroTools v0.5.3
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [d41bc354] + NLSolversBase v7.5.0
  [872c559c] + NNlib v0.6.0
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v0.11.2
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [429524aa] + Optim v0.19.6
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.2
  [85a6dd25] + PositiveFactorizations v0.2.3
  [92933f4c] + ProgressMeter v1.2.0
  [1fd47b50] + QuadGK v2.2.0
  [b3c3ace0] + RangeArrays v0.3.1
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [79098fc4] + Rmath v0.6.0
  [f2b01f46] + Roots v0.8.4
  [992d4aef] + Showoff v0.3.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.8.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [a759f4b9] + TimerOutputs v0.5.3
  [9f7883ad] + Tracker v0.2.5
  [84d833dd] + TransformVariables v0.3.8
  [fce5fe82] + Turing v0.7.3
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.1.3
  [efce3f68] + WoodburyMatrices v0.4.1
  [e88e6eb3] + Zygote v0.3.4
  [700de1a5] + ZygoteRules v0.1.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Libtask ─────────→ `~/.julia/packages/Libtask/RjRkK/deps/build.log`
  Building Conda ───────────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
  Building FFTW ────────────→ `~/.julia/packages/FFTW/loJ3F/deps/build.log`
  Building Rmath ───────────→ `~/.julia/packages/Rmath/BoBag/deps/build.log`
   Testing Turing
 Resolving package versions...
 Installed PlotUtils ───────── v0.6.1
 Installed DynamicHMC ──────── v2.1.1
 Installed UnicodePlots ────── v1.1.0
 Installed Plots ───────────── v0.28.2
 Installed CmdStan ─────────── v5.2.3
 Installed MultivariateStats ─ v0.7.0
 Installed Clustering ──────── v0.13.3
 Installed ColorTypes ──────── v0.8.0
 Installed StatsPlots ──────── v0.13.0
 Installed Contour ─────────── v0.5.1
 Installed FFMPEG ──────────── v0.2.4
 Installed GR ──────────────── v0.44.0
 Installed DataValues ──────── v0.4.12
 Installed FixedPointNumbers ─ v0.6.1
 Installed Widgets ─────────── v0.6.2
 Installed GeometryTypes ───── v0.7.6
 Installed NamedArrays ─────── v0.9.3
 Installed NearestNeighbors ── v0.4.4
 Installed WeakRefStrings ──── v0.6.1
 Installed Distances ───────── v0.8.2
 Installed Measures ────────── v0.3.0
 Installed PlotThemes ──────── v1.0.0
 Installed Homebrew ────────── v0.7.1
 Installed Documenter ──────── v0.24.2
 Installed Observables ─────── v0.2.3
 Installed Colors ──────────── v0.9.6
 Installed FilePathsBase ───── v0.7.0
 Installed CSV ─────────────── v0.5.18
  Building GR ──────→ `~/.julia/packages/GR/oiZD3/deps/build.log`
  Building FFMPEG ──→ `~/.julia/packages/FFMPEG/guN1x/deps/build.log`
  Building Plots ───→ `~/.julia/packages/Plots/2KhB2/deps/build.log`
  Building Homebrew → `~/.julia/packages/Homebrew/s09IX/deps/build.log`
  Building CmdStan ─→ `~/.julia/packages/CmdStan/2cHgp/deps/build.log`
    Status `/tmp/jl_IDWixn/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.0
  [0bf59076] AdvancedHMC v0.2.14
  [dce04be8] ArgCheck v1.0.1
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.0.0
  [4c555306] ArrayLayouts v0.1.5
  [13072b0f] AxisAlgorithms v1.0.0
  [39de3d68] AxisArrays v0.3.3
  [6e4b80f9] BenchmarkTools v0.4.3
  [76274a88] Bijectors v0.4.0
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [336ed68f] CSV v0.5.18
  [49dc2e85] Calculus v0.5.1
  [324d7699] CategoricalArrays v0.7.4
  [aaaa29a8] Clustering v0.13.3
  [593b3428] CmdStan v5.2.3
  [3da002f7] ColorTypes v0.8.0
  [5ae59095] Colors v0.9.6
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [d38c429a] Contour v0.5.1
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.12
  [01453d9d] DiffEqDiffTools v1.5.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.21.11
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.2
  [bbc10e6e] DynamicHMC v2.1.1
  [c87230d0] FFMPEG v0.2.4
  [7a1cc6ca] FFTW v1.1.0
  [48062228] FilePathsBase v0.7.0
  [1a297f60] FillArrays v0.8.2
  [26cc04aa] FiniteDifferences v0.9.0
  [53c48c17] FixedPointNumbers v0.6.1
  [f6369f11] ForwardDiff v0.10.7
  [28b8d3ca] GR v0.44.0
  [4d00f742] GeometryTypes v0.7.6
  [d9be37ee] Homebrew v0.7.1
  [7869d1d1] IRTools v0.2.3
  [505f98c9] InplaceOps v0.3.0
  [a98d9a8b] Interpolations v0.12.5
  [8197267c] IntervalSets v0.3.2
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.10
  [6f1fad26] Libtask v0.3.1
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.9.2
  [c7f686f2] MCMCChains v0.3.15
  [1914dd2f] MacroTools v0.5.3
  [dbb5928d] MappedArrays v0.2.2
  [442fdcdd] Measures v0.3.0
  [e1d29d7a] Missings v0.4.3
  [6f286f6a] MultivariateStats v0.7.0
  [d41bc354] NLSolversBase v7.5.0
  [872c559c] NNlib v0.6.0
  [77ba4419] NaNMath v0.3.3
  [86f7a689] NamedArrays v0.9.3
  [b8a86587] NearestNeighbors v0.4.4
  [510215fc] Observables v0.2.3
  [6fe1bfb0] OffsetArrays v0.11.2
  [4536629a] OpenBLAS_jll v0.3.7+1
  [429524aa] Optim v0.19.6
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [ccf2f8ad] PlotThemes v1.0.0
  [995b91a9] PlotUtils v0.6.1
  [91a5bcdd] Plots v0.28.2
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.2
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.2.0
  [b3c3ace0] RangeArrays v0.3.1
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [992d4aef] Showoff v0.3.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.8.0
  [f3b207a7] StatsPlots v0.13.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [a759f4b9] TimerOutputs v0.5.3
  [9f7883ad] Tracker v0.2.5
  [84d833dd] TransformVariables v0.3.8
  [fce5fe82] Turing v0.7.3
  [30578b45] URIParser v0.4.0
  [b8865327] UnicodePlots v1.1.0
  [81def892] VersionParsing v1.1.3
  [ea10d353] WeakRefStrings v0.6.1
  [cc8bc4a8] Widgets v0.6.2
  [efce3f68] WoodburyMatrices v0.4.1
  [e88e6eb3] Zygote v0.3.4
  [700de1a5] ZygoteRules v0.1.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = lstirling_asym(::BigFloat) at misc.jl:56
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/misc.jl:56
  Building Libtask → `~/.julia/packages/Libtask/RjRkK/deps/build.log`
 Resolving package versions...
[ Info: [Turing]: global PROGRESS is set as false
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = gammalogpdf at gamma.jl:19 [inlined]
└ @ Core ~/.julia/packages/StatsFuns/2QE7p/src/distrs/gamma.jl:19
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = logpdf(::Beta{Float64}, ::Dual{Nothing,Float64,0}) at beta.jl:19
└ @ Distributions ~/.julia/packages/StatsFuns/2QE7p/src/distrs/beta.jl:19
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = logmvgamma(::Int64, ::Float64) at misc.jl:12
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/misc.jl:12
Tracker + logdet: Test Failed at /home/pkgeval/.julia/packages/Turing/r0coO/test/test_utils/ad_utils.jl:41
  Expression: all(zip(x̄s_tracker, x̄s_fdm)) do (x̄_tracker, x̄_fdm)
    isapprox(Tracker.data(x̄_tracker), x̄_fdm; atol=atol, rtol=rtol)
end
Stacktrace:
 [1] #test_reverse_mode_ad#93(::Float64, ::Float64, ::typeof(test_reverse_mode_ad), ::Function, ::Function, ::Float64, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Turing/r0coO/test/test_utils/ad_utils.jl:41
 [2] #test_reverse_mode_ad at ./none:0 [inlined]
 [3] #test_tracker_ad#96 at /home/pkgeval/.julia/packages/Turing/r0coO/test/test_utils/ad_utils.jl:48 [inlined]
 [4] (::var"#kw##test_tracker_ad")(::NamedTuple{(:rtol, :atol),Tuple{Float64,Float64}}, ::typeof(test_tracker_ad), ::Function, ::Float64, ::Array{Float64,2}) at ./none:0
 [5] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/ad.jl:97
 [6] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [7] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/ad.jl:95
 [8] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [9] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/ad.jl:15
[ Info: (symbol = :y, exact = 0.5, evaluated = 0.5)
[ Info: (symbol = :y, exact = 0.5, evaluated = 0.47)
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _logpdf_with_trans(::Beta{Float64}, ::Tracker.TrackedReal{Float64}, ::Bool) at beta.jl:19
└ @ Bijectors ~/.julia/packages/StatsFuns/2QE7p/src/distrs/beta.jl:19
[ Info: (symbol = :p, exact = 0.7142857142857143, evaluated = 0.6926995475093408)
[ Info: (symbol = :x, exact = 0.7142857142857143, evaluated = 0.7585)
[ Info: (symbol = :x, exact = 0.7142857142857143, evaluated = 0.7366666666666667)
[ Info: Testing the compiler's ability to catch bad models...
┌ Error: Right-hand side of a ~ must be subtype of Distribution or a vector of Distributions on line 51.
└ @ Main ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:51
model macro: Test Failed at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:150
  Expression: btest()
    Expected: ArgumentError
      Thrown: AssertionError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:150
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:80
 [4] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [5] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:12
┌ Error: Right-hand side of a ~ must be subtype of Distribution or a vector of Distributions on line 51.
└ @ Main ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:51
model macro: Test Failed at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:163
  Expression: btest()
    Expected: ArgumentError
      Thrown: AssertionError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:163
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:80
 [4] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [5] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:12
┌ Error: Right-hand side of a ~ must be subtype of Distribution or a vector of Distributions on line 96.
└ @ Main ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:96
model macro: Test Failed at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:177
  Expression: btest()
    Expected: ArgumentError
      Thrown: AssertionError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:177
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:80
 [4] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [5] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:12
┌ Error: Right-hand side of a ~ must be subtype of Distribution or a vector of Distributions on line 96.
└ @ Main ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:96
model macro: Test Failed at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:190
  Expression: btest()
    Expected: ArgumentError
      Thrown: AssertionError
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:190
 [2] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:80
 [4] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [5] top-level scope at /home/pkgeval/.julia/packages/Turing/r0coO/test/core/compiler.jl:12
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = betalogpdf(::Float64, ::Float64, ::Dual{ForwardDiff.Tag{Turing.Core.var"#f#27"{Turing.Core.RandomVariables.VarInfo{NamedTuple{(:p,),Tuple{Turing.Core.RandomVariables.Metadata{Dict{Turing.Core.RandomVariables.VarName{:p},Int64},Array{Beta{Float64},1},Array{Turing.Core.RandomVariables.VarName{:p},1},Array{Float64,1},Array{Set{Turing.Selector},1}}}},Float64},Turing.Model{Tuple{:p},Tuple{:obs},var"##inner_function#1617#566",NamedTuple{(:obs,),Tuple{Array{Int64,1}}},NamedTuple{(:obs,),Tuple{Symbol}}},Turing.Sampler{HMC{Turing.Core.ForwardDiffAD{2},(:p, :x),AdvancedHMC.Adaptation.UnitEuclideanMetric},Turing.Inference.SamplerState{Turing.Core.RandomVariables.VarInfo{NamedTuple{(:p,),Tuple{Turing.Core.RandomVariables.Metadata{Dict{Turing.Core.RandomVariables.VarName{:p},Int64},Array{Beta{Float64},1},Array{Turing.Core.RandomVariables.VarName{:p},1},Array{Float64,1},Array{Set{Turing.Selector},1}}}},Float64}}}},Float64},Float64,1}) at beta.jl:19
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/distrs/beta.jl:19
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.9246074054962299)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1906495349290454)
[ Info: [Turing]: AD chunk size is set as 10
Time for
  Loop : 4.032489596
  Vec  : 4.243156682
  Mv   : 3.657298557
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = macro expansion at compiler.jl:89 [inlined]
└ @ Core ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:89
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = macro expansion at compiler.jl:94 [inlined]
└ @ Core ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:94
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = macro expansion at compiler.jl:98 [inlined]
└ @ Core ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:98
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = macro expansion at compiler.jl:101 [inlined]
└ @ Core ~/.julia/packages/Turing/r0coO/src/core/compiler.jl:101
[ Info: (symbol = "p[1, 1]", exact = 0, evaluated = 0.025109568170848594)
[ Info: (symbol = "p[1][1]", exact = 0, evaluated = 0.05559288476732939)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.024071445021339)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1869526821755703)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0546449352123344)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1315172112104797)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.9896657140836804)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.196966708054621)
[ Info: [Turing]: global ADSAFE is set as true
[ Info: (symbol = :z1, exact = 1.0, evaluated = 1.0433333333333332)
[ Info: (symbol = :z2, exact = 1.0, evaluated = 1.0413333333333334)
[ Info: (symbol = :z3, exact = 2.0, evaluated = 1.97)
[ Info: (symbol = :z4, exact = 2.0, evaluated = 1.9686666666666666)
[ Info: (symbol = :mu1, exact = 1.0, evaluated = 1.040294635579782)
[ Info: (symbol = :mu2, exact = 4.0, evaluated = 3.95752835481411)
[ Info: [Turing]: global ADSAFE is set as false
[ Info: (symbol = :p, exact = 0.7142857142857143, evaluated = 0.6825522503193365)
[ Info: (symbol = "ps[1]", exact = 0.3125, evaluated = 0.312226343214396)
[ Info: (symbol = "ps[2]", exact = 0.6875, evaluated = 0.6877736567856023)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0533104527162003)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1170063578920497)
┌ Info: Found initial step size
└   ϵ = 3.2
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.066511932982474)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.2412265713124535)
┌ Info: Found initial step size
└   ϵ = 3.2
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0428949514303048)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1911171397123754)
HMCDA{Turing.Core.TrackerAD,(),AdvancedHMC.Adaptation.UnitEuclideanMetric}(0, 0.8, 0.75, 0.0)
┌ Info: Found initial step size
└   ϵ = 3.2
HMCDA{Turing.Core.TrackerAD,(),AdvancedHMC.Adaptation.UnitEuclideanMetric}(200, 0.8, 0.75, 0.0)
┌ Info: Found initial step size
└   ϵ = 1.6
HMCDA{Turing.Core.TrackerAD,(:s,),AdvancedHMC.Adaptation.UnitEuclideanMetric}(200, 0.8, 0.75, 0.0)
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Info: Found initial step size
└   ϵ = 3.2
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0496381247253312)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1873641104429984)
┌ Info: Found initial step size
└   ϵ = 3.2
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Info: Found initial step size
└   ϵ = 3.3000000000000003
┌ Info: Found initial step size
└   ϵ = 3.2
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Info: Found initial step size
└   ϵ = 1.6
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = assume(::Sampler{MH{(:s, :m)},Turing.Inference.MHState{VarInfo{NamedTuple{(:s, :m),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:s},Int64},Array{InverseGamma{Float64},1},Array{VarName{:s},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:m},Int64},Array{Normal{Float64},1},Array{VarName{:m},1},Array{Float64,1},Array{Set{Selector},1}}}},Float64}}}, ::InverseGamma{Float64}, ::VarName{:s}, ::VarInfo{NamedTuple{(:s, :m),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:s},Int64},Array{InverseGamma{Float64},1},Array{VarName{:s},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:m},Int64},Array{Normal{Float64},1},Array{VarName{:m},1},Array{Float64,1},Array{Set{Selector},1}}}},Float64}) at mh.jl:143
└ @ Turing.Inference ~/.julia/packages/Turing/r0coO/src/inference/mh.jl:143
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = assume(::Sampler{MH{(:s, :m)},Turing.Inference.MHState{VarInfo{NamedTuple{(:s, :m),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:s},Int64},Array{InverseGamma{Float64},1},Array{VarName{:s},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:m},Int64},Array{Normal{Float64},1},Array{VarName{:m},1},Array{Float64,1},Array{Set{Selector},1}}}},Float64}}}, ::Normal{Float64}, ::VarName{:m}, ::VarInfo{NamedTuple{(:s, :m),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:s},Int64},Array{InverseGamma{Float64},1},Array{VarName{:s},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:m},Int64},Array{Normal{Float64},1},Array{VarName{:m},1},Array{Float64,1},Array{Set{Selector},1}}}},Float64}) at mh.jl:143
└ @ Turing.Inference ~/.julia/packages/Turing/r0coO/src/inference/mh.jl:143
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0365116331372874)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.0927782798236758)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.9065221572431408)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.128389506783124)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.9624393743751325)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.100073238119882)
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = assume(::Sampler{MH{(:mu1, :mu2)},Turing.Inference.MHState{VarInfo{NamedTuple{(:mu1, :mu2, :z1, :z2, :z3, :z4),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu1},Int64},Array{Normal{Float64},1},Array{VarName{:mu1},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu2},Int64},Array{Normal{Float64},1},Array{VarName{:mu2},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z1},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z1},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z2},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z2},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z3},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z3},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z4},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z4},1},Array{Int64,1},Array{Set{Selector},1}}}},Float64}}}, ::Normal{Float64}, ::VarName{:mu1}, ::VarInfo{NamedTuple{(:mu1, :mu2, :z1, :z2, :z3, :z4),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu1},Int64},Array{Normal{Float64},1},Array{VarName{:mu1},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu2},Int64},Array{Normal{Float64},1},Array{VarName{:mu2},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z1},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z1},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z2},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z2},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z3},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z3},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z4},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z4},1},Array{Int64,1},Array{Set{Selector},1}}}},Float64}) at mh.jl:143
└ @ Turing.Inference ~/.julia/packages/Turing/r0coO/src/inference/mh.jl:143
┌ Warning: `TruncatedNormal(mu::Real, sigma::Real, a::Real, b::Real)` is deprecated, use `truncated(Normal(mu, sigma), a, b)` instead.
│   caller = assume(::Sampler{MH{(:mu1, :mu2)},Turing.Inference.MHState{VarInfo{NamedTuple{(:mu1, :mu2, :z1, :z2, :z3, :z4),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu1},Int64},Array{Normal{Float64},1},Array{VarName{:mu1},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu2},Int64},Array{Normal{Float64},1},Array{VarName{:mu2},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z1},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z1},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z2},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z2},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z3},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z3},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z4},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z4},1},Array{Int64,1},Array{Set{Selector},1}}}},Float64}}}, ::Normal{Float64}, ::VarName{:mu2}, ::VarInfo{NamedTuple{(:mu1, :mu2, :z1, :z2, :z3, :z4),Tuple{Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu1},Int64},Array{Normal{Float64},1},Array{VarName{:mu1},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:mu2},Int64},Array{Normal{Float64},1},Array{VarName{:mu2},1},Array{Float64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z1},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z1},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z2},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z2},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z3},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z3},1},Array{Int64,1},Array{Set{Selector},1}},Turing.Core.RandomVariables.Metadata{Dict{VarName{:z4},Int64},Array{DiscreteNonParametric{Int64,Float64,Base.OneTo{Int64},Array{Float64,1}},1},Array{VarName{:z4},1},Array{Int64,1},Array{Set{Selector},1}}}},Float64}) at mh.jl:143
└ @ Turing.Inference ~/.julia/packages/Turing/r0coO/src/inference/mh.jl:143
[ Info: (symbol = :z1, exact = 1.0, evaluated = 1.0481666666666667)
[ Info: (symbol = :z2, exact = 1.0, evaluated = 1.0491666666666666)
[ Info: (symbol = :z3, exact = 2.0, evaluated = 1.9476666666666667)
[ Info: (symbol = :z4, exact = 2.0, evaluated = 1.9495)
[ Info: (symbol = :mu1, exact = 1.0, evaluated = 1.0482833640837037)
[ Info: (symbol = :mu2, exact = 4.0, evaluated = 3.9097233770324915)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.018407254299998)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1564484549232452)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.984507471687471)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1808422723178478)
┌ Info: Found initial step size
└   ϵ = 1.6
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.1880739364348907)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1623415298482676)
Sampling   0%|                               |  ETA: 0:08:25[K
  iterations:                1
  n_steps:                   1
  is_accept:                 true
  acceptance_rate:           0.9491505169478681
  log_density:               -5.269290024491794
  hamiltonian_energy:        5.616747034768183
  hamiltonian_energy_error:  0.05218788710277167
  step_size:                 0.636799422756251
  nom_step_size:             0.636799422756251
  mass_matrix:               UnitEuclideanMetric([1.0, 1.0])[A[A[A[A[A[A[A[A[A[A









[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 100%|███████████████████████████████| Time: 0:00:00[K
  iterations:                1000
  n_steps:                   1
  is_accept:                 false
  acceptance_rate:           0.0015258475214075654
  log_density:               -5.722151168592697
  hamiltonian_energy:        8.634329732641335
  hamiltonian_energy_error:  0.0
  step_size:                 0.636799422756251
  nom_step_size:             0.636799422756251
  mass_matrix:               UnitEuclideanMetric([1.0, 1.0])
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0857367158085744)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.196540747294272)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.18546088564367)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1642901428718055)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.160817496653615)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1791856929554003)
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0036937546918665)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1857903930350902)
Progress:  98%|████████████████████████████████████████▍|  ETA: 0:00:00[KProgress: 100%|█████████████████████████████████████████| Time: 0:00:01[K
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.9922486989172996)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1420990750687094)
┌ Info: Found initial step size
└   ϵ = 3.2
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.037835347000474)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1743605061010847)
Progress:  64%|██████████████████████████▏              |  ETA: 0:00:01[KProgress: 100%|█████████████████████████████████████████| Time: 0:00:01[K
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 2.0836608695689294)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1788141162220658)
┌ Info: [ADVI] Should only be seen once: optimizer created for θ
└   objectid(θ) = 0x8252e1bf862e7b63
┌ Info: [ADVI] Should only be seen once: optimizer created for θ
└   objectid(θ) = 0x0208eefc02db4792
[ Info: (symbol = :s, exact = 2.0416666666666665, evaluated = 1.762735231917528)
[ Info: (symbol = :m, exact = 1.1666666666666667, evaluated = 1.1784462176660468)
┌ Info: Distribution(params)
└   dist = Arcsine{Float64}(a=1.0, b=3.0)
┌ Info: Distribution(params)
└   dist = Beta{Float64}(α=2.0, β=1.0)
┌ Info: Distribution(params)
└   dist = BetaPrime{Float64}(α=1.0, β=1.0)
┌ Info: Distribution(params)
└   dist = Biweight{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = Chi{Float64}(ν=7.0)
┌ Info: Distribution(params)
└   dist = Chisq{Float64}(ν=7.0)
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = chisqlogpdf at chisq.jl:24 [inlined]
└ @ Core ~/.julia/packages/StatsFuns/2QE7p/src/distrs/chisq.jl:24
┌ Info: Distribution(params)
└   dist = Cosine{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = Epanechnikov{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = Erlang{Float64}(α=2, θ=3.0)
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = logpdf at gamma.jl:19 [inlined]
└ @ Core ~/.julia/packages/StatsFuns/2QE7p/src/distrs/gamma.jl:19
┌ Info: Distribution(params)
└   dist = Exponential{Float64}(θ=0.1)
┌ Info: Distribution(params)
└   dist = FDist{Float64}(ν1=7.0, ν2=7.0)
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = fdistlogpdf(::Float64, ::Float64, ::Tracker.TrackedReal{Float64}) at fdist.jl:19
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/distrs/fdist.jl:19
┌ Info: Distribution(params)
└   dist = Frechet{Float64}(α=2.0, θ=0.5)
┌ Info: Distribution(params)
└   dist = Normal{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = GeneralizedExtremeValue{Float64}(μ=0.0, σ=1.0, ξ=0.5)
┌ Info: Distribution(params)
└   dist = GeneralizedPareto{Float64}(μ=0.0, σ=1.0, ξ=0.5)
┌ Info: Distribution(params)
└   dist = Gumbel{Float64}(μ=0.0, θ=0.5)
┌ Info: Distribution(params)
└   dist = InverseGaussian{Float64}(μ=1.0, λ=1.0)
┌ Info: Distribution(params)
└   dist = Kolmogorov()
┌ Info: Distribution(params)
└   dist = Laplace{Float64}(μ=0.0, θ=0.5)
┌ Info: Distribution(params)
└   dist = Levy{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = Logistic{Float64}(μ=0.0, θ=1.0)
┌ Info: Distribution(params)
└   dist = LogNormal{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = Gamma{Float64}(α=2.0, θ=3.0)
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = gammalogpdf at gamma.jl:19 [inlined]
└ @ Core ~/.julia/packages/StatsFuns/2QE7p/src/distrs/gamma.jl:19
┌ Info: Distribution(params)
│   dist =
│    InverseGamma{Float64}(
│    invd: Gamma{Float64}(α=3.0, θ=1.0)
│    θ: 1.0
│    )
└    
┌ Info: Distribution(params)
└   dist = NormalCanon{Float64}(η=0.0, λ=1.0, μ=0.0)
┌ Info: Distribution(params)
└   dist = NormalInverseGaussian{Float64}(μ=0.0, α=2.0, β=1.0, δ=1.0, γ=1.7320508075688772)
┌ Info: Distribution(params)
└   dist = Pareto{Float64}(α=1.0, θ=1.0)
┌ Info: Distribution(params)
└   dist = Rayleigh{Float64}(σ=1.0)
┌ Info: Distribution(params)
└   dist = SymTriangularDist{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = TDist{Float64}(ν=2.5)
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = tdistlogpdf(::Float64, ::Tracker.TrackedReal{Float64}) at tdist.jl:19
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/distrs/tdist.jl:19
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = tdistlogpdf(::Float64, ::Tracker.TrackedReal{Float64}) at tdist.jl:19
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/distrs/tdist.jl:19
┌ Info: Distribution(params)
└   dist = TriangularDist{Float64}(a=1.0, b=3.0, c=2.0)
┌ Info: Distribution(params)
└   dist = Triweight{Float64}(μ=0.0, σ=1.0)
┌ Info: Distribution(params)
└   dist = Uniform{Float64}(a=0.0, b=1.0)
┌ Info: Distribution(params)
└   dist = Weibull{Float64}(α=2.0, θ=1.0)
┌ Info: Distribution(params)
│   dist =
│    DiagNormal(
│    dim: 4
│    μ: [0.0, 0.0, 0.0, 0.0]
│    Σ: [1.0 0.0 0.0 0.0; 0.0 1.0 0.0 0.0; 0.0 0.0 1.0 0.0; 0.0 0.0 0.0 1.0]
│    )
└    
┌ Info: Distribution(params)
│   dist =
│    FullNormal(
│    dim: 2
│    μ: [0.0, 0.0]
│    Σ: [2.0 1.0; 1.0 4.0]
│    )
└    
┌ Info: Distribution(params)
└   dist = Dirichlet{Float64}(alpha=[2.0, 2.0, 2.0, 2.0])
┌ Info: Distribution(params)
│   dist =
│    Wishart{Float64,PDMat{Float64,Array{Float64,2}}}(
│    df: 7.0
│    S: [1.0 0.5; 0.5 1.0]
│    )
└    
┌ Info: Distribution(params)
│   dist =
│    InverseWishart{Float64,PDMat{Float64,Array{Float64,2}}}(
│    df: 7.0
│    Ψ: [1.0 0.5; 0.5 1.0]
│    )
└    
Test Summary:                        | Pass  Fail  Total
Turing                               | 3450     5   3455
  core                               |  283     5    288
    ad.jl                            |   94     1     95
      adr                            |    1            1
      passing duals to distributions |    6            6
      general AD tests               |    2            2
      Tracker + logdet               |    1     1      2
      Tracker + fill                 |    6            6
      Tracker + MvNormal             |    3            3
      Tracker + Diagonal Normal      |    3            3
      Tracker + MvNormal Interface   |   72           72
      Simplex Tracker AD             |             No tests
      PDMatDistribution Tracker AD   |             No tests
    compiler.jl                      |   21     4     25
      assume                         |    4            4
      beta binomial                  |    3            3
      forbid global                  |             No tests
      model macro                    |    7     4     11
      new grammar                    |             No tests
      new interface                  |             No tests
      no return                      |    2            2
      observe                        |    5            5
      sample                         |             No tests
      vectorization                  |             No tests
      Type parameters                |             No tests
      tilde                          |             No tests
    container.jl                     |   15           15
    RandomVariables.jl               |  153          153
  inference                          | 3086         3086
  variational                        |    2            2
  stdlib                             |   70           70
  utilities                          |    9            9
ERROR: LoadError: Some tests did not pass: 3450 passed, 5 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Turing/r0coO/test/runtests.jl:12
ERROR: Package Turing errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
