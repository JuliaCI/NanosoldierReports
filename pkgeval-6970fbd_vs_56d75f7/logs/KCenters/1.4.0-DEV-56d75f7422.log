Julia Version 1.4.0-DEV.624
Commit 56d75f7422 (2019-12-17 08:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed Parsers ───────────────────── v0.3.10
 Installed KCenters ──────────────────── v0.1.7
 Installed Compat ────────────────────── v3.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Missings ──────────────────── v0.4.3
 Installed TableTraits ───────────────── v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed Tables ────────────────────── v0.2.11
 Installed LearnBase ─────────────────── v0.2.2
 Installed CategoricalArrays ─────────── v0.7.4
 Installed JSON ──────────────────────── v0.21.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.7
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.7
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/yLilJ` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_AWHmNP/Project.toml`
  [5d8de97f] + KCenters v0.1.7 [`~/.julia/packages/KCenters/yLilJ`]
  Updating `/tmp/jl_AWHmNP/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.7 ⇒ v0.1.7 [`~/.julia/packages/KCenters/yLilJ`]
Running sandbox
Status `/tmp/jl_AWHmNP/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.7 [`~/.julia/packages/KCenters/yLilJ`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 131.3300000000001
[ Info: 77.47000000000003
[ Info: 42.25999999999999
[ Info: 23.750000000000007
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
Test Summary:        |
Clustering with dnet | No tests
[ Info: 146.19999834944844
[ Info: 76.8800011934147
inertia(cfft.distances) = 18.911017061715942
inertia(cdnet.distances) = 34.193580543398426
inertia(crand.distances) = 21.185441024899607
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.142578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.142578125,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":4.3828125,"distances_sum":437.11877753037703}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.134765625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.134765625,"f1":null,"seconds":3.084540367126465e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":4.4453125,"distances_sum":406.0364945015313}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6811799311799319,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.7578125,"distances_sum":1524.564032843424}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5341796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5341796875,"f1":0.6811799311799319,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":6.7578125,"distances_sum":1524.564032843424}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8341164044289053,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.7421875,"distances_sum":2251.7605477884335}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8341164044289053,"seconds":4.818663001060486e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.7421875,"distances_sum":2251.7605477884335}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8880614177489184,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.3359375,"distances_sum":2506.3776830045613}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8880614177489184,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.3359375,"distances_sum":2506.3776830045613}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8880614177489184,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.3359375,"distances_sum":2506.3776830045613}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8122216325341333,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.15625,"distances_sum":1920.3120439139589}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8815927128427132,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4296875,"distances_sum":2290.342303720507}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.806640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.806640625,"f1":0.8815927128427132,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4296875,"distances_sum":2290.342303720507}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.911441683316684,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.484375,"distances_sum":2490.602040792131}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9458822427572434,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7265625,"distances_sum":2724.938495581314}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9313561438561444,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6015625,"distances_sum":2600.8022244898243}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9458822427572434,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7265625,"distances_sum":2724.938495581314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545444139194145,"seconds":3.546476364135742e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.765625,"distances_sum":2792.884349333217}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073264,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2896.4941441867695}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073264,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2896.4941441867695}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073264,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2896.4941441867695}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1435546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1435546875,"f1":null,"seconds":2.7194619178771973e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":4.8125,"distances_sum":455.09987181722465}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5048828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5048828125,"f1":null,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.84375,"distances_sum":1336.4860781743039}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5048828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5048828125,"f1":null,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":6.84375,"distances_sum":1336.4860781743039}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9247538919413926,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.578125,"distances_sum":2604.4758793572373}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9247538919413926,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.578125,"distances_sum":2604.4758793572373}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421188186813193,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.6484375,"distances_sum":2711.4615819347396}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9421188186813193,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.6484375,"distances_sum":2711.4615819347396}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8994140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9421188186813193,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.085922122001648e-6,"evaluations":8.6484375,"distances_sum":2711.4615819347396}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8866248334998342,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.171875,"distances_sum":2316.607009190498}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.640625,"distances_sum":1027.8935214496241}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.889105685980687,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.1015625,"distances_sum":2309.124649151875}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8134765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.8134765625,"f1":0.889105685980687,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.1015625,"distances_sum":2309.124649151875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9030001248751256,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.3359375,"distances_sum":2443.4753778289214}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9410161019536024,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7109375,"distances_sum":2710.076313864418}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9206590284715289,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5546875,"distances_sum":2573.6230797845847}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9410161019536024,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.7109375,"distances_sum":2710.076313864418}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036635,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.921875,"distances_sum":2968.8389629821463}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682520604395608,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.84375,"distances_sum":2904.0097152128865}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462683150183154,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2741.059237782338}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8046875,"distances_sum":2916.904871904096}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036635,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.921875,"distances_sum":2968.8389629821463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036635,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.921875,"distances_sum":2968.8389629821463}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.868636051448552,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.140625,"distances_sum":2154.1331618368854}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8728896103896111,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.21875,"distances_sum":2212.977741940964}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8728896103896111,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.21875,"distances_sum":2212.977741940964}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495020604395609,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7890625,"distances_sum":2693.2520970607793}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479052197802202,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7109375,"distances_sum":2703.388188065002}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9348932317682322,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.625,"distances_sum":2643.248684197367}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9495020604395609,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7890625,"distances_sum":2693.2520970607793}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9760244963369966,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9296875,"distances_sum":2886.6164190773716}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9613324175824179,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.84375,"distances_sum":2780.0635608611124}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511275183150187,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":2720.5732679315665}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602709790209798,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8125,"distances_sum":2777.8503691284673}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757097069597073,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2874.30476250409}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972361492673993,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.875,"distances_sum":2874.252404583626}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369967,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.96875,"distances_sum":2933.0951833649983}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745364010989014,"seconds":7.050111889839172e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2870.6102301830138}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560444,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.84375,"distances_sum":2791.805172780776}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369967,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.96875,"distances_sum":2933.0951833649983}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369967,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.96875,"distances_sum":2933.0951833649983}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.875678488178489,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1171875,"distances_sum":2175.6248837736725}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":3.898516297340393e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":6.609375,"distances_sum":1078.8296888450338}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8191969488844497,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.9140625,"distances_sum":1873.602844703628}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.875678488178489,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.1171875,"distances_sum":2175.6248837736725}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9540235805860808,"seconds":6.994232535362244e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8203125,"distances_sum":2750.5707783045286}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9037977647352655,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.21875,"distances_sum":2369.3534096109474}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545444139194144,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.7734375,"distances_sum":2755.6512262428887}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8914490023865034,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.21875,"distances_sum":2303.796386515751}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9545444139194144,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.7734375,"distances_sum":2755.6512262428887}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.921875,"distances_sum":2891.245913766913}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682520604395606,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.875,"distances_sum":2836.704145669516}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.9140625,"distances_sum":2876.6054254591954}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590659340659343,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8359375,"distances_sum":2791.4460523113817}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.921875,"distances_sum":2891.245913766913}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.921875,"distances_sum":2891.245913766913}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9891183035714285,"recall":0.642578125,"f1":0.7682694909257416,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.796875,"distances_sum":1514.4043854848137}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.359375,"distances_sum":891.6214810365757}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9891183035714285,"recall":0.642578125,"f1":0.7682694909257416,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.796875,"distances_sum":1514.4043854848137}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9868396577380952,"recall":0.865234375,"f1":0.918281393086081,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6328125,"distances_sum":2327.9616431549953}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":5,"bsize":7},"perf":{"precision":0.9868396577380952,"recall":0.865234375,"f1":0.918281393086081,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.6328125,"distances_sum":2327.9616431549953}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.988374255952381,"recall":0.931640625,"f1":0.955699378746254,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8671875,"distances_sum":2624.439396166113}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":0.9860491071428572,"recall":0.943359375,"f1":0.9618561126373631,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8828125,"distances_sum":2693.0639088137477}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":0.9860491071428572,"recall":0.943359375,"f1":0.9618561126373631,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8828125,"distances_sum":2693.0639088137477}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":0.9860491071428572,"recall":0.943359375,"f1":0.9618561126373631,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8828125,"distances_sum":2693.0639088137477}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2529296875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.2265625,"distances_sum":612.345636216409}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2529296875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2529296875,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.2265625,"distances_sum":612.345636216409}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7938762626262634,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.078125,"distances_sum":1475.046590037595}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7938762626262634,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.078125,"distances_sum":1475.046590037595}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9448374542124548,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6875,"distances_sum":2215.7178642530826}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9372081043956049,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.671875,"distances_sum":2172.616764862388}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9448374542124548,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6875,"distances_sum":2215.7178642530826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9709478021978024,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2371.3611517896893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561069139194145,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7578125,"distances_sum":2281.54751115422}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9709478021978024,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2371.3611517896893}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9709478021978024,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2371.3611517896893}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.7960708141326904e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.625,"distances_sum":806.7013169870299}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7858570249195256,"seconds":4.518777132034302e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.75,"distances_sum":1492.6569154996291}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7858570249195256,"seconds":4.518777132034302e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.75,"distances_sum":1492.6569154996291}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9038289835164841,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.609375,"distances_sum":2009.2526260290383}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.857958014208015,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.125,"distances_sum":1780.5344011418165}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.9038289835164841,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.609375,"distances_sum":2009.2526260290383}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9589915293040296,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7734375,"distances_sum":2420.6938197023865}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9339030760905767,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.65625,"distances_sum":2216.8748722978958}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9252747252747257,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.625,"distances_sum":2171.770266573042}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9127206127206133,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.6171875,"distances_sum":2066.923153107215}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9118334790209797,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.65625,"distances_sum":2072.925319223981}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9132242757242763,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.625,"distances_sum":2052.903762144508}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9589915293040296,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7734375,"distances_sum":2420.6938197023865}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9589915293040296,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7734375,"distances_sum":2420.6938197023865}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8016044719169727,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.984375,"distances_sum":1594.0303318823553}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.376953125,"f1":null,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.9375,"distances_sum":821.0516851499846}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8016044719169727,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.984375,"distances_sum":1594.0303318823553}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495249542124546,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.703125,"distances_sum":2359.461230250624}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.912480228105229,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.59375,"distances_sum":2078.3617135884638}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9162894397269404,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.546875,"distances_sum":2119.370194303645}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8637310606060615,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.1328125,"distances_sum":1842.289726751548}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9495249542124546,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.703125,"distances_sum":2359.461230250624}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681948260073261,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2459.136522269162}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9694196428571431,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2456.2086856329697}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96873282967033,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.875,"distances_sum":2453.99574516475}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9140625,"distances_sum":2419.221564902148}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9519605394605399,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":2372.997384653901}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9694196428571431,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2456.2086856329697}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9694196428571431,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2456.2086856329697}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5361328125,"f1":0.6826935217560224,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.8515625,"distances_sum":1071.8681011568026}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.568359375,"f1":null,"seconds":4.161149263381958e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.0234375,"distances_sum":1226.9984886834395}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2001953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2001953125,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.71875,"distances_sum":434.94584500211494}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.811273622211123,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.5390625,"distances_sum":1597.0827150856464}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.811273622211123,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.5390625,"distances_sum":1597.0827150856464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8509124555999564,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.890625,"distances_sum":1805.843381255658}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9010224150849158,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3984375,"distances_sum":2059.1456374801783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9395006035631042,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.53125,"distances_sum":2315.4475474214887}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9460451007326014,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.5625,"distances_sum":2350.3965741156508}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9339972527472534,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.4609375,"distances_sum":2269.596570384113}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8579394563769571,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.8203125,"distances_sum":1824.8051547357504}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8892805111555122,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3203125,"distances_sum":1984.28913631625}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9460451007326014,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.5625,"distances_sum":2350.3965741156508}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9472355769230778,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.71875,"distances_sum":2357.6308581540666}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964033882783883,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.828125,"distances_sum":2460.2397691042106}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9707417582417586,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.921875,"distances_sum":2478.9079506738954}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9628949175824182,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.859375,"distances_sum":2441.5882119863713}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712797619047624,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8984375,"distances_sum":2489.209459765136}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9679315476190481,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.84375,"distances_sum":2490.363394650912}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.961927655677656,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8125,"distances_sum":2454.3606370333473}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9712797619047624,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8984375,"distances_sum":2489.209459765136}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9712797619047624,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8984375,"distances_sum":2489.209459765136}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.984375,"distances_sum":849.1629359769214}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.380859375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.380859375,"f1":null,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.953125,"distances_sum":897.7341235335826}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.867694805194806,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3125,"distances_sum":1895.4949241743925}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.867694805194806,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3125,"distances_sum":1895.4949241743925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9610519688644692,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2497.027308473342}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9319482600732607,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2290.998001027405}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8759506118881127,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2109375,"distances_sum":1907.5747838240661}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9084821428571435,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.640625,"distances_sum":2098.7420161025525}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9610519688644692,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7578125,"distances_sum":2497.027308473342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2542.3110962516625}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2542.3110962516625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047622,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2542.3110962516625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.9921875,"distances_sum":508.7796833914744}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.216796875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.216796875,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.9921875,"distances_sum":508.7796833914744}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7129714035964042,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.09375,"distances_sum":1229.4520835741307}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8105174339549348,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.78125,"distances_sum":1564.2795592294754}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8522623210123218,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.0625,"distances_sum":1811.3082868883223}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8522623210123218,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.0625,"distances_sum":1811.3082868883223}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9385676823176832,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.6640625,"distances_sum":2278.26217486319}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9168097527472534,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.5546875,"distances_sum":2147.472806343105}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545501373626377,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.734375,"distances_sum":2349.971729208771}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9430860805860811,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.734375,"distances_sum":2282.608035854946}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9137851731601738,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.578125,"distances_sum":2118.9416818293353}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9545501373626377,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.734375,"distances_sum":2349.971729208771}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9545501373626377,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.734375,"distances_sum":2349.971729208771}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.70792245948496,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.6015625,"distances_sum":1251.5229534136909}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.7210187382062389,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.6484375,"distances_sum":1288.579690687755}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5849609375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5849609375,"f1":0.7210187382062389,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.6484375,"distances_sum":1288.579690687755}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9391254578754589,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2260.934805242292}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9391254578754589,"seconds":6.381422281265259e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2260.934805242292}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614812271062275,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2431.8315889156106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9583390567765572,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2403.904346760097}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614812271062275,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2431.8315889156106}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614812271062275,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2431.8315889156106}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.828125,"distances_sum":831.7832502334635}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.811077464202465,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.3203125,"distances_sum":1631.8018095599723}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8540527181152189,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.59375,"distances_sum":1804.7606070563895}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8540527181152189,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.59375,"distances_sum":1804.7606070563895}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9448603479853488,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.671875,"distances_sum":2382.6035237546243}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8791755119880127,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.21875,"distances_sum":1913.7261309821731}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8712318931068941,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1484375,"distances_sum":1934.8088544021907}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9448603479853488,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.671875,"distances_sum":2382.6035237546243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9560325091575097,"seconds":6.716698408126831e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2421.985810391969}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488381410256417,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.734375,"distances_sum":2392.6207429279316}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9560325091575097,"seconds":6.716698408126831e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2421.985810391969}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9560325091575097,"seconds":6.716698408126831e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7890625,"distances_sum":2421.985810391969}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.453125,"distances_sum":832.0120155504114}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8615852897102905,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.03125,"distances_sum":1814.499152455497}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.513671875,"f1":null,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.96875,"distances_sum":1033.0657044098884}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8615852897102905,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.03125,"distances_sum":1814.499152455497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9053571428571436,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2890625,"distances_sum":2017.4389623256213}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9621539918414922,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2418.5513100387943}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9191969488844497,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.640625,"distances_sum":2147.165275348452}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9621539918414922,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2418.5513100387943}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711137820512824,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2467.9457706727067}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9845066391941394,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2559.9054061396937}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9845066391941394,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2559.9054061396937}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9845066391941394,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9609375,"distances_sum":2559.9054061396937}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.4765625,"distances_sum":507.91696971337177}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21484375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.21484375,"f1":null,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.4765625,"distances_sum":507.91696971337177}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":7,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.159046173095703e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.6484375,"distances_sum":549.5138962995185}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.58203125,"f1":0.7208029817404822,"seconds":4.118308424949646e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.3046875,"distances_sum":1209.7696511659585}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":5,"bsize":2}, perf: {"precision":1.0,"recall":0.416015625,"f1":0.5621796606171611,"seconds":3.825873136520386e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.375,"distances_sum":823.2005433272881}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8102520743145751,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.59375,"distances_sum":1538.0021098623486}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8102520743145751,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.59375,"distances_sum":1538.0021098623486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524839743589749,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.78125,"distances_sum":2367.22280085101}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9553113553113558,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2397.768838046461}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8107812326562334,"seconds":4.604458808898926e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6171875,"distances_sum":1564.1109629465375}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8684705919080928,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8125,"distances_sum":1850.2900324349328}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8345425407925415,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.6328125,"distances_sum":1652.3034732464207}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9553113553113558,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2397.768838046461}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9553113553113558,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2397.768838046461}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2578125,"distances_sum":876.1372357189308}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8243829087579096,"seconds":4.287809133529663e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.4140625,"distances_sum":1615.3347913646694}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.713265727328228,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.046875,"distances_sum":1257.7977116487782}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8243829087579096,"seconds":4.287809133529663e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.4140625,"distances_sum":1615.3347913646694}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9621852106227111,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2466.8444078295215}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8459316724941732,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5078125,"distances_sum":1770.3984962295247}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8524912587412595,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.578125,"distances_sum":1816.2087984894063}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8605977355977364,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.5390625,"distances_sum":1823.4779507514327}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.908384844322345,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.515625,"distances_sum":2059.925140098683}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9621852106227111,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2466.8444078295215}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809527,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2502.183450042854}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809527,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2502.183450042854}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809527,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2502.183450042854}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8591616716616725,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.65625,"distances_sum":1843.9533872932366}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.1015625,"distances_sum":826.2638004406858}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8591616716616725,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.65625,"distances_sum":1843.9533872932366}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9200866841491849,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6796875,"distances_sum":2144.0244112509804}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9200866841491849,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6796875,"distances_sum":2144.0244112509804}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9375,"distances_sum":2483.5304430680612}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.96733630952381,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2459.25959064582}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9322916666666671,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.78125,"distances_sum":2220.63066379167}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582818223443229,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.78125,"distances_sum":2434.4311478299473}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9375,"distances_sum":2483.5304430680612}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9375,"distances_sum":2483.5304430680612}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7859505078255086,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3828125,"distances_sum":1759.470834755586}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.9140625,"distances_sum":1043.7608527131881}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7859505078255086,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3828125,"distances_sum":1759.470834755586}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7997892732267741,"seconds":4.6137720346450806e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3828125,"distances_sum":1759.3246879673427}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8672821969696978,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.734375,"distances_sum":2175.6572930672996}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7943129786879793,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3984375,"distances_sum":1777.7121584876231}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8672821969696978,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.734375,"distances_sum":2175.6572930672996}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476820054945061,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2764.801341498549}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638450091575095,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":2910.3277701647457}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9245249542124548,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2558.418352620221}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":12,"bsize":7}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511592574092582,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2819.7968787062046}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638450091575095,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":2910.3277701647457}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638450091575095,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9296875,"distances_sum":2910.3277701647457}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6956548659673665,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.6796875,"distances_sum":1346.9896335144133}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.7001323329448335,"seconds":3.9227306842803955e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.796875,"distances_sum":1308.4719282657868}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.7001323329448335,"seconds":3.9227306842803955e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.796875,"distances_sum":1308.4719282657868}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8713260697635706,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4140625,"distances_sum":2039.7517950728804}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8835940101565111,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.453125,"distances_sum":2122.660905742574}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7903416028416038,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.6484375,"distances_sum":1710.5879484268446}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7798945845820854,"seconds":4.533678293228149e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.5625,"distances_sum":1631.4364097699774}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7942978896103904,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.640625,"distances_sum":1699.8161301653531}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8573842823842832,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.2734375,"distances_sum":1967.4122567443294}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8037109375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8037109375,"f1":0.8835940101565111,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.453125,"distances_sum":2122.660905742574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9360779845154852,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7421875,"distances_sum":2522.8608757077545}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9661515567765572,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2791.7638468983546}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9411916208791218,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2552.5643828588086}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8946662712287722,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4765625,"distances_sum":2207.084303934896}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8994880119880126,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4609375,"distances_sum":2242.7369864288794}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9661515567765572,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2791.7638468983546}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9661515567765572,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2791.7638468983546}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7734822469197477,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.8671875,"distances_sum":1607.1931855353146}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.8389116525650024e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.3984375,"distances_sum":527.6890450987866}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7734822469197477,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.8671875,"distances_sum":1607.1931855353146}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8792518245643253,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.390625,"distances_sum":2113.808127084101}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8792518245643253,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.390625,"distances_sum":2113.808127084101}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9001404845154855,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.484375,"distances_sum":2250.627220768287}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087916,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2711.4851385309744}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087916,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2711.4851385309744}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9583962912087916,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.90625,"distances_sum":2711.4851385309744}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7858428030303038,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.734375,"distances_sum":1814.974523933259}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":4.014000296592712e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.28125,"distances_sum":1030.1618158082877}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7787275224775233,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.7578125,"distances_sum":1714.7825143071552}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7858428030303038,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.734375,"distances_sum":1814.974523933259}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9366560522810529,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2669.012121968004}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9366560522810529,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7734375,"distances_sum":2669.012121968004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9495998792873798,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2808.706654468058}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9495998792873798,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2808.706654468058}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9495998792873798,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2808.706654468058}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":2.5313347578048706e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":6.1875,"distances_sum":926.3005546196462}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.396484375,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.396484375,"f1":null,"seconds":2.5313347578048706e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":6.1875,"distances_sum":926.3005546196462}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7992543914418921,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":7.8359375,"distances_sum":1816.9305207904265}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":2.5872141122817993e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":6.3046875,"distances_sum":974.9916446421611}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.841730665168166,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.2109375,"distances_sum":2022.1942609073799}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7900422494172501,"seconds":3.6675482988357544e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":7.8671875,"distances_sum":1764.0857142618092}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.841730665168166,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.2109375,"distances_sum":2022.1942609073799}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8555668290043298,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.2890625,"distances_sum":2105.5386061862487}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9025042665667672,"seconds":3.868713974952698e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.46875,"distances_sum":2399.4910843703187}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370509698634706,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.78125,"distances_sum":2704.6483070253757}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9430548618048624,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.7734375,"distances_sum":2724.466051553027}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765574,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.8125,"distances_sum":2915.551881363596}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9398695054945061,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.7421875,"distances_sum":2683.5632025899145}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9401359057609062,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.7578125,"distances_sum":2703.152349661107}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9056120962370969,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.5078125,"distances_sum":2406.9523686882108}, best_list's length: 16, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765574,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.8125,"distances_sum":2915.551881363596}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765574,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.0095536708831787e-6,"evaluations":8.8125,"distances_sum":2915.551881363596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.721589001276502,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.1875,"distances_sum":1454.3883660810584}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.267578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.267578125,"f1":null,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.90625,"distances_sum":634.5736173297884}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7853459040959049,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.0859375,"distances_sum":1666.4651682829267}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7853459040959049,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.0859375,"distances_sum":1666.4651682829267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8456881660006669,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.328125,"distances_sum":1991.669408992585}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530563186813192,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.90625,"distances_sum":2783.3525035700877}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8546880203130212,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.4296875,"distances_sum":2011.3611787025868}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9530563186813192,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.90625,"distances_sum":2783.3525035700877}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9829613095238099,"seconds":6.8303197622299194e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3017.8775718377965}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238099,"seconds":6.8303197622299194e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3017.8775718377965}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238099,"seconds":6.8303197622299194e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9921875,"distances_sum":3017.8775718377965}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.2578125,"distances_sum":1315.423777699468}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.560546875,"f1":null,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.2578125,"distances_sum":1315.423777699468}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.901928800366301,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.484375,"distances_sum":2328.442961314624}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8020411879786887,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.15625,"distances_sum":1760.3691082348832}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.901928800366301,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.484375,"distances_sum":2328.442961314624}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537660256410261,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8515625,"distances_sum":2783.6541395541963}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9730311355311358,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2939.080739468441}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632268772893777,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.921875,"distances_sum":2851.995751856032}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9730311355311358,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2939.080739468441}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9730311355311358,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9140625,"distances_sum":2939.080739468441}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6986357392607397,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.8046875,"distances_sum":1358.7372046304035}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.6986357392607397,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.8046875,"distances_sum":1358.7372046304035}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7905325577200585,"seconds":1.2293457984924316e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7890625,"distances_sum":1774.3356858460722}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.556640625,"f1":null,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.828125,"distances_sum":1372.0328890783157}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":7,"bsize":4},"perf":{"precision":1.0,"recall":0.671875,"f1":0.7905325577200585,"seconds":1.2293457984924316e-5,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.7890625,"distances_sum":1774.3356858460722}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9010505119880129,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4609375,"distances_sum":2392.280253423138}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8522675241425248,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.34375,"distances_sum":2059.014386050746}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8437973484848494,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.25,"distances_sum":2022.3230255997328}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":10,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9010505119880129,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4609375,"distances_sum":2392.280253423138}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.83203125,"state":{"ssize":10,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9010505119880129,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4609375,"distances_sum":2392.280253423138}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7705409174159182,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.234375,"distances_sum":1662.2487297713487}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8415286102786111,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.9375,"distances_sum":1923.825174589209}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8415286102786111,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.9375,"distances_sum":1923.825174589209}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9650869963369969,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2831.2897403711327}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9650869963369969,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2831.2897403711327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9787946428571432,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.921875,"distances_sum":2947.1714890777225}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787946428571432,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.921875,"distances_sum":2947.1714890777225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787946428571432,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.921875,"distances_sum":2947.1714890777225}}, n: 9
inertia(cfft.distances) = 18.937546067446597
inertia(cdnet.distances) = 24.485965392494077
inertia(crand.distances) = 20.568049643493765
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9
===> k=5
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.931111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.92
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8799999999999999
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8555555555555555
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144

===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8555555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 3, 1, 3, 2, 2, 3, 3, 2, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.4736000007352861] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4736000007352861, 0.17566781600394624] ***
*** starting iteration: 2; err: [Inf, 0.4736000007352861, 0.17566781600394624] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4736000007352861, 0.17566781600394624, 0.16640413988701483] ***
*** starting iteration: 3; err: [Inf, 0.4736000007352861, 0.17566781600394624, 0.16640413988701483] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4736000007352861, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696] ***
*** starting iteration: 4; err: [Inf, 0.4736000007352861, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4736000007352861, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696, 0.16349131641382694] ***
*** finished computation of 12 references, err: [Inf, 0.4736000007352861, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696, 0.16349131641382694] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.8910000043931734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8910000043931734, 0.6557008888415155] ***
*** finished computation of 3 references, err: [Inf, 0.8910000043931734, 0.6557008888415155] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 21, 30]]
** centroid: 2, normalized-entropy: 0.9774178175281716, [(2, 21), (3, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.228399998758681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.228399998758681, 1.3445766824854095] ***
*** finished computation of 3 references, err: [Inf, 3.228399998758681, 1.3445766824854095] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 28]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 21), (3, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 10, 0]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(1, 33), (2, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8231999982140629] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8231999982140629, 0.5614744652314704] ***
*** finished computation of 3 references, err: [Inf, 0.8231999982140629, 0.5614744652314704] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.538843773766284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.538843773766284, 0.5199882781988328] ***
*** starting iteration: 2; err: [Inf, 2.538843773766284, 0.5199882781988328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.538843773766284, 0.5199882781988328, 0.2532328838291265] ***
*** starting iteration: 3; err: [Inf, 2.538843773766284, 0.5199882781988328, 0.2532328838291265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.538843773766284, 0.5199882781988328, 0.2532328838291265, 0.23034154604262005] ***
*** finished computation of 7 references, err: [Inf, 2.538843773766284, 0.5199882781988328, 0.2532328838291265, 0.23034154604262005] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 28, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 4]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 5, 11]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7318565624664153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7318565624664153, 0.5444285680992054] ***
*** starting iteration: 2; err: [Inf, 2.7318565624664153, 0.5444285680992054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7318565624664153, 0.5444285680992054, 0.2325789506461178] ***
*** starting iteration: 3; err: [Inf, 2.7318565624664153, 0.5444285680992054, 0.2325789506461178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7318565624664153, 0.5444285680992054, 0.2325789506461178, 0.20562136363936465] ***
*** finished computation of 7 references, err: [Inf, 2.7318565624664153, 0.5444285680992054, 0.2325789506461178, 0.20562136363936465] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6599895120807955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6599895120807955, 0.2284975732292731] ***
*** starting iteration: 2; err: [Inf, 0.6599895120807955, 0.2284975732292731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6599895120807955, 0.2284975732292731, 0.1910175064162253] ***
*** starting iteration: 3; err: [Inf, 0.6599895120807955, 0.2284975732292731, 0.1910175064162253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6599895120807955, 0.2284975732292731, 0.1910175064162253, 0.18102791653753292] ***
*** finished computation of 7 references, err: [Inf, 0.6599895120807955, 0.2284975732292731, 0.1910175064162253, 0.18102791653753292] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.579696030024906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.579696030024906, 1.195816970929228] ***
*** starting iteration: 2; err: [Inf, 5.579696030024906, 1.195816970929228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.579696030024906, 1.195816970929228, 0.5287761554772079] ***
*** starting iteration: 3; err: [Inf, 5.579696030024906, 1.195816970929228, 0.5287761554772079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.579696030024906, 1.195816970929228, 0.5287761554772079, 0.38357587067065535] ***
*** finished computation of 3 references, err: [Inf, 5.579696030024906, 1.195816970929228, 0.5287761554772079, 0.38357587067065535] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5939588701526133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5939588701526133, 0.4520265921839497] ***
*** starting iteration: 2; err: [Inf, 0.5939588701526133, 0.4520265921839497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5939588701526133, 0.4520265921839497, 0.41763253195829464] ***
*** starting iteration: 3; err: [Inf, 0.5939588701526133, 0.4520265921839497, 0.41763253195829464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5939588701526133, 0.4520265921839497, 0.41763253195829464, 0.39672972399978007] ***
*** finished computation of 3 references, err: [Inf, 0.5939588701526133, 0.4520265921839497, 0.41763253195829464, 0.39672972399978007] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.4238434365270227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4238434365270227, 0.879765904559908] ***
*** starting iteration: 2; err: [Inf, 3.4238434365270227, 0.879765904559908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4238434365270227, 0.879765904559908, 0.45747640620571517] ***
*** starting iteration: 3; err: [Inf, 3.4238434365270227, 0.879765904559908, 0.45747640620571517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.4238434365270227, 0.879765904559908, 0.45747640620571517, 0.39581371112448155] ***
*** finished computation of 3 references, err: [Inf, 3.4238434365270227, 0.879765904559908, 0.45747640620571517, 0.39581371112448155] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3993214519754362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3993214519754362, 0.2614699995919851] ***
*** finished computation of 7 references, err: [Inf, 2.3993214519754362, 0.2614699995919851] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 4, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 5]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.376501753126269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.376501753126269, 0.24772608483295552] ***
*** finished computation of 7 references, err: [Inf, 0.376501753126269, 0.24772608483295552] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 6, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6973842933102339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6973842933102339, 0.26894815933300403] ***
*** finished computation of 7 references, err: [Inf, 0.6973842933102339, 0.26894815933300403] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 25, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 9]]
** centroid: 2, normalized-entropy: 0.9975025463691153, [(2, 8), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44430000067129144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44430000067129144, 0.25319961613565584] ***
*** starting iteration: 2; err: [Inf, 0.44430000067129144, 0.25319961613565584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138] ***
*** starting iteration: 3; err: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138, 0.22639014519760464] ***
*** starting iteration: 4; err: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138, 0.22639014519760464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138, 0.22639014519760464, 0.2251029939116801] ***
*** starting iteration: 5; err: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138, 0.22639014519760464, 0.2251029939116801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138, 0.22639014519760464, 0.2251029939116801, 0.2251029939116801] ***
*** finished computation of 7 references, err: [Inf, 0.44430000067129144, 0.25319961613565584, 0.23025832188068138, 0.22639014519760464, 0.2251029939116801, 0.2251029939116801] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 6.160699943566788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203] ***
*** starting iteration: 2; err: [Inf, 6.160699943566788, 1.312322742043203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341] ***
*** starting iteration: 3; err: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953] ***
*** starting iteration: 4; err: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521] ***
*** starting iteration: 5; err: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521, 0.2782914865286943] ***
*** starting iteration: 6; err: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521, 0.2782914865286943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521, 0.2782914865286943, 0.2715367394655076] ***
*** starting iteration: 7; err: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521, 0.2782914865286943, 0.2715367394655076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521, 0.2782914865286943, 0.2715367394655076, 0.27104004608975] ***
*** finished computation of 7 references, err: [Inf, 6.160699943566788, 1.312322742043203, 0.4665796906755341, 0.3732522825381953, 0.3114181027356521, 0.2782914865286943, 0.2715367394655076, 0.27104004608975] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 9]]
** centroid: 6, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7203000074583822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203000074583822, 0.3547070494303973] ***
*** starting iteration: 2; err: [Inf, 0.7203000074583822, 0.3547070494303973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524] ***
*** starting iteration: 3; err: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816] ***
*** starting iteration: 4; err: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816, 0.2595272392005479] ***
*** starting iteration: 5; err: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816, 0.2595272392005479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816, 0.2595272392005479, 0.2581153530135246] ***
*** starting iteration: 6; err: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816, 0.2595272392005479, 0.2581153530135246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816, 0.2595272392005479, 0.2581153530135246, 0.2581153530135246] ***
*** finished computation of 7 references, err: [Inf, 0.7203000074583822, 0.3547070494303973, 0.31626169486372524, 0.2780759466834816, 0.2595272392005479, 0.2581153530135246, 0.2581153530135246] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 11]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.438283942799432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.438283942799432, 1.1542018268776708] ***
*** starting iteration: 2; err: [Inf, 3.438283942799432, 1.1542018268776708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.438283942799432, 1.1542018268776708, 0.4947123060596874] ***
*** starting iteration: 3; err: [Inf, 3.438283942799432, 1.1542018268776708, 0.4947123060596874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.438283942799432, 1.1542018268776708, 0.4947123060596874, 0.35534272664001554] ***
*** finished computation of 3 references, err: [Inf, 3.438283942799432, 1.1542018268776708, 0.4947123060596874, 0.35534272664001554] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7272016065747003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7272016065747003, 0.3791536681386324] ***
*** starting iteration: 2; err: [Inf, 0.7272016065747003, 0.3791536681386324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7272016065747003, 0.3791536681386324, 0.37468670207267857] ***
*** starting iteration: 3; err: [Inf, 0.7272016065747003, 0.3791536681386324, 0.37468670207267857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7272016065747003, 0.3791536681386324, 0.37468670207267857, 0.37133329951330724] ***
*** finished computation of 3 references, err: [Inf, 0.7272016065747003, 0.3791536681386324, 0.37468670207267857, 0.37133329951330724] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 8]]
** centroid: 1, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 28]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.9139815730033884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9139815730033884, 0.6337164030164243] ***
*** starting iteration: 2; err: [Inf, 4.9139815730033884, 0.6337164030164243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9139815730033884, 0.6337164030164243, 0.3891563221512968] ***
*** starting iteration: 3; err: [Inf, 4.9139815730033884, 0.6337164030164243, 0.3891563221512968] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.9139815730033884, 0.6337164030164243, 0.3891563221512968, 0.3867791295181567] ***
*** finished computation of 3 references, err: [Inf, 4.9139815730033884, 0.6337164030164243, 0.3891563221512968, 0.3867791295181567] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.94720000358713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.94720000358713, 1.8940094454838006] ***
*** finished computation of 3 references, err: [Inf, 4.94720000358713, 1.8940094454838006] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 21]]
** centroid: 1, normalized-entropy: 0.9995708393473225, [(2, 20), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 16, 1]]
** centroid: 2, normalized-entropy: 0.9113423759758414, [(1, 33), (2, 16)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9374000335007469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9374000335007469, 0.6657900813260972] ***
*** finished computation of 3 references, err: [Inf, 1.9374000335007469, 0.6657900813260972] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 10]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6869999945732093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6869999945732093, 0.6787975771634676] ***
*** finished computation of 3 references, err: [Inf, 1.6869999945732093, 0.6787975771634676] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 20]]
** centroid: 2, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44219999877059024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44219999877059024, 0.30498639208180794] ***
*** starting iteration: 2; err: [Inf, 0.44219999877059024, 0.30498639208180794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804] ***
*** starting iteration: 3; err: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032] ***
*** starting iteration: 4; err: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032, 0.23274821759632217] ***
*** starting iteration: 5; err: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032, 0.23274821759632217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032, 0.23274821759632217, 0.22957398870267234] ***
*** starting iteration: 6; err: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032, 0.23274821759632217, 0.22957398870267234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032, 0.23274821759632217, 0.22957398870267234, 0.22906126204415259] ***
*** finished computation of 7 references, err: [Inf, 0.44219999877059024, 0.30498639208180794, 0.27033933835684804, 0.24149152321210032, 0.23274821759632217, 0.22957398870267234, 0.22906126204415259] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.3020000223580324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885] ***
*** starting iteration: 2; err: [Inf, 3.3020000223580324, 1.0571665940480885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563] ***
*** starting iteration: 3; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097] ***
*** starting iteration: 4; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174] ***
*** starting iteration: 5; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607] ***
*** starting iteration: 6; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407] ***
*** starting iteration: 7; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407, 0.27052553850903577] ***
*** starting iteration: 8; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407, 0.27052553850903577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407, 0.27052553850903577, 0.26854552964987916] ***
*** starting iteration: 9; err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407, 0.27052553850903577, 0.26854552964987916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407, 0.27052553850903577, 0.26854552964987916, 0.26780812831901585] ***
*** finished computation of 7 references, err: [Inf, 3.3020000223580324, 1.0571665940480885, 0.4286478929805563, 0.3659567178137097, 0.3107278923414174, 0.28373763591499607, 0.272744184595407, 0.27052553850903577, 0.26854552964987916, 0.26780812831901585] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 10]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(2, 6), (3, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.140099991756859] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012] ***
*** starting iteration: 2; err: [Inf, 3.140099991756859, 0.6665868200826012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425] ***
*** starting iteration: 3; err: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167] ***
*** starting iteration: 4; err: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626] ***
*** starting iteration: 5; err: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626, 0.2710242333626486] ***
*** starting iteration: 6; err: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626, 0.2710242333626486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626, 0.2710242333626486, 0.2696267878568037] ***
*** starting iteration: 7; err: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626, 0.2710242333626486, 0.2696267878568037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626, 0.2710242333626486, 0.2696267878568037, 0.2690947673074494] ***
*** finished computation of 7 references, err: [Inf, 3.140099991756859, 0.6665868200826012, 0.28079348661007425, 0.27812997160308167, 0.2734630298331626, 0.2710242333626486, 0.2696267878568037, 0.2690947673074494] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1288999865744485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1288999865744485, 0.5573068111530752] ***
*** finished computation of 3 references, err: [Inf, 1.1288999865744485, 0.5573068111530752] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 13]]
** centroid: 1, normalized-entropy: 0.834648285181383, [(2, 36), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6425999907310296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6425999907310296, 0.562218889719204] ***
*** finished computation of 3 references, err: [Inf, 1.6425999907310296, 0.562218889719204] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2163000056949609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2163000056949609, 0.6160751349420437] ***
*** finished computation of 3 references, err: [Inf, 1.2163000056949609, 0.6160751349420437] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 33]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 11), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.644641133793543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.644641133793543, 0.3899557264109943] ***
*** starting iteration: 2; err: [Inf, 0.644641133793543, 0.3899557264109943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.644641133793543, 0.3899557264109943, 0.3463096187687399] ***
*** starting iteration: 3; err: [Inf, 0.644641133793543, 0.3899557264109943, 0.3463096187687399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.644641133793543, 0.3899557264109943, 0.3463096187687399, 0.33781951300976365] ***
*** starting iteration: 4; err: [Inf, 0.644641133793543, 0.3899557264109943, 0.3463096187687399, 0.33781951300976365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.644641133793543, 0.3899557264109943, 0.3463096187687399, 0.33781951300976365, 0.33781951300976365] ***
*** finished computation of 3 references, err: [Inf, 0.644641133793543, 0.3899557264109943, 0.3463096187687399, 0.33781951300976365, 0.33781951300976365] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0284596401125048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829] ***
*** starting iteration: 2; err: [Inf, 1.0284596401125048, 0.4001868905705829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433] ***
*** starting iteration: 3; err: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596] ***
*** starting iteration: 4; err: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893] ***
*** starting iteration: 5; err: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893, 0.375695628009907] ***
*** starting iteration: 6; err: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893, 0.375695628009907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543] ***
*** starting iteration: 7; err: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543, 0.37247881864062543] ***
*** finished computation of 3 references, err: [Inf, 1.0284596401125048, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543, 0.37247881864062543] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 27]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7042575137801279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7042575137801279, 0.4108639525231169] ***
*** starting iteration: 2; err: [Inf, 0.7042575137801279, 0.4108639525231169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7042575137801279, 0.4108639525231169, 0.39114064649803504] ***
*** starting iteration: 3; err: [Inf, 0.7042575137801279, 0.4108639525231169, 0.39114064649803504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7042575137801279, 0.4108639525231169, 0.39114064649803504, 0.3868303612447488] ***
*** starting iteration: 4; err: [Inf, 0.7042575137801279, 0.4108639525231169, 0.39114064649803504, 0.3868303612447488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7042575137801279, 0.4108639525231169, 0.39114064649803504, 0.3868303612447488, 0.38673051413802695] ***
*** finished computation of 3 references, err: [Inf, 0.7042575137801279, 0.4108639525231169, 0.39114064649803504, 0.3868303612447488, 0.38673051413802695] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0029184117908643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0029184117908643, 0.33781951300976365] ***
*** starting iteration: 2; err: [Inf, 1.0029184117908643, 0.33781951300976365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0029184117908643, 0.33781951300976365, 0.33781951300976365] ***
*** finished computation of 3 references, err: [Inf, 1.0029184117908643, 0.33781951300976365, 0.33781951300976365] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.629069316343113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556] ***
*** starting iteration: 2; err: [Inf, 0.629069316343113, 0.47115246210277556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225] ***
*** starting iteration: 3; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438] ***
*** starting iteration: 4; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596] ***
*** starting iteration: 5; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596] ***
*** starting iteration: 6; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893] ***
*** starting iteration: 7; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893, 0.375695628009907] ***
*** starting iteration: 8; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893, 0.375695628009907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543] ***
*** starting iteration: 9; err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543, 0.37247881864062543] ***
*** finished computation of 3 references, err: [Inf, 0.629069316343113, 0.47115246210277556, 0.42402172266287225, 0.4026231532093438, 0.38801550396026596, 0.38159001608398596, 0.37733052487545893, 0.375695628009907, 0.37247881864062543, 0.37247881864062543] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 27]]
** centroid: 3, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7193257346202911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193257346202911, 0.4422829019926756] ***
*** starting iteration: 2; err: [Inf, 0.7193257346202911, 0.4422829019926756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054] ***
*** starting iteration: 3; err: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054, 0.39114064649803504] ***
*** starting iteration: 4; err: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054, 0.39114064649803504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054, 0.39114064649803504, 0.3868303612447488] ***
*** starting iteration: 5; err: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054, 0.39114064649803504, 0.3868303612447488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054, 0.39114064649803504, 0.3868303612447488, 0.38673051413802695] ***
*** finished computation of 3 references, err: [Inf, 0.7193257346202911, 0.4422829019926756, 0.4072019009214054, 0.39114064649803504, 0.3868303612447488, 0.38673051413802695] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6264166120896345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6264166120896345, 0.3901798845393719] ***
*** starting iteration: 2; err: [Inf, 0.6264166120896345, 0.3901798845393719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6264166120896345, 0.3901798845393719, 0.376064542799189] ***
*** starting iteration: 3; err: [Inf, 0.6264166120896345, 0.3901798845393719, 0.376064542799189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6264166120896345, 0.3901798845393719, 0.376064542799189, 0.35946458539101095] ***
*** finished computation of 3 references, err: [Inf, 0.6264166120896345, 0.3901798845393719, 0.376064542799189, 0.35946458539101095] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 4]]
** centroid: 3, normalized-entropy: 0.4941829348497886, [(2, 33), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8878650151596363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8878650151596363, 0.4001868905705829] ***
*** starting iteration: 2; err: [Inf, 0.8878650151596363, 0.4001868905705829] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8878650151596363, 0.4001868905705829, 0.3858873943931433] ***
*** starting iteration: 3; err: [Inf, 0.8878650151596363, 0.4001868905705829, 0.3858873943931433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8878650151596363, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596] ***
*** finished computation of 3 references, err: [Inf, 0.8878650151596363, 0.4001868905705829, 0.3858873943931433, 0.38159001608398596] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.825302469992594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.825302469992594, 0.40491971376241354] ***
*** starting iteration: 2; err: [Inf, 0.825302469992594, 0.40491971376241354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.825302469992594, 0.40491971376241354, 0.394018154400219] ***
*** starting iteration: 3; err: [Inf, 0.825302469992594, 0.40491971376241354, 0.394018154400219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.825302469992594, 0.40491971376241354, 0.394018154400219, 0.39004740979464614] ***
*** finished computation of 3 references, err: [Inf, 0.825302469992594, 0.40491971376241354, 0.394018154400219, 0.39004740979464614] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 33]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 6), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 27, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5867193281675211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5867193281675211, 0.3900962632447025] ***
*** finished computation of 3 references, err: [Inf, 0.5867193281675211, 0.3900962632447025] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 12]]
** centroid: 1, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6805601007265801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6805601007265801, 0.3928905404633359] ***
*** finished computation of 3 references, err: [Inf, 0.6805601007265801, 0.3928905404633359] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 35]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 11), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7572436570127514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7572436570127514, 0.4072019009214054] ***
*** finished computation of 3 references, err: [Inf, 0.7572436570127514, 0.4072019009214054] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 15]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 33), (3, 15)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6540000001163533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6540000001163533, 0.23914849098885216] ***
*** starting iteration: 2; err: [Inf, 0.6540000001163533, 0.23914849098885216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6540000001163533, 0.23914849098885216, 0.2231649482164475] ***
*** starting iteration: 3; err: [Inf, 0.6540000001163533, 0.23914849098885216, 0.2231649482164475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6540000001163533, 0.23914849098885216, 0.2231649482164475, 0.22096872633010756] ***
*** starting iteration: 4; err: [Inf, 0.6540000001163533, 0.23914849098885216, 0.2231649482164475, 0.22096872633010756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6540000001163533, 0.23914849098885216, 0.2231649482164475, 0.22096872633010756, 0.22096872633010756] ***
*** finished computation of 7 references, err: [Inf, 0.6540000001163533, 0.23914849098885216, 0.2231649482164475, 0.22096872633010756, 0.22096872633010756] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 6]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6297000005960289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000005960289, 0.2735413485177655] ***
*** starting iteration: 2; err: [Inf, 0.6297000005960289, 0.2735413485177655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000005960289, 0.2735413485177655, 0.24889779203685908] ***
*** starting iteration: 3; err: [Inf, 0.6297000005960289, 0.2735413485177655, 0.24889779203685908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6297000005960289, 0.2735413485177655, 0.24889779203685908, 0.24889779203685908] ***
*** finished computation of 7 references, err: [Inf, 0.6297000005960289, 0.2735413485177655, 0.24889779203685908, 0.24889779203685908] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 3]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 1), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 6, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48390000319128407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48390000319128407, 0.26432243220683227] ***
*** starting iteration: 2; err: [Inf, 0.48390000319128407, 0.26432243220683227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48390000319128407, 0.26432243220683227, 0.23097299643837282] ***
*** starting iteration: 3; err: [Inf, 0.48390000319128407, 0.26432243220683227, 0.23097299643837282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48390000319128407, 0.26432243220683227, 0.23097299643837282, 0.22257371289420202] ***
*** starting iteration: 4; err: [Inf, 0.48390000319128407, 0.26432243220683227, 0.23097299643837282, 0.22257371289420202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48390000319128407, 0.26432243220683227, 0.23097299643837282, 0.22257371289420202, 0.22190427016168127] ***
*** finished computation of 7 references, err: [Inf, 0.48390000319128407, 0.26432243220683227, 0.23097299643837282, 0.22257371289420202, 0.22190427016168127] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 11]]
** centroid: 3, normalized-entropy: 0.9819407868640977, [(2, 8), (3, 11)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5426000067734877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5426000067734877, 0.2378074945237433] ***
*** starting iteration: 2; err: [Inf, 0.5426000067734877, 0.2378074945237433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5426000067734877, 0.2378074945237433, 0.22026812957602693] ***
*** starting iteration: 3; err: [Inf, 0.5426000067734877, 0.2378074945237433, 0.22026812957602693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5426000067734877, 0.2378074945237433, 0.22026812957602693, 0.21863490544827802] ***
*** finished computation of 7 references, err: [Inf, 0.5426000067734877, 0.2378074945237433, 0.22026812957602693, 0.21863490544827802] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 26, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5497000050090235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000050090235, 0.2544210872383188] ***
*** starting iteration: 2; err: [Inf, 0.5497000050090235, 0.2544210872383188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000050090235, 0.2544210872383188, 0.24675384363075636] ***
*** starting iteration: 3; err: [Inf, 0.5497000050090235, 0.2544210872383188, 0.24675384363075636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5497000050090235, 0.2544210872383188, 0.24675384363075636, 0.24487441348274167] ***
*** finished computation of 7 references, err: [Inf, 0.5497000050090235, 0.2544210872383188, 0.24675384363075636, 0.24487441348274167] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 9]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48620000876136615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48620000876136615, 0.22965158993576895] ***
*** starting iteration: 2; err: [Inf, 0.48620000876136615, 0.22965158993576895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48620000876136615, 0.22965158993576895, 0.2238153562363062] ***
*** starting iteration: 3; err: [Inf, 0.48620000876136615, 0.22965158993576895, 0.2238153562363062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48620000876136615, 0.22965158993576895, 0.2238153562363062, 0.2226711769491929] ***
*** finished computation of 7 references, err: [Inf, 0.48620000876136615, 0.22965158993576895, 0.2238153562363062, 0.2226711769491929] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 7, 11]]
** centroid: 5, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.0429000027560482] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0429000027560482, 0.5887509016578456] ***
*** starting iteration: 2; err: [Inf, 1.0429000027560482, 0.5887509016578456] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0429000027560482, 0.5887509016578456, 0.5207218472141303] ***
*** starting iteration: 3; err: [Inf, 1.0429000027560482, 0.5887509016578456, 0.5207218472141303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0429000027560482, 0.5887509016578456, 0.5207218472141303, 0.4861750424782294] ***
*** finished computation of 3 references, err: [Inf, 1.0429000027560482, 0.5887509016578456, 0.5207218472141303, 0.4861750424782294] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2446999978410223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2446999978410223, 0.5830894717708467] ***
*** starting iteration: 2; err: [Inf, 1.2446999978410223, 0.5830894717708467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2446999978410223, 0.5830894717708467, 0.5468079405594569] ***
*** starting iteration: 3; err: [Inf, 1.2446999978410223, 0.5830894717708467, 0.5468079405594569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2446999978410223, 0.5830894717708467, 0.5468079405594569, 0.5380465779281723] ***
*** finished computation of 3 references, err: [Inf, 1.2446999978410223, 0.5830894717708467, 0.5468079405594569, 0.5380465779281723] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 10]]
** centroid: 1, normalized-entropy: 0.8212809417449864, [(2, 29), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0632000104555195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0632000104555195, 0.5954155927456314] ***
*** starting iteration: 2; err: [Inf, 1.0632000104555195, 0.5954155927456314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0632000104555195, 0.5954155927456314, 0.5614744652314704] ***
*** starting iteration: 3; err: [Inf, 1.0632000104555195, 0.5954155927456314, 0.5614744652314704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0632000104555195, 0.5954155927456314, 0.5614744652314704, 0.5589133524445566] ***
*** finished computation of 3 references, err: [Inf, 1.0632000104555195, 0.5954155927456314, 0.5614744652314704, 0.5589133524445566] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.080668861686281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.080668861686281, 0.34516767300107803] ***
*** starting iteration: 2; err: [Inf, 1.080668861686281, 0.34516767300107803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.080668861686281, 0.34516767300107803, 0.33781951300976365] ***
*** starting iteration: 3; err: [Inf, 1.080668861686281, 0.34516767300107803, 0.33781951300976365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.080668861686281, 0.34516767300107803, 0.33781951300976365, 0.33781951300976365] ***
*** finished computation of 3 references, err: [Inf, 1.080668861686281, 0.34516767300107803, 0.33781951300976365, 0.33781951300976365] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8150330069587883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8150330069587883, 0.4599400042275868] ***
*** starting iteration: 2; err: [Inf, 0.8150330069587883, 0.4599400042275868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8150330069587883, 0.4599400042275868, 0.42051779054049404] ***
*** starting iteration: 3; err: [Inf, 0.8150330069587883, 0.4599400042275868, 0.42051779054049404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8150330069587883, 0.4599400042275868, 0.42051779054049404, 0.4026231532093438] ***
*** finished computation of 3 references, err: [Inf, 0.8150330069587883, 0.4599400042275868, 0.42051779054049404, 0.4026231532093438] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 12]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 1, 0]]
** centroid: 2, normalized-entropy: 0.1914332548141934, [(1, 33), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7222783558940619] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7222783558940619, 0.4072019009214054] ***
*** starting iteration: 2; err: [Inf, 0.7222783558940619, 0.4072019009214054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7222783558940619, 0.4072019009214054, 0.39114064649803504] ***
*** starting iteration: 3; err: [Inf, 0.7222783558940619, 0.4072019009214054, 0.39114064649803504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7222783558940619, 0.4072019009214054, 0.39114064649803504, 0.3868303612447488] ***
*** finished computation of 3 references, err: [Inf, 0.7222783558940619, 0.4072019009214054, 0.39114064649803504, 0.3868303612447488] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 18
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.43260731855444035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43260731855444035, 0.23137040059000158] ***
*** starting iteration: 2; err: [Inf, 0.43260731855444035, 0.23137040059000158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184] ***
*** starting iteration: 3; err: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642] ***
*** starting iteration: 4; err: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642, 0.19075431965459663] ***
*** starting iteration: 5; err: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642, 0.19075431965459663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642, 0.19075431965459663, 0.18793616776794958] ***
*** starting iteration: 6; err: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642, 0.19075431965459663, 0.18793616776794958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642, 0.19075431965459663, 0.18793616776794958, 0.18763920103984905] ***
*** finished computation of 7 references, err: [Inf, 0.43260731855444035, 0.23137040059000158, 0.20558686333156184, 0.19466035958061642, 0.19075431965459663, 0.18793616776794958, 0.18763920103984905] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 6, 7]]
** centroid: 6, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7883330667596438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7883330667596438, 0.4645498782939985] ***
*** starting iteration: 2; err: [Inf, 2.7883330667596438, 0.4645498782939985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263] ***
*** starting iteration: 3; err: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263, 0.21138890761465118] ***
*** starting iteration: 4; err: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263, 0.21138890761465118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263, 0.21138890761465118, 0.20482796841540626] ***
*** starting iteration: 5; err: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263, 0.21138890761465118, 0.20482796841540626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263, 0.21138890761465118, 0.20482796841540626, 0.20482796841540626] ***
*** finished computation of 7 references, err: [Inf, 2.7883330667596438, 0.4645498782939985, 0.24475561044476263, 0.21138890761465118, 0.20482796841540626, 0.20482796841540626] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 7]]
** centroid: 7, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5465829087332991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218] ***
*** starting iteration: 2; err: [Inf, 0.5465829087332991, 0.2450973932350218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817] ***
*** starting iteration: 3; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138] ***
*** starting iteration: 4; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624] ***
*** starting iteration: 5; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036] ***
*** starting iteration: 6; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351] ***
*** starting iteration: 7; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351, 0.1557661763055744] ***
*** starting iteration: 8; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351, 0.1557661763055744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351, 0.1557661763055744, 0.15466523107931798] ***
*** starting iteration: 9; err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351, 0.1557661763055744, 0.15466523107931798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351, 0.1557661763055744, 0.15466523107931798, 0.15466523107931798] ***
*** finished computation of 7 references, err: [Inf, 0.5465829087332991, 0.2450973932350218, 0.20244155482986817, 0.1870782094508138, 0.17402979812198624, 0.16662030324909036, 0.1607725162738351, 0.1557661763055744, 0.15466523107931798, 0.15466523107931798] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 9]]
** centroid: 7, normalized-entropy: 1.0, [(2, 9), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 19
iteration 7 finished
*** starting iteration: 1; err: [Inf, 2.7841269353629285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7841269353629285, 0.4224662090428373] ***
*** starting iteration: 2; err: [Inf, 2.7841269353629285, 0.4224662090428373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363] ***
*** starting iteration: 3; err: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213] ***
*** starting iteration: 4; err: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213, 0.17380985287540196] ***
*** starting iteration: 5; err: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213, 0.17380985287540196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213, 0.17380985287540196, 0.17194806484769282] ***
*** starting iteration: 6; err: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213, 0.17380985287540196, 0.17194806484769282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213, 0.17380985287540196, 0.17194806484769282, 0.17110334217210765] ***
*** finished computation of 7 references, err: [Inf, 2.7841269353629285, 0.4224662090428373, 0.18518355518346363, 0.17670796145950213, 0.17380985287540196, 0.17194806484769282, 0.17110334217210765] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 3, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.647163963701558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.647163963701558, 0.9030859233906284] ***
*** starting iteration: 2; err: [Inf, 5.647163963701558, 0.9030859233906284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299] ***
*** starting iteration: 3; err: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299, 0.20430610755091907] ***
*** starting iteration: 4; err: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299, 0.20430610755091907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299, 0.20430610755091907, 0.1962552677535407] ***
*** starting iteration: 5; err: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299, 0.20430610755091907, 0.1962552677535407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299, 0.20430610755091907, 0.1962552677535407, 0.19548182048053825] ***
*** finished computation of 7 references, err: [Inf, 5.647163963701558, 0.9030859233906284, 0.2450894171246299, 0.20430610755091907, 0.1962552677535407, 0.19548182048053825] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 12, 5]]
** centroid: 2, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 5]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5950382874840997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950382874840997, 0.28033094504449013] ***
*** starting iteration: 2; err: [Inf, 0.5950382874840997, 0.28033094504449013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469] ***
*** starting iteration: 3; err: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469, 0.1728188010962413] ***
*** starting iteration: 4; err: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469, 0.1728188010962413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469, 0.1728188010962413, 0.17125753553677373] ***
*** starting iteration: 5; err: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469, 0.1728188010962413, 0.17125753553677373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469, 0.1728188010962413, 0.17125753553677373, 0.1714606269036015] ***
*** finished computation of 7 references, err: [Inf, 0.5950382874840997, 0.28033094504449013, 0.19723604242005469, 0.1728188010962413, 0.17125753553677373, 0.1714606269036015] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9533333333333333, 0.94, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 2) => 0.9733333333333333
finished with 20
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.8214000024335608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8214000024335608, 0.24411271896842734] ***
*** finished computation of 7 references, err: [Inf, 0.8214000024335608, 0.24411271896842734] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.154199995213586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.154199995213586, 1.210792014125584] ***
*** finished computation of 7 references, err: [Inf, 3.154199995213586, 1.210792014125584] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 18]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 24), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 7, 0]]
** centroid: 3, normalized-entropy: 0.6690158350565576, [(1, 33), (2, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.674299999845479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.674299999845479, 0.30037367746550186] ***
*** finished computation of 7 references, err: [Inf, 0.674299999845479, 0.30037367746550186] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 10, 3]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.0181818181818185, 3.4121212121212126, 1.4757575757575756, 0.24848484848484856], [5.466666666666667, 2.4555555555555557, 3.677777777777778, 1.1111111111111112], [6.458823529411766, 3.0235294117647062, 5.441176470588235, 2.1000000000000005], [5.758823529411765, 2.9058823529411764, 4.394117647058824, 1.4058823529411764], [6.166666666666667, 2.4, 4.666666666666667, 1.4666666666666668], [5.885714285714286, 2.685714285714286, 5.0857142857142845, 1.7714285714285716], [6.55, 3.0250000000000004, 4.550000000000001, 1.45], [7.412500000000001, 3.1125000000000003, 6.2125, 2.0500000000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 2, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[7.666666666666668, 3.0, 6.466666666666668, 2.1], [6.095833333333332, 2.891666666666666, 4.458333333333333, 1.3958333333333333], [6.222222222222223, 2.8722222222222227, 5.055555555555555, 1.9388888888888889], [4.987878787878788, 3.4030303030303033, 1.4515151515151514, 0.23636363636363641], [5.357142857142857, 2.5285714285714285, 3.542857142857143, 1.1142857142857143], [6.4, 2.8, 5.6, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.95, 2.2, 3.4, 1.0], [5.62, 2.5300000000000002, 3.8300000000000005, 1.1600000000000001], [5.011764705882353, 3.4382352941176473, 1.4647058823529409, 0.24705882352941183], [7.281818181818181, 3.2363636363636363, 6.2, 2.172727272727273], [5.725, 2.7375000000000003, 4.3999999999999995, 1.35], [6.630000000000001, 3.0, 4.64, 1.4500000000000002], [6.266666666666667, 2.766666666666667, 4.933333333333333, 1.7], [6.158823529411764, 2.8352941176470594, 5.258823529411764, 1.9764705882352938]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 2, 1, 3, 2, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[99, 24, 1, 1, 16, 1, 21, 13, 1, 20, 2, 2, 23, 18, 6, 26, 31, 28, 33, 20, 30, 9, 47, 40, 25, 1, 43, 19, 26, 8, 1, 19, 13, 38, 32, 35, 32, 19, 41, 39, 36, 27, 18, 40, 9, 14, 31, 23, 20, 61, 15, 18, 18, 1, 33, 31, 26, 45, 32, 1, 1, 39, 30, 35, 35, 44, 25, 14, 28, 35, 36, 64, 29, 28, 39, 20, 52, 36, 35, 27, 38, 38, 48, 58, 10, 22, 46, 30, 37, 48, 34, 38, 43, 35, 35, 26, 35, 33, 35, 31, 19, 75, 42, 39, 39, 40, 52, 61, 35, 12, 2, 11, 24, 35, 44, 25, 34, 31, 62, 50, 68, 17, 36, 32, 7, 52, 38, 38, 54, 29, 32, 15, 46, 23, 39, 51, 35, 25, 41, 25, 1, 14, 48, 7, 54, 17, 50, 45, 51, 15, 52, 35, 42, 19, 34, 57, 29, 53, 31, 15, 27, 27, 31, 49, 17, 41, 39, 18, 25, 26, 17, 37, 32, 53, 28, 23, 45, 30, 30, 40, 36, 39, 36, 45, 29, 19, 41, 45, 38, 32, 37, 96, 17, 36, 47, 28, 29, 43, 46, 25, 37, 40, 31, 52, 19, 21, 44, 49, 49, 39, 39, 45, 48, 54, 37, 36, 31, 68, 30, 27, 49, 31, 44, 31, 45, 1, 37, 70, 12, 37, 48, 54, 30, 23, 49, 39, 35, 26, 28, 39, 31, 44, 45, 36, 21, 39, 46, 53, 49, 33, 15, 28, 23, 43, 46, 30, 37, 40, 51, 39, 49, 41, 44, 41, 41, 27, 21, 21, 40, 50, 33, 32, 66, 29, 30, 46, 31, 34, 51, 53, 34, 22, 30, 26, 35, 40, 21, 20, 44, 17, 41, 46, 24, 15, 58, 43, 33, 28, 45, 48]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5829999999999999, speedup = 0.3950127018424971, eval_ratio = 0.04185)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.374627976190476,"recall":0.37413194444444425,"f1":null,"seconds":6.680935621261597e-5,"exhaustive_search_seconds":0.0003617033362388611,"evaluations":341.796875,"distances_sum":1716.6328973827538}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5572916666666667,"recall":0.5572916666666667,"f1":0.5572916666666667,"seconds":9.251758456230164e-5,"exhaustive_search_seconds":0.0003617033362388611,"evaluations":382.3125,"distances_sum":1589.7879462934006}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888885,"recall":0.6701388888888885,"f1":0.6701388888888885,"seconds":0.00013379566371440887,"exhaustive_search_seconds":0.0003617033362388611,"evaluations":421.2421875,"distances_sum":1545.917430592329}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7465277777777772,"recall":0.7465277777777772,"f1":0.7465277777777772,"seconds":0.00027467869222164154,"exhaustive_search_seconds":0.0003617033362388611,"evaluations":461.9609375,"distances_sum":1524.8967624476336}
KCenters.DeloneInvIndex> reached performance {"precision":0.8038194444444435,"recall":0.8038194444444435,"f1":0.8038194444444435,"seconds":0.000186847522854805,"exhaustive_search_seconds":0.0003617033362388611,"evaluations":505.1015625,"distances_sum":1510.851360120011}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7409999999999998, speedup = 1.429832210331616, eval_ratio = 0.050091000000000004)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
