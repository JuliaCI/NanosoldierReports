Julia Version 1.4.0-DEV.528
Commit 6970fbdab4 (2019-11-27 09:37 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.7
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Compat ────────────────────── v3.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed MappedArrays ──────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Tables ────────────────────── v0.2.11
 Installed DataStructures ────────────── v0.17.6
 Installed PooledArrays ──────────────── v0.5.2
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed LearnBase ─────────────────── v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.7
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.7
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Status `/tmp/jl_7XcJSj/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.4
  [34da2185] Compat v3.0.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.7
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 148.66999999999996
[ Info: 76.39999999999999
[ Info: 42.63999999999999
[ Info: 23.32
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.56000118283488
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.350264362312732
inertia(cdnet.distances) = 23.084152176903057
inertia(crand.distances) = 23.260663478789642
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.6875,"distances_sum":1065.0145023892374}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7856008574758583,"seconds":6.846338510513306e-5,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.2578125,"distances_sum":1749.5261237926022}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7856008574758583,"seconds":6.846338510513306e-5,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.2578125,"distances_sum":1749.5261237926022}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8694659507159517,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7109375,"distances_sum":2125.8464820285344}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622714,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.96875,"distances_sum":2748.7996396222907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8762591575091585,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.609375,"distances_sum":2145.05582322308}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622714,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.96875,"distances_sum":2748.7996396222907}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597072,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.984375,"distances_sum":2888.721609804147}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9774553571428575,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":9.0,"distances_sum":2840.1027151636035}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597072,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.984375,"distances_sum":2888.721609804147}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597072,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.984375,"distances_sum":2888.721609804147}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8229374791874801,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4296875,"distances_sum":1735.4685165835624}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7119140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.8229374791874801,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4296875,"distances_sum":1735.4685165835624}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550251831501836,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2519.6415524731433}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9550251831501836,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9140625,"distances_sum":2519.6415524731433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741472069597075,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2675.9846854749276}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754464285714287,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.984375,"distances_sum":2657.987898898717}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9921875,"distances_sum":2678.870167902763}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9921875,"distances_sum":2678.870167902763}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9773637820512824,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9921875,"distances_sum":2678.870167902763}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37109375,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.6015625,"distances_sum":976.6326866453037}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.498046875,"f1":null,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.3359375,"distances_sum":1260.5107501370555}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.498046875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.498046875,"f1":null,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.3359375,"distances_sum":1260.5107501370555}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.863299721112222,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2578125,"distances_sum":2065.6538963276553}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8965232683982692,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3828125,"distances_sum":2215.335673125885}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8965232683982692,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3828125,"distances_sum":2215.335673125885}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9372169497169504,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":2456.88336568648}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965979853479854,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2690.918407841374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637477106227111,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8125,"distances_sum":2706.617349678981}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965979853479854,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2690.918407841374}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965979853479854,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2690.918407841374}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.720717997280498,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.984375,"distances_sum":1343.9823867966697}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3583984375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3583984375,"f1":null,"seconds":3.4570693969726562e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.4375,"distances_sum":865.2383703915376}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.4123659133911133e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.515625,"distances_sum":946.3813580653864}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5791015625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5791015625,"f1":0.720717997280498,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.984375,"distances_sum":1343.9823867966697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9163232600732608,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.53125,"distances_sum":2298.2787317039965}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8399959415584424,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9609375,"distances_sum":1841.7824971021914}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8003257159507167,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.4921875,"distances_sum":1652.3901456889403}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8426375707625716,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0078125,"distances_sum":1850.0182263410761}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8873454670329678,"seconds":0.00024584122002124786,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2578125,"distances_sum":2099.796997133771}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9163232600732608,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.53125,"distances_sum":2298.2787317039965}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9433493589743595,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6640625,"distances_sum":2476.3146784528362}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9407509157509162,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6015625,"distances_sum":2478.34176649817}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510702838827845,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.703125,"distances_sum":2506.899562157238}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420990467865472,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.6484375,"distances_sum":2462.302117565752}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510702838827845,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.703125,"distances_sum":2506.899562157238}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510702838827845,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.703125,"distances_sum":2506.899562157238}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.626953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.626953125,"f1":0.7584389568764576,"seconds":4.377216100692749e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.0390625,"distances_sum":1522.1220087239603}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.498046875,"f1":0.6510538073038078,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.859375,"distances_sum":1208.2387736166695}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.626953125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.626953125,"f1":0.7584389568764576,"seconds":4.377216100692749e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.0390625,"distances_sum":1522.1220087239603}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.937417270229771,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2423.757110269562}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.937417270229771,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6171875,"distances_sum":2423.757110269562}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575892857142864,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2541.2208085675566}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9575892857142864,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2541.2208085675566}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9575892857142864,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8359375,"distances_sum":2541.2208085675566}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.9140625,"distances_sum":841.6063888693116}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7070224913974918,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.6796875,"distances_sum":1334.7424382404786}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.56640625,"f1":0.7070224913974918,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.6796875,"distances_sum":1334.7424382404786}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8567566114441124,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5703125,"distances_sum":1891.9893968412357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7098288863913871,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.625,"distances_sum":1326.8867092335934}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8611298423798431,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5234375,"distances_sum":1887.7693972999973}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9326579670329678,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.734375,"distances_sum":2318.8705462706844}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.912219551282052,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.671875,"distances_sum":2185.596552964236}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7241007256632264,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.6328125,"distances_sum":1366.6127519504225}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8763746669996679,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5859375,"distances_sum":1966.5536359452265}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8221903096903106,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.3046875,"distances_sum":1724.6925606327666}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9326579670329678,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.734375,"distances_sum":2318.8705462706844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681323,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.890625,"distances_sum":2516.4817268520187}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9561240842490846,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.875,"distances_sum":2493.904913578262}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965167124542125,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.875,"distances_sum":2562.3867675567494}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9484775641025647,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2426.525915403074}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9471814643689649,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.828125,"distances_sum":2429.241736363178}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9407795329670336,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.796875,"distances_sum":2352.493879674529}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965167124542125,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.875,"distances_sum":2562.3867675567494}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965167124542125,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.875,"distances_sum":2562.3867675567494}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.4501953125,"f1":null,"seconds":4.1406601667404175e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.9140625,"distances_sum":1171.0652332095613}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1396484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1396484375,"f1":null,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":3.9296875,"distances_sum":372.2457137541716}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4501953125,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.4501953125,"f1":null,"seconds":4.1406601667404175e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.9140625,"distances_sum":1171.0652332095613}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.462890625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.462890625,"f1":0.6195929070929075,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.15625,"distances_sum":1182.0793253841073}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8660870379620387,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.296875,"distances_sum":2089.71467144248}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7138671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7138671875,"f1":0.8252783674658682,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.890625,"distances_sum":1878.0601203144104}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8660870379620387,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.296875,"distances_sum":2089.71467144248}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959123168498169,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7890625,"distances_sum":2617.4975539793586}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8773781773781781,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.265625,"distances_sum":2161.114184479066}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9520947802197807,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7734375,"distances_sum":2577.2266013918147}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.959123168498169,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7890625,"distances_sum":2617.4975539793586}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.959123168498169,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.7890625,"distances_sum":2617.4975539793586}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8663695679320688,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6796875,"distances_sum":1942.1667713085303}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8663695679320688,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6796875,"distances_sum":1942.1667713085303}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9507898351648357,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2465.5100610800864}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9507898351648357,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9375,"distances_sum":2465.5100610800864}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599931318681323,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2544.7642839957475}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.974609375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.974609375,"f1":0.9861607142857143,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2743.3399891529884}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.974609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9861607142857143,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2743.3399891529884}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.974609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9861607142857143,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.984375,"distances_sum":2743.3399891529884}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.341796875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.341796875,"f1":null,"seconds":3.937631845474243e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.640625,"distances_sum":698.3927312483935}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.9789062500000001,"recall":0.541015625,"f1":0.6800205003330008,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.109375,"distances_sum":1103.6195886731111}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.541015625,"state":{"ssize":4,"bsize":3},"perf":{"precision":0.9789062500000001,"recall":0.541015625,"f1":0.6800205003330008,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.109375,"distances_sum":1103.6195886731111}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":7,"bsize":4}, perf: {"precision":0.98359375,"recall":0.6484375,"f1":0.7706338800088807,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.6171875,"distances_sum":1344.5077224761324}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":0.9853608630952381,"recall":0.7529296875,"f1":0.846747653388279,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1953125,"distances_sum":1621.920054433575}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9878069196428572,"recall":0.7373046875,"f1":0.8340218592171724,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1171875,"distances_sum":1555.017562560928}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6591796875,"f1":null,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.8046875,"distances_sum":1385.1754355548737}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":6,"bsize":5},"perf":{"precision":0.9853608630952381,"recall":0.7529296875,"f1":0.846747653388279,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1953125,"distances_sum":1621.920054433575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":8}, perf: {"precision":0.9830264136904763,"recall":0.8974609375,"f1":0.9355046646062276,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8125,"distances_sum":2217.855952873732}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":10,"bsize":5}, perf: {"precision":0.9888485863095238,"recall":0.7626953125,"f1":0.8547626201923083,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2421875,"distances_sum":1648.1566479609273}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9872767857142858,"recall":0.89453125,"f1":0.9338885073260076,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.796875,"distances_sum":2195.3255597788216}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.9893973214285715,"recall":0.9150390625,"f1":0.9482743818681322,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2260.3602214579846}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":10,"bsize":6}, perf: {"precision":0.9824311755952382,"recall":0.81640625,"f1":0.8852648003038635,"seconds":6.686896085739136e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5859375,"distances_sum":1837.2925135436192}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9903273809523808,"recall":0.7783203125,"f1":0.8636623792873799,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2734375,"distances_sum":1679.756299747145}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9885602678571429,"recall":0.8759765625,"f1":0.9243578036546791,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2080.6922499769403}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":0.9893973214285715,"recall":0.9150390625,"f1":0.9482743818681322,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2260.3602214579846}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":0.9893973214285715,"recall":0.9150390625,"f1":0.9482743818681322,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2260.3602214579846}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8641270188145198,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.859375,"distances_sum":1669.0122661273242}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2802734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2802734375,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.515625,"distances_sum":558.6772179068611}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8641270188145198,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.859375,"distances_sum":1669.0122661273242}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8941365925740935,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.40625,"distances_sum":1831.945202691022}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8941365925740935,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.40625,"distances_sum":1831.945202691022}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594894688644696,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9453125,"distances_sum":2280.8992589416953}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9594894688644696,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9453125,"distances_sum":2280.8992589416953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9594894688644696,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9453125,"distances_sum":2280.8992589416953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.870576620101929e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.0703125,"distances_sum":781.6188688768497}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8089618714618722,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.90625,"distances_sum":1506.0385521702822}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.2335519790649414e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.1015625,"distances_sum":421.9127423790944}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8089618714618722,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.90625,"distances_sum":1506.0385521702822}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8472740800865809,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.2265625,"distances_sum":1615.921757693772}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8523731476856485,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3046875,"distances_sum":1608.303489392691}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8374979187479197,"seconds":5.038455128669739e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.0546875,"distances_sum":1591.0412827247933}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8701751373626383,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3203125,"distances_sum":1716.2129590365873}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8701751373626383,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3203125,"distances_sum":1716.2129590365873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9648497335997342,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8984375,"distances_sum":2355.449140507483}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9074004120879127,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.453125,"distances_sum":1952.566548446782}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9519402472527478,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7421875,"distances_sum":2298.666945114952}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525183150183154,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8671875,"distances_sum":2259.6384542291794}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9516769688644693,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7578125,"distances_sum":2281.206060085751}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9629120879120884,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8515625,"distances_sum":2342.5214741291593}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9251430860805867,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.703125,"distances_sum":2055.25520101257}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609088827838832,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8671875,"distances_sum":2320.5383298050124}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8945892649017658,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.4375,"distances_sum":1901.3267223775476}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9648497335997342,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8984375,"distances_sum":2355.449140507483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9648497335997342,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8984375,"distances_sum":2355.449140507483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7052959193584201,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.234375,"distances_sum":1228.0920049306599}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2431640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2431640625,"f1":null,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.640625,"distances_sum":493.6046531174937}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3798828125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3798828125,"f1":null,"seconds":3.848224878311157e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.1171875,"distances_sum":789.0527856694924}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.560546875,"f1":0.7052959193584201,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.234375,"distances_sum":1228.0920049306599}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8057969807969818,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.890625,"distances_sum":1548.788849146417}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8057969807969818,"seconds":4.8354268074035645e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.890625,"distances_sum":1548.788849146417}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9512164918414924,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2424.0351684920824}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9327870046620054,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.78125,"distances_sum":2293.771882145687}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8552437146187153,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3671875,"distances_sum":1791.874241442923}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9512164918414924,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2424.0351684920824}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9512164918414924,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2424.0351684920824}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":4.1387975215911865e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.34375,"distances_sum":942.8678484756649}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8588260697635707,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.0625,"distances_sum":1778.7791999766828}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8588260697635707,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.0625,"distances_sum":1778.7791999766828}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9506040834165838,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8359375,"distances_sum":2421.5878007865176}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9039928821178829,"seconds":7.586553692817688e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.5078125,"distances_sum":2034.4069827902556}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9506040834165838,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8359375,"distances_sum":2421.5878007865176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644691,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9375,"distances_sum":2526.4021725830166}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9585279304029309,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.8671875,"distances_sum":2462.3271031637373}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640312812187815,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2475.2960813210193}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644691,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9375,"distances_sum":2526.4021725830166}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644691,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9375,"distances_sum":2526.4021725830166}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.8828125,"distances_sum":777.1676111082634}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5439453125,"f1":null,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.9453125,"distances_sum":1225.3613585897047}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5439453125,"f1":null,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.9453125,"distances_sum":1225.3613585897047}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9056604853479862,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":2084.760294691988}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.595703125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.595703125,"f1":0.7288525710400717,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.21875,"distances_sum":1326.1966187552587}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9056604853479862,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":2084.760294691988}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9645661630036635,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2517.67431706313}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9556375915750923,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7109375,"distances_sum":2516.4949437023374}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9268892565767574,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7734375,"distances_sum":2267.7193114373913}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9645661630036635,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2517.67431706313}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9645661630036635,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8984375,"distances_sum":2517.67431706313}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8038248210123219,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.4609375,"distances_sum":1595.7532213353563}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.518777132034302e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.765625,"distances_sum":1227.8111406860653}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8038248210123219,"seconds":4.803761839866638e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.4609375,"distances_sum":1595.7532213353563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9503605769230774,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2432.198015481713}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.860223110223111,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.890625,"distances_sum":1827.0046424907332}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8958104395604404,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.0703125,"distances_sum":2013.6011653843054}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8505130286380296,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":7.828125,"distances_sum":1751.2202576465006}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9344780219780227,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7578125,"distances_sum":2316.8192192087026}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9503605769230774,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2432.198015481713}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657394688644692,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.859375,"distances_sum":2546.6923691765824}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635244963369968,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.90625,"distances_sum":2502.8848482841945}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9661286630036634,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.875,"distances_sum":2531.538328860257}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665579212454216,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8828125,"distances_sum":2535.6186746702324}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665579212454216,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8828125,"distances_sum":2535.6186746702324}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665579212454216,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8828125,"distances_sum":2535.6186746702324}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":6.1796875,"distances_sum":836.4274109936334}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.866714882339883,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.140625,"distances_sum":1872.3727765846622}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.866714882339883,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.140625,"distances_sum":1872.3727765846622}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8873028013653022,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.4140625,"distances_sum":1971.7356660155879}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9465118215118219,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.8125,"distances_sum":2429.2641259690404}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9465118215118219,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.8125,"distances_sum":2429.2641259690404}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625629578754582,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.90625,"distances_sum":2517.2515250073707}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543784340659345,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.859375,"distances_sum":2482.8268034191096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776041666666668,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.96875,"distances_sum":2613.548863027297}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9688472985347989,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.9140625,"distances_sum":2565.558538305296}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776041666666668,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.96875,"distances_sum":2613.548863027297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776041666666668,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.521781086921692e-6,"evaluations":8.96875,"distances_sum":2613.548863027297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.8515625,"distances_sum":876.5723494560239}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7146782037407043,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.796875,"distances_sum":1281.5836670252504}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5771484375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5771484375,"f1":0.7146782037407043,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.796875,"distances_sum":1281.5836670252504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8439407814407822,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.84375,"distances_sum":1755.7262233809092}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8647670038295048,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.078125,"distances_sum":1881.4055747562736}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8994193306693316,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.2890625,"distances_sum":2070.045502678888}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7997923951048957,"seconds":4.621222615242004e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.5703125,"distances_sum":1581.1675360712743}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.898191391941393,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1328125,"distances_sum":2040.6496883586756}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8427468364968371,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8359375,"distances_sum":1763.6576761714011}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7821501415251423,"seconds":4.447996616363525e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.5546875,"distances_sum":1481.2083997141453}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8084691350316359,"seconds":4.5746564865112305e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.625,"distances_sum":1621.437200526793}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8994193306693316,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.2890625,"distances_sum":2070.045502678888}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9535173160173167,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":2471.3453977930703}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2557.0561352996297}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2557.0561352996297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659626831501835,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":2557.0561352996297}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7922957251082259,"seconds":4.6584755182266235e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.3828125,"distances_sum":1480.5704812031804}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.8359375,"distances_sum":491.7681669169334}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8641634407259418,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.859375,"distances_sum":1909.5904558796697}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8641634407259418,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.859375,"distances_sum":1909.5904558796697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9269662629037636,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6953125,"distances_sum":2257.236415707537}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9475331959706964,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.75,"distances_sum":2414.6082229975377}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9475331959706964,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.75,"distances_sum":2414.6082229975377}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9597470238095241,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8359375,"distances_sum":2479.107361300966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952384,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2629.9742922257246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9715029761904767,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2589.366005455617}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655734890109896,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2518.9123023260545}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952384,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2629.9742922257246}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952384,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2629.9742922257246}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8051615051615059,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.0390625,"distances_sum":1001.082630141995}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6904296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6904296875,"f1":0.8051615051615059,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.0390625,"distances_sum":1001.082630141995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8686651889776897,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.375,"distances_sum":1154.92296476756}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8692859224109233,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.4921875,"distances_sum":1140.966220580816}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8749979187479194,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.546875,"distances_sum":1170.6468377510982}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8749979187479194,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.546875,"distances_sum":1170.6468377510982}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9521322427572433,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8828125,"distances_sum":1433.2468232185468}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9016254578754586,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.59375,"distances_sum":1240.3479311056594}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584478021978027,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8671875,"distances_sum":1451.3920348603456}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544127747252752,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8671875,"distances_sum":1433.4033887236208}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9411375083250089,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7890625,"distances_sum":1394.5474630232388}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429601648351654,"seconds":6.1765313148498535e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7578125,"distances_sum":1402.5285166138342}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9584478021978027,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8671875,"distances_sum":1451.3920348603456}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9584478021978027,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8671875,"distances_sum":1451.3920348603456}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8137797965922974,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.40625,"distances_sum":1139.2024639511462}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.705078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.705078125,"f1":0.8137797965922974,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.40625,"distances_sum":1139.2024639511462}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9202094780219785,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6796875,"distances_sum":1420.1092013301045}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9454155219780225,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.78125,"distances_sum":1537.9309106932021}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9454155219780225,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.78125,"distances_sum":1537.9309106932021}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591746794871802,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":1595.8051755873003}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369966,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":1624.5225933821714}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554201007326011,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":1583.054551032081}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697744963369965,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":1641.4853973602708}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9697744963369965,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":1641.4853973602708}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9697744963369965,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":1641.4853973602708}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7774520618270626,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.921875,"distances_sum":1002.921259641025}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7144477050727057,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.2890625,"distances_sum":875.4201467993953}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7774520618270626,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.921875,"distances_sum":1002.921259641025}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9540095321345329,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7578125,"distances_sum":1626.9709578694176}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9540095321345329,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7578125,"distances_sum":1626.9709578694176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9796875,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":1737.3289715570475}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700377747252752,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8515625,"distances_sum":1703.0946716550147}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":1737.3289715570475}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9796875,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":1737.3289715570475}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8142498126873134,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.015625,"distances_sum":1094.2840998722281}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5966796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5966796875,"f1":0.7309334762459768,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.546875,"distances_sum":928.6852319478159}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.705078125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.705078125,"f1":0.8142498126873134,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.015625,"distances_sum":1094.2840998722281}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9089634324009331,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.5078125,"distances_sum":1374.9078061958592}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9506040834165838,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.75,"distances_sum":1521.254290244077}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504006410256416,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.703125,"distances_sum":1518.12798272584}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8283461330336338,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.0,"distances_sum":1126.5115772867407}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9506040834165838,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.75,"distances_sum":1521.254290244077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9552884615384619,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.828125,"distances_sum":1545.7818203751228}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706845238095243,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8984375,"distances_sum":1620.0836712133994}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632497710622714,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":1564.7463588263652}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611294955044959,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8125,"distances_sum":1558.4340872129371}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706845238095243,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8984375,"distances_sum":1620.0836712133994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9706845238095243,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8984375,"distances_sum":1620.0836712133994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6898795648795654,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.0546875,"distances_sum":900.8823286635152}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.53515625,"f1":null,"seconds":4.306435585021973e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.8515625,"distances_sum":874.0299167262796}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5498046875,"f1":0.6898795648795654,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.0546875,"distances_sum":900.8823286635152}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9117944555444562,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.625,"distances_sum":1509.500553306994}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9117944555444562,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.625,"distances_sum":1509.500553306994}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9413976648351655,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7578125,"distances_sum":1602.670451836502}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9567364926739932,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7890625,"distances_sum":1679.8790266300643}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9567364926739932,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7890625,"distances_sum":1679.8790266300643}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9567364926739932,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7890625,"distances_sum":1679.8790266300643}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.870450903263404,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":1382.5053541723773}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.870450903263404,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.734375,"distances_sum":1382.5053541723773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9352423618048621,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":1609.5969447726925}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802203,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":1638.781078939816}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802203,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":1638.781078939816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802203,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":1638.781078939816}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447802197802203,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":1638.781078939816}}, n: 9
inertia(cfft.distances) = 18.35026434676434
inertia(cdnet.distances) = 26.56816441569896
inertia(crand.distances) = 21.615022202943248
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9266666666666666
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444443
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8755555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8777777777777778
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8666666666666667
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9244444444444445
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 1, 2, 2, 3, 3, 3, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 2, 3, 1, 2, 3, 2]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
finished with 15 centroids; started with 12
acc = 0.94
*** starting iteration: 1; err: [Inf, 0.4400000028095482] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905] ***
*** starting iteration: 2; err: [Inf, 0.4400000028095482, 0.17525942675525905] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239] ***
*** starting iteration: 3; err: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.4400000028095482, 0.17525942675525905, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3864000010758325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3864000010758325, 0.24213876572194498] ***
*** finished computation of 7 references, err: [Inf, 0.3864000010758325, 0.24213876572194498] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5624000027668967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5624000027668967, 0.3457498045062607] ***
*** finished computation of 7 references, err: [Inf, 0.5624000027668967, 0.3457498045062607] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.561500010901415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.561500010901415, 0.289652391139363] ***
*** finished computation of 7 references, err: [Inf, 0.561500010901415, 0.289652391139363] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 11]]
** centroid: 2, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 2]]
** centroid: 6, normalized-entropy: 1.0, [(2, 2), (3, 2)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8442579070032987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8442579070032987, 0.5675784253260571] ***
*** starting iteration: 2; err: [Inf, 0.8442579070032987, 0.5675784253260571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8442579070032987, 0.5675784253260571, 0.5625624730688437] ***
*** starting iteration: 3; err: [Inf, 0.8442579070032987, 0.5675784253260571, 0.5625624730688437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8442579070032987, 0.5675784253260571, 0.5625624730688437, 0.5576070745590984] ***
*** finished computation of 3 references, err: [Inf, 0.8442579070032987, 0.5675784253260571, 0.5625624730688437, 0.5576070745590984] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 31]]
** centroid: 2, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8753380335029238] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8753380335029238, 0.7136955254449192] ***
*** starting iteration: 2; err: [Inf, 0.8753380335029238, 0.7136955254449192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8753380335029238, 0.7136955254449192, 0.7028214644341041] ***
*** starting iteration: 3; err: [Inf, 0.8753380335029238, 0.7136955254449192, 0.7028214644341041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8753380335029238, 0.7136955254449192, 0.7028214644341041, 0.6868451333696021] ***
*** finished computation of 3 references, err: [Inf, 0.8753380335029238, 0.7136955254449192, 0.7028214644341041, 0.6868451333696021] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 34]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 3, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 18), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5008005795139285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5008005795139285, 0.3998733930621919] ***
*** starting iteration: 2; err: [Inf, 0.5008005795139285, 0.3998733930621919] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5008005795139285, 0.3998733930621919, 0.399940211802388] ***
*** finished computation of 3 references, err: [Inf, 0.5008005795139285, 0.3998733930621919, 0.399940211802388] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 33]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 6), (3, 33)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4706000002326111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4706000002326111, 0.24588602400618303] ***
*** starting iteration: 2; err: [Inf, 0.4706000002326111, 0.24588602400618303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765] ***
*** starting iteration: 3; err: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765, 0.23302382280006959] ***
*** starting iteration: 4; err: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765, 0.23302382280006959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765, 0.23302382280006959, 0.23180927231862636] ***
*** starting iteration: 5; err: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765, 0.23302382280006959, 0.23180927231862636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765, 0.23302382280006959, 0.23180927231862636, 0.23162381693709347] ***
*** finished computation of 7 references, err: [Inf, 0.4706000002326111, 0.24588602400618303, 0.23785095118497765, 0.23302382280006959, 0.23180927231862636, 0.23162381693709347] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 8]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49360000538495924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49360000538495924, 0.35949680445684146] ***
*** starting iteration: 2; err: [Inf, 0.49360000538495924, 0.35949680445684146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49360000538495924, 0.35949680445684146, 0.3314833869514054] ***
*** starting iteration: 3; err: [Inf, 0.49360000538495924, 0.35949680445684146, 0.3314833869514054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49360000538495924, 0.35949680445684146, 0.3314833869514054, 0.32526838978591277] ***
*** starting iteration: 4; err: [Inf, 0.49360000538495924, 0.35949680445684146, 0.3314833869514054, 0.32526838978591277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49360000538495924, 0.35949680445684146, 0.3314833869514054, 0.32526838978591277, 0.3244783199238981] ***
*** finished computation of 7 references, err: [Inf, 0.49360000538495924, 0.35949680445684146, 0.3314833869514054, 0.32526838978591277, 0.3244783199238981] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 15]]
** centroid: 3, normalized-entropy: 0.9971803988942641, [(2, 17), (3, 15)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40760000417700676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000417700676, 0.2994686730258924] ***
*** starting iteration: 2; err: [Inf, 0.40760000417700676, 0.2994686730258924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396] ***
*** starting iteration: 3; err: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396, 0.2731896286286727] ***
*** starting iteration: 4; err: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396, 0.2731896286286727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396, 0.2731896286286727, 0.27190029124805787] ***
*** starting iteration: 5; err: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396, 0.2731896286286727, 0.27190029124805787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396, 0.2731896286286727, 0.27190029124805787, 0.27190029124805787] ***
*** finished computation of 7 references, err: [Inf, 0.40760000417700676, 0.2994686730258924, 0.27931888238660396, 0.2731896286286727, 0.27190029124805787, 0.27190029124805787] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9571280662095356] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9571280662095356, 0.41701899390292013] ***
*** finished computation of 3 references, err: [Inf, 0.9571280662095356, 0.41701899390292013] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 31]]
** centroid: 1, normalized-entropy: 0.9108783787500366, [(2, 15), (3, 31)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.786776660268323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.786776660268323, 1.1229067968537576] ***
*** finished computation of 3 references, err: [Inf, 8.786776660268323, 1.1229067968537576] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 34]]
** centroid: 1, normalized-entropy: 0.9998393017810486, [(2, 33), (3, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.103827888167538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.103827888167538, 1.1499377683865026] ***
*** finished computation of 3 references, err: [Inf, 4.103827888167538, 1.1499377683865026] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 14, 0]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(1, 32), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 26]]
** centroid: 2, normalized-entropy: 0.9824740868386409, [(2, 19), (3, 26)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5408151026260809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5408151026260809, 0.3238628204250015] ***
*** finished computation of 3 references, err: [Inf, 0.5408151026260809, 0.3238628204250015] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 1, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 30]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 8), (3, 30)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.453660228945957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.453660228945957, 1.1554538504851284] ***
*** finished computation of 3 references, err: [Inf, 8.453660228945957, 1.1554538504851284] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 34]]
** centroid: 2, normalized-entropy: 0.9998393017810486, [(2, 33), (3, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.142510495100264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.142510495100264, 1.4053484230588515] ***
*** finished computation of 3 references, err: [Inf, 4.142510495100264, 1.4053484230588515] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [32, 17, 1]]
** centroid: 2, normalized-entropy: 0.6650749297033756, [(1, 32), (2, 17), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 28]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 16), (3, 28)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.360299914944225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.360299914944225, 1.9908753808332076] ***
*** starting iteration: 2; err: [Inf, 9.360299914944225, 1.9908753808332076] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.360299914944225, 1.9908753808332076, 0.5456039856041638] ***
*** starting iteration: 3; err: [Inf, 9.360299914944225, 1.9908753808332076, 0.5456039856041638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.360299914944225, 1.9908753808332076, 0.5456039856041638, 0.430582818345255] ***
*** finished computation of 3 references, err: [Inf, 9.360299914944225, 1.9908753808332076, 0.5456039856041638, 0.430582818345255] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.60809997416008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.60809997416008, 0.829146834247193] ***
*** starting iteration: 2; err: [Inf, 4.60809997416008, 0.829146834247193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.60809997416008, 0.829146834247193, 0.5992765059630277] ***
*** starting iteration: 3; err: [Inf, 4.60809997416008, 0.829146834247193, 0.5992765059630277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.60809997416008, 0.829146834247193, 0.5992765059630277, 0.5838286319991718] ***
*** finished computation of 3 references, err: [Inf, 4.60809997416008, 0.829146834247193, 0.5992765059630277, 0.5838286319991718] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 2, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.258399996982015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.258399996982015, 1.0053632590855286] ***
*** starting iteration: 2; err: [Inf, 1.258399996982015, 1.0053632590855286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.258399996982015, 1.0053632590855286, 0.9981348369448559] ***
*** starting iteration: 3; err: [Inf, 1.258399996982015, 1.0053632590855286, 0.9981348369448559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.258399996982015, 1.0053632590855286, 0.9981348369448559, 0.9964508827028575] ***
*** finished computation of 3 references, err: [Inf, 1.258399996982015, 1.0053632590855286, 0.9981348369448559, 0.9964508827028575] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [18, 2, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 35]]
** centroid: 3, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.521851842489977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.521851842489977, 0.32746925824370143] ***
*** starting iteration: 2; err: [Inf, 0.521851842489977, 0.32746925824370143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853] ***
*** starting iteration: 3; err: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853, 0.24833540767319273] ***
*** starting iteration: 4; err: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853, 0.24833540767319273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853, 0.24833540767319273, 0.24567320880860535] ***
*** starting iteration: 5; err: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853, 0.24833540767319273, 0.24567320880860535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853, 0.24833540767319273, 0.24567320880860535, 0.2449523328069013] ***
*** finished computation of 7 references, err: [Inf, 0.521851842489977, 0.32746925824370143, 0.2652419825477853, 0.24833540767319273, 0.24567320880860535, 0.2449523328069013] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 7, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.74382100473801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274] ***
*** starting iteration: 2; err: [Inf, 2.74382100473801, 0.44097912897729274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046] ***
*** starting iteration: 3; err: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734] ***
*** starting iteration: 4; err: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397] ***
*** starting iteration: 5; err: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397, 0.18816449579206995] ***
*** starting iteration: 6; err: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397, 0.18816449579206995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397, 0.18816449579206995, 0.18705865639901467] ***
*** starting iteration: 7; err: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397, 0.18816449579206995, 0.18705865639901467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397, 0.18816449579206995, 0.18705865639901467, 0.1861970242381279] ***
*** finished computation of 7 references, err: [Inf, 2.74382100473801, 0.44097912897729274, 0.21833735870746046, 0.19898534270615734, 0.19092997375188397, 0.18816449579206995, 0.18705865639901467, 0.1861970242381279] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5433123298464398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848] ***
*** starting iteration: 2; err: [Inf, 0.5433123298464398, 0.23900170640194848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995] ***
*** starting iteration: 3; err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268] ***
*** starting iteration: 4; err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395] ***
*** starting iteration: 5; err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335] ***
*** starting iteration: 6; err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335, 0.18204553871506154] ***
*** starting iteration: 7; err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335, 0.18204553871506154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335, 0.18204553871506154, 0.17869779095740956] ***
*** starting iteration: 8; err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335, 0.18204553871506154, 0.17869779095740956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335, 0.18204553871506154, 0.17869779095740956, 0.1784277383456664] ***
*** finished computation of 7 references, err: [Inf, 0.5433123298464398, 0.23900170640194848, 0.2131792593184995, 0.20008238388660268, 0.19410480310256395, 0.19046293063692335, 0.18204553871506154, 0.17869779095740956, 0.1784277383456664] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 10, 13]]
** centroid: 7, normalized-entropy: 0.9876925088958032, [(2, 10), (3, 13)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.322700006809403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.322700006809403, 0.8611899275234669] ***
*** finished computation of 3 references, err: [Inf, 1.322700006809403, 0.8611899275234669] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 31]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3529000046316093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3529000046316093, 1.0428585949372748] ***
*** finished computation of 3 references, err: [Inf, 1.3529000046316093, 1.0428585949372748] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 34]]
** centroid: 2, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 3, 0]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(1, 25), (2, 3)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2948000051792474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2948000051792474, 0.6944455410723284] ***
*** finished computation of 3 references, err: [Inf, 1.2948000051792474, 0.6944455410723284] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 1, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 22]]
** centroid: 2, normalized-entropy: 0.975119064940866, [(2, 32), (3, 22)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5231379441233961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5231379441233961, 0.3243609277877277] ***
*** starting iteration: 2; err: [Inf, 0.5231379441233961, 0.3243609277877277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5231379441233961, 0.3243609277877277, 0.3127909321214037] ***
*** starting iteration: 3; err: [Inf, 0.5231379441233961, 0.3243609277877277, 0.3127909321214037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5231379441233961, 0.3243609277877277, 0.3127909321214037, 0.3014338035280242] ***
*** finished computation of 3 references, err: [Inf, 0.5231379441233961, 0.3243609277877277, 0.3127909321214037, 0.3014338035280242] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 5]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(2, 32), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3295709981605972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3295709981605972, 0.4895390444717571] ***
*** starting iteration: 2; err: [Inf, 1.3295709981605972, 0.4895390444717571] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3295709981605972, 0.4895390444717571, 0.4361087856629493] ***
*** starting iteration: 3; err: [Inf, 1.3295709981605972, 0.4895390444717571, 0.4361087856629493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3295709981605972, 0.4895390444717571, 0.4361087856629493, 0.41789332531826995] ***
*** finished computation of 3 references, err: [Inf, 1.3295709981605972, 0.4895390444717571, 0.4361087856629493, 0.41789332531826995] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9569676773651433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569676773651433, 0.6687131246135045] ***
*** starting iteration: 2; err: [Inf, 0.9569676773651433, 0.6687131246135045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569676773651433, 0.6687131246135045, 0.668288280658945] ***
*** finished computation of 3 references, err: [Inf, 0.9569676773651433, 0.6687131246135045, 0.668288280658945] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 35]]
** centroid: 1, normalized-entropy: 0.9973487979180449, [(2, 31), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 2, 0]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(1, 11), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.8467874088893863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8467874088893863, 0.6351151665488851] ***
*** starting iteration: 2; err: [Inf, 2.8467874088893863, 0.6351151665488851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8467874088893863, 0.6351151665488851, 0.5616582870038291] ***
*** starting iteration: 3; err: [Inf, 2.8467874088893863, 0.6351151665488851, 0.5616582870038291] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8467874088893863, 0.6351151665488851, 0.5616582870038291, 0.5561963940718725] ***
*** finished computation of 3 references, err: [Inf, 2.8467874088893863, 0.6351151665488851, 0.5616582870038291, 0.5561963940718725] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 31]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8558397133881321] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8558397133881321, 0.5341352631443007] ***
*** starting iteration: 2; err: [Inf, 0.8558397133881321, 0.5341352631443007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8558397133881321, 0.5341352631443007, 0.4110853364082104] ***
*** starting iteration: 3; err: [Inf, 0.8558397133881321, 0.5341352631443007, 0.4110853364082104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8558397133881321, 0.5341352631443007, 0.4110853364082104, 0.409569662259462] ***
*** finished computation of 3 references, err: [Inf, 0.8558397133881321, 0.5341352631443007, 0.4110853364082104, 0.409569662259462] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 7]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 32), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.232202137799822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.232202137799822, 1.8925621066959912] ***
*** starting iteration: 2; err: [Inf, 6.232202137799822, 1.8925621066959912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.232202137799822, 1.8925621066959912, 0.867389965946079] ***
*** starting iteration: 3; err: [Inf, 6.232202137799822, 1.8925621066959912, 0.867389965946079] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.232202137799822, 1.8925621066959912, 0.867389965946079, 0.4972369287683622] ***
*** finished computation of 3 references, err: [Inf, 6.232202137799822, 1.8925621066959912, 0.867389965946079, 0.4972369287683622] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [32, 2, 0]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 23]]
** centroid: 3, normalized-entropy: 0.9841095278800533, [(2, 31), (3, 23)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.382000000825949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.382000000825949, 0.2160848625232595] ***
*** starting iteration: 2; err: [Inf, 0.382000000825949, 0.2160848625232595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.382000000825949, 0.2160848625232595, 0.19703217209722287] ***
*** starting iteration: 3; err: [Inf, 0.382000000825949, 0.2160848625232595, 0.19703217209722287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.382000000825949, 0.2160848625232595, 0.19703217209722287, 0.1956029178060758] ***
*** finished computation of 7 references, err: [Inf, 0.382000000825949, 0.2160848625232595, 0.19703217209722287, 0.1956029178060758] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 9]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7090000049856465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7090000049856465, 0.38685747153442335] ***
*** starting iteration: 2; err: [Inf, 0.7090000049856465, 0.38685747153442335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7090000049856465, 0.38685747153442335, 0.36443411991024005] ***
*** starting iteration: 3; err: [Inf, 0.7090000049856465, 0.38685747153442335, 0.36443411991024005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7090000049856465, 0.38685747153442335, 0.36443411991024005, 0.35156582209004666] ***
*** finished computation of 7 references, err: [Inf, 0.7090000049856465, 0.38685747153442335, 0.36443411991024005, 0.35156582209004666] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 13]]
** centroid: 3, normalized-entropy: 0.9587118829771317, [(2, 8), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5633000061029871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5633000061029871, 0.34366166253244457] ***
*** starting iteration: 2; err: [Inf, 0.5633000061029871, 0.34366166253244457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5633000061029871, 0.34366166253244457, 0.3164508391455603] ***
*** starting iteration: 3; err: [Inf, 0.5633000061029871, 0.34366166253244457, 0.3164508391455603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5633000061029871, 0.34366166253244457, 0.3164508391455603, 0.30728018950884767] ***
*** finished computation of 7 references, err: [Inf, 0.5633000061029871, 0.34366166253244457, 0.3164508391455603, 0.30728018950884767] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 11]]
** centroid: 2, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 4, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24065334609769765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24065334609769765, 0.1666327750000268] ***
*** starting iteration: 2; err: [Inf, 0.24065334609769765, 0.1666327750000268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24065334609769765, 0.1666327750000268, 0.16551411069569022] ***
*** starting iteration: 3; err: [Inf, 0.24065334609769765, 0.1666327750000268, 0.16551411069569022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24065334609769765, 0.1666327750000268, 0.16551411069569022, 0.16544472588885067] ***
*** finished computation of 7 references, err: [Inf, 0.24065334609769765, 0.1666327750000268, 0.16551411069569022, 0.16544472588885067] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42590039759873366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737] ***
*** starting iteration: 2; err: [Inf, 0.42590039759873366, 0.21429052034347737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675] ***
*** starting iteration: 3; err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682] ***
*** starting iteration: 4; err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719] ***
*** starting iteration: 5; err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997] ***
*** starting iteration: 6; err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997, 0.17197334798682182] ***
*** starting iteration: 7; err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997, 0.17197334798682182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997, 0.17197334798682182, 0.17049364604050696] ***
*** starting iteration: 8; err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997, 0.17197334798682182, 0.17049364604050696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997, 0.17197334798682182, 0.17049364604050696, 0.17049364604050696] ***
*** finished computation of 7 references, err: [Inf, 0.42590039759873366, 0.21429052034347737, 0.19556462110013675, 0.18768411123391682, 0.1841725376954719, 0.18134498497331997, 0.17197334798682182, 0.17049364604050696, 0.17049364604050696] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36352476702920483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36352476702920483, 0.2088229002113061] ***
*** starting iteration: 2; err: [Inf, 0.36352476702920483, 0.2088229002113061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36352476702920483, 0.2088229002113061, 0.20808910275453843] ***
*** finished computation of 7 references, err: [Inf, 0.36352476702920483, 0.2088229002113061, 0.20808910275453843] ***
*** center 1: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 22]]
** centroid: 6, normalized-entropy: 0.8691375806126381, [(2, 9), (3, 22)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40760000140224606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000140224606, 0.24645563901086706] ***
*** starting iteration: 2; err: [Inf, 0.40760000140224606, 0.24645563901086706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000140224606, 0.24645563901086706, 0.22872873639928973] ***
*** starting iteration: 3; err: [Inf, 0.40760000140224606, 0.24645563901086706, 0.22872873639928973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000140224606, 0.24645563901086706, 0.22872873639928973, 0.22649013371844404] ***
*** starting iteration: 4; err: [Inf, 0.40760000140224606, 0.24645563901086706, 0.22872873639928973, 0.22649013371844404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40760000140224606, 0.24645563901086706, 0.22872873639928973, 0.22649013371844404, 0.22611850735667374] ***
*** finished computation of 7 references, err: [Inf, 0.40760000140224606, 0.24645563901086706, 0.22872873639928973, 0.22649013371844404, 0.22611850735667374] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.1634000326439544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1634000326439544, 0.7501322653526595] ***
*** starting iteration: 2; err: [Inf, 3.1634000326439544, 0.7501322653526595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594] ***
*** starting iteration: 3; err: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731] ***
*** starting iteration: 4; err: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731, 0.273870432047587] ***
*** starting iteration: 5; err: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731, 0.273870432047587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731, 0.273870432047587, 0.27286128960339384] ***
*** starting iteration: 6; err: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731, 0.273870432047587, 0.27286128960339384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731, 0.273870432047587, 0.27286128960339384, 0.27191485032868806] ***
*** finished computation of 7 references, err: [Inf, 3.1634000326439544, 0.7501322653526595, 0.31413318165303594, 0.2754974059785731, 0.273870432047587, 0.27286128960339384, 0.27191485032868806] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 3]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 5]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 2), (3, 5)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4350000066070115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4350000066070115, 0.31244430817865004] ***
*** starting iteration: 2; err: [Inf, 0.4350000066070115, 0.31244430817865004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4350000066070115, 0.31244430817865004, 0.3040972038343082] ***
*** starting iteration: 3; err: [Inf, 0.4350000066070115, 0.31244430817865004, 0.3040972038343082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4350000066070115, 0.31244430817865004, 0.3040972038343082, 0.3028238470171809] ***
*** starting iteration: 4; err: [Inf, 0.4350000066070115, 0.31244430817865004, 0.3040972038343082, 0.3028238470171809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4350000066070115, 0.31244430817865004, 0.3040972038343082, 0.3028238470171809, 0.3028238470171809] ***
*** finished computation of 7 references, err: [Inf, 0.4350000066070115, 0.31244430817865004, 0.3040972038343082, 0.3028238470171809, 0.3028238470171809] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8389587788403767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8389587788403767, 0.30311255976295903] ***
*** starting iteration: 2; err: [Inf, 0.8389587788403767, 0.30311255976295903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8389587788403767, 0.30311255976295903, 0.2918987207951437] ***
*** starting iteration: 3; err: [Inf, 0.8389587788403767, 0.30311255976295903, 0.2918987207951437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8389587788403767, 0.30311255976295903, 0.2918987207951437, 0.2909947100960634] ***
*** finished computation of 3 references, err: [Inf, 0.8389587788403767, 0.30311255976295903, 0.2918987207951437, 0.2909947100960634] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8462240664692231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8462240664692231, 0.4459260606734843] ***
*** starting iteration: 2; err: [Inf, 0.8462240664692231, 0.4459260606734843] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8462240664692231, 0.4459260606734843, 0.43059030070217136] ***
*** starting iteration: 3; err: [Inf, 0.8462240664692231, 0.4459260606734843, 0.43059030070217136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8462240664692231, 0.4459260606734843, 0.43059030070217136, 0.42250628933764434] ***
*** finished computation of 3 references, err: [Inf, 0.8462240664692231, 0.4459260606734843, 0.43059030070217136, 0.42250628933764434] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 32]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 9), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 2]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 24), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6585684421483095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6585684421483095, 0.4641047782572557] ***
*** starting iteration: 2; err: [Inf, 0.6585684421483095, 0.4641047782572557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6585684421483095, 0.4641047782572557, 0.4371030715786058] ***
*** starting iteration: 3; err: [Inf, 0.6585684421483095, 0.4641047782572557, 0.4371030715786058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6585684421483095, 0.4641047782572557, 0.4371030715786058, 0.4124337529761988] ***
*** finished computation of 3 references, err: [Inf, 0.6585684421483095, 0.4641047782572557, 0.4371030715786058, 0.4124337529761988] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 14]]
** centroid: 1, normalized-entropy: 0.8786744932173094, [(2, 33), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2688000029302533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2688000029302533, 0.44758627735706147] ***
*** starting iteration: 2; err: [Inf, 1.2688000029302533, 0.44758627735706147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2688000029302533, 0.44758627735706147, 0.4270408517070549] ***
*** starting iteration: 3; err: [Inf, 1.2688000029302533, 0.44758627735706147, 0.4270408517070549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2688000029302533, 0.44758627735706147, 0.4270408517070549, 0.4236236643347668] ***
*** finished computation of 3 references, err: [Inf, 1.2688000029302533, 0.44758627735706147, 0.4270408517070549, 0.4236236643347668] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3343000038272244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3343000038272244, 0.6517355822465524] ***
*** starting iteration: 2; err: [Inf, 1.3343000038272244, 0.6517355822465524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3343000038272244, 0.6517355822465524, 0.6234946296774372] ***
*** starting iteration: 3; err: [Inf, 1.3343000038272244, 0.6517355822465524, 0.6234946296774372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3343000038272244, 0.6517355822465524, 0.6234946296774372, 0.6095863400130885] ***
*** finished computation of 3 references, err: [Inf, 1.3343000038272244, 0.6517355822465524, 0.6234946296774372, 0.6095863400130885] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 32]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(2, 10), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 2]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6585000008422595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6585000008422595, 0.5968500085937986] ***
*** starting iteration: 2; err: [Inf, 1.6585000008422595, 0.5968500085937986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6585000008422595, 0.5968500085937986, 0.5763233785703984] ***
*** starting iteration: 3; err: [Inf, 1.6585000008422595, 0.5968500085937986, 0.5763233785703984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6585000008422595, 0.5968500085937986, 0.5763233785703984, 0.5725364550018461] ***
*** finished computation of 3 references, err: [Inf, 1.6585000008422595, 0.5968500085937986, 0.5763233785703984, 0.5725364550018461] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3284764835973107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3284764835973107, 0.15227978492297836] ***
*** starting iteration: 2; err: [Inf, 0.3284764835973107, 0.15227978492297836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3284764835973107, 0.15227978492297836, 0.13876209299716533] ***
*** starting iteration: 3; err: [Inf, 0.3284764835973107, 0.15227978492297836, 0.13876209299716533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3284764835973107, 0.15227978492297836, 0.13876209299716533, 0.13743587942306348] ***
*** starting iteration: 4; err: [Inf, 0.3284764835973107, 0.15227978492297836, 0.13876209299716533, 0.13743587942306348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3284764835973107, 0.15227978492297836, 0.13876209299716533, 0.13743587942306348, 0.1364981521409529] ***
*** finished computation of 7 references, err: [Inf, 0.3284764835973107, 0.15227978492297836, 0.13876209299716533, 0.13743587942306348, 0.1364981521409529] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 9]]
** centroid: 1, normalized-entropy: 1.0, [(2, 9), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4260894340599613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4260894340599613, 0.17099473218647696] ***
*** starting iteration: 2; err: [Inf, 0.4260894340599613, 0.17099473218647696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4260894340599613, 0.17099473218647696, 0.16607965575743097] ***
*** starting iteration: 3; err: [Inf, 0.4260894340599613, 0.17099473218647696, 0.16607965575743097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4260894340599613, 0.17099473218647696, 0.16607965575743097, 0.1630829634575552] ***
*** starting iteration: 4; err: [Inf, 0.4260894340599613, 0.17099473218647696, 0.16607965575743097, 0.1630829634575552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4260894340599613, 0.17099473218647696, 0.16607965575743097, 0.1630829634575552, 0.1622403951846442] ***
*** finished computation of 7 references, err: [Inf, 0.4260894340599613, 0.17099473218647696, 0.16607965575743097, 0.1630829634575552, 0.1622403951846442] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4437131781326647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4437131781326647, 0.21707282961349436] ***
*** starting iteration: 2; err: [Inf, 0.4437131781326647, 0.21707282961349436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914] ***
*** starting iteration: 3; err: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471] ***
*** starting iteration: 4; err: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471, 0.175763675855258] ***
*** starting iteration: 5; err: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471, 0.175763675855258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471, 0.175763675855258, 0.1737753206939164] ***
*** starting iteration: 6; err: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471, 0.175763675855258, 0.1737753206939164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471, 0.175763675855258, 0.1737753206939164, 0.17341342004998414] ***
*** finished computation of 7 references, err: [Inf, 0.4437131781326647, 0.21707282961349436, 0.18766950386420914, 0.1797710348707471, 0.175763675855258, 0.1737753206939164, 0.17341342004998414] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4854897625846316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4854897625846316, 0.1850986683399379] ***
*** finished computation of 7 references, err: [Inf, 0.4854897625846316, 0.1850986683399379] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 6]]
** centroid: 5, normalized-entropy: 0.9957274520849256, [(2, 7), (3, 6)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4378402716007201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4378402716007201, 0.2395017421945194] ***
*** finished computation of 7 references, err: [Inf, 0.4378402716007201, 0.2395017421945194] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 4]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 17), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4189825618005331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4189825618005331, 0.2235380089228302] ***
*** finished computation of 7 references, err: [Inf, 0.4189825618005331, 0.2235380089228302] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 10]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3300733134485548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3300733134485548, 0.15202867416663168] ***
*** starting iteration: 2; err: [Inf, 0.3300733134485548, 0.15202867416663168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3300733134485548, 0.15202867416663168, 0.135659141186205] ***
*** starting iteration: 3; err: [Inf, 0.3300733134485548, 0.15202867416663168, 0.135659141186205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3300733134485548, 0.15202867416663168, 0.135659141186205, 0.13168262695175578] ***
*** finished computation of 7 references, err: [Inf, 0.3300733134485548, 0.15202867416663168, 0.135659141186205, 0.13168262695175578] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4654348077510837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4654348077510837, 0.2589858959610938] ***
*** starting iteration: 2; err: [Inf, 0.4654348077510837, 0.2589858959610938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4654348077510837, 0.2589858959610938, 0.20238979956547193] ***
*** starting iteration: 3; err: [Inf, 0.4654348077510837, 0.2589858959610938, 0.20238979956547193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4654348077510837, 0.2589858959610938, 0.20238979956547193, 0.19354024155130042] ***
*** finished computation of 7 references, err: [Inf, 0.4654348077510837, 0.2589858959610938, 0.20238979956547193, 0.19354024155130042] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 3]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37954210587631304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37954210587631304, 0.21248169683604068] ***
*** starting iteration: 2; err: [Inf, 0.37954210587631304, 0.21248169683604068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37954210587631304, 0.21248169683604068, 0.20954657406256735] ***
*** starting iteration: 3; err: [Inf, 0.37954210587631304, 0.21248169683604068, 0.20954657406256735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37954210587631304, 0.21248169683604068, 0.20954657406256735, 0.2081300002846613] ***
*** finished computation of 7 references, err: [Inf, 0.37954210587631304, 0.21248169683604068, 0.20954657406256735, 0.2081300002846613] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 11, 4]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 11), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 12]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 3), (3, 12)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 10 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.0226140694994221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0226140694994221, 0.554619998848836] ***
*** starting iteration: 2; err: [Inf, 1.0226140694994221, 0.554619998848836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0226140694994221, 0.554619998848836, 0.5545995785441196] ***
*** finished computation of 3 references, err: [Inf, 1.0226140694994221, 0.554619998848836, 0.5545995785441196] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 31]]
** centroid: 3, normalized-entropy: 0.9984628557283827, [(2, 34), (3, 31)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0370995169420458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0370995169420458, 0.5000849944559725] ***
*** starting iteration: 2; err: [Inf, 1.0370995169420458, 0.5000849944559725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0370995169420458, 0.5000849944559725, 0.4682981211228618] ***
*** starting iteration: 3; err: [Inf, 1.0370995169420458, 0.5000849944559725, 0.4682981211228618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0370995169420458, 0.5000849944559725, 0.4682981211228618, 0.4340751985549893] ***
*** finished computation of 3 references, err: [Inf, 1.0370995169420458, 0.5000849944559725, 0.4682981211228618, 0.4340751985549893] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 1, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4450858313368469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4450858313368469, 0.46378916645094526] ***
*** starting iteration: 2; err: [Inf, 1.4450858313368469, 0.46378916645094526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4450858313368469, 0.46378916645094526, 0.4157695369471778] ***
*** starting iteration: 3; err: [Inf, 1.4450858313368469, 0.46378916645094526, 0.4157695369471778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4450858313368469, 0.46378916645094526, 0.4157695369471778, 0.40877959475440323] ***
*** finished computation of 3 references, err: [Inf, 1.4450858313368469, 0.46378916645094526, 0.4157695369471778, 0.40877959475440323] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 10, 34]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(2, 10), (3, 34)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7477999971129536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7477999971129536, 0.45387192816909677] ***
*** starting iteration: 2; err: [Inf, 0.7477999971129536, 0.45387192816909677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7477999971129536, 0.45387192816909677, 0.4270408517070549] ***
*** starting iteration: 3; err: [Inf, 0.7477999971129536, 0.45387192816909677, 0.4270408517070549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7477999971129536, 0.45387192816909677, 0.4270408517070549, 0.4236236643347668] ***
*** finished computation of 3 references, err: [Inf, 0.7477999971129536, 0.45387192816909677, 0.4270408517070549, 0.4236236643347668] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.280799953871382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.280799953871382, 1.388160027570976] ***
*** starting iteration: 2; err: [Inf, 3.280799953871382, 1.388160027570976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.280799953871382, 1.388160027570976, 0.8485701300383011] ***
*** starting iteration: 3; err: [Inf, 3.280799953871382, 1.388160027570976, 0.8485701300383011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.280799953871382, 1.388160027570976, 0.8485701300383011, 0.7204160109458926] ***
*** finished computation of 3 references, err: [Inf, 3.280799953871382, 1.388160027570976, 0.8485701300383011, 0.7204160109458926] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 19]]
** centroid: 1, normalized-entropy: 0.9633355456726842, [(2, 30), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.826899989679959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.826899989679959, 0.5885085198460748] ***
*** starting iteration: 2; err: [Inf, 0.826899989679959, 0.5885085198460748] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.826899989679959, 0.5885085198460748, 0.5877386951168844] ***
*** finished computation of 3 references, err: [Inf, 0.826899989679959, 0.5885085198460748, 0.5877386951168844] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 33]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 6), (3, 33)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 20
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 20
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 21
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.23715154601290017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23715154601290017, 0.1462652737067865] ***
*** starting iteration: 2; err: [Inf, 0.23715154601290017, 0.1462652737067865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346] ***
*** starting iteration: 3; err: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346, 0.13746247631522335] ***
*** starting iteration: 4; err: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346, 0.13746247631522335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346, 0.13746247631522335, 0.136266475904299] ***
*** starting iteration: 5; err: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346, 0.13746247631522335, 0.136266475904299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346, 0.13746247631522335, 0.136266475904299, 0.13576524368933934] ***
*** finished computation of 7 references, err: [Inf, 0.23715154601290017, 0.1462652737067865, 0.13975160851704346, 0.13746247631522335, 0.136266475904299, 0.13576524368933934] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5071628217989983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5071628217989983, 0.2829431097607749] ***
*** starting iteration: 2; err: [Inf, 0.5071628217989983, 0.2829431097607749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289] ***
*** starting iteration: 3; err: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904] ***
*** starting iteration: 4; err: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904, 0.22913008606236626] ***
*** starting iteration: 5; err: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904, 0.22913008606236626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904, 0.22913008606236626, 0.22429611781922393] ***
*** starting iteration: 6; err: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904, 0.22913008606236626, 0.22429611781922393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904, 0.22913008606236626, 0.22429611781922393, 0.22349163629760743] ***
*** finished computation of 7 references, err: [Inf, 0.5071628217989983, 0.2829431097607749, 0.2537310133432289, 0.23823054297864904, 0.22913008606236626, 0.22429611781922393, 0.22349163629760743] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 11]]
** centroid: 1, normalized-entropy: 0.9383153522334071, [(2, 20), (3, 11)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40367265790799406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056] ***
*** starting iteration: 2; err: [Inf, 0.40367265790799406, 0.25204783725661056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012] ***
*** starting iteration: 3; err: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134] ***
*** starting iteration: 4; err: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026] ***
*** starting iteration: 5; err: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026, 0.17209957391574465] ***
*** starting iteration: 6; err: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026, 0.17209957391574465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026, 0.17209957391574465, 0.17071357328875536] ***
*** starting iteration: 7; err: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026, 0.17209957391574465, 0.17071357328875536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026, 0.17209957391574465, 0.17071357328875536, 0.17071357328875536] ***
*** finished computation of 7 references, err: [Inf, 0.40367265790799406, 0.25204783725661056, 0.19549136682296012, 0.17810687186831134, 0.17602704533814026, 0.17209957391574465, 0.17071357328875536, 0.17071357328875536] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 8), (3, 10)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.98, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666667, 0.9266666666666667, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.88]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.98
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.318181818181818, 3.0, 4.6818181818181825, 1.5272727272727273], [5.925, 2.7125, 4.9750000000000005, 1.8375000000000001], [7.428571428571429, 3.2, 6.200000000000001, 2.0571428571428574], [5.037142857142857, 3.451428571428571, 1.4457142857142857, 0.23428571428571437], [6.428571428571429, 2.771428571428572, 5.6000000000000005, 1.9142857142857144], [5.385714285714286, 2.5142857142857147, 3.757142857142857, 1.2], [6.699999999999999, 3.177777777777778, 5.466666666666667, 2.266666666666667], [5.825000000000001, 2.725, 4.2250000000000005, 1.28125]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1, 3, 2, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.158333333333334, 3.491666666666666, 1.558333333333333, 0.3083333333333334], [4.7, 3.0200000000000005, 1.4333333333333336, 0.18000000000000002], [6.405882352941176, 2.8882352941176466, 4.635294117647058, 1.4411764705882355], [6.1933333333333325, 2.8800000000000003, 5.193333333333332, 1.9199999999999997], [5.452941176470588, 2.570588235294118, 3.9, 1.2176470588235293], [5.5, 4.08, 1.56, 0.28], [7.072222222222223, 3.1, 6.01111111111111, 2.161111111111111]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.363636363636363, 3.8181818181818183, 1.4454545454545455, 0.2727272727272728], [6.316666666666667, 2.9388888888888887, 5.366666666666666, 2.0722222222222224], [4.555555555555556, 3.0888888888888886, 1.3111111111111111, 0.2111111111111111], [5.5210526315789465, 2.6368421052631574, 3.9368421052631586, 1.2263157894736845], [4.966666666666667, 3.3499999999999996, 1.5166666666666666, 0.275], [6.352380952380953, 2.923809523809524, 4.723809523809525, 1.5238095238095237], [7.350000000000001, 3.1900000000000004, 6.24, 2.1100000000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 1, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[53, 10, 2, 24, 1, 2, 19, 13, 41, 19, 5, 14, 56, 39, 13, 13, 7, 23, 47, 21, 41, 16, 26, 2, 24, 38, 35, 21, 21, 43, 28, 19, 32, 17, 10, 41, 9, 36, 41, 33, 38, 20, 37, 43, 21, 27, 28, 30, 40, 36, 38, 26, 37, 38, 19, 29, 2, 32, 37, 45, 21, 19, 39, 22, 27, 38, 38, 31, 49, 33, 1, 53, 25, 25, 32, 49, 27, 16, 27, 22, 35, 32, 29, 28, 21, 19, 56, 49, 22, 33, 36, 66, 26, 55, 37, 36, 24, 25, 33, 28, 16, 40, 28, 22, 10, 31, 97, 27, 23, 34, 24, 50, 43, 14, 38, 31, 35, 51, 47, 20, 37, 26, 53, 29, 30, 28, 35, 41, 23, 22, 30, 26, 27, 36, 41, 40, 48, 47, 39, 29, 43, 41, 46, 36, 49, 83, 29, 30, 44, 19, 38, 28, 28, 20, 50, 30, 59, 25, 23, 36, 37, 49, 9, 45, 22, 47, 23, 2, 47, 2, 48, 42, 40, 55, 24, 51, 40, 40, 32, 54, 24, 42, 50, 49, 41, 29, 27, 30, 41, 47, 23, 36, 40, 43, 33, 19, 47, 25, 32, 1, 31, 49, 65, 32, 1, 37, 20, 36, 45, 15, 41, 38, 35, 26, 30, 37, 30, 30, 46, 32, 44, 44, 35, 43, 44, 42, 49, 46, 50, 11, 25, 42, 36, 36, 44, 25, 31, 30, 55, 50, 50, 47, 28, 34, 25, 42, 31, 33, 21, 33, 50, 23, 17, 32, 33, 50, 23, 22, 27, 12, 26, 52, 24, 37, 45, 18, 49, 56, 43, 19, 40, 49, 53, 53, 32, 22, 48, 19, 49, 56, 28, 55, 86, 39, 21, 49, 15, 17, 58, 44, 16, 27, 31, 58, 41, 31, 49, 21, 22, 36]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5990000000000001, speedup = 0.4005084863248371, eval_ratio = 0.041621)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3645833333333333,"recall":0.3645833333333333,"f1":null,"seconds":7.309392094612122e-5,"exhaustive_search_seconds":0.0004268363118171692,"evaluations":339.5625,"distances_sum":1793.9950439604377}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5277777777777775,"recall":0.5277777777777775,"f1":null,"seconds":0.00010080263018608093,"exhaustive_search_seconds":0.0004268363118171692,"evaluations":374.78125,"distances_sum":1669.7052788879503}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6545138888888886,"recall":0.6545138888888886,"f1":null,"seconds":0.0001310110092163086,"exhaustive_search_seconds":0.0004268363118171692,"evaluations":414.171875,"distances_sum":1614.6088181531943}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7222222222222222,"recall":0.7222222222222222,"f1":0.7222222222222222,"seconds":0.00015834160149097443,"exhaustive_search_seconds":0.0004268363118171692,"evaluations":449.484375,"distances_sum":1592.2643783098617}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7795138888888885,"recall":0.7795138888888885,"f1":0.7795138888888885,"seconds":0.0001903492957353592,"exhaustive_search_seconds":0.0004268363118171692,"evaluations":488.625,"distances_sum":1576.4780334738407}
KCenters.DeloneInvIndex> reached performance {"precision":0.8246527777777769,"recall":0.8246527777777769,"f1":0.8246527777777769,"seconds":0.00022356770932674408,"exhaustive_search_seconds":0.0004268363118171692,"evaluations":529.7734375,"distances_sum":1565.0543277686731}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8060000000000003, speedup = 1.7475129348988432, eval_ratio = 0.05366)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
