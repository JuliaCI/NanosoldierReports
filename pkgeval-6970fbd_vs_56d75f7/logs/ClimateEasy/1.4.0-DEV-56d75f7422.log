Julia Version 1.4.0-DEV.624
Commit 56d75f7422 (2019-12-17 08:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed ClimateEasy ──────── v0.1.1
 Installed PyPlot ───────────── v2.8.2
 Installed Conda ────────────── v1.3.0
 Installed FixedPointNumbers ── v0.7.0
 Installed OrderedCollections ─ v1.1.0
 Installed MacroTools ───────── v0.5.3
 Installed DataStructures ───── v0.17.6
 Installed Colors ───────────── v0.10.0
 Installed Reexport ─────────── v0.2.0
 Installed VersionParsing ───── v1.2.0
 Installed LaTeXStrings ─────── v1.0.3
 Installed Parsers ──────────── v0.3.10
 Installed ColorTypes ───────── v0.8.1
 Installed JSON ─────────────── v0.21.0
 Installed Compat ───────────── v2.2.0
 Installed PyCall ───────────── v1.91.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [47ceb0c8] + ClimateEasy v0.1.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [47ceb0c8] + ClimateEasy v0.1.1
  [3da002f7] + ColorTypes v0.8.1
  [5ae59095] + Colors v0.10.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.6
  [53c48c17] + FixedPointNumbers v0.7.0
  [682c06a0] + JSON v0.21.0
  [b964fa9f] + LaTeXStrings v1.0.3
  [1914dd2f] + MacroTools v0.5.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [438e738f] + PyCall v1.91.2
  [d330b81b] + PyPlot v2.8.2
  [189a3867] + Reexport v0.2.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
Path `/home/pkgeval/.julia/packages/Conda/kLXeC` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_YyHG7v/Project.toml`
  [8f4d0f93] + Conda v1.3.0 [`~/.julia/packages/Conda/kLXeC`]
  Updating `/tmp/jl_YyHG7v/Manifest.toml`
  [8f4d0f93] ~ Conda v1.3.0 ⇒ v1.3.0 [`~/.julia/packages/Conda/kLXeC`]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
Path `/home/pkgeval/.julia/packages/PyCall/ttONZ` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_5sC1mY/Project.toml`
  [438e738f] + PyCall v1.91.2 [`~/.julia/packages/PyCall/ttONZ`]
  Updating `/tmp/jl_5sC1mY/Manifest.toml`
  [438e738f] ~ PyCall v1.91.2 ⇒ v1.91.2 [`~/.julia/packages/PyCall/ttONZ`]
   Testing ClimateEasy
Path `/home/pkgeval/.julia/packages/ClimateEasy/KY6lj` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_cyusBW/Project.toml`
  [47ceb0c8] + ClimateEasy v0.1.1 [`~/.julia/packages/ClimateEasy/KY6lj`]
  Updating `/tmp/jl_cyusBW/Manifest.toml`
  [47ceb0c8] ~ ClimateEasy v0.1.1 ⇒ v0.1.1 [`~/.julia/packages/ClimateEasy/KY6lj`]
Running sandbox
Status `/tmp/jl_cyusBW/Project.toml`
  [47ceb0c8] ClimateEasy v0.1.1 [`~/.julia/packages/ClimateEasy/KY6lj`]
  [438e738f] PyCall v1.91.2
  [d330b81b] PyPlot v2.8.2
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [de0858da] Printf 
  [8dfed614] Test 
┌ Warning: No working GUI backend found for matplotlib
└ @ PyPlot ~/.julia/packages/PyPlot/4wzW1/src/init.jl:165
┌ Warning: No working GUI backend found for matplotlib
└ @ PyPlot ~/.julia/packages/PyPlot/4wzW1/src/init.jl:165
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package cartopy could not be found by pyimport. Usually this means
that you did not install cartopy in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the cartopy module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the cartopy module, you can use `pyimport_conda("cartopy", PKG)`,
where PKG is the Anaconda package the contains the module cartopy,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'cartopy'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
 [3] pyimport_conda at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:701 [inlined]
 [4] __init__() at /home/pkgeval/.julia/packages/ClimateEasy/KY6lj/src/ClimateEasy.jl:20
 [5] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:690
 [6] _require_from_serialized(::String) at ./loading.jl:741
 [7] _require(::Base.PkgId) at ./loading.jl:1032
 [8] require(::Base.PkgId) at ./loading.jl:920
 [9] require(::Module, ::Symbol) at ./loading.jl:915
 [10] include(::String) at ./client.jl:439
 [11] top-level scope at none:6
during initialization of module ClimateEasy
in expression starting at /home/pkgeval/.julia/packages/ClimateEasy/KY6lj/test/runtests.jl:1
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/ClimateEasy/KY6lj/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/ClimateEasy/KY6lj/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package ClimateEasy errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#68 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#67 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
