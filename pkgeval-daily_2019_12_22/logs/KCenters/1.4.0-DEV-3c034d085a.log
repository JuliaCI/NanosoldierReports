Julia Version 1.4.0-DEV.649
Commit 3c034d085a (2019-12-20 23:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Missings ──────────────────── v0.4.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed Reexport ──────────────────── v0.2.0
 Installed Tables ────────────────────── v0.2.11
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.5
 Installed InvertedIndices ───────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Compat ────────────────────── v3.0.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Parsers ───────────────────── v0.3.10
 Installed JSON ──────────────────────── v0.21.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_wSTUSP/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_wSTUSP/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_wSTUSP/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 147.23000000000005
[ Info: 73.14000000000001
[ Info: 45.269999999999996
[ Info: 24.060000000000002
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 75.76000114354103
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.04104830899008
inertia(cdnet.distances) = 22.623486004767578
inertia(crand.distances) = 20.699559759829583
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7845602314352322,"seconds":6.927177309989929e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.6875,"distances_sum":1991.330897612786}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8101459304584313,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.9609375,"distances_sum":2081.088334715789}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":4.671875,"distances_sum":567.9190145450076}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7001953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7001953125,"f1":0.8101459304584313,"seconds":6.414949893951416e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.9609375,"distances_sum":2081.088334715789}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9305574633699639,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.671875,"distances_sum":2838.2353541243174}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9387934981684987,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.6875,"distances_sum":2897.8465424450083}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9268575174825181,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.59375,"distances_sum":2819.3028216076777}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9387934981684987,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.6875,"distances_sum":2897.8465424450083}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947979624542125,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.71875,"distances_sum":2962.217719186313}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9416952838827845,"seconds":6.5695494413375854e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.65625,"distances_sum":2940.7924954880723}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9750572344322347,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.875,"distances_sum":3152.033539146048}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.84375,"distances_sum":3098.4640277742274}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9750572344322347,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.875,"distances_sum":3152.033539146048}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9750572344322347,"seconds":6.666406989097595e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.875,"distances_sum":3152.033539146048}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8543586621711631,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2421875,"distances_sum":2035.1286951384075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4443359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4443359375,"f1":null,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.53125,"distances_sum":1105.327569735764}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8122039418914427,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8125,"distances_sum":1857.1985582958291}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8543586621711631,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2421875,"distances_sum":2035.1286951384075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553228021978027,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":2759.1465428552815}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.872425491175492,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4296875,"distances_sum":2202.161244023492}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9500858516483521,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":2745.8341889467583}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8919876998002008,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.28125,"distances_sum":2280.4798808985843}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553228021978027,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.796875,"distances_sum":2759.1465428552815}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9789434523809526,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":2936.621453374504}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417585,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9453125,"distances_sum":2901.405246102765}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721726190476193,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2868.2952854822347}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618360805860809,"seconds":7.664784789085388e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":2805.108882611137}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789434523809526,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":2936.621453374504}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789434523809526,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9140625,"distances_sum":2936.621453374504}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7929350163725172,"seconds":4.7869980335235596e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.1640625,"distances_sum":1709.2840747094972}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8458453005328015,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.546875,"distances_sum":1965.7348017981474}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8458453005328015,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.546875,"distances_sum":1965.7348017981474}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9406135531135537,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.90625,"distances_sum":2558.1501595375453}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9406135531135537,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.90625,"distances_sum":2558.1501595375453}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617216117216121,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9921875,"distances_sum":2713.440989180004}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617216117216121,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9921875,"distances_sum":2713.440989180004}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9617216117216121,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9921875,"distances_sum":2713.440989180004}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1396484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1396484375,"f1":null,"seconds":3.11434268951416e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":4.15625,"distances_sum":369.2619068323499}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1259765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1259765625,"f1":null,"seconds":2.8833746910095215e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":4.015625,"distances_sum":361.58685743513945}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8344072594072601,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.875,"distances_sum":2096.754323819481}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8344072594072601,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.875,"distances_sum":2096.754323819481}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9244968573093579,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.46875,"distances_sum":2704.7863262150836}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9459967116217122,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7421875,"distances_sum":2783.1633912271705}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9459967116217122,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7421875,"distances_sum":2783.1633912271705}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9562359515484521,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.78125,"distances_sum":2887.177311325832}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9610691391941399,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2922.1559572128813}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9610691391941399,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2922.1559572128813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9610691391941399,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8125,"distances_sum":2922.1559572128813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":2.868473529815674e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.40625,"distances_sum":491.95126209361604}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5244140625,"f1":0.6736928002553009,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.7265625,"distances_sum":1339.196232478933}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.6153942346572876e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":5.8125,"distances_sum":931.186577867517}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5244140625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5244140625,"f1":0.6736928002553009,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.7265625,"distances_sum":1339.196232478933}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9206590284715293,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5234375,"distances_sum":2506.038131385648}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9195054945054952,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.640625,"distances_sum":2458.5223224740835}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.791833687146188,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.03125,"distances_sum":1754.9337393475055}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8834748584748592,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.3046875,"distances_sum":2334.1666674430567}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8950027403152413,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.421875,"distances_sum":2327.6933323554663}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9206590284715293,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5234375,"distances_sum":2506.038131385648}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9642742673992677,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2781.580983980636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9515911172161174,"seconds":7.851049304008484e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7578125,"distances_sum":2697.523803917518}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9525583791208796,"seconds":6.848946213722229e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7890625,"distances_sum":2734.7631149051913}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9445460789210792,"seconds":7.152557373046875e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7578125,"distances_sum":2682.987248120477}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565304487179493,"seconds":7.2624534368515015e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.7890625,"distances_sum":2723.014438467345}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9396462912087915,"seconds":7.072463631629944e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.71875,"distances_sum":2630.1529720239687}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9642742673992677,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2781.580983980636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9642742673992677,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8515625,"distances_sum":2781.580983980636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6910575535575542,"seconds":7.366761565208435e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":7.3828125,"distances_sum":1373.600794087895}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8776473526473534,"seconds":8.581206202507019e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.203125,"distances_sum":2197.5324837825433}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8776473526473534,"seconds":8.581206202507019e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.203125,"distances_sum":2197.5324837825433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9181776556776562,"seconds":9.059906005859375e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.4765625,"distances_sum":2421.195985628051}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605883699633703,"seconds":1.049041748046875e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.796875,"distances_sum":2777.8720336885467}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9167983058608067,"seconds":9.139999747276306e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.296875,"distances_sum":2427.815266979244}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9205357142857148,"seconds":8.93324613571167e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.375,"distances_sum":2432.7613820436773}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9605883699633703,"seconds":1.049041748046875e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.796875,"distances_sum":2777.8720336885467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.974609375, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.974609375,"f1":0.9857886904761909,"seconds":1.1097639799118042e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.9453125,"distances_sum":2978.008693714879}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9809523809523814,"seconds":1.0564923286437988e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.9296875,"distances_sum":2924.6357818190136}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9771978021978026,"seconds":1.0585412383079529e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.9140625,"distances_sum":2900.9093794159216}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649210164835169,"seconds":1.046992838382721e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.84375,"distances_sum":2796.791129896394}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684924450549453,"seconds":9.842216968536377e-6,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.8671875,"distances_sum":2808.820096445735}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.974609375,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9857886904761909,"seconds":1.1097639799118042e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.9453125,"distances_sum":2978.008693714879}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.974609375,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9857886904761909,"seconds":1.1097639799118042e-5,"exhaustive_search_seconds":3.7029385566711426e-6,"evaluations":8.9453125,"distances_sum":2978.008693714879}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3359375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3359375,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":5.2578125,"distances_sum":890.5730115852988}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3359375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3359375,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":5.2578125,"distances_sum":890.5730115852988}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.490234375, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.490234375,"f1":null,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":6.4765625,"distances_sum":1298.6575889188725}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8492627164502173,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.0078125,"distances_sum":2177.2061634893053}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7805663086913094,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":7.3515625,"distances_sum":1814.4812756306862}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8492627164502173,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.0078125,"distances_sum":2177.2061634893053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9103625541125548,"seconds":6.8675726652145386e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.28125,"distances_sum":2569.6479954127344}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9004063644688651,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.296875,"distances_sum":2479.588395157786}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.942542353479854,"seconds":7.059425115585327e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.7421875,"distances_sum":2758.1219626653874}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.942542353479854,"seconds":7.059425115585327e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.7421875,"distances_sum":2758.1219626653874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8984375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.942542353479854,"seconds":7.059425115585327e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.7421875,"distances_sum":2758.1219626653874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":5.8515625,"distances_sum":668.024997886498}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3095703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.3095703125,"f1":null,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":5.9453125,"distances_sum":525.2349828394312}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.40625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.40625,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":5.8515625,"distances_sum":668.024997886498}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7992386086136094,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.5078125,"distances_sum":1167.0512119050509}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9062099358974365,"seconds":5.9451907873153687e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3359375,"distances_sum":1531.166887391128}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8595040376290384,"seconds":6.3925981521606445e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.0390625,"distances_sum":1349.07998030988}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9062099358974365,"seconds":5.9451907873153687e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3359375,"distances_sum":1531.166887391128}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682864010989016,"seconds":7.156282663345337e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.859375,"distances_sum":1840.5511611588543}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9641025641025648,"seconds":7.098540663719177e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8359375,"distances_sum":1808.8874522266449}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":7.281079888343811e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8984375,"distances_sum":1859.4552712483787}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961761675824176,"seconds":7.33695924282074e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8125,"distances_sum":1802.459289034352}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9368017399267403,"seconds":1.062825322151184e-5,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.71875,"distances_sum":1670.0073619844422}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":7.281079888343811e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8984375,"distances_sum":1859.4552712483787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725274725274728,"seconds":7.281079888343811e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8984375,"distances_sum":1859.4552712483787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.851205565268066,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":7.84375,"distances_sum":1342.31973173773}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.851205565268066,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":7.84375,"distances_sum":1342.31973173773}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8960518648018656,"seconds":7.035210728645325e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.234375,"distances_sum":1526.642943336725}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.826171875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.826171875,"f1":0.8960518648018656,"seconds":7.035210728645325e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.234375,"distances_sum":1526.642943336725}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9665407509157515,"seconds":9.100884199142456e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.9140625,"distances_sum":1824.5638534772902}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941395,"seconds":1.0248273611068726e-5,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.9140625,"distances_sum":1907.0361010564159}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9617960164835169,"seconds":9.493902325630188e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.875,"distances_sum":1801.912971357583}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9039720695970704,"seconds":8.475035429000854e-6,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.328125,"distances_sum":1510.4516958158588}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941395,"seconds":1.0248273611068726e-5,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.9140625,"distances_sum":1907.0361010564159}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941395,"seconds":1.0248273611068726e-5,"exhaustive_search_seconds":1.9203871488571167e-6,"evaluations":8.9140625,"distances_sum":1907.0361010564159}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8500156093906104,"seconds":8.851289749145508e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":7.796875,"distances_sum":1199.0855642643098}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.28515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.28515625,"f1":null,"seconds":1.0073184967041016e-5,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":6.109375,"distances_sum":445.23506959552316}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8500156093906104,"seconds":8.851289749145508e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":7.796875,"distances_sum":1199.0855642643098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8794393106893114,"seconds":8.150935173034668e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.109375,"distances_sum":1328.3053668589328}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9054086538461547,"seconds":1.3310462236404419e-5,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.390625,"distances_sum":1401.339732462344}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8776473526473536,"seconds":8.11740756034851e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.0234375,"distances_sum":1267.7262137026605}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9054086538461547,"seconds":1.3310462236404419e-5,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.390625,"distances_sum":1401.339732462344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719322344322346,"seconds":9.316951036453247e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.9296875,"distances_sum":1699.4873717688797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596382783882789,"seconds":9.350478649139404e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.859375,"distances_sum":1636.3627583102557}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9196007117882125,"seconds":1.1416152119636536e-5,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.5078125,"distances_sum":1485.5096102075677}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719322344322346,"seconds":9.316951036453247e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.9296875,"distances_sum":1699.4873717688797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719322344322346,"seconds":9.316951036453247e-6,"exhaustive_search_seconds":2.2277235984802246e-6,"evaluations":8.9296875,"distances_sum":1699.4873717688797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7737587065712073,"seconds":6.545335054397583e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.25,"distances_sum":1063.3107105850806}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7737587065712073,"seconds":6.545335054397583e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.25,"distances_sum":1063.3107105850806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9414548992673999,"seconds":8.169561624526978e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.6953125,"distances_sum":1697.1341362940288}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9370077838827844,"seconds":8.033588528633118e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.6171875,"distances_sum":1673.7500867187912}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582417582417585,"seconds":1.2097880244255066e-5,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.828125,"distances_sum":1766.3153872121934}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7855909715284722,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.2578125,"distances_sum":1141.1368260670072}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7868967837717846,"seconds":7.3052942752838135e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":7.3125,"distances_sum":1105.4533160565566}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9582417582417585,"seconds":1.2097880244255066e-5,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.828125,"distances_sum":1766.3153872121934}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9793898809523813,"seconds":8.031725883483887e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.96875,"distances_sum":1869.1446020809144}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611435439560445,"seconds":7.444992661476135e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.828125,"distances_sum":1792.31541316165}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9735119047619052,"seconds":7.33695924282074e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.921875,"distances_sum":1832.9833628366625}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688301282051287,"seconds":7.079914212226868e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.8671875,"distances_sum":1829.1864008363266}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701293498168502,"seconds":7.24010169506073e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.8828125,"distances_sum":1814.3342166050993}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9793898809523813,"seconds":8.031725883483887e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.96875,"distances_sum":1869.1446020809144}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9793898809523813,"seconds":8.031725883483887e-6,"exhaustive_search_seconds":2.0470470190048218e-6,"evaluations":8.96875,"distances_sum":1869.1446020809144}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2587890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2587890625,"f1":null,"seconds":4.049390554428101e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.046875,"distances_sum":517.9877172480436}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.58203125,"f1":0.7201003857253864,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.0625,"distances_sum":1082.356227120224}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.015625,"distances_sum":757.9566840339702}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.58203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.58203125,"f1":0.7201003857253864,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.0625,"distances_sum":1082.356227120224}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8879297785547793,"seconds":9.737908840179443e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.109375,"distances_sum":1663.0930876964985}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9058524808524818,"seconds":1.019984483718872e-5,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.328125,"distances_sum":1695.0041805240428}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.912972444222445,"seconds":4.416145384311676e-5,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.34375,"distances_sum":1754.26598786442}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8804091741591751,"seconds":9.337440133094788e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.8984375,"distances_sum":1582.433912496331}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.912972444222445,"seconds":4.416145384311676e-5,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.34375,"distances_sum":1754.26598786442}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960027472527473,"seconds":9.687617421150208e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8046875,"distances_sum":1977.5971087904181}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9257326007326017,"seconds":1.0460615158081055e-5,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.5546875,"distances_sum":1810.143764730622}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9220066391941398,"seconds":8.516013622283936e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.578125,"distances_sum":1782.4997254654972}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9564789377289381,"seconds":1.132860779762268e-5,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.7890625,"distances_sum":1964.892219711056}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9549336080586087,"seconds":1.0989606380462646e-5,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8359375,"distances_sum":1928.754038126933}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.960027472527473,"seconds":9.687617421150208e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8046875,"distances_sum":1977.5971087904181}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.960027472527473,"seconds":9.687617421150208e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8046875,"distances_sum":1977.5971087904181}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7981409215784222,"seconds":8.676201105117798e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":7.4140625,"distances_sum":1211.8926316468353}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.416015625,"f1":0.5606684981684983,"seconds":8.13603401184082e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":6.0625,"distances_sum":735.601409204861}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7981409215784222,"seconds":8.676201105117798e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":7.4140625,"distances_sum":1211.8926316468353}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.895701694139195,"seconds":1.082196831703186e-5,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.3046875,"distances_sum":1572.728528718619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.938461538461539,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.671875,"distances_sum":1785.4171962316957}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":null,"recall":0.794921875,"f1":null,"seconds":3.0348077416419983e-5,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":7.96875,"distances_sum":1502.3704040341975}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8874719030969039,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.2734375,"distances_sum":1575.3444788706474}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8944761835386843,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.3046875,"distances_sum":1595.7818614701152}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.938461538461539,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.671875,"distances_sum":1785.4171962316957}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9716174450549454,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.875,"distances_sum":1945.0097078552824}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809525,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.921875,"distances_sum":2010.2353955001677}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9636904761904768,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.8671875,"distances_sum":1899.7916341642483}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9452094780219786,"seconds":6.293877959251404e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.765625,"distances_sum":1812.535130713244}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9503033424908433,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.734375,"distances_sum":1860.1955367404778}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675251831501835,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.8671875,"distances_sum":1934.802952512544}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9501201923076927,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.7734375,"distances_sum":1844.5827221780464}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809525,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.921875,"distances_sum":2010.2353955001677}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9805059523809525,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":2.5797635316848755e-6,"evaluations":8.921875,"distances_sum":2010.2353955001677}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8109213702963712,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.484375,"distances_sum":1219.208614589925}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8410162753912762,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.796875,"distances_sum":1329.2398462820338}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6834065240315245,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.4296875,"distances_sum":944.3329245916424}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8410162753912762,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.796875,"distances_sum":1329.2398462820338}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9397238178488182,"seconds":6.90855085849762e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6640625,"distances_sum":1779.8283488959335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9467922702297707,"seconds":8.15652310848236e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.703125,"distances_sum":1828.3445637799464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953519917582418,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7890625,"distances_sum":1867.9602075924474}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9383298992674,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6484375,"distances_sum":1776.6634239590205}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9252377830502839,"seconds":6.932765245437622e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6171875,"distances_sum":1701.2279276532522}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9081678737928746,"seconds":9.307637810707092e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.453125,"distances_sum":1616.00854291457}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.953519917582418,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.7890625,"distances_sum":1867.9602075924474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":8.996576070785522e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8984375,"distances_sum":1907.4848501805047}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654990842490846,"seconds":8.968636393547058e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":1904.7456635233889}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640338827838832,"seconds":9.430572390556335e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":1899.515586792404}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556776556776562,"seconds":9.12696123123169e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":1840.5070075843687}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9785714285714289,"seconds":9.074807167053223e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":1972.7438332559059}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.95839368964369,"seconds":9.41939651966095e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.78125,"distances_sum":1877.7825720988724}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785714285714289,"seconds":9.074807167053223e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":1972.7438332559059}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9785714285714289,"seconds":9.074807167053223e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9375,"distances_sum":1972.7438332559059}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7027326839826847,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":6.953125,"distances_sum":929.071870889982}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.802146291208792,"seconds":7.528811693191528e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":7.65625,"distances_sum":1242.507998831665}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.802146291208792,"seconds":7.528811693191528e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":7.65625,"distances_sum":1242.507998831665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9265026640026648,"seconds":8.46758484840393e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.640625,"distances_sum":1626.4733394259974}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9047847985347993,"seconds":9.084120392799377e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.3984375,"distances_sum":1574.4634321910632}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8550237956487964,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":7.9453125,"distances_sum":1415.5457965848814}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8673101204351212,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.046875,"distances_sum":1401.3793779018529}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9265026640026648,"seconds":8.46758484840393e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.640625,"distances_sum":1626.4733394259974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511618589743597,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.6484375,"distances_sum":1829.3786912850803}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9602506868131874,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.7890625,"distances_sum":1845.2055308972404}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9431032509157515,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.6328125,"distances_sum":1795.8154500644882}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9357002372627379,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.6640625,"distances_sum":1731.1583135254193}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9602506868131874,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.7890625,"distances_sum":1845.2055308972404}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9602506868131874,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":2.201646566390991e-6,"evaluations":8.7890625,"distances_sum":1845.2055308972404}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8543961247086257,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.828125,"distances_sum":1361.6697254728113}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.1015625,"distances_sum":670.0085361535096}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8543961247086257,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.828125,"distances_sum":1361.6697254728113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9051911630036636,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.328125,"distances_sum":1566.6013111179643}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9051911630036636,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.328125,"distances_sum":1566.6013111179643}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561069139194144,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":1798.4106697085858}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9324519230769241,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5625,"distances_sum":1701.6791880292799}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9263679029304034,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.5390625,"distances_sum":1681.334972941834}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9561069139194144,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":1798.4106697085858}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9561069139194144,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.828125,"distances_sum":1798.4106697085858}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8688394938394947,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.640625,"distances_sum":1749.7068964331133}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6924388111888119,"seconds":4.330649971961975e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.84375,"distances_sum":1124.2499818622885}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8688394938394947,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.640625,"distances_sum":1749.7068964331133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9308321886446893,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8359375,"distances_sum":2145.413037818554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510130494505502,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.796875,"distances_sum":2291.223269848101}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9383470695970704,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8359375,"distances_sum":2178.3998285316043}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8860384407259416,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8125,"distances_sum":1887.5154315323032}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510130494505502,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.796875,"distances_sum":2291.223269848101}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109893,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.96875,"distances_sum":2427.4644638264926}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574435980685982,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8671875,"distances_sum":2297.7869214157117}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579613095238099,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8671875,"distances_sum":2309.3485554451345}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.97029532967033,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9375,"distances_sum":2368.7611281302497}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109893,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.96875,"distances_sum":2427.4644638264926}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109893,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.96875,"distances_sum":2427.4644638264926}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7813030719280726,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.828125,"distances_sum":1355.4314118694936}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.839438686313687,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.1640625,"distances_sum":1525.467759593835}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.034248948097229e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.4453125,"distances_sum":383.3884756478567}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8501071844821854,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.2734375,"distances_sum":1562.2817987307621}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8501071844821854,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.2734375,"distances_sum":1562.2817987307621}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9512706043956048,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.765625,"distances_sum":2130.5450671872222}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9365785256410262,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7265625,"distances_sum":2004.2058915745451}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501945970695977,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2116.3589992116276}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9563847610722616,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2160.7087261435922}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8734895313020323,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4609375,"distances_sum":1667.6201145335938}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9563847610722616,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2160.7087261435922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753205128205131,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2268.4856383760743}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9594322344322349,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2139.1570404400245}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657222985347989,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.90625,"distances_sum":2196.198458135131}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9620421245421252,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8359375,"distances_sum":2208.0438986604404}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635302197802204,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2197.4999669543013}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025645,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.921875,"distances_sum":2235.991095512338}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753205128205131,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2268.4856383760743}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753205128205131,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2268.4856383760743}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.2265625,"distances_sum":469.93901517033925}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2451171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.2265625,"distances_sum":469.93901517033925}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2451171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.3155083656311035e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.2265625,"distances_sum":469.93901517033925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1875,"f1":null,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.09375,"distances_sum":436.8923727664699}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.7979334592819214e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.546875,"distances_sum":917.0006472322627}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8622169497169505,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.3046875,"distances_sum":1770.303680461326}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8622169497169505,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.3046875,"distances_sum":1770.303680461326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632268772893777,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.90625,"distances_sum":2440.599434830524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516082875457881,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.859375,"distances_sum":2374.095648022681}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8701439185814195,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4140625,"distances_sum":1869.585640899981}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9632268772893777,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.90625,"distances_sum":2440.599434830524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857145,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.96875,"distances_sum":2560.3611616015532}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9727678571428575,"seconds":6.359070539474487e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9765625,"distances_sum":2497.1879925601074}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.96875,"distances_sum":2533.1296049423418}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857145,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.96875,"distances_sum":2560.3611616015532}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9814732142857145,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.96875,"distances_sum":2560.3611616015532}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7918522449772458,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7421875,"distances_sum":1602.304025886697}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2109375,"distances_sum":944.2047571191496}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.794521624209125,"seconds":4.688277840614319e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9296875,"distances_sum":1564.482204719615}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7918522449772458,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.7421875,"distances_sum":1602.304025886697}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8433420745920753,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.984375,"distances_sum":1725.0231831846488}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8652274808524817,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.21875,"distances_sum":1884.5789771386492}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9479223901098905,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2379.4805649804525}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9479223901098905,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2379.4805649804525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9504693223443229,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2419.876227457438}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9591346153846156,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2470.0804043528624}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577609890109894,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2472.7312737937555}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9591346153846156,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2470.0804043528624}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9591346153846156,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2470.0804043528624}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8159115190365198,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.28125,"distances_sum":1652.6556722492865}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8037675865800874,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.2734375,"distances_sum":1532.8291219228822}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7080078125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.7080078125,"f1":0.8159115190365198,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.28125,"distances_sum":1652.6556722492865}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9464946511821517,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.84375,"distances_sum":2360.3599390637596}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8906598609723617,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.78125,"distances_sum":1979.803668749198}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8612616550116559,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.1875,"distances_sum":1795.474300274575}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9464946511821517,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.84375,"distances_sum":2360.3599390637596}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654418498168504,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.90625,"distances_sum":2483.075487733645}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.96542467948718,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.9453125,"distances_sum":2490.9992212506236}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958281822344323,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.9140625,"distances_sum":2419.9535958793845}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654418498168504,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.90625,"distances_sum":2483.075487733645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654418498168504,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.4547258615493774e-6,"evaluations":8.90625,"distances_sum":2483.075487733645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.828125,"distances_sum":516.2871533562683}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7158338189588197,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.4921875,"distances_sum":1229.4432486538904}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8014438686313695,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9453125,"distances_sum":1502.928312958995}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.8014438686313695,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9453125,"distances_sum":1502.928312958995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8640978812853822,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2265625,"distances_sum":1803.8513017573262}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8071889915639924,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9765625,"distances_sum":1589.91311199643}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8640978812853822,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2265625,"distances_sum":1803.8513017573262}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9549736721611723,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2357.502463739228}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541380494505499,"seconds":6.513670086860657e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9375,"distances_sum":2334.181473471092}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9260874542124548,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8125,"distances_sum":2170.6638723866217}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9549736721611723,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2357.502463739228}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9549736721611723,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9296875,"distances_sum":2357.502463739228}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8031019327894335,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.078125,"distances_sum":1517.856437675724}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3662109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.4961849451065063e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.9765625,"distances_sum":762.4818754012924}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.60546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.60546875,"f1":0.7386065323565331,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.453125,"distances_sum":1321.3114837998723}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8031019327894335,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.078125,"distances_sum":1517.856437675724}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8401978230103238,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.1328125,"distances_sum":1705.0032430816423}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8767061063936072,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3828125,"distances_sum":1854.9737107053443}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8785771520146528,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.28125,"distances_sum":1878.4751940553303}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8767061063936072,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3828125,"distances_sum":1854.9737107053443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9339806027306033,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.84375,"distances_sum":2187.313106586723}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9288924617049624,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":2189.319395270301}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522779304029311,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.765625,"distances_sum":2340.026514637746}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607944139194143,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2406.859175352064}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9399896978021981,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.6875,"distances_sum":2255.3317375813335}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9248683608058617,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2139.240162843695}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522951007326016,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7734375,"distances_sum":2338.5952090875235}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607944139194143,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2406.859175352064}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607944139194143,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":2406.859175352064}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7897493131868139,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8671875,"distances_sum":1517.285291753508}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7274177211677219,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.328125,"distances_sum":1343.6204055186795}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7897493131868139,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.8671875,"distances_sum":1517.285291753508}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8807716588966598,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.59375,"distances_sum":1978.7339711011366}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9549367299367304,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2455.4540782544723}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9353485056610064,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7109375,"distances_sum":2309.478869205488}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9549367299367304,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2455.4540782544723}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9765625000000002,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9609375,"distances_sum":2575.4523995259683}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962688873626374,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2470.6065849587762}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9613152472527475,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2470.63157951922}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769173534798538,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2574.1688660464297}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.967994505494506,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2519.1135153161927}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769173534798538,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2574.1688660464297}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9769173534798538,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2574.1688660464297}}, n: 9
inertia(cfft.distances) = 18.041048340548343
inertia(cdnet.distances) = 25.388280120040992
inertia(crand.distances) = 21.25216537629037
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9066666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8822222222222221
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9177777777777777
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.891111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8377777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9244444444444445
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8755555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 2, 3, 3, 1, 2, 3, 2, 3, 3, 3, 1, 3, 2, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.42560000308277496] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254] ***
*** starting iteration: 2; err: [Inf, 0.42560000308277496, 0.1760802376463254] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368] ***
*** starting iteration: 3; err: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** starting iteration: 4; err: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** finished computation of 12 references, err: [Inf, 0.42560000308277496, 0.1760802376463254, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.44258699661711615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44258699661711615, 0.24437423566197125] ***
*** starting iteration: 2; err: [Inf, 0.44258699661711615, 0.24437423566197125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44258699661711615, 0.24437423566197125, 0.19604425263105352] ***
*** starting iteration: 3; err: [Inf, 0.44258699661711615, 0.24437423566197125, 0.19604425263105352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44258699661711615, 0.24437423566197125, 0.19604425263105352, 0.17806039781833788] ***
*** finished computation of 7 references, err: [Inf, 0.44258699661711615, 0.24437423566197125, 0.19604425263105352, 0.17806039781833788] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 3, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2282360189546342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2282360189546342, 0.5754499836494928] ***
*** starting iteration: 2; err: [Inf, 1.2282360189546342, 0.5754499836494928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2282360189546342, 0.5754499836494928, 0.5677374061568056] ***
*** starting iteration: 3; err: [Inf, 1.2282360189546342, 0.5754499836494928, 0.5677374061568056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2282360189546342, 0.5754499836494928, 0.5677374061568056, 0.5658119424792818] ***
*** finished computation of 7 references, err: [Inf, 1.2282360189546342, 0.5754499836494928, 0.5677374061568056, 0.5658119424792818] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 28]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 35), (3, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6245358317645675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6245358317645675, 0.2638348384284739] ***
*** starting iteration: 2; err: [Inf, 0.6245358317645675, 0.2638348384284739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6245358317645675, 0.2638348384284739, 0.22180416268302472] ***
*** starting iteration: 3; err: [Inf, 0.6245358317645675, 0.2638348384284739, 0.22180416268302472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6245358317645675, 0.2638348384284739, 0.22180416268302472, 0.20847501429785392] ***
*** finished computation of 7 references, err: [Inf, 0.6245358317645675, 0.2638348384284739, 0.22180416268302472, 0.20847501429785392] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 25]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(2, 8), (3, 25)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4687163570161499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4687163570161499, 0.4751363451573019] ***
*** starting iteration: 2; err: [Inf, 1.4687163570161499, 0.4751363451573019] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4687163570161499, 0.4751363451573019, 0.440117927133543] ***
*** starting iteration: 3; err: [Inf, 1.4687163570161499, 0.4751363451573019, 0.440117927133543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4687163570161499, 0.4751363451573019, 0.440117927133543, 0.43360730586913954] ***
*** finished computation of 3 references, err: [Inf, 1.4687163570161499, 0.4751363451573019, 0.440117927133543, 0.43360730586913954] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 35]]
** centroid: 1, normalized-entropy: 0.842657877202239, [(2, 13), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0881458314091508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0881458314091508, 0.5918585763021285] ***
*** starting iteration: 2; err: [Inf, 1.0881458314091508, 0.5918585763021285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0881458314091508, 0.5918585763021285, 0.5918585763021285] ***
*** finished computation of 3 references, err: [Inf, 1.0881458314091508, 0.5918585763021285, 0.5918585763021285] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 28]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 35), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.142771763166763] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.142771763166763, 0.9194126331843555] ***
*** starting iteration: 2; err: [Inf, 9.142771763166763, 0.9194126331843555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.142771763166763, 0.9194126331843555, 0.6584694586514024] ***
*** starting iteration: 3; err: [Inf, 9.142771763166763, 0.9194126331843555, 0.6584694586514024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.142771763166763, 0.9194126331843555, 0.6584694586514024, 0.6579377207998376] ***
*** finished computation of 3 references, err: [Inf, 9.142771763166763, 0.9194126331843555, 0.6584694586514024, 0.6579377207998376] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 36]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(2, 32), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.4504000279906903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.4504000279906903, 0.985064854587664] ***
*** finished computation of 3 references, err: [Inf, 2.4504000279906903, 0.985064854587664] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 36]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 28), (3, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [18, 4, 0]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(1, 18), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.839299953238092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.839299953238092, 1.1970008048515712] ***
*** finished computation of 3 references, err: [Inf, 10.839299953238092, 1.1970008048515712] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 28]]
** centroid: 3, normalized-entropy: 0.9886994082884974, [(2, 36), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.186700000761431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.186700000761431, 0.5441348538545562] ***
*** finished computation of 3 references, err: [Inf, 1.186700000761431, 0.5441348538545562] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1330732983365035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964] ***
*** starting iteration: 2; err: [Inf, 1.1330732983365035, 0.45963977725258964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864] ***
*** starting iteration: 3; err: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666] ***
*** starting iteration: 4; err: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425] ***
*** starting iteration: 5; err: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425, 0.1771370227752646] ***
*** starting iteration: 6; err: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425, 0.1771370227752646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425, 0.1771370227752646, 0.17461476402592319] ***
*** starting iteration: 7; err: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425, 0.1771370227752646, 0.17461476402592319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425, 0.1771370227752646, 0.17461476402592319, 0.17461476402592319] ***
*** finished computation of 7 references, err: [Inf, 1.1330732983365035, 0.45963977725258964, 0.2556874741789864, 0.21481133678434666, 0.19083579678150425, 0.1771370227752646, 0.17461476402592319, 0.17461476402592319] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 9]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 18), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7968408218332607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422] ***
*** starting iteration: 2; err: [Inf, 0.7968408218332607, 0.2637826356546422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237] ***
*** starting iteration: 3; err: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172] ***
*** starting iteration: 4; err: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607] ***
*** starting iteration: 5; err: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607, 0.19711743034284626] ***
*** starting iteration: 6; err: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607, 0.19711743034284626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607, 0.19711743034284626, 0.19305247643200737] ***
*** starting iteration: 7; err: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607, 0.19711743034284626, 0.19305247643200737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607, 0.19711743034284626, 0.19305247643200737, 0.19305247643200737] ***
*** finished computation of 7 references, err: [Inf, 0.7968408218332607, 0.2637826356546422, 0.23374405923536237, 0.21404943429299172, 0.20348965704639607, 0.19711743034284626, 0.19305247643200737, 0.19305247643200737] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46550479943673084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46550479943673084, 0.32824408413256295] ***
*** starting iteration: 2; err: [Inf, 0.46550479943673084, 0.32824408413256295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46550479943673084, 0.32824408413256295, 0.3183581422683931] ***
*** starting iteration: 3; err: [Inf, 0.46550479943673084, 0.32824408413256295, 0.3183581422683931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46550479943673084, 0.32824408413256295, 0.3183581422683931, 0.31531989367905466] ***
*** starting iteration: 4; err: [Inf, 0.46550479943673084, 0.32824408413256295, 0.3183581422683931, 0.31531989367905466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46550479943673084, 0.32824408413256295, 0.3183581422683931, 0.31531989367905466, 0.31447009466993736] ***
*** finished computation of 7 references, err: [Inf, 0.46550479943673084, 0.32824408413256295, 0.3183581422683931, 0.31531989367905466, 0.31447009466993736] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 4]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 32]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 4), (3, 32)]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9819483354163415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9819483354163415, 0.4035860136658934] ***
*** starting iteration: 2; err: [Inf, 0.9819483354163415, 0.4035860136658934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9819483354163415, 0.4035860136658934, 0.39377551468942884] ***
*** starting iteration: 3; err: [Inf, 0.9819483354163415, 0.4035860136658934, 0.39377551468942884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9819483354163415, 0.4035860136658934, 0.39377551468942884, 0.39338391272291373] ***
*** finished computation of 3 references, err: [Inf, 0.9819483354163415, 0.4035860136658934, 0.39377551468942884, 0.39338391272291373] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0140532071952517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0140532071952517, 0.40843702934257714] ***
*** starting iteration: 2; err: [Inf, 1.0140532071952517, 0.40843702934257714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0140532071952517, 0.40843702934257714, 0.35036671301514816] ***
*** starting iteration: 3; err: [Inf, 1.0140532071952517, 0.40843702934257714, 0.35036671301514816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0140532071952517, 0.40843702934257714, 0.35036671301514816, 0.34793247631735835] ***
*** finished computation of 3 references, err: [Inf, 1.0140532071952517, 0.40843702934257714, 0.35036671301514816, 0.34793247631735835] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 26]]
** centroid: 2, normalized-entropy: 0.8224042259549892, [(2, 9), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8655222707982142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8655222707982142, 0.6523886527430202] ***
*** starting iteration: 2; err: [Inf, 0.8655222707982142, 0.6523886527430202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8655222707982142, 0.6523886527430202, 0.6516738796498571] ***
*** finished computation of 3 references, err: [Inf, 0.8655222707982142, 0.6523886527430202, 0.6516738796498571] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [13, 2, 0]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(1, 13), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 36]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9999000033751446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9999000033751446, 0.5774925977098633] ***
*** finished computation of 3 references, err: [Inf, 0.9999000033751446, 0.5774925977098633] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8851000063513992] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8851000063513992, 0.5010289698762024] ***
*** finished computation of 3 references, err: [Inf, 0.8851000063513992, 0.5010289698762024] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 24]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 4]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4432999936609725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4432999936609725, 0.5752565089391375] ***
*** finished computation of 3 references, err: [Inf, 1.4432999936609725, 0.5752565089391375] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 36]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 8), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.465000003618821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.465000003618821, 0.24139786243606814] ***
*** finished computation of 7 references, err: [Inf, 0.465000003618821, 0.24139786243606814] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 12]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 14), (3, 12)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5797000015034104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5797000015034104, 0.3079301184662163] ***
*** finished computation of 7 references, err: [Inf, 0.5797000015034104, 0.3079301184662163] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8324000021770362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8324000021770362, 0.49351781761935754] ***
*** finished computation of 7 references, err: [Inf, 0.8324000021770362, 0.49351781761935754] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 20]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 8), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 16]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5478000014291907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5478000014291907, 0.35070819437737855] ***
*** starting iteration: 2; err: [Inf, 0.5478000014291907, 0.35070819437737855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5478000014291907, 0.35070819437737855, 0.30963378427964733] ***
*** starting iteration: 3; err: [Inf, 0.5478000014291907, 0.35070819437737855, 0.30963378427964733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5478000014291907, 0.35070819437737855, 0.30963378427964733, 0.3088071356508328] ***
*** finished computation of 7 references, err: [Inf, 0.5478000014291907, 0.35070819437737855, 0.30963378427964733, 0.3088071356508328] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 9]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 6), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 6, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6875000029798529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993] ***
*** starting iteration: 2; err: [Inf, 0.6875000029798529, 0.34011889130112993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041] ***
*** starting iteration: 3; err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648] ***
*** starting iteration: 4; err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631] ***
*** starting iteration: 5; err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866] ***
*** starting iteration: 6; err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866, 0.23618953373337365] ***
*** starting iteration: 7; err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866, 0.23618953373337365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866, 0.23618953373337365, 0.2346381574276194] ***
*** starting iteration: 8; err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866, 0.23618953373337365, 0.2346381574276194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866, 0.23618953373337365, 0.2346381574276194, 0.23404465688040407] ***
*** finished computation of 7 references, err: [Inf, 0.6875000029798529, 0.34011889130112993, 0.278146197780041, 0.2480464951398648, 0.24111670381328631, 0.23760122878182866, 0.23618953373337365, 0.2346381574276194, 0.23404465688040407] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7891000054503514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7891000054503514, 0.40827298486957503] ***
*** starting iteration: 2; err: [Inf, 0.7891000054503514, 0.40827298486957503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435] ***
*** starting iteration: 3; err: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584] ***
*** starting iteration: 4; err: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584, 0.25094834907702357] ***
*** starting iteration: 5; err: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584, 0.25094834907702357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584, 0.25094834907702357, 0.2463236179695326] ***
*** starting iteration: 6; err: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584, 0.25094834907702357, 0.2463236179695326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584, 0.25094834907702357, 0.2463236179695326, 0.245890325203701] ***
*** finished computation of 7 references, err: [Inf, 0.7891000054503514, 0.40827298486957503, 0.31001255906959435, 0.26666136328118584, 0.25094834907702357, 0.2463236179695326, 0.245890325203701] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 7, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24230859438217275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24230859438217275, 0.19207727928424462] ***
*** starting iteration: 2; err: [Inf, 0.24230859438217275, 0.19207727928424462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564] ***
*** starting iteration: 3; err: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716] ***
*** starting iteration: 4; err: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716, 0.17463567110438263] ***
*** starting iteration: 5; err: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716, 0.17463567110438263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716, 0.17463567110438263, 0.17349318520086218] ***
*** starting iteration: 6; err: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716, 0.17463567110438263, 0.17349318520086218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716, 0.17463567110438263, 0.17349318520086218, 0.17319547215724834] ***
*** finished computation of 7 references, err: [Inf, 0.24230859438217275, 0.19207727928424462, 0.18979148338800564, 0.18160604163350716, 0.17463567110438263, 0.17349318520086218, 0.17319547215724834] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 11]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7421662271958104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584] ***
*** starting iteration: 2; err: [Inf, 0.7421662271958104, 0.2892860384089584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005] ***
*** starting iteration: 3; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837] ***
*** starting iteration: 4; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108] ***
*** starting iteration: 5; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858] ***
*** starting iteration: 6; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399] ***
*** starting iteration: 7; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783] ***
*** starting iteration: 8; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783, 0.19844334025494845] ***
*** starting iteration: 9; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783, 0.19844334025494845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783, 0.19844334025494845, 0.19437838634410945] ***
*** starting iteration: 10; err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783, 0.19844334025494845, 0.19437838634410945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783, 0.19844334025494845, 0.19437838634410945, 0.19437838634410945] ***
*** finished computation of 7 references, err: [Inf, 0.7421662271958104, 0.2892860384089584, 0.25949818962791005, 0.24290741159277837, 0.23374020697719108, 0.22096110655883858, 0.2127654458348399, 0.20344615476176783, 0.19844334025494845, 0.19437838634410945, 0.19437838634410945] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30023637908938416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30023637908938416, 0.2268562557075051] ***
*** starting iteration: 2; err: [Inf, 0.30023637908938416, 0.2268562557075051] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30023637908938416, 0.2268562557075051, 0.2193624191027628] ***
*** starting iteration: 3; err: [Inf, 0.30023637908938416, 0.2268562557075051, 0.2193624191027628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30023637908938416, 0.2268562557075051, 0.2193624191027628, 0.2168833930006969] ***
*** starting iteration: 4; err: [Inf, 0.30023637908938416, 0.2268562557075051, 0.2193624191027628, 0.2168833930006969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30023637908938416, 0.2268562557075051, 0.2193624191027628, 0.2168833930006969, 0.216570024531689] ***
*** finished computation of 7 references, err: [Inf, 0.30023637908938416, 0.2268562557075051, 0.2193624191027628, 0.2168833930006969, 0.216570024531689] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 12]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5093410568185699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5093410568185699, 0.2794220801757432] ***
*** finished computation of 7 references, err: [Inf, 0.5093410568185699, 0.2794220801757432] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 11]]
** centroid: 5, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38431726848670533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38431726848670533, 0.28897326152871006] ***
*** finished computation of 7 references, err: [Inf, 0.38431726848670533, 0.28897326152871006] ***
*** center 1: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 7]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6032970568255928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6032970568255928, 0.30463666758137514] ***
*** finished computation of 7 references, err: [Inf, 0.6032970568255928, 0.30463666758137514] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 3]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 30), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4798999981414442] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4798999981414442, 0.569686687900667] ***
*** starting iteration: 2; err: [Inf, 1.4798999981414442, 0.569686687900667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4798999981414442, 0.569686687900667, 0.5688618807110656] ***
*** finished computation of 3 references, err: [Inf, 1.4798999981414442, 0.569686687900667, 0.5688618807110656] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 3, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4445999929520077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4445999929520077, 0.5091575990723094] ***
*** starting iteration: 2; err: [Inf, 1.4445999929520077, 0.5091575990723094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4445999929520077, 0.5091575990723094, 0.49102083963228965] ***
*** starting iteration: 3; err: [Inf, 1.4445999929520077, 0.5091575990723094, 0.49102083963228965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4445999929520077, 0.5091575990723094, 0.49102083963228965, 0.49016790424031753] ***
*** finished computation of 3 references, err: [Inf, 1.4445999929520077, 0.5091575990723094, 0.49102083963228965, 0.49016790424031753] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.343399993272381] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.343399993272381, 0.531358991234098] ***
*** starting iteration: 2; err: [Inf, 1.343399993272381, 0.531358991234098] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.343399993272381, 0.531358991234098, 0.5161129511554428] ***
*** starting iteration: 3; err: [Inf, 1.343399993272381, 0.531358991234098, 0.5161129511554428] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.343399993272381, 0.531358991234098, 0.5161129511554428, 0.5150974018649299] ***
*** starting iteration: 4; err: [Inf, 1.343399993272381, 0.531358991234098, 0.5161129511554428, 0.5150974018649299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.343399993272381, 0.531358991234098, 0.5161129511554428, 0.5150974018649299, 0.5142277670895694] ***
*** finished computation of 3 references, err: [Inf, 1.343399993272381, 0.531358991234098, 0.5161129511554428, 0.5150974018649299, 0.5142277670895694] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9417972751388178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9417972751388178, 0.41088385273708455] ***
*** starting iteration: 2; err: [Inf, 0.9417972751388178, 0.41088385273708455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533] ***
*** starting iteration: 3; err: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563] ***
*** starting iteration: 4; err: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563, 0.3947624977566231] ***
*** starting iteration: 5; err: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563, 0.3947624977566231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951] ***
*** starting iteration: 6; err: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951, 0.39320431720575244] ***
*** finished computation of 3 references, err: [Inf, 0.9417972751388178, 0.41088385273708455, 0.4003690628181533, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951, 0.39320431720575244] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1195516730078132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711] ***
*** starting iteration: 2; err: [Inf, 1.1195516730078132, 0.3583056005675711] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836] ***
*** starting iteration: 3; err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825] ***
*** starting iteration: 4; err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197] ***
*** starting iteration: 5; err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197, 0.3422571855447197] ***
*** finished computation of 3 references, err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197, 0.3422571855447197] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 7]]
** centroid: 3, normalized-entropy: 0.6593758812786991, [(2, 34), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6523410283896974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6523410283896974, 0.40863979710983755] ***
*** starting iteration: 2; err: [Inf, 0.6523410283896974, 0.40863979710983755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267] ***
*** starting iteration: 3; err: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267, 0.36471792500826977] ***
*** starting iteration: 4; err: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267, 0.36471792500826977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267, 0.36471792500826977, 0.3626264155162502] ***
*** starting iteration: 5; err: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267, 0.36471792500826977, 0.3626264155162502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267, 0.36471792500826977, 0.3626264155162502, 0.362199278215364] ***
*** finished computation of 3 references, err: [Inf, 0.6523410283896974, 0.40863979710983755, 0.38223871456100267, 0.36471792500826977, 0.3626264155162502, 0.362199278215364] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4763999994867498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4763999994867498, 0.5730421070229704] ***
*** starting iteration: 2; err: [Inf, 1.4763999994867498, 0.5730421070229704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4763999994867498, 0.5730421070229704, 0.5703830200279864] ***
*** starting iteration: 3; err: [Inf, 1.4763999994867498, 0.5730421070229704, 0.5703830200279864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4763999994867498, 0.5730421070229704, 0.5703830200279864, 0.5695418410699519] ***
*** finished computation of 3 references, err: [Inf, 1.4763999994867498, 0.5730421070229704, 0.5703830200279864, 0.5695418410699519] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.050499998684575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.050499998684575, 0.5243122479058995] ***
*** starting iteration: 2; err: [Inf, 1.050499998684575, 0.5243122479058995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.050499998684575, 0.5243122479058995, 0.4954787914222463] ***
*** starting iteration: 3; err: [Inf, 1.050499998684575, 0.5243122479058995, 0.4954787914222463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.050499998684575, 0.5243122479058995, 0.4954787914222463, 0.49016790424031753] ***
*** finished computation of 3 references, err: [Inf, 1.050499998684575, 0.5243122479058995, 0.4954787914222463, 0.49016790424031753] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 20]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 1), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1991000063724697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1991000063724697, 0.5521152967276681] ***
*** starting iteration: 2; err: [Inf, 1.1991000063724697, 0.5521152967276681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1991000063724697, 0.5521152967276681, 0.5201767154833498] ***
*** starting iteration: 3; err: [Inf, 1.1991000063724697, 0.5521152967276681, 0.5201767154833498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1991000063724697, 0.5521152967276681, 0.5201767154833498, 0.5161129511554428] ***
*** finished computation of 3 references, err: [Inf, 1.1991000063724697, 0.5521152967276681, 0.5201767154833498, 0.5161129511554428] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 26]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 1), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2864999922299598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2864999922299598, 0.5976627108546891] ***
*** finished computation of 3 references, err: [Inf, 1.2864999922299598, 0.5976627108546891] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6015999930876927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6015999930876927, 0.5091575990723094] ***
*** finished computation of 3 references, err: [Inf, 1.6015999930876927, 0.5091575990723094] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.967100006304322] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.967100006304322, 0.5890294724088714] ***
*** finished computation of 3 references, err: [Inf, 0.967100006304322, 0.5890294724088714] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 16]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 32), (3, 16)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3764064701924598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3764064701924598, 0.1809766473806599] ***
*** finished computation of 7 references, err: [Inf, 0.3764064701924598, 0.1809766473806599] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 5, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44036848670050605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44036848670050605, 0.18974407497699963] ***
*** finished computation of 7 references, err: [Inf, 0.44036848670050605, 0.18974407497699963] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4224376688047947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4224376688047947, 0.19767491387349317] ***
*** finished computation of 7 references, err: [Inf, 0.4224376688047947, 0.19767491387349317] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 9]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(2, 19), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5686000088096382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5686000088096382, 0.2920771692430353] ***
*** finished computation of 7 references, err: [Inf, 0.5686000088096382, 0.2920771692430353] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 19]]
** centroid: 1, normalized-entropy: 0.5746356978376794, [(2, 3), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 21, 8]]
** centroid: 6, normalized-entropy: 0.8497511372532974, [(2, 21), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.667199999789216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.667199999789216, 0.23273398911491416] ***
*** finished computation of 7 references, err: [Inf, 0.667199999789216, 0.23273398911491416] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47330000384396803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47330000384396803, 0.27757843856178627] ***
*** finished computation of 7 references, err: [Inf, 0.47330000384396803, 0.27757843856178627] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 9]]
** centroid: 3, normalized-entropy: 0.8571484374283717, [(2, 23), (3, 9)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 16
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.5793999976138031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5793999976138031, 0.5816560720981755] ***
*** starting iteration: 2; err: [Inf, 1.5793999976138031, 0.5816560720981755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006] ***
*** starting iteration: 3; err: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006, 0.5731256161595469] ***
*** starting iteration: 4; err: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006, 0.5731256161595469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006, 0.5731256161595469, 0.5703830200279864] ***
*** starting iteration: 5; err: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006, 0.5731256161595469, 0.5703830200279864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006, 0.5731256161595469, 0.5703830200279864, 0.5695418410699519] ***
*** finished computation of 3 references, err: [Inf, 1.5793999976138031, 0.5816560720981755, 0.5743613664767006, 0.5731256161595469, 0.5703830200279864, 0.5695418410699519] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4817999949149805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4817999949149805, 0.5091575990723094] ***
*** starting iteration: 2; err: [Inf, 1.4817999949149805, 0.5091575990723094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4817999949149805, 0.5091575990723094, 0.49102083963228965] ***
*** starting iteration: 3; err: [Inf, 1.4817999949149805, 0.5091575990723094, 0.49102083963228965] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4817999949149805, 0.5091575990723094, 0.49102083963228965, 0.49016790424031753] ***
*** finished computation of 3 references, err: [Inf, 1.4817999949149805, 0.5091575990723094, 0.49102083963228965, 0.49016790424031753] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9431000082053991] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9431000082053991, 0.5890294724088714] ***
*** starting iteration: 2; err: [Inf, 0.9431000082053991, 0.5890294724088714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925] ***
*** starting iteration: 3; err: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925, 0.5176606361532494] ***
*** starting iteration: 4; err: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925, 0.5176606361532494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925, 0.5176606361532494, 0.5150974018649299] ***
*** starting iteration: 5; err: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925, 0.5176606361532494, 0.5150974018649299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925, 0.5176606361532494, 0.5150974018649299, 0.5142277670895694] ***
*** finished computation of 3 references, err: [Inf, 0.9431000082053991, 0.5890294724088714, 0.5384999491156925, 0.5176606361532494, 0.5150974018649299, 0.5142277670895694] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8218854721579747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052] ***
*** starting iteration: 2; err: [Inf, 0.8218854721579747, 0.4744234692255052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028] ***
*** starting iteration: 3; err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732] ***
*** starting iteration: 4; err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413] ***
*** starting iteration: 5; err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563] ***
*** starting iteration: 6; err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563, 0.3947624977566231] ***
*** starting iteration: 7; err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563, 0.3947624977566231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951] ***
*** starting iteration: 8; err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951, 0.39320431720575244] ***
*** finished computation of 3 references, err: [Inf, 0.8218854721579747, 0.4744234692255052, 0.4397653154255028, 0.4201644818422732, 0.40294781352959413, 0.39714075725695563, 0.3947624977566231, 0.3936393899347951, 0.39320431720575244] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1195516730078132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711] ***
*** starting iteration: 2; err: [Inf, 1.1195516730078132, 0.3583056005675711] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836] ***
*** starting iteration: 3; err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825] ***
*** starting iteration: 4; err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197] ***
*** starting iteration: 5; err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197, 0.3422571855447197] ***
*** finished computation of 3 references, err: [Inf, 1.1195516730078132, 0.3583056005675711, 0.3474383057700836, 0.34482288223185825, 0.3422571855447197, 0.3422571855447197] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 7]]
** centroid: 3, normalized-entropy: 0.6593758812786991, [(2, 34), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7028215537901532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7028215537901532, 0.3990222548845274] ***
*** starting iteration: 2; err: [Inf, 0.7028215537901532, 0.3990222548845274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007] ***
*** starting iteration: 3; err: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622] ***
*** starting iteration: 4; err: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622, 0.3727475658406048] ***
*** starting iteration: 5; err: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622, 0.3727475658406048] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622, 0.3727475658406048, 0.37023408606074] ***
*** starting iteration: 6; err: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622, 0.3727475658406048, 0.37023408606074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622, 0.3727475658406048, 0.37023408606074, 0.3693842870516227] ***
*** finished computation of 3 references, err: [Inf, 0.7028215537901532, 0.3990222548845274, 0.38121490131786007, 0.3767343148318622, 0.3727475658406048, 0.37023408606074, 0.3693842870516227] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 32]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 4), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 4]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.8364055998566579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8364055998566579, 0.43737657958458187] ***
*** finished computation of 3 references, err: [Inf, 0.8364055998566579, 0.43737657958458187] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 18]]
** centroid: 1, normalized-entropy: 0.9486131982385807, [(2, 31), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0888794202610625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0888794202610625, 0.3583056005675711] ***
*** finished computation of 3 references, err: [Inf, 1.0888794202610625, 0.3583056005675711] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8932072571714643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8932072571714643, 0.37758847769275783] ***
*** finished computation of 3 references, err: [Inf, 0.8932072571714643, 0.37758847769275783] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.6222999901757897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6222999901757897, 0.5693950125831089] ***
*** finished computation of 3 references, err: [Inf, 2.6222999901757897, 0.5693950125831089] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 11]]
** centroid: 1, normalized-entropy: 0.8485481782946159, [(2, 29), (3, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 25]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 3), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1361999987329054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1361999987329054, 0.49016790424031753] ***
*** finished computation of 3 references, err: [Inf, 1.1361999987329054, 0.49016790424031753] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0113000067926774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0113000067926774, 0.5890294724088714] ***
*** finished computation of 3 references, err: [Inf, 1.0113000067926774, 0.5890294724088714] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 16]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 32), (3, 16)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 21
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.4453578005246686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453578005246686, 0.23711031977574573] ***
*** starting iteration: 2; err: [Inf, 0.4453578005246686, 0.23711031977574573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453578005246686, 0.23711031977574573, 0.22290683900420113] ***
*** starting iteration: 3; err: [Inf, 0.4453578005246686, 0.23711031977574573, 0.22290683900420113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4453578005246686, 0.23711031977574573, 0.22290683900420113, 0.22214596939573564] ***
*** finished computation of 7 references, err: [Inf, 0.4453578005246686, 0.23711031977574573, 0.22290683900420113, 0.22214596939573564] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 10]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.065979313357196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.065979313357196, 0.30275102711936575] ***
*** starting iteration: 2; err: [Inf, 2.065979313357196, 0.30275102711936575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578] ***
*** starting iteration: 3; err: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593] ***
*** starting iteration: 4; err: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593, 0.187263526595127] ***
*** starting iteration: 5; err: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593, 0.187263526595127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593, 0.187263526595127, 0.18140824580124465] ***
*** starting iteration: 6; err: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593, 0.187263526595127, 0.18140824580124465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593, 0.187263526595127, 0.18140824580124465, 0.18052468754426684] ***
*** finished computation of 7 references, err: [Inf, 2.065979313357196, 0.30275102711936575, 0.20950663172208578, 0.20153041711206593, 0.187263526595127, 0.18140824580124465, 0.18052468754426684] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.286150560160275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974] ***
*** starting iteration: 2; err: [Inf, 0.286150560160275, 0.21893418333924974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418] ***
*** starting iteration: 3; err: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948] ***
*** starting iteration: 4; err: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814] ***
*** starting iteration: 5; err: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814, 0.2006928756771106] ***
*** starting iteration: 6; err: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814, 0.2006928756771106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814, 0.2006928756771106, 0.1996252746617864] ***
*** starting iteration: 7; err: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814, 0.2006928756771106, 0.1996252746617864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814, 0.2006928756771106, 0.1996252746617864, 0.19924225076850813] ***
*** finished computation of 7 references, err: [Inf, 0.286150560160275, 0.21893418333924974, 0.21011663862299418, 0.20877532504156948, 0.2024760893054814, 0.2006928756771106, 0.1996252746617864, 0.19924225076850813] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 2]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 7), (3, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 4: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 1.072683457338242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.072683457338242, 0.6467708459334984] ***
*** finished computation of 3 references, err: [Inf, 1.072683457338242, 0.6467708459334984] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 32]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 13), (3, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 1, 0]]
** centroid: 3, normalized-entropy: 0.19590927087360496, [(1, 32), (2, 1)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4786902517773183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4786902517773183, 0.34613283703858516] ***
*** finished computation of 3 references, err: [Inf, 0.4786902517773183, 0.34613283703858516] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 25]]
** centroid: 1, normalized-entropy: 0.7578784625383954, [(2, 7), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 3]]
** centroid: 2, normalized-entropy: 0.44886448872302936, [(2, 29), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6489985142363569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6489985142363569, 0.39204855681167644] ***
*** finished computation of 3 references, err: [Inf, 0.6489985142363569, 0.39204855681167644] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 36]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 9), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 24
iteration 8 finished
*** starting iteration: 1; err: [Inf, 1.008499995401911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008499995401911, 0.5764156909948609] ***
*** starting iteration: 2; err: [Inf, 1.008499995401911, 0.5764156909948609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167] ***
*** starting iteration: 3; err: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816] ***
*** starting iteration: 4; err: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816, 0.33802713994096206] ***
*** starting iteration: 5; err: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816, 0.33802713994096206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816, 0.33802713994096206, 0.3310576103966737] ***
*** starting iteration: 6; err: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816, 0.33802713994096206, 0.3310576103966737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816, 0.33802713994096206, 0.3310576103966737, 0.3310576103966737] ***
*** finished computation of 7 references, err: [Inf, 1.008499995401911, 0.5764156909948609, 0.5117485498881167, 0.41909514328670816, 0.33802713994096206, 0.3310576103966737, 0.3310576103966737] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 12]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 18), (3, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7861000170246313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833] ***
*** starting iteration: 2; err: [Inf, 1.7861000170246313, 0.6889684235695833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825] ***
*** starting iteration: 3; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189] ***
*** starting iteration: 4; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907] ***
*** starting iteration: 5; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706] ***
*** starting iteration: 6; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775] ***
*** starting iteration: 7; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706] ***
*** starting iteration: 8; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706, 0.41634671269524864] ***
*** starting iteration: 9; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706, 0.41634671269524864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706, 0.41634671269524864, 0.41443672209102256] ***
*** starting iteration: 10; err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706, 0.41634671269524864, 0.41443672209102256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706, 0.41634671269524864, 0.41443672209102256, 0.41443672209102256] ***
*** finished computation of 7 references, err: [Inf, 1.7861000170246313, 0.6889684235695833, 0.5337664278193825, 0.4441765082623189, 0.43323709758033907, 0.4305654874281706, 0.42510726858910775, 0.42235271456743706, 0.41634671269524864, 0.41443672209102256, 0.41443672209102256] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 24]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 4), (3, 24)]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 3: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 32, 4]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6008000028136555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6008000028136555, 0.30680960487527414] ***
*** starting iteration: 2; err: [Inf, 0.6008000028136555, 0.30680960487527414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618] ***
*** starting iteration: 3; err: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594] ***
*** starting iteration: 4; err: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594, 0.22421792841487154] ***
*** starting iteration: 5; err: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594, 0.22421792841487154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594, 0.22421792841487154, 0.2231344761591631] ***
*** starting iteration: 6; err: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594, 0.22421792841487154, 0.2231344761591631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594, 0.22421792841487154, 0.2231344761591631, 0.2231344761591631] ***
*** finished computation of 7 references, err: [Inf, 0.6008000028136555, 0.30680960487527414, 0.2601791831668618, 0.238741521744594, 0.22421792841487154, 0.2231344761591631, 0.2231344761591631] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 10]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8111533158682418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457] ***
*** starting iteration: 2; err: [Inf, 0.8111533158682418, 0.3897836610281457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107] ***
*** starting iteration: 3; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002] ***
*** starting iteration: 4; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099] ***
*** starting iteration: 5; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005] ***
*** starting iteration: 6; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432] ***
*** starting iteration: 7; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432, 0.23235827180908128] ***
*** starting iteration: 8; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432, 0.23235827180908128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432, 0.23235827180908128, 0.22788382750943917] ***
*** starting iteration: 9; err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432, 0.23235827180908128, 0.22788382750943917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432, 0.23235827180908128, 0.22788382750943917, 0.22788382750943917] ***
*** finished computation of 7 references, err: [Inf, 0.8111533158682418, 0.3897836610281457, 0.33076937744146107, 0.2772361305472002, 0.2603384456926099, 0.25055577096318005, 0.2445416108115432, 0.23235827180908128, 0.22788382750943917, 0.22788382750943917] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 12]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 18), (3, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36887464572901124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36887464572901124, 0.22976083240751494] ***
*** starting iteration: 2; err: [Inf, 0.36887464572901124, 0.22976083240751494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033] ***
*** starting iteration: 3; err: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033, 0.19991385011329554] ***
*** starting iteration: 4; err: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033, 0.19991385011329554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033, 0.19991385011329554, 0.19692421769785798] ***
*** starting iteration: 5; err: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033, 0.19991385011329554, 0.19692421769785798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033, 0.19991385011329554, 0.19692421769785798, 0.19623037725802514] ***
*** finished computation of 7 references, err: [Inf, 0.36887464572901124, 0.22976083240751494, 0.2078725773967033, 0.19991385011329554, 0.19692421769785798, 0.19623037725802514] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3586103581118718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433] ***
*** starting iteration: 2; err: [Inf, 0.3586103581118718, 0.22309643411964433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211] ***
*** starting iteration: 3; err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232] ***
*** starting iteration: 4; err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982] ***
*** starting iteration: 5; err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534] ***
*** starting iteration: 6; err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534, 0.17933594428702737] ***
*** starting iteration: 7; err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534, 0.17933594428702737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534, 0.17933594428702737, 0.17780634933431638] ***
*** starting iteration: 8; err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534, 0.17933594428702737, 0.17780634933431638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534, 0.17933594428702737, 0.17780634933431638, 0.17757323185108828] ***
*** finished computation of 7 references, err: [Inf, 0.3586103581118718, 0.22309643411964433, 0.2072621344160211, 0.19614393285117232, 0.18940739176381982, 0.18710225271224534, 0.17933594428702737, 0.17780634933431638, 0.17757323185108828] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 24)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9133333333333332, 0.9066666666666667, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 24
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2), 0.9733333333333333)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.866666666666667, 3.1, 4.866666666666667, 1.5333333333333332], [6.468421052631579, 2.9842105263157888, 5.468421052631579, 2.0842105263157893], [4.814285714285715, 3.2095238095238097, 1.4380952380952379, 0.22380952380952382], [5.285714285714286, 2.3, 3.557142857142857, 1.0714285714285714], [5.40909090909091, 3.8, 1.4909090909090907, 0.3090909090909091], [7.800000000000001, 3.8, 6.550000000000001, 2.1], [6.052380952380951, 2.9095238095238094, 4.471428571428571, 1.4142857142857141], [5.7375, 2.675, 4.9125, 1.825], [7.371428571428572, 2.8857142857142857, 6.228571428571429, 1.957142857142857]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 1, 3, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.842307692307692, 3.2461538461538457, 1.4423076923076923, 0.2076923076923077], [7.5, 2.825, 6.475, 2.025], [5.675, 2.816666666666667, 4.2250000000000005, 1.325], [5.25, 2.65, 4.7, 1.85], [6.44, 2.873333333333334, 4.626666666666666, 1.4466666666666665], [6.14, 2.6399999999999997, 4.959999999999999, 1.7600000000000002], [6.521428571428571, 3.1071428571428568, 5.6000000000000005, 2.178571428571429], [5.340000000000001, 3.88, 1.54, 0.27999999999999997], [5.5, 2.4375, 3.625, 1.075]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.8919999999999995, 3.296, 1.472, 0.268], [7.7, 2.7999999999999994, 6.566666666666666, 2.1999999999999997], [6.0782608695652165, 2.860869565217391, 4.408695652173913, 1.3521739130434784], [6.011111111111109, 2.7777777777777777, 4.98888888888889, 1.8222222222222224], [6.6450000000000005, 3.06, 5.499999999999998, 2.0999999999999996], [5.275, 2.425, 3.45, 1.0], [7.5, 3.5999999999999996, 6.3, 2.125], [5.485714285714286, 3.857142857142857, 1.4428571428571428, 0.19999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2))]
[85, 9, 20, 13, 18, 14, 26, 1, 1, 24, 1, 4, 19, 3, 44, 21, 20, 19, 34, 23, 21, 18, 34, 27, 30, 29, 47, 41, 2, 7, 29, 39, 24, 18, 29, 46, 43, 35, 1, 29, 19, 24, 8, 19, 29, 25, 13, 41, 33, 18, 27, 3, 36, 32, 22, 33, 36, 30, 10, 5, 25, 1, 33, 20, 9, 39, 39, 33, 34, 47, 37, 33, 34, 48, 37, 42, 28, 18, 55, 36, 33, 35, 39, 27, 32, 20, 1, 48, 55, 48, 27, 27, 19, 20, 47, 34, 28, 30, 31, 1, 22, 46, 3, 52, 45, 48, 16, 39, 7, 22, 21, 28, 36, 43, 44, 28, 64, 20, 44, 13, 28, 33, 29, 56, 37, 46, 23, 13, 43, 37, 41, 26, 30, 53, 28, 39, 46, 1, 42, 16, 50, 7, 53, 29, 31, 34, 21, 23, 31, 39, 32, 24, 35, 19, 58, 52, 22, 44, 21, 28, 26, 35, 41, 65, 16, 54, 50, 14, 31, 43, 3, 27, 35, 41, 41, 43, 48, 21, 41, 44, 35, 48, 95, 51, 32, 43, 47, 64, 50, 49, 38, 25, 35, 31, 27, 59, 82, 41, 34, 29, 41, 11, 44, 46, 36, 50, 40, 36, 37, 15, 35, 43, 31, 48, 46, 37, 51, 33, 23, 50, 66, 45, 44, 45, 28, 32, 49, 1, 29, 39, 29, 32, 37, 13, 38, 43, 29, 30, 4, 31, 66, 25, 39, 43, 29, 29, 30, 42, 34, 31, 44, 34, 60, 56, 65, 47, 49, 44, 47, 27, 34, 44, 44, 29, 47, 46, 49, 36, 16, 1, 41, 29, 1, 29, 24, 37, 41, 50, 34, 45, 37, 79, 35, 41, 42, 46, 44, 39, 29, 33, 61, 33, 44, 63, 26, 34, 30, 36, 29, 28]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5529999999999998, speedup = 0.3927701308173368, eval_ratio = 0.041882)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.391059027777778,"recall":0.3906250000000003,"f1":null,"seconds":7.583759725093842e-5,"exhaustive_search_seconds":0.00034813955426216125,"evaluations":339.5703125,"distances_sum":1747.4475902499564}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5442708333333331,"recall":0.5442708333333331,"f1":null,"seconds":9.829364717006683e-5,"exhaustive_search_seconds":0.00034813955426216125,"evaluations":378.375,"distances_sum":1639.7917544732425}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6562500000000001,"recall":0.6562500000000001,"f1":0.6562500000000001,"seconds":0.0001316796988248825,"exhaustive_search_seconds":0.00034813955426216125,"evaluations":418.984375,"distances_sum":1592.4825441839305}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.737847222222222,"recall":0.737847222222222,"f1":0.737847222222222,"seconds":0.0001662168651819229,"exhaustive_search_seconds":0.00034813955426216125,"evaluations":457.9453125,"distances_sum":1568.2455887472934}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7977430555555548,"recall":0.7977430555555548,"f1":0.7977430555555548,"seconds":0.00020388327538967133,"exhaustive_search_seconds":0.00034813955426216125,"evaluations":498.7578125,"distances_sum":1551.599093323829}
KCenters.DeloneInvIndex> reached performance {"precision":0.8368055555555545,"recall":0.8368055555555545,"f1":0.8368055555555545,"seconds":0.00022996589541435242,"exhaustive_search_seconds":0.00034813955426216125,"evaluations":536.7578125,"distances_sum":1543.3208159152289}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7689999999999998, speedup = 2.141781256610958, eval_ratio = 0.053707000000000005)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
