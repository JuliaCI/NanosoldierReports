Julia Version 1.4.0-DEV.672
Commit 4c58369979 (2019-12-30 22:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed Parsers ───────────────────── v0.3.10
 Installed Tables ────────────────────── v0.2.11
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed CategoricalArrays ─────────── v0.7.5
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed Compat ────────────────────── v3.2.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_SOv6Pg/Project.toml`
 [no changes]
  Updating `/tmp/jl_SOv6Pg/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_SOv6Pg/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 178.29
[ Info: 78.83000000000007
[ Info: 41.290000000000006
[ Info: 24.869999999999997
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 76.8800011934147
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.15151736644164
inertia(cdnet.distances) = 26.752148989451268
inertia(crand.distances) = 22.000819972666488
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6958485958485966,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.484375,"distances_sum":1448.6158240147913}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.6978727869352873,"seconds":7.467344403266907e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.3515625,"distances_sum":1528.0055418766362}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.6978727869352873,"seconds":7.467344403266907e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.3515625,"distances_sum":1528.0055418766362}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9399152930402936,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2679.840061710837}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8506668678543684,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.40625,"distances_sum":2132.647817856227}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8623485889110899,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.4453125,"distances_sum":2165.951984004773}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9054492382617387,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.5625,"distances_sum":2402.822136156963}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8578352203352212,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3984375,"distances_sum":2132.5890754010607}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7120353604728612,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.5078125,"distances_sum":1530.830909581345}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9399152930402936,"seconds":6.6533684730529785e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2679.840061710837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9514625999001006,"seconds":7.892027497291565e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.84375,"distances_sum":2764.6280722043743}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406597,"seconds":7.135793566703796e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9375,"distances_sum":2893.8566853624334}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781250000000004,"seconds":7.459893822669983e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":2966.4258738127783}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9435928654678662,"seconds":6.85080885887146e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.78125,"distances_sum":2686.185117404234}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.964846611721612,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.921875,"distances_sum":2850.3069546093566}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781250000000004,"seconds":7.459893822669983e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":2966.4258738127783}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781250000000004,"seconds":7.459893822669983e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9453125,"distances_sum":2966.4258738127783}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8733006576756585,"seconds":1.222267746925354e-5,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.140625,"distances_sum":2024.1349671480712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":3.91155481338501e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":5.3515625,"distances_sum":512.189059265148}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8733006576756585,"seconds":1.222267746925354e-5,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.140625,"distances_sum":2024.1349671480712}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9282311438561445,"seconds":7.0463865995407104e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.65625,"distances_sum":2358.7637614001387}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9282311438561445,"seconds":7.0463865995407104e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.65625,"distances_sum":2358.7637614001387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.9140625,"distances_sum":2547.076192801425}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9443884240759246,"seconds":7.038936018943787e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.765625,"distances_sum":2499.065703480898}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.9140625,"distances_sum":2547.076192801425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9591918498168504,"seconds":6.593763828277588e-6,"exhaustive_search_seconds":3.21120023727417e-6,"evaluations":8.9140625,"distances_sum":2547.076192801425}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8710346944721952,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.6953125,"distances_sum":1954.0624186032182}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7791498432123439,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":7.828125,"distances_sum":1656.5887092320309}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6944756632256637,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":6.984375,"distances_sum":1363.8857578284003}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8710346944721952,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.6953125,"distances_sum":1954.0624186032182}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9216059981684989,"seconds":7.124617695808411e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.921875,"distances_sum":2240.028852357475}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9400412087912093,"seconds":7.178634405136108e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.8828125,"distances_sum":2376.2938845949607}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9551797161172165,"seconds":7.230788469314575e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.9296875,"distances_sum":2489.767041081156}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9551797161172165,"seconds":7.230788469314575e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.9296875,"distances_sum":2489.767041081156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9580070970695974,"seconds":7.90134072303772e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.9609375,"distances_sum":2480.2940844722953}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.959959311521812,"seconds":6.640329957008362e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.8984375,"distances_sum":2520.8460990859585}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641769688644691,"seconds":7.573515176773071e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":9.0,"distances_sum":2530.185589936414}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694597069597073,"seconds":7.51204788684845e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.984375,"distances_sum":2570.930491431935}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9694597069597073,"seconds":7.51204788684845e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.984375,"distances_sum":2570.930491431935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9694597069597073,"seconds":7.51204788684845e-6,"exhaustive_search_seconds":2.734363079071045e-6,"evaluations":8.984375,"distances_sum":2570.930491431935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5517578125,"f1":null,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":6.875,"distances_sum":1228.0143344553248}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8164273226773233,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.03125,"distances_sum":1723.6804124468647}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8164273226773233,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.03125,"distances_sum":1723.6804124468647}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8164273226773233,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.03125,"distances_sum":1723.6804124468647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8164273226773233,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.03125,"distances_sum":1723.6804124468647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.53125,"f1":0.6800206737706742,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":6.4765625,"distances_sum":1238.7665318825275}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7808477980352988,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.140625,"distances_sum":1552.4291577994566}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7697627025752033,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.21875,"distances_sum":1496.0291903779544}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7808477980352988,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":7.140625,"distances_sum":1552.4291577994566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9434065934065939,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.671875,"distances_sum":2281.889176787917}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9187442765567772,"seconds":7.206574082374573e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.5546875,"distances_sum":2118.019483659926}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8721252705627712,"seconds":1.004151999950409e-5,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.1171875,"distances_sum":1886.1622722650422}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9434815184815187,"seconds":7.269904017448425e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.671875,"distances_sum":2273.6959375994984}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9024990634365639,"seconds":9.210780262947083e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.4375,"distances_sum":2032.651071203715}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8732923326673333,"seconds":9.331852197647095e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.1953125,"distances_sum":1883.6744498926741}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9434815184815187,"seconds":7.269904017448425e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.671875,"distances_sum":2273.6959375994984}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9486893315018321,"seconds":7.597729563713074e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.765625,"distances_sum":2314.678571039454}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781822344322347,"seconds":7.186084985733032e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.90625,"distances_sum":2500.7753683248484}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9589342948717954,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.8671875,"distances_sum":2360.785881937441}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721726190476195,"seconds":6.925314664840698e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.9140625,"distances_sum":2467.3675190949207}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633702,"seconds":7.165595889091492e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.875,"distances_sum":2411.867355662268}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781822344322347,"seconds":7.186084985733032e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.90625,"distances_sum":2500.7753683248484}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781822344322347,"seconds":7.186084985733032e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.90625,"distances_sum":2500.7753683248484}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4326171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4326171875,"f1":null,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":7.0859375,"distances_sum":1030.369252605868}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8729338369963378,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.6015625,"distances_sum":2003.4598130548059}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8729338369963378,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.6015625,"distances_sum":2003.4598130548059}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9055262445887453,"seconds":6.8265944719314575e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.8984375,"distances_sum":2239.031759956614}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545444139194142,"seconds":7.953494787216187e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.90625,"distances_sum":2567.1559063289433}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9545444139194142,"seconds":7.953494787216187e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.90625,"distances_sum":2567.1559063289433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9840258699633699,"seconds":8.748844265937805e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":9.0,"distances_sum":2800.3114444104654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9649610805860809,"seconds":7.450580596923828e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.96875,"distances_sum":2630.5318844105564}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689217032967035,"seconds":8.957460522651672e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":8.9921875,"distances_sum":2661.6006051780632}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9840258699633699,"seconds":8.748844265937805e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":9.0,"distances_sum":2800.3114444104654}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9840258699633699,"seconds":8.748844265937805e-6,"exhaustive_search_seconds":1.8049031496047974e-6,"evaluations":9.0,"distances_sum":2800.3114444104654}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":6.734375,"distances_sum":941.734688556492}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":6.1640625,"distances_sum":495.1082436812112}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.421875,"f1":null,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":6.734375,"distances_sum":941.734688556492}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8601226898101907,"seconds":6.485730409622192e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.703125,"distances_sum":1914.6859475249955}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8603339368964379,"seconds":6.75395131111145e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.7109375,"distances_sum":1896.3926199755285}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.868968011155512,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.7578125,"distances_sum":1927.8227678696564}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.868968011155512,"seconds":6.595626473426819e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.7578125,"distances_sum":1927.8227678696564}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9138507326007334,"seconds":6.984919309616089e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.890625,"distances_sum":2205.2381966081653}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9112585331335338,"seconds":6.901100277900696e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.875,"distances_sum":2186.3401024727723}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9517373251748258,"seconds":7.621943950653076e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.9296875,"distances_sum":2481.3203116144373}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9062713328338334,"seconds":7.005408406257629e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.75,"distances_sum":2185.44666331591}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9503605769230774,"seconds":7.469207048416138e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.96875,"distances_sum":2423.8579017385227}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9045194388944398,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.859375,"distances_sum":2160.996532091938}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9517373251748258,"seconds":7.621943950653076e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.9296875,"distances_sum":2481.3203116144373}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9517373251748258,"seconds":7.621943950653076e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.9296875,"distances_sum":2481.3203116144373}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.5234375,"distances_sum":484.1607917791943}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.4142285585403442e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.5234375,"distances_sum":484.1607917791943}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7891591047841054,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0234375,"distances_sum":1689.244696290382}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7891591047841054,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0234375,"distances_sum":1689.244696290382}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8646804584304594,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2734375,"distances_sum":2059.0647651854047}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8024694055944064,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0234375,"distances_sum":1748.6419774071198}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8646804584304594,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2734375,"distances_sum":2059.0647651854047}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.779296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8646804584304594,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.2734375,"distances_sum":2059.0647651854047}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.58203125,"f1":null,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.3125,"distances_sum":1384.3097038107303}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.58203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.58203125,"f1":null,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.3125,"distances_sum":1384.3097038107303}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9228282134532143,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2257.5652484990806}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9228282134532143,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6640625,"distances_sum":2257.5652484990806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9453125,"distances_sum":2585.5851979787512}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9381040834165844,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7578125,"distances_sum":2398.616606585028}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972269917582418,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.984375,"distances_sum":2627.557340928199}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972269917582418,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.984375,"distances_sum":2627.557340928199}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972269917582418,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.984375,"distances_sum":2627.557340928199}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":4.019588232040405e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.75,"distances_sum":858.0342088005549}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.65625,"distances_sum":790.689914274627}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7922847985347995,"seconds":8.068978786468506e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.390625,"distances_sum":1569.3127536262216}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7922847985347995,"seconds":8.068978786468506e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.390625,"distances_sum":1569.3127536262216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510645604395609,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.703125,"distances_sum":2464.3765117528715}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9036088911088921,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.2421875,"distances_sum":2087.446413445303}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.903050595238096,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3046875,"distances_sum":2104.7372360167365}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9510645604395609,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.703125,"distances_sum":2464.3765117528715}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9668383699633705,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8203125,"distances_sum":2555.8623345942424}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9668383699633705,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8203125,"distances_sum":2555.8623345942424}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9668383699633705,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8203125,"distances_sum":2555.8623345942424}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8538154553779563,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.953125,"distances_sum":1702.8468406007848}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8538154553779563,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.953125,"distances_sum":1702.8468406007848}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9432177197802206,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2250.798017720745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9155828546453553,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.390625,"distances_sum":2063.6895269191746}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8619510697635706,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0,"distances_sum":1712.743816073566}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9432177197802206,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2250.798017720745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9629464285714292,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2365.3242519046444}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630608974358977,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":2379.0568157061884}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9787946428571432,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2463.320683272189}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9581673534798539,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.84375,"distances_sum":2324.2343610765524}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787946428571432,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2463.320683272189}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787946428571432,"seconds":6.629154086112976e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":2463.320683272189}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8545766733266741,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8828125,"distances_sum":1715.024296382375}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8545766733266741,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.8828125,"distances_sum":1715.024296382375}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8984234515484523,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3046875,"distances_sum":1969.0703563866575}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8984234515484523,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3046875,"distances_sum":1969.0703563866575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9425881410256415,"seconds":6.8731606006622314e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6953125,"distances_sum":2256.1992024802644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9023580586080593,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2890625,"distances_sum":1949.3393553457925}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697916666666673,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2409.115237776845}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9207193847818855,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5078125,"distances_sum":2131.1099719135327}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9697916666666673,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2409.115237776845}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9697916666666673,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.859375,"distances_sum":2409.115237776845}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7920444139194147,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.1015625,"distances_sum":1496.2720936920998}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.071501851081848e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.34375,"distances_sum":482.91846417690715}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6005859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.6005859375,"f1":0.7349164724164732,"seconds":4.716217517852783e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.7265625,"distances_sum":1295.6103424521002}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7920444139194147,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.1015625,"distances_sum":1496.2720936920998}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8090586496836504,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.28125,"distances_sum":1495.6165991682135}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9459935897435902,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7890625,"distances_sum":2219.7043528034733}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.906095467032968,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7421875,"distances_sum":1956.0140984718844}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8557289932289941,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3984375,"distances_sum":1702.446653526187}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9302884615384622,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8125,"distances_sum":2108.3586070163856}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8279231185481193,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.3359375,"distances_sum":1582.4699496556107}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8533613955488961,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.328125,"distances_sum":1733.4714952765712}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9459935897435902,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7890625,"distances_sum":2219.7043528034733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9729567307692311,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9453125,"distances_sum":2372.7461888334506}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739929,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.890625,"distances_sum":2353.1090815773923}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2404.4122867887077}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737923534798538,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2363.700017687802}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9466606310356315,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.828125,"distances_sum":2245.0246363919073}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482772435897442,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8515625,"distances_sum":2230.438835114619}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2404.4122867887077}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9780505952380956,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.9375,"distances_sum":2404.4122867887077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.856529408091909,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7109375,"distances_sum":1671.5247718810972}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.3583492040634155e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":5.703125,"distances_sum":457.3142619466084}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7012194402819408,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":6.8359375,"distances_sum":1160.6685026033551}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.856529408091909,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":7.7109375,"distances_sum":1671.5247718810972}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9402415293040299,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8203125,"distances_sum":2112.449228314171}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9398752289377295,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.671875,"distances_sum":2174.3861945418193}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8812130577755585,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.0078125,"distances_sum":1832.4166233037172}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9398752289377295,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.671875,"distances_sum":2174.3861945418193}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.954075091575092,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.78125,"distances_sum":2247.7888143420305}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652358058608065,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8828125,"distances_sum":2307.823323883912}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634157509157516,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8671875,"distances_sum":2304.1020308297707}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9428456959706966,"seconds":7.778406143188477e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.7265625,"distances_sum":2183.9187295767842}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9467777014652021,"seconds":7.623806595802307e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.6875,"distances_sum":2210.921517032463}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652358058608065,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8828125,"distances_sum":2307.823323883912}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652358058608065,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4156103134155273e-6,"evaluations":8.8828125,"distances_sum":2307.823323883912}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8565023518148527,"seconds":3.7239864468574524e-5,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.3359375,"distances_sum":1713.4113171095973}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2470703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2470703125,"f1":null,"seconds":3.3210963010787964e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.78125,"distances_sum":531.6724507804661}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.7214466089466095,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4609375,"distances_sum":1207.594804351629}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8565023518148527,"seconds":3.7239864468574524e-5,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.3359375,"distances_sum":1713.4113171095973}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.959472298534799,"seconds":8.763745427131653e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2310.238613300559}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9451350732600738,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.71875,"distances_sum":2228.0790636397783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467719780219785,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2243.117786210127}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9316537629037634,"seconds":6.766989827156067e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7421875,"distances_sum":2124.2197279998345}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.856669372294373,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.203125,"distances_sum":1729.6260479298826}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.959472298534799,"seconds":8.763745427131653e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2310.238613300559}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969104853479854,"seconds":7.0445239543914795e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2374.4817640490496}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686412545787553,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":2316.972178165894}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644574175824181,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8828125,"distances_sum":2322.0523163391385}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.96875,"distances_sum":2405.0310939779506}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.96875,"distances_sum":2405.0310939779506}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.96875,"distances_sum":2405.0310939779506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7083775599400605,"seconds":4.598870873451233e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.015625,"distances_sum":1175.0098102700674}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5673828125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5673828125,"f1":0.7083775599400605,"seconds":4.598870873451233e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.015625,"distances_sum":1175.0098102700674}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9337282509157515,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6328125,"distances_sum":2180.805993467291}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9337282509157515,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6328125,"distances_sum":2180.805993467291}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9602564102564108,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2317.3942313853527}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602564102564108,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2317.3942313853527}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":9,"bsize":10},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602564102564108,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8203125,"distances_sum":2317.3942313853527}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7042578948828956,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.421875,"distances_sum":1219.417103554482}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8735566516816524,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.53125,"distances_sum":1799.5822343221466}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.3285468816757202e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.609375,"distances_sum":523.8285961689403}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8735566516816524,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.53125,"distances_sum":1799.5822343221466}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9322859432234438,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.796875,"distances_sum":2121.7597378078694}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.931894147519148,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.734375,"distances_sum":2137.288288635592}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9390026640026644,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2185.9233938181073}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9167384698634705,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.765625,"distances_sum":2013.5595884090258}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9390026640026644,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7734375,"distances_sum":2185.9233938181073}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9444081959706965,"seconds":6.0070306062698364e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":2167.42732163872}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333335,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2413.6674070016998}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9736435439560442,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9296875,"distances_sum":2372.847148477205}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9578754578754585,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2268.8694477577997}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679544413919418,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2338.1056621778594}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667983058608064,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2360.455626447607}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962093635531136,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2321.8506786008934}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333335,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2413.6674070016998}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333335,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.921875,"distances_sum":2413.6674070016998}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.2109375,"distances_sum":457.74139192998166}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2138671875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.2109375,"distances_sum":457.74139192998166}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.432855010032654e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.2421875,"distances_sum":467.2583086214309}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":8,"bsize":4}, perf: {"precision":null,"recall":0.6669921875,"f1":null,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.6328125,"distances_sum":1456.101113531688}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":8,"bsize":4},"perf":{"precision":null,"recall":0.6669921875,"f1":null,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.6328125,"distances_sum":1456.101113531688}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9278018856143861,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2150.894306038524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9303685897435904,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6171875,"distances_sum":2166.4379143610327}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.849669601232102,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.78125,"distances_sum":1713.026273879387}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9303685897435904,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6171875,"distances_sum":2166.4379143610327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8779296875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9303685897435904,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6171875,"distances_sum":2166.4379143610327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5869140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5869140625,"f1":0.7246336996337003,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8828125,"distances_sum":1228.2683305365074}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5869140625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5869140625,"f1":0.7246336996337003,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8828125,"distances_sum":1228.2683305365074}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.896431693306694,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.2890625,"distances_sum":1918.2698030264664}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9141374250749257,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6171875,"distances_sum":2067.989577182651}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9141374250749257,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6171875,"distances_sum":2067.989577182651}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9424367299367304,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7109375,"distances_sum":2239.305918150029}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604052197802202,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2334.903103714735}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9310611263736271,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.71875,"distances_sum":2125.601638115943}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9479109432234437,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6875,"distances_sum":2274.949936812462}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581902472527477,"seconds":6.446614861488342e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.875,"distances_sum":2296.2449038259624}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429658882783887,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6796875,"distances_sum":2231.801850269821}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9604052197802202,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2334.903103714735}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9604052197802202,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2334.903103714735}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7927544677544685,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7734375,"distances_sum":1386.8135143565391}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6748046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6748046875,"f1":0.7927544677544685,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7734375,"distances_sum":1386.8135143565391}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8681100149850158,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.1875,"distances_sum":1711.3393835312415}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.935542582417583,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2068.1801668448793}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9498740842490845,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8984375,"distances_sum":2173.7050878973478}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8752237345987356,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.203125,"distances_sum":1741.1902107698845}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9498740842490845,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8984375,"distances_sum":2173.7050878973478}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689217032967035,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9765625,"distances_sum":2269.1325789654215}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693452380952385,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2297.5595626873965}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622767857142861,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2237.3376503324757}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689217032967035,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9765625,"distances_sum":2269.1325789654215}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9689217032967035,"seconds":5.129724740982056e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9765625,"distances_sum":2269.1325789654215}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7067002442002448,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9296875,"distances_sum":1146.179914950741}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.7067002442002448,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9296875,"distances_sum":1146.179914950741}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8583598692973703,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.7578125,"distances_sum":1658.026709187689}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7958957708957717,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3984375,"distances_sum":1391.0824695428078}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8583598692973703,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.7578125,"distances_sum":1658.026709187689}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9458218864468867,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":2190.171612794565}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9217235889110896,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5703125,"distances_sum":2008.557798314992}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9010676823176827,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.15625,"distances_sum":1860.9695516733711}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.926127518315019,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6328125,"distances_sum":2040.5198472726015}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9050766941391948,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.28125,"distances_sum":1887.1982530962493}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9458218864468867,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":2190.171612794565}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9458218864468867,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":2190.171612794565}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8070011585636594,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.4140625,"distances_sum":1462.6154987913294}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8171878468753477,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.375,"distances_sum":1507.3260723948424}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7041015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7041015625,"f1":0.8171878468753477,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.375,"distances_sum":1507.3260723948424}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.935336538461539,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6796875,"distances_sum":2133.927799149425}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9027534965034972,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.328125,"distances_sum":1881.937236417748}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9464056776556781,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.703125,"distances_sum":2218.5203165618104}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9301282051282057,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7734375,"distances_sum":2069.761421133722}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8599988553113559,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.734375,"distances_sum":1691.750130012679}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8617309773559781,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.796875,"distances_sum":1672.2205178239637}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9464056776556781,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.703125,"distances_sum":2218.5203165618104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705757783882788,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2358.0126930989722}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9550652472527478,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8359375,"distances_sum":2262.882741085402}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9794642857142861,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9453125,"distances_sum":2375.493148051656}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9749255952380955,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.96875,"distances_sum":2334.2845716874967}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726934523809527,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2351.8301165105227}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564961080586085,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7890625,"distances_sum":2268.6867871531194}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558321886446889,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8125,"distances_sum":2256.8488013618658}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9486123251748257,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.75,"distances_sum":2227.652181509611}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9794642857142861,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9453125,"distances_sum":2375.493148051656}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9794642857142861,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9453125,"distances_sum":2375.493148051656}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7981891372516381,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1328125,"distances_sum":1542.3971539084084}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.8479844331741333e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.4453125,"distances_sum":444.8721312115354}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.3857421875,"f1":0.5374451936951936,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.3828125,"distances_sum":819.4165747169955}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.7981891372516381,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.1328125,"distances_sum":1542.3971539084084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8548654470529481,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.515625,"distances_sum":1670.1963020131043}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.932060127372628,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7265625,"distances_sum":2076.8306257312033}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9159944222444231,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.703125,"distances_sum":1997.1695536085479}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8454127469752478,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4609375,"distances_sum":1696.8331429806017}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8076520701520709,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.046875,"distances_sum":1550.5402371450966}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.932060127372628,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7265625,"distances_sum":2076.8306257312033}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9705013736263739,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2358.38837750787}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9439591658341666,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":2166.1279283813124}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656650641025645,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8984375,"distances_sum":2338.633920056395}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.957257326007326,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.828125,"distances_sum":2263.741282412786}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9358402014652022,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6640625,"distances_sum":2157.4431836110193}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462511446886455,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7265625,"distances_sum":2223.5680252957195}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9410459332334337,"seconds":1.0857358574867249e-5,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6796875,"distances_sum":2198.6577039395206}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9705013736263739,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2358.38837750787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9705013736263739,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2358.38837750787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7789786602286609,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.8046875,"distances_sum":1353.2807767381028}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.4453125,"distances_sum":832.2322008705559}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":8.825212717056274e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":6.125,"distances_sum":419.8487711195284}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6103515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6103515625,"f1":0.7445138195138202,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.453125,"distances_sum":1308.9732818725895}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7789786602286609,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.8046875,"distances_sum":1353.2807767381028}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8936787171162179,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.625,"distances_sum":1828.99617531025}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948649267399268,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8046875,"distances_sum":2115.3225037476573}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9182494588744593,"seconds":1.1280179023742676e-5,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7265625,"distances_sum":1909.4882370626196}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7865793928293937,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":7.828125,"distances_sum":1430.838576367713}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.905560585248086,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7265625,"distances_sum":1878.5941862381894}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8469098609723616,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.390625,"distances_sum":1650.7389622336293}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.948649267399268,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8046875,"distances_sum":2115.3225037476573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2318.8610991545693}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630608974358981,"seconds":6.20819628238678e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9375,"distances_sum":2191.740602554621}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9697916666666672,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9375,"distances_sum":2251.1540967511914}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600675366300371,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.90625,"distances_sum":2197.7412063628717}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9629120879120884,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.9140625,"distances_sum":2205.7557920619456}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2318.8610991545693}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":6.511807441711426e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2318.8610991545693}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8546656468531476,"seconds":7.927417755126953e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.265625,"distances_sum":1718.4099563182542}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.813311167998669,"seconds":8.81589949131012e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":7.546875,"distances_sum":1489.4111771268772}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":7.655471563339233e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":6.1875,"distances_sum":825.9965908165238}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.537109375,"f1":0.681456564269065,"seconds":8.929520845413208e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":7.1953125,"distances_sum":1039.8113374746874}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8546656468531476,"seconds":7.927417755126953e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.265625,"distances_sum":1718.4099563182542}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.891211913086914,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.40625,"distances_sum":1895.2499914778434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8973118894993903,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.40625,"distances_sum":1933.8652376176499}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.8973118894993903,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.40625,"distances_sum":1933.8652376176499}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.947928113553114,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.7578125,"distances_sum":2196.16965791551}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.8046875,"distances_sum":2273.702478589988}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9526499542124545,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.765625,"distances_sum":2256.077901117876}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.8046875,"distances_sum":2273.702478589988}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":2.780929207801819e-6,"evaluations":8.8046875,"distances_sum":2273.702478589988}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.853977793040294,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.2421875,"distances_sum":1770.6676887455228}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":5.9921875,"distances_sum":741.7985146355763}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.853977793040294,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.2421875,"distances_sum":1770.6676887455228}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620535714285717,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.828125,"distances_sum":2295.6315253869247}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9390510531135536,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.625,"distances_sum":2193.508216480076}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9007591366966373,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.3125,"distances_sum":1964.70285095225}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9620535714285717,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.828125,"distances_sum":2295.6315253869247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661687271062271,"seconds":7.761642336845398e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.84375,"distances_sum":2345.3766876893233}, best_list's length: 6, n: 9
inertia(cfft.distances) = 18.151517282554043
inertia(cdnet.distances) = 21.252034271284284
inertia(crand.distances) = 23.527956732978613
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661687271062271,"seconds":7.761642336845398e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.84375,"distances_sum":2345.3766876893233}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661687271062271,"seconds":7.761642336845398e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.84375,"distances_sum":2345.3766876893233}}, n: 9
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> k=7
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9199999999999999
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8644444444444445
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.88
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 1, 3, 2, 2, 3, 3, 1, 3, 3, 2, 3, 1, 3, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 5, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 1, 2]
acc = 0.96
*** starting iteration: 1; err: [Inf, 0.4542666737450462] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4542666737450462, 0.18092727968810743] ***
*** starting iteration: 2; err: [Inf, 0.4542666737450462, 0.18092727968810743] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876] ***
*** starting iteration: 3; err: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876, 0.16421233725015347] ***
*** starting iteration: 4; err: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876, 0.16421233725015347] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876, 0.16421233725015347, 0.16312464196581325] ***
*** starting iteration: 5; err: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876, 0.16421233725015347, 0.16312464196581325] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876, 0.16421233725015347, 0.16312464196581325, 0.16312464196581325] ***
*** finished computation of 12 references, err: [Inf, 0.4542666737450462, 0.18092727968810743, 0.16854052451312876, 0.16421233725015347, 0.16312464196581325, 0.16312464196581325] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 9, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 11, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.6585999957210292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6585999957210292, 0.422080954768565] ***
*** finished computation of 7 references, err: [Inf, 0.6585999957210292, 0.422080954768565] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 14]]
** centroid: 6, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 27, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.727000002945728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.727000002945728, 0.3833461065533954] ***
*** finished computation of 7 references, err: [Inf, 0.727000002945728, 0.3833461065533954] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 7]]
** centroid: 4, normalized-entropy: 0.9774178175281716, [(2, 10), (3, 7)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 5, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 4]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.335599992684963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.335599992684963, 0.9415087095054945] ***
*** finished computation of 7 references, err: [Inf, 1.335599992684963, 0.9415087095054945] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 36]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 36)]
*** center 4: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4829999984300427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4829999984300427, 0.3371857889788352] ***
*** finished computation of 7 references, err: [Inf, 0.4829999984300427, 0.3371857889788352] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 5, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3652999983074811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3652999983074811, 0.2874500391691276] ***
*** finished computation of 7 references, err: [Inf, 0.3652999983074811, 0.2874500391691276] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 4]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 2: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 5]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49519999843896245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49519999843896245, 0.3142230749524521] ***
*** finished computation of 7 references, err: [Inf, 0.49519999843896245, 0.3142230749524521] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 5, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6233000044837508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6233000044837508, 0.3341373535555958] ***
*** starting iteration: 2; err: [Inf, 0.6233000044837508, 0.3341373535555958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6233000044837508, 0.3341373535555958, 0.32303689195289453] ***
*** starting iteration: 3; err: [Inf, 0.6233000044837508, 0.3341373535555958, 0.32303689195289453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6233000044837508, 0.3341373535555958, 0.32303689195289453, 0.3205720368940856] ***
*** finished computation of 7 references, err: [Inf, 0.6233000044837508, 0.3341373535555958, 0.32303689195289453, 0.3205720368940856] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 7, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8267000169667513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8267000169667513, 0.40503412805413447] ***
*** starting iteration: 2; err: [Inf, 0.8267000169667513, 0.40503412805413447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8267000169667513, 0.40503412805413447, 0.289695949501743] ***
*** starting iteration: 3; err: [Inf, 0.8267000169667513, 0.40503412805413447, 0.289695949501743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8267000169667513, 0.40503412805413447, 0.289695949501743, 0.25831364617791963] ***
*** finished computation of 7 references, err: [Inf, 0.8267000169667513, 0.40503412805413447, 0.289695949501743, 0.25831364617791963] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 4]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 12, 5]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 5]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 3), (3, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.062700006761098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.062700006761098, 0.5306566813173945] ***
*** starting iteration: 2; err: [Inf, 1.062700006761098, 0.5306566813173945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.062700006761098, 0.5306566813173945, 0.5038869642724643] ***
*** starting iteration: 3; err: [Inf, 1.062700006761098, 0.5306566813173945, 0.5038869642724643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.062700006761098, 0.5306566813173945, 0.5038869642724643, 0.481412783711598] ***
*** finished computation of 7 references, err: [Inf, 1.062700006761098, 0.5306566813173945, 0.5038869642724643, 0.481412783711598] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.772500028070846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216] ***
*** starting iteration: 2; err: [Inf, 1.772500028070846, 0.31929398653225216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312] ***
*** starting iteration: 3; err: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313] ***
*** starting iteration: 4; err: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723] ***
*** starting iteration: 5; err: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723, 0.27706119808336277] ***
*** starting iteration: 6; err: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723, 0.27706119808336277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723, 0.27706119808336277, 0.2754478032363152] ***
*** starting iteration: 7; err: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723, 0.27706119808336277, 0.2754478032363152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723, 0.27706119808336277, 0.2754478032363152, 0.2749111450698697] ***
*** finished computation of 7 references, err: [Inf, 1.772500028070846, 0.31929398653225216, 0.289925777239312, 0.2856126454032313, 0.28002783326724723, 0.27706119808336277, 0.2754478032363152, 0.2749111450698697] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 8]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(2, 7), (3, 8)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2613000152281406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365] ***
*** starting iteration: 2; err: [Inf, 1.2613000152281406, 0.45765772390089365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415] ***
*** starting iteration: 3; err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237] ***
*** starting iteration: 4; err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594] ***
*** starting iteration: 5; err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886] ***
*** starting iteration: 6; err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886, 0.28205895305908735] ***
*** starting iteration: 7; err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886, 0.28205895305908735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886, 0.28205895305908735, 0.2798921376839117] ***
*** starting iteration: 8; err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886, 0.28205895305908735, 0.2798921376839117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886, 0.28205895305908735, 0.2798921376839117, 0.27947901890737853] ***
*** finished computation of 7 references, err: [Inf, 1.2613000152281406, 0.45765772390089365, 0.4209374781813415, 0.37979280912581237, 0.3326155853691594, 0.29678462663592886, 0.28205895305908735, 0.2798921376839117, 0.27947901890737853] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 11]]
** centroid: 6, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5528000056914348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946] ***
*** starting iteration: 2; err: [Inf, 0.5528000056914348, 0.2666720918706946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493] ***
*** starting iteration: 3; err: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703] ***
*** starting iteration: 4; err: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676] ***
*** starting iteration: 5; err: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676, 0.22261546620919379] ***
*** starting iteration: 6; err: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676, 0.22261546620919379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676, 0.22261546620919379, 0.22094798972236657] ***
*** starting iteration: 7; err: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676, 0.22261546620919379, 0.22094798972236657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676, 0.22261546620919379, 0.22094798972236657, 0.22094798972236657] ***
*** finished computation of 7 references, err: [Inf, 0.5528000056914348, 0.2666720918706946, 0.23970879741026493, 0.228812338930703, 0.22510155666239676, 0.22261546620919379, 0.22094798972236657, 0.22094798972236657] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7704999921852829] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676] ***
*** starting iteration: 2; err: [Inf, 0.7704999921852829, 0.32215111169230676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375] ***
*** starting iteration: 3; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074] ***
*** starting iteration: 4; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775] ***
*** starting iteration: 5; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152] ***
*** starting iteration: 6; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137] ***
*** starting iteration: 7; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615] ***
*** starting iteration: 8; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615, 0.22974865200369923] ***
*** starting iteration: 9; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615, 0.22974865200369923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615, 0.22974865200369923, 0.22844077366225743] ***
*** starting iteration: 10; err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615, 0.22974865200369923, 0.22844077366225743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615, 0.22974865200369923, 0.22844077366225743, 0.22524561277997943] ***
*** finished computation of 7 references, err: [Inf, 0.7704999921852829, 0.32215111169230676, 0.28239714295679375, 0.26407178027533074, 0.25192424377795775, 0.23986254522706152, 0.23510305094211137, 0.23141618501737615, 0.22974865200369923, 0.22844077366225743, 0.22524561277997943] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6042000078354053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6042000078354053, 0.3286801782858136] ***
*** starting iteration: 2; err: [Inf, 0.6042000078354053, 0.3286801782858136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131] ***
*** starting iteration: 3; err: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131, 0.2491553749831391] ***
*** starting iteration: 4; err: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131, 0.2491553749831391] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131, 0.2491553749831391, 0.24726261012472445] ***
*** starting iteration: 5; err: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131, 0.2491553749831391, 0.24726261012472445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131, 0.2491553749831391, 0.24726261012472445, 0.24726261012472445] ***
*** finished computation of 7 references, err: [Inf, 0.6042000078354053, 0.3286801782858136, 0.260330756399131, 0.2491553749831391, 0.24726261012472445, 0.24726261012472445] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 3, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7516000077482039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7516000077482039, 0.36126615952858243] ***
*** starting iteration: 2; err: [Inf, 0.7516000077482039, 0.36126615952858243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903] ***
*** starting iteration: 3; err: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903, 0.31981536525542753] ***
*** starting iteration: 4; err: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903, 0.31981536525542753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903, 0.31981536525542753, 0.3164689043089344] ***
*** starting iteration: 5; err: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903, 0.31981536525542753, 0.3164689043089344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903, 0.31981536525542753, 0.3164689043089344, 0.3156761883910979] ***
*** finished computation of 7 references, err: [Inf, 0.7516000077482039, 0.36126615952858243, 0.3266384405570903, 0.31981536525542753, 0.3164689043089344, 0.3156761883910979] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 18]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(2, 16), (3, 18)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.043433032707779] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978] ***
*** starting iteration: 2; err: [Inf, 4.043433032707779, 0.9999807902424978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399] ***
*** starting iteration: 3; err: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557] ***
*** starting iteration: 4; err: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273] ***
*** starting iteration: 5; err: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273, 0.3607272553949747] ***
*** starting iteration: 6; err: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273, 0.3607272553949747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273, 0.3607272553949747, 0.3570628349287331] ***
*** starting iteration: 7; err: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273, 0.3607272553949747, 0.3570628349287331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273, 0.3607272553949747, 0.3570628349287331, 0.3570628349287331] ***
*** finished computation of 3 references, err: [Inf, 4.043433032707779, 0.9999807902424978, 0.4838427554508399, 0.40819265794426557, 0.37060155913260273, 0.3607272553949747, 0.3570628349287331, 0.3570628349287331] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6691503946178495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6691503946178495, 0.47085659720678885] ***
*** starting iteration: 2; err: [Inf, 0.6691503946178495, 0.47085659720678885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6691503946178495, 0.47085659720678885, 0.34632348957139586] ***
*** starting iteration: 3; err: [Inf, 0.6691503946178495, 0.47085659720678885, 0.34632348957139586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6691503946178495, 0.47085659720678885, 0.34632348957139586, 0.3424312933848781] ***
*** starting iteration: 4; err: [Inf, 0.6691503946178495, 0.47085659720678885, 0.34632348957139586, 0.3424312933848781] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6691503946178495, 0.47085659720678885, 0.34632348957139586, 0.3424312933848781, 0.34246514223109126] ***
*** finished computation of 3 references, err: [Inf, 0.6691503946178495, 0.47085659720678885, 0.34632348957139586, 0.3424312933848781, 0.34246514223109126] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 27]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 6), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 2]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 30), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9342448691046212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9342448691046212, 0.3957336727645725] ***
*** starting iteration: 2; err: [Inf, 0.9342448691046212, 0.3957336727645725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9342448691046212, 0.3957336727645725, 0.3887416832645681] ***
*** starting iteration: 3; err: [Inf, 0.9342448691046212, 0.3957336727645725, 0.3887416832645681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9342448691046212, 0.3957336727645725, 0.3887416832645681, 0.38530008817818184] ***
*** starting iteration: 4; err: [Inf, 0.9342448691046212, 0.3957336727645725, 0.3887416832645681, 0.38530008817818184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9342448691046212, 0.3957336727645725, 0.3887416832645681, 0.38530008817818184, 0.38530008817818184] ***
*** finished computation of 3 references, err: [Inf, 0.9342448691046212, 0.3957336727645725, 0.3887416832645681, 0.38530008817818184, 0.38530008817818184] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 2, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7652000036966348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7652000036966348, 0.35780789706979066] ***
*** finished computation of 7 references, err: [Inf, 0.7652000036966348, 0.35780789706979066] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 29, 6]]
** centroid: 6, normalized-entropy: 0.6609623351442084, [(2, 29), (3, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43189999603240636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43189999603240636, 0.26630425540549135] ***
*** finished computation of 7 references, err: [Inf, 0.43189999603240636, 0.26630425540549135] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4697000147952664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4697000147952664, 0.5095270876251368] ***
*** finished computation of 7 references, err: [Inf, 1.4697000147952664, 0.5095270876251368] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 34]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 2), (3, 34)]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.540299989145994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.540299989145994, 0.7617518155932385] ***
*** finished computation of 3 references, err: [Inf, 3.540299989145994, 0.7617518155932385] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [35, 2, 0]]
** centroid: 1, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 8]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 28), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.49109984832131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.49109984832131, 2.231175142522791] ***
*** finished computation of 3 references, err: [Inf, 10.49109984832131, 2.231175142522791] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 2]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 4, 0]]
** centroid: 2, normalized-entropy: 0.4770713062193298, [(1, 35), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 27]]
** centroid: 3, normalized-entropy: 0.9624127354629922, [(2, 17), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1457999957297402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1457999957297402, 0.5783956097811908] ***
*** finished computation of 3 references, err: [Inf, 1.1457999957297402, 0.5783956097811908] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 17]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 34), (3, 17)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3064000021410422] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3064000021410422, 0.6097186580623446] ***
*** starting iteration: 2; err: [Inf, 1.3064000021410422, 0.6097186580623446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3064000021410422, 0.6097186580623446, 0.5630942980381911] ***
*** starting iteration: 3; err: [Inf, 1.3064000021410422, 0.6097186580623446, 0.5630942980381911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3064000021410422, 0.6097186580623446, 0.5630942980381911, 0.5436041683099684] ***
*** finished computation of 3 references, err: [Inf, 1.3064000021410422, 0.6097186580623446, 0.5630942980381911, 0.5436041683099684] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 33]]
** centroid: 1, normalized-entropy: 0.3159971329784246, [(2, 2), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 2]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1251999936696155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1251999936696155, 0.5153735016380216] ***
*** starting iteration: 2; err: [Inf, 1.1251999936696155, 0.5153735016380216] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1251999936696155, 0.5153735016380216, 0.5028193861891204] ***
*** starting iteration: 3; err: [Inf, 1.1251999936696155, 0.5153735016380216, 0.5028193861891204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1251999936696155, 0.5153735016380216, 0.5028193861891204, 0.5004812267994652] ***
*** finished computation of 3 references, err: [Inf, 1.1251999936696155, 0.5153735016380216, 0.5028193861891204, 0.5004812267994652] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 28]]
** centroid: 1, normalized-entropy: 0.9330252953592912, [(2, 15), (3, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.56599998884587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.56599998884587, 0.5562291411072406] ***
*** starting iteration: 2; err: [Inf, 1.56599998884587, 0.5562291411072406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.56599998884587, 0.5562291411072406, 0.5503371260241007] ***
*** starting iteration: 3; err: [Inf, 1.56599998884587, 0.5562291411072406, 0.5503371260241007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.56599998884587, 0.5562291411072406, 0.5503371260241007, 0.5451807575226492] ***
*** finished computation of 3 references, err: [Inf, 1.56599998884587, 0.5562291411072406, 0.5503371260241007, 0.5451807575226492] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0980000135237917] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0980000135237917, 0.6574058148788592] ***
*** starting iteration: 2; err: [Inf, 1.0980000135237917, 0.6574058148788592] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971] ***
*** starting iteration: 3; err: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971, 0.5380918624443953] ***
*** starting iteration: 4; err: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971, 0.5380918624443953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971, 0.5380918624443953, 0.5138879731434456] ***
*** starting iteration: 5; err: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971, 0.5380918624443953, 0.5138879731434456] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971, 0.5380918624443953, 0.5138879731434456, 0.5132976864189372] ***
*** finished computation of 3 references, err: [Inf, 1.0980000135237917, 0.6574058148788592, 0.5908352396663971, 0.5380918624443953, 0.5138879731434456, 0.5132976864189372] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 8]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 27]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.6730999811266747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6730999811266747, 0.5035666624425522] ***
*** starting iteration: 2; err: [Inf, 2.6730999811266747, 0.5035666624425522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6730999811266747, 0.5035666624425522, 0.5025021740834279] ***
*** starting iteration: 3; err: [Inf, 2.6730999811266747, 0.5035666624425522, 0.5025021740834279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.6730999811266747, 0.5035666624425522, 0.5025021740834279, 0.502019653680551] ***
*** finished computation of 3 references, err: [Inf, 2.6730999811266747, 0.5035666624425522, 0.5025021740834279, 0.502019653680551] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 6]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 32), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 23]]
** centroid: 2, normalized-entropy: 0.6051865766334207, [(2, 4), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.7511999984780124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7511999984780124, 0.5503371260241007] ***
*** starting iteration: 2; err: [Inf, 1.7511999984780124, 0.5503371260241007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7511999984780124, 0.5503371260241007, 0.5451807575226492] ***
*** starting iteration: 3; err: [Inf, 1.7511999984780124, 0.5503371260241007, 0.5451807575226492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7511999984780124, 0.5503371260241007, 0.5451807575226492, 0.5451807575226492] ***
*** finished computation of 3 references, err: [Inf, 1.7511999984780124, 0.5503371260241007, 0.5451807575226492, 0.5451807575226492] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6628436391350884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6628436391350884, 0.4202547195191142] ***
*** starting iteration: 2; err: [Inf, 0.6628436391350884, 0.4202547195191142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6628436391350884, 0.4202547195191142, 0.38333205494053657] ***
*** starting iteration: 3; err: [Inf, 0.6628436391350884, 0.4202547195191142, 0.38333205494053657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6628436391350884, 0.4202547195191142, 0.38333205494053657, 0.3701855479605341] ***
*** finished computation of 3 references, err: [Inf, 0.6628436391350884, 0.4202547195191142, 0.38333205494053657, 0.3701855479605341] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 33]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 3), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 27), (3, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.387561848706415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.387561848706415, 0.34727266724840705] ***
*** starting iteration: 2; err: [Inf, 1.387561848706415, 0.34727266724840705] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.387561848706415, 0.34727266724840705, 0.345153699307795] ***
*** starting iteration: 3; err: [Inf, 1.387561848706415, 0.34727266724840705, 0.345153699307795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.387561848706415, 0.34727266724840705, 0.345153699307795, 0.34386517247576665] ***
*** finished computation of 3 references, err: [Inf, 1.387561848706415, 0.34727266724840705, 0.345153699307795, 0.34386517247576665] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 6]]
** centroid: 1, normalized-entropy: 0.6394571324851642, [(2, 31), (3, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 23]]
** centroid: 2, normalized-entropy: 0.6769418697808861, [(2, 5), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3624405569708251] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3624405569708251, 0.3926472931893599] ***
*** starting iteration: 2; err: [Inf, 1.3624405569708251, 0.3926472931893599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3624405569708251, 0.3926472931893599, 0.3856039824942565] ***
*** starting iteration: 3; err: [Inf, 1.3624405569708251, 0.3926472931893599, 0.3856039824942565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3624405569708251, 0.3926472931893599, 0.3856039824942565, 0.3856039824942565] ***
*** finished computation of 3 references, err: [Inf, 1.3624405569708251, 0.3926472931893599, 0.3856039824942565, 0.3856039824942565] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5809000026634275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015] ***
*** starting iteration: 2; err: [Inf, 0.5809000026634275, 0.26222284229131015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562] ***
*** starting iteration: 3; err: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549] ***
*** starting iteration: 4; err: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863] ***
*** starting iteration: 5; err: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863, 0.23425341142246087] ***
*** starting iteration: 6; err: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863, 0.23425341142246087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863, 0.23425341142246087, 0.23203624635557268] ***
*** starting iteration: 7; err: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863, 0.23425341142246087, 0.23203624635557268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863, 0.23425341142246087, 0.23203624635557268, 0.23203624635557268] ***
*** finished computation of 7 references, err: [Inf, 0.5809000026634275, 0.26222284229131015, 0.2532503160296562, 0.24780780145033549, 0.24497084492936863, 0.23425341142246087, 0.23203624635557268, 0.23203624635557268] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 6, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6093000112729257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6093000112729257, 0.24719873711375587] ***
*** starting iteration: 2; err: [Inf, 0.6093000112729257, 0.24719873711375587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6093000112729257, 0.24719873711375587, 0.22583498226244555] ***
*** starting iteration: 3; err: [Inf, 0.6093000112729257, 0.24719873711375587, 0.22583498226244555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6093000112729257, 0.24719873711375587, 0.22583498226244555, 0.22208171183598227] ***
*** starting iteration: 4; err: [Inf, 0.6093000112729257, 0.24719873711375587, 0.22583498226244555, 0.22208171183598227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6093000112729257, 0.24719873711375587, 0.22583498226244555, 0.22208171183598227, 0.22208171183598227] ***
*** finished computation of 7 references, err: [Inf, 0.6093000112729257, 0.24719873711375587, 0.22583498226244555, 0.22208171183598227, 0.22208171183598227] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5880000017221111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000017221111, 0.24933989750541183] ***
*** starting iteration: 2; err: [Inf, 0.5880000017221111, 0.24933989750541183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653] ***
*** starting iteration: 3; err: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992] ***
*** starting iteration: 4; err: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992, 0.22242988463658273] ***
*** starting iteration: 5; err: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992, 0.22242988463658273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992, 0.22242988463658273, 0.22079375102664642] ***
*** starting iteration: 6; err: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992, 0.22242988463658273, 0.22079375102664642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992, 0.22242988463658273, 0.22079375102664642, 0.219964373548542] ***
*** finished computation of 7 references, err: [Inf, 0.5880000017221111, 0.24933989750541183, 0.2349507067959653, 0.2277127203362992, 0.22242988463658273, 0.22079375102664642, 0.219964373548542] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3770553908253316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3770553908253316, 0.20137019053815922] ***
*** starting iteration: 2; err: [Inf, 0.3770553908253316, 0.20137019053815922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3770553908253316, 0.20137019053815922, 0.18038804577655398] ***
*** starting iteration: 3; err: [Inf, 0.3770553908253316, 0.20137019053815922, 0.18038804577655398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3770553908253316, 0.20137019053815922, 0.18038804577655398, 0.1675794860897942] ***
*** finished computation of 7 references, err: [Inf, 0.3770553908253316, 0.20137019053815922, 0.18038804577655398, 0.1675794860897942] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 6, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36291893808447495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36291893808447495, 0.17780238990587868] ***
*** starting iteration: 2; err: [Inf, 0.36291893808447495, 0.17780238990587868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36291893808447495, 0.17780238990587868, 0.1679130616879608] ***
*** starting iteration: 3; err: [Inf, 0.36291893808447495, 0.17780238990587868, 0.1679130616879608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36291893808447495, 0.17780238990587868, 0.1679130616879608, 0.16516177352717584] ***
*** finished computation of 7 references, err: [Inf, 0.36291893808447495, 0.17780238990587868, 0.1679130616879608, 0.16516177352717584] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 6]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4186674357948517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4186674357948517, 0.2006478857722853] ***
*** starting iteration: 2; err: [Inf, 0.4186674357948517, 0.2006478857722853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4186674357948517, 0.2006478857722853, 0.18241605724394638] ***
*** starting iteration: 3; err: [Inf, 0.4186674357948517, 0.2006478857722853, 0.18241605724394638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4186674357948517, 0.2006478857722853, 0.18241605724394638, 0.17567089427175328] ***
*** finished computation of 7 references, err: [Inf, 0.4186674357948517, 0.2006478857722853, 0.18241605724394638, 0.17567089427175328] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 17), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5470000056572216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5470000056572216, 0.23795286615088437] ***
*** finished computation of 7 references, err: [Inf, 0.5470000056572216, 0.23795286615088437] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 6, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5295000016045716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5295000016045716, 0.22931063748972774] ***
*** finished computation of 7 references, err: [Inf, 0.5295000016045716, 0.22931063748972774] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5782000033014718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5782000033014718, 0.2772772861980357] ***
*** finished computation of 7 references, err: [Inf, 0.5782000033014718, 0.2772772861980357] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 17]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 16), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4107477495436545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4107477495436545, 0.2013747954196494] ***
*** starting iteration: 2; err: [Inf, 0.4107477495436545, 0.2013747954196494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713] ***
*** starting iteration: 3; err: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317] ***
*** starting iteration: 4; err: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317, 0.16344460326419696] ***
*** starting iteration: 5; err: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317, 0.16344460326419696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317, 0.16344460326419696, 0.1613415066062733] ***
*** starting iteration: 6; err: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317, 0.16344460326419696, 0.1613415066062733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317, 0.16344460326419696, 0.1613415066062733, 0.16131673224589688] ***
*** finished computation of 7 references, err: [Inf, 0.4107477495436545, 0.2013747954196494, 0.18359092968183713, 0.17333805034603317, 0.16344460326419696, 0.1613415066062733, 0.16131673224589688] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 6, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4314179935122368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4314179935122368, 0.1658563622268182] ***
*** starting iteration: 2; err: [Inf, 0.4314179935122368, 0.1658563622268182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616] ***
*** starting iteration: 3; err: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636] ***
*** starting iteration: 4; err: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636, 0.1562906587535936] ***
*** starting iteration: 5; err: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636, 0.1562906587535936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636, 0.1562906587535936, 0.15295407037416708] ***
*** starting iteration: 6; err: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636, 0.1562906587535936, 0.15295407037416708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636, 0.1562906587535936, 0.15295407037416708, 0.15295407037416708] ***
*** finished computation of 7 references, err: [Inf, 0.4314179935122368, 0.1658563622268182, 0.15906468518261616, 0.15746590067960636, 0.1562906587535936, 0.15295407037416708, 0.15295407037416708] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4234349947640379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4234349947640379, 0.1796364853354278] ***
*** starting iteration: 2; err: [Inf, 0.4234349947640379, 0.1796364853354278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4234349947640379, 0.1796364853354278, 0.17491171785341555] ***
*** starting iteration: 3; err: [Inf, 0.4234349947640379, 0.1796364853354278, 0.17491171785341555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4234349947640379, 0.1796364853354278, 0.17491171785341555, 0.17249660030254385] ***
*** starting iteration: 4; err: [Inf, 0.4234349947640379, 0.1796364853354278, 0.17491171785341555, 0.17249660030254385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4234349947640379, 0.1796364853354278, 0.17491171785341555, 0.17249660030254385, 0.17159959278251624] ***
*** finished computation of 7 references, err: [Inf, 0.4234349947640379, 0.1796364853354278, 0.17491171785341555, 0.17249660030254385, 0.17159959278251624] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 11]]
** centroid: 6, normalized-entropy: 1.0, [(2, 11), (3, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4723000057349718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723000057349718, 0.3400126954967254] ***
*** finished computation of 7 references, err: [Inf, 0.4723000057349718, 0.3400126954967254] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 5]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 7), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6678000031526942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6678000031526942, 0.2737130634681698] ***
*** finished computation of 7 references, err: [Inf, 0.6678000031526942, 0.2737130634681698] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 6, 6]]
** centroid: 2, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 3]]
** centroid: 7, normalized-entropy: 1.0, [(2, 3), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7936000051516706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7936000051516706, 0.4837562052789835] ***
*** finished computation of 7 references, err: [Inf, 0.7936000051516706, 0.4837562052789835] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 2]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 6, 32]]
** centroid: 6, normalized-entropy: 0.6292492238560344, [(2, 6), (3, 32)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5759030339925364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5759030339925364, 0.2508114129367352] ***
*** starting iteration: 2; err: [Inf, 0.5759030339925364, 0.2508114129367352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5759030339925364, 0.2508114129367352, 0.20889494230125435] ***
*** starting iteration: 3; err: [Inf, 0.5759030339925364, 0.2508114129367352, 0.20889494230125435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5759030339925364, 0.2508114129367352, 0.20889494230125435, 0.2085769453802642] ***
*** finished computation of 7 references, err: [Inf, 0.5759030339925364, 0.2508114129367352, 0.20889494230125435, 0.2085769453802642] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2687097573205742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2687097573205742, 0.2019998196086518] ***
*** starting iteration: 2; err: [Inf, 0.2687097573205742, 0.2019998196086518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2687097573205742, 0.2019998196086518, 0.1960990954488309] ***
*** starting iteration: 3; err: [Inf, 0.2687097573205742, 0.2019998196086518, 0.1960990954488309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2687097573205742, 0.2019998196086518, 0.1960990954488309, 0.195397573493499] ***
*** finished computation of 7 references, err: [Inf, 0.2687097573205742, 0.2019998196086518, 0.1960990954488309, 0.195397573493499] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 4, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 11]]
** centroid: 7, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3199599284165603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199599284165603, 0.21479528812167942] ***
*** starting iteration: 2; err: [Inf, 0.3199599284165603, 0.21479528812167942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007] ***
*** starting iteration: 3; err: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007, 0.18275880715436124] ***
*** starting iteration: 4; err: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007, 0.18275880715436124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007, 0.18275880715436124, 0.18156301466228641] ***
*** starting iteration: 5; err: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007, 0.18275880715436124, 0.18156301466228641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007, 0.18275880715436124, 0.18156301466228641, 0.1813970828647135] ***
*** finished computation of 7 references, err: [Inf, 0.3199599284165603, 0.21479528812167942, 0.18753535148443007, 0.18275880715436124, 0.18156301466228641, 0.1813970828647135] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.5024000018770672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5024000018770672, 0.2696232052483325] ***
*** starting iteration: 2; err: [Inf, 0.5024000018770672, 0.2696232052483325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5024000018770672, 0.2696232052483325, 0.2529947227536727] ***
*** starting iteration: 3; err: [Inf, 0.5024000018770672, 0.2696232052483325, 0.2529947227536727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5024000018770672, 0.2696232052483325, 0.2529947227536727, 0.2436596351001818] ***
*** finished computation of 7 references, err: [Inf, 0.5024000018770672, 0.2696232052483325, 0.2529947227536727, 0.2436596351001818] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 3, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5679000061197098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5679000061197098, 0.2951393036542008] ***
*** starting iteration: 2; err: [Inf, 0.5679000061197098, 0.2951393036542008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5679000061197098, 0.2951393036542008, 0.2818481697506046] ***
*** starting iteration: 3; err: [Inf, 0.5679000061197098, 0.2951393036542008, 0.2818481697506046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5679000061197098, 0.2951393036542008, 0.2818481697506046, 0.2780865554967457] ***
*** finished computation of 7 references, err: [Inf, 0.5679000061197098, 0.2951393036542008, 0.2818481697506046, 0.2780865554967457] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 2]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 20), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 19]]
** centroid: 5, normalized-entropy: 0.6665783579949205, [(2, 4), (3, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 5, 3]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 5), (3, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42470000132876834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42470000132876834, 0.2618573542927008] ***
*** starting iteration: 2; err: [Inf, 0.42470000132876834, 0.2618573542927008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42470000132876834, 0.2618573542927008, 0.2414727486370645] ***
*** starting iteration: 3; err: [Inf, 0.42470000132876834, 0.2618573542927008, 0.2414727486370645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42470000132876834, 0.2618573542927008, 0.2414727486370645, 0.23140467086568126] ***
*** finished computation of 7 references, err: [Inf, 0.42470000132876834, 0.2618573542927008, 0.2414727486370645, 0.23140467086568126] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.5442000026314915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5442000026314915, 0.2886391624561037] ***
*** finished computation of 7 references, err: [Inf, 0.5442000026314915, 0.2886391624561037] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 7]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7116999992975362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7116999992975362, 0.3145413419144579] ***
*** finished computation of 7 references, err: [Inf, 0.7116999992975362, 0.3145413419144579] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 10, 7]]
** centroid: 2, normalized-entropy: 0.9774178175281716, [(2, 10), (3, 7)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0844000001389984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0844000001389984, 0.5250337150154399] ***
*** finished computation of 7 references, err: [Inf, 1.0844000001389984, 0.5250337150154399] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 35]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 10), (3, 35)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 5, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.8734900904294846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8734900904294846, 0.48250017461250827] ***
*** starting iteration: 2; err: [Inf, 0.8734900904294846, 0.48250017461250827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8734900904294846, 0.48250017461250827, 0.28909314012564774] ***
*** starting iteration: 3; err: [Inf, 0.8734900904294846, 0.48250017461250827, 0.28909314012564774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8734900904294846, 0.48250017461250827, 0.28909314012564774, 0.2732299731005798] ***
*** finished computation of 7 references, err: [Inf, 0.8734900904294846, 0.48250017461250827, 0.28909314012564774, 0.2732299731005798] ***
*** center 1: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 27, 8]]
** centroid: 4, normalized-entropy: 0.775512658133148, [(2, 27), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 6, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5658648715868179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5658648715868179, 0.33275439406038443] ***
*** starting iteration: 2; err: [Inf, 0.5658648715868179, 0.33275439406038443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5658648715868179, 0.33275439406038443, 0.28858020568563353] ***
*** starting iteration: 3; err: [Inf, 0.5658648715868179, 0.33275439406038443, 0.28858020568563353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5658648715868179, 0.33275439406038443, 0.28858020568563353, 0.2624562498099268] ***
*** finished computation of 7 references, err: [Inf, 0.5658648715868179, 0.33275439406038443, 0.28858020568563353, 0.2624562498099268] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 21]]
** centroid: 1, normalized-entropy: 0.7062740891876008, [(2, 5), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 31, 5]]
** centroid: 4, normalized-entropy: 0.581321498763703, [(2, 31), (3, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6794220859518478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6794220859518478, 0.445390701858078] ***
*** starting iteration: 2; err: [Inf, 0.6794220859518478, 0.445390701858078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6794220859518478, 0.445390701858078, 0.3064864737988015] ***
*** starting iteration: 3; err: [Inf, 0.6794220859518478, 0.445390701858078, 0.3064864737988015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6794220859518478, 0.445390701858078, 0.3064864737988015, 0.2669551717104388] ***
*** finished computation of 7 references, err: [Inf, 0.6794220859518478, 0.445390701858078, 0.3064864737988015, 0.2669551717104388] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 11]]
** centroid: 1, normalized-entropy: 0.8779620013943914, [(2, 26), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9466666666666667, 0.94, 0.94, 0.94, 0.94, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.98
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.55263157894737, 3.0736842105263156, 5.478947368421053, 2.1315789473684212], [4.785714285714285, 3.2142857142857144, 1.4238095238095236, 0.23809523809523808], [5.5307692307692315, 2.5384615384615383, 3.8538461538461535, 1.146153846153846], [7.6, 2.85, 6.425000000000001, 2.15], [5.385714285714287, 3.7928571428571423, 1.5214285714285716, 0.3], [6.081250000000001, 2.91875, 4.55625, 1.45625], [5.957142857142856, 2.7714285714285714, 4.985714285714286, 1.8714285714285717], [7.5, 3.6000000000000005, 6.3, 2.125]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.757142857142859, 3.0714285714285716, 5.721428571428572, 2.128571428571429], [4.855999999999999, 3.2840000000000007, 1.4239999999999997, 0.22800000000000004], [5.485, 2.5949999999999998, 3.8899999999999997, 1.215], [5.36, 3.7399999999999998, 1.52, 0.27], [6.076923076923076, 2.784615384615385, 5.06923076923077, 1.8692307692307693], [6.456249999999999, 2.925, 4.6625, 1.4437499999999999], [7.7, 3.3, 6.7, 2.1]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 1, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.456250000000001, 2.9124999999999996, 4.6, 1.4375000000000002], [6.158823529411764, 2.8352941176470594, 5.147058823529411, 1.8294117647058823], [4.805000000000001, 3.15, 1.465, 0.21500000000000002], [7.539999999999999, 2.82, 6.5200000000000005, 2.02], [5.442857142857143, 2.4714285714285715, 3.614285714285714, 1.0857142857142859], [5.36, 3.8699999999999997, 1.51, 0.25000000000000006], [7.066666666666667, 3.277777777777778, 5.966666666666667, 2.2666666666666666], [5.500000000000001, 2.714285714285715, 4.214285714285714, 1.342857142857143]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[71, 2, 1, 21, 1, 1, 1, 33, 22, 30, 20, 27, 6, 19, 16, 29, 7, 17, 25, 1, 33, 22, 27, 1, 19, 21, 41, 11, 27, 33, 19, 10, 20, 31, 35, 42, 20, 35, 27, 1, 37, 25, 39, 1, 28, 57, 38, 43, 1, 2, 23, 39, 32, 31, 44, 26, 29, 27, 51, 38, 36, 23, 30, 42, 23, 39, 28, 55, 29, 55, 29, 47, 28, 46, 18, 31, 37, 23, 16, 45, 36, 41, 24, 33, 41, 19, 38, 48, 35, 38, 51, 26, 45, 36, 45, 47, 43, 20, 18, 33, 34, 38, 29, 37, 3, 41, 36, 31, 35, 19, 1, 57, 26, 52, 29, 46, 20, 50, 1, 42, 37, 35, 17, 41, 25, 39, 34, 45, 46, 37, 43, 24, 41, 35, 35, 52, 34, 28, 60, 40, 32, 36, 17, 23, 26, 20, 29, 40, 41, 37, 23, 34, 25, 1, 55, 22, 43, 48, 29, 36, 31, 27, 34, 31, 34, 13, 17, 28, 35, 41, 50, 22, 30, 54, 37, 33, 60, 40, 39, 46, 22, 1, 40, 41, 23, 47, 34, 42, 29, 42, 30, 47, 23, 45, 32, 35, 29, 28, 47, 46, 40, 50, 39, 33, 40, 35, 47, 34, 36, 57, 28, 43, 34, 39, 43, 35, 46, 45, 34, 35, 68, 20, 15, 31, 75, 30, 42, 19, 29, 29, 17, 47, 7, 33, 2, 30, 55, 18, 34, 37, 35, 32, 26, 38, 38, 27, 61, 50, 30, 21, 48, 44, 26, 44, 57, 55, 30, 66, 44, 32, 52, 74, 20, 23, 23, 26, 45, 61, 43, 44, 36, 24, 50, 29, 34, 10, 57, 54, 46, 48, 8, 41, 23, 38, 26, 39, 36, 55, 39, 75, 44, 34, 40, 34, 7, 58, 7, 48, 45, 59]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6240000000000001, speedup = 0.3884298410698372, eval_ratio = 0.041379)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37326388888888884,"recall":0.37326388888888884,"f1":null,"seconds":7.439777255058289e-5,"exhaustive_search_seconds":0.0003651566803455353,"evaluations":339.578125,"distances_sum":1776.8059954775047}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5399305555555554,"recall":0.5399305555555554,"f1":0.5399305555555554,"seconds":0.00010455772280693054,"exhaustive_search_seconds":0.0003651566803455353,"evaluations":379.2109375,"distances_sum":1653.5251009219394}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6414930555555554,"recall":0.6414930555555554,"f1":0.6414930555555554,"seconds":0.00013822875916957855,"exhaustive_search_seconds":0.0003651566803455353,"evaluations":419.65625,"distances_sum":1611.3093793085175}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7109374999999993,"recall":0.7109374999999993,"f1":0.7109374999999993,"seconds":0.00016944855451583862,"exhaustive_search_seconds":0.0003651566803455353,"evaluations":459.2265625,"distances_sum":1588.0636101261914}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7647569444444436,"recall":0.7647569444444436,"f1":0.7647569444444436,"seconds":0.00020310096442699432,"exhaustive_search_seconds":0.0003651566803455353,"evaluations":498.6171875,"distances_sum":1574.0783053720972}
KCenters.DeloneInvIndex> reached performance {"precision":0.8038194444444434,"recall":0.8038194444444434,"f1":0.8038194444444434,"seconds":0.0002375822514295578,"exhaustive_search_seconds":0.0003651566803455353,"evaluations":538.5,"distances_sum":1563.5561275109533}
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8179999999999997, speedup = 1.36624146519314, eval_ratio = 0.05338300000000001)
   Testing KCenters tests passed 
