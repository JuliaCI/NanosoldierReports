Julia Version 1.4.0-DEV.565
Commit 83d7466c15 (2019-12-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  31.8 %    Fetching: [===============================>         ]  75.9 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed TransformUtils â”€ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
Status `/tmp/jl_fw00dV/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0832644861685955 0.19887989459273184; 0.0832644861685955 0.0 0.01869517893612498; -0.19887989459273184 -0.01869517893612498 0.0])
dAA = so3([0.0 -0.009837027317288239 -0.0945271757053817; 0.009837027317288239 0.0 -0.036770745579906915; 0.0945271757053817 0.036770745579906915 0.0])
dAA = so3([0.0 -0.2592344872123532 -0.01125667402082954; 0.2592344872123532 0.0 0.013365581652096219; 0.01125667402082954 -0.013365581652096219 0.0])
dAA = Quaternion(0.9988195549050016, [-0.04301531429352985, -0.010441908001473628, 0.02000365048915437])
dAA = SO3([0.9899381187896009 0.14063998946947512 -0.015585709137926847; -0.13564906413879116 0.9745724247002899 0.17834775135130793; 0.04027222821717534 -0.1744390506045701 0.9838440756840489])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9719268450780897 -0.03513077826894278 -0.23264573117675996; 0.013524050519717425 0.9954967634456909 -0.09382587077503858; 0.2348942482780092 0.08804556994745669 0.9680251390013259]), [-0.1869517893612498, 1.9887989459273183, 0.8326448616859549])
xj = SE3(SO3([0.9936650242814375 -0.09603708404533193 -0.05836692563293046; 0.106329624148506 0.9715536508656295 0.21160698126031693; 0.03638448224460028 -0.2164725894374078 0.9756104691289735]), [-0.13365581652096217, -0.1125667402082954, 2.592344872123532])
Dx = SE3(SO3([0.975754224928858 -0.13104984561845012 0.175298689375774; 0.07414606353306866 0.9514929199407528 0.2986027202909749; -0.20592730221132374 -0.27836515813944895 0.9381400668013097]), [0.43672422218486917, -1.9388412780127944, 1.888197231952725])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
