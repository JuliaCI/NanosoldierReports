Julia Version 1.4.0-DEV.565
Commit 83d7466c15 (2019-12-09 08:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  33.1 %    Fetching: [===================================>     ]  86.5 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed SymDict â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
 Installed MsgPack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed AWSS3 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.5
 Installed Blosc â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed BinDeps â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed BigArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed DataStructures â”€â”€â”€â”€â”€ v0.17.6
 Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.0
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
 Installed CMakeWrapper â”€â”€â”€â”€â”€â”€â”€ v0.2.3
 Installed OrderedCollections â”€ v1.1.0
 Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed GoogleCloud â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.0
 Installed XMLDict â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
 Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.8
 Installed AWSCore â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.6
 Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.8
 Installed CodecZstd â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
 Installed CMake â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
 Installed TranscodingStreams â”€ v0.9.5
 Installed LazyJSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.1
 Installed FilePathsBase â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed Libz â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€ v0.11.3
 Installed URIParser â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed Retry â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed BufferedStreams â”€â”€â”€â”€ v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [c2a8506f] + BigArrays v1.3.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [4f1ea46c] + AWSCore v0.6.6
  [1c724243] + AWSS3 v0.6.5
  [c2a8506f] + BigArrays v1.3.0
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [a74b3585] + Blosc v0.5.1
  [e1450e63] + BufferedStreams v1.0.0
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [944b1d66] + CodecZlib v0.6.0
  [6b39b394] + CodecZstd v0.6.1
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.6
  [8f5d6c58] + EzXML v0.9.5
  [48062228] + FilePathsBase v0.7.0
  [55e21f81] + GoogleCloud v0.8.0
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [c8e1da08] + IterTools v1.3.0
  [682c06a0] + JSON v0.21.0
  [fc18253b] + LazyJSON v0.1.1
  [2ec943e9] + Libz v1.0.0
  [739be429] + MbedTLS v0.7.0
  [78c3b35d] + Mocking v0.7.0
  [99f44e22] + MsgPack v0.2.0
  [6fe1bfb0] + OffsetArrays v0.11.3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [20febd7b] + Retry v0.4.0
  [2da68c74] + SymDict v0.3.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [30578b45] + URIParser v0.4.0
  [228000da] + XMLDict v0.3.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building CMake â”€â”€â”€â”€â†’ `~/.julia/packages/CMake/nSK2r/deps/build.log`
  Building Blosc â”€â”€â”€â”€â†’ `~/.julia/packages/Blosc/lzFr0/deps/build.log`
  Building MbedTLS â”€â”€â†’ `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
  Building EzXML â”€â”€â”€â”€â†’ `~/.julia/packages/EzXML/QtGgF/deps/build.log`
  Building CodecZlib â†’ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
  Building CodecZstd â†’ `~/.julia/packages/CodecZstd/zTSNC/deps/build.log`
   Testing BigArrays
 Resolving package versions...
Status `/tmp/jl_Erock8/Manifest.toml`
  [4f1ea46c] AWSCore v0.6.6
  [1c724243] AWSS3 v0.6.5
  [c2a8506f] BigArrays v1.3.0
  [9e28174c] BinDeps v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [a74b3585] Blosc v0.5.1
  [e1450e63] BufferedStreams v1.0.0
  [631607c0] CMake v1.1.2
  [d5fb7624] CMakeWrapper v0.2.3
  [944b1d66] CodecZlib v0.6.0
  [6b39b394] CodecZstd v0.6.1
  [34da2185] Compat v2.2.0
  [864edb3b] DataStructures v0.17.6
  [8f5d6c58] EzXML v0.9.5
  [48062228] FilePathsBase v0.7.0
  [55e21f81] GoogleCloud v0.8.0
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [c8e1da08] IterTools v1.3.0
  [682c06a0] JSON v0.21.0
  [fc18253b] LazyJSON v0.1.1
  [2ec943e9] Libz v1.0.0
  [739be429] MbedTLS v0.7.0
  [78c3b35d] Mocking v0.7.0
  [99f44e22] MsgPack v0.2.0
  [6fe1bfb0] OffsetArrays v0.11.3
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [20febd7b] Retry v0.4.0
  [2da68c74] SymDict v0.3.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [30578b45] URIParser v0.4.0
  [228000da] XMLDict v0.3.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
â”Œ Warning: did not find AWS credential! set it in environment variables.
â”” @ BigArrays.S3Dicts ~/.julia/packages/BigArrays/aB3lD/src/backends/S3Dicts.jl:23
Test Summary:             | Pass  Total
test index transformation |    2      2
layerDir = "/tmp/jl_hoXPZq"
path = "/tmp/jl_oDCwJZ"
Test Summary:              |
test bigarray construction | No tests
path = "/tmp/jl_hoXPZq"
a = UInt8[0xc6, 0x2a, 0x01, 0xa8, 0x21, 0x61, 0xec, 0x8f, 0x44, 0xf1, 0x83, 0x96, 0x06, 0xca, 0xbe, 0x8c, 0x92, 0xfd, 0xd9, 0x4c]
b = UInt8[0xc6, 0x2a, 0x01, 0xa8, 0x21, 0x61, 0xec, 0x8f, 0x44, 0xf1, 0x83, 0x96, 0x06, 0xca, 0xbe, 0x8c, 0x92, 0xfd, 0xd9, 0x4c]
Test Summary: | Pass  Total

test BinDict |    3      3
path = "/tmp/jl_hoXPZq"
info: Info{UInt8}("", 1, BigArrays.Infos.InfoScales.InfoScale[Symbol("6_6_30"), Symbol("12_12_30")], "", :image)
cutout speed: 0.5989126740402799 MB/s
Test Summary:       | Pass  Total

test file protocol |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 0.26573349919532574 MB/s
cutout speed: 0.4832754963314859 MB/s
Test Summary:                                | Pass  Total

test IO of BigArray with backend of BinDict |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 6.198097710841077 MB/s
cutout speed: 29.060406231786164 MB/s
Test Summary:             | Pass  Total

test negative coordinate |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 21.66964624302508 MB/s
cutout speed: 82.33417382802449 MB/s
Test Summary:                                 | Pass  Total

test aligned IO crossing the volume boundary |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 20.824586985434326 MB/s
cutout speed: 67.34376619338792 MB/s
Test Summary:                                    | Pass  Total

test nonaligned IO crossing the volume boundary |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 1.193394857810732 MB/s
cutout speed: 30.124451640841226 MB/s
Test Summary:                                                     | Pass  Total
test IO of BigArray with backend of BinDict with zstd compression |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 4.561445522085949 MB/s
cutout speed: 30.112545639326985 MB/s
Test Summary:                                                        | Pass  Total
test IO of BigArray with backend of BinDict with blosclz compression |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 21.4081190291418 MB/s
cutout speed: 33.87533875338753 MB/s
Test Summary:                            | Pass  Total
test dataset not aligned starting from 0 |    1      1
path = "/tmp/jl_hoXPZq"
saving speed: 13.557139104720425 MB/s
cutout speed: 34.635033336219585 MB/s
Test Summary:                                                     | Pass  Total
test dataset not aligned starting from 0 and negative coordinates |    1      1
   Testing BigArrays tests passed 
