Julia Version 1.4.0-DEV.622
Commit b73fc63796 (2019-12-17 04:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Tables ────────────────────── v0.2.11
 Installed Missings ──────────────────── v0.4.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.7
 Installed Compat ────────────────────── v3.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataUtils ───────────────── v0.5.0
 Installed OrderedCollections ────────── v1.1.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Reexport ──────────────────── v0.2.0
 Installed JSON ──────────────────────── v0.21.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed Parsers ───────────────────── v0.3.10
 Installed DataAPI ───────────────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed LearnBase ─────────────────── v0.2.2
 Installed CategoricalArrays ─────────── v0.7.4
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed MLDataPattern ─────────────── v0.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.7
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.7
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/yLilJ` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_lOu9a9/Project.toml`
  [5d8de97f] + KCenters v0.1.7 [`~/.julia/packages/KCenters/yLilJ`]
  Updating `/tmp/jl_lOu9a9/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.7 ⇒ v0.1.7 [`~/.julia/packages/KCenters/yLilJ`]
Running sandbox
Status `/tmp/jl_lOu9a9/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.7 [`~/.julia/packages/KCenters/yLilJ`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 131.83000000000007
[ Info: 69.82000000000002
[ Info: 49.30999999999999
[ Info: 27.99
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999839687118
[ Info: 75.46000113480547
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.43565090952681
inertia(cdnet.distances) = 29.16691818214256
inertia(crand.distances) = 21.951978322089936
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":3.7103891372680664e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":4.5078125,"distances_sum":601.0364083881066}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8455251345876352,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.2109375,"distances_sum":2472.120858137061}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8455251345876352,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.2109375,"distances_sum":2472.120858137061}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500832500832506,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8828125,"distances_sum":3257.567464258441}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9500832500832506,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8828125,"distances_sum":3257.567464258441}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9612751831501838,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.8828125,"distances_sum":3364.4340367578247}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.90625,"distances_sum":3518.854905884952}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.90625,"distances_sum":3518.854905884952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.90625,"distances_sum":3518.854905884952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":4.578381776809692e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":6.8125,"distances_sum":1046.3195711713927}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4140625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4140625,"f1":null,"seconds":4.578381776809692e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":6.8125,"distances_sum":1046.3195711713927}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8158607017982026,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":8.1171875,"distances_sum":2060.1502555154025}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.705078125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.705078125,"f1":0.8158607017982026,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":8.1171875,"distances_sum":2060.1502555154025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9375286172161177,"seconds":6.891787052154541e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":8.671875,"distances_sum":2902.2923923853273}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9375286172161177,"seconds":6.891787052154541e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":8.671875,"distances_sum":2902.2923923853273}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8916015625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9375286172161177,"seconds":6.891787052154541e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":8.671875,"distances_sum":2902.2923923853273}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4501953125,"f1":null,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.3515625,"distances_sum":1151.281505132179}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4501953125,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.4501953125,"f1":null,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.3515625,"distances_sum":1151.281505132179}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6965263902763907,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.6171875,"distances_sum":1428.9304846737061}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8217444014319021,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.1171875,"distances_sum":2074.873596563684}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6857753357753361,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.53125,"distances_sum":1462.16967241039}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.8217444014319021,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.1171875,"distances_sum":2074.873596563684}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9428685897435903,"seconds":7.16187059879303e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.71875,"distances_sum":2912.475635855726}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9019725066600075,"seconds":6.834045052528381e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.515625,"distances_sum":2589.6599442532515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8731664169164179,"seconds":6.550922989845276e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.4453125,"distances_sum":2341.1078998782245}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9238953754578761,"seconds":6.942078471183777e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.7265625,"distances_sum":2704.686843802937}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9428685897435903,"seconds":7.16187059879303e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.71875,"distances_sum":2912.475635855726}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9013671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9428685897435903,"seconds":7.16187059879303e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.71875,"distances_sum":2912.475635855726}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":4.377216100692749e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.015625,"distances_sum":605.3386156684678}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2021484375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":4.377216100692749e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.015625,"distances_sum":605.3386156684678}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2021484375,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":4.377216100692749e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.015625,"distances_sum":605.3386156684678}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":6.5078125,"distances_sum":1017.0567815577784}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.427734375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.427734375,"f1":null,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":6.5078125,"distances_sum":1017.0567815577784}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9017888361638371,"seconds":6.8712979555130005e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.4296875,"distances_sum":2354.3042157696314}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7898544164169171,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.5,"distances_sum":1718.7813061413888}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9017888361638371,"seconds":6.8712979555130005e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.4296875,"distances_sum":2354.3042157696314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703125000000004,"seconds":7.430091500282288e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.8359375,"distances_sum":2907.989030241312}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703125000000004,"seconds":7.430091500282288e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.8359375,"distances_sum":2907.989030241312}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703125000000004,"seconds":7.430091500282288e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.8359375,"distances_sum":2907.989030241312}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.808496191308692,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":7.953125,"distances_sum":1927.4325199389964}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6976308413808419,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":6.8984375,"distances_sum":1477.2468574221296}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.808496191308692,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":7.953125,"distances_sum":1927.4325199389964}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9393715659340666,"seconds":7.495284080505371e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.5078125,"distances_sum":2782.3187125459394}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8623262154512163,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.078125,"distances_sum":2216.321385508308}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9089114010989021,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.3515625,"distances_sum":2554.759895919941}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9375920954045961,"seconds":6.517395377159119e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.53125,"distances_sum":2766.070719778736}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9393715659340666,"seconds":7.495284080505371e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.5078125,"distances_sum":2782.3187125459394}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958671016483517,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.7578125,"distances_sum":2969.5493335843}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484489468864471,"seconds":6.273388862609863e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.71875,"distances_sum":2901.138212415645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447630494505499,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.625,"distances_sum":2890.366441995135}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685096153846156,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.875,"distances_sum":3004.697780196554}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9689961080586084,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.84375,"distances_sum":3034.6839907456483}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651098901098906,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.8359375,"distances_sum":3013.829317760971}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616701007326011,"seconds":6.712973117828369e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.8125,"distances_sum":2981.3026756258987}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9689961080586084,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.84375,"distances_sum":3034.6839907456483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9689961080586084,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.94646418094635e-6,"evaluations":8.84375,"distances_sum":3034.6839907456483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.109375,"distances_sum":1465.0037213180321}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.56640625,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.109375,"distances_sum":1465.0037213180321}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.56640625,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.109375,"distances_sum":1465.0037213180321}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.56640625,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.56640625,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.109375,"distances_sum":1465.0037213180321}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8755608974358984,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.7734375,"distances_sum":2263.453391331752}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8744541916416924,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8046875,"distances_sum":2260.9102151460274}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":7.2890625,"distances_sum":1084.2905694331355}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8744541916416924,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8046875,"distances_sum":2260.9102151460274}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9439217032967037,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.921875,"distances_sum":2819.291650760279}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622825091575096,"seconds":6.625428795814514e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9921875,"distances_sum":2950.4478926675774}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957037233599734,"seconds":6.532296538352966e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9453125,"distances_sum":2923.156830594887}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9254407051282059,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9453125,"distances_sum":2636.302869404888}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9622825091575096,"seconds":6.625428795814514e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9921875,"distances_sum":2950.4478926675774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369967,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.96875,"distances_sum":3153.733907819969}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9798363095238097,"seconds":3.0212104320526123e-5,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.984375,"distances_sum":3117.381027168875}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976636904761905,"seconds":6.902962923049927e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.96875,"distances_sum":3099.6083708230567}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646462912087916,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.953125,"distances_sum":2998.78866686808}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635473901098905,"seconds":6.865710020065308e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.921875,"distances_sum":2984.951954347521}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9727678571428575,"seconds":6.888061761856079e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.9453125,"distances_sum":3066.455544234}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369967,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.96875,"distances_sum":3153.733907819969}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369967,"seconds":6.835907697677612e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.96875,"distances_sum":3153.733907819969}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":6.9140625,"distances_sum":955.4619895405629}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7121510434010438,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":7.6328125,"distances_sum":1401.0047053383114}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5693359375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5693359375,"f1":0.7121510434010438,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":7.6328125,"distances_sum":1401.0047053383114}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8565601065601074,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.6484375,"distances_sum":2166.1319801439245}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8565601065601074,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.6484375,"distances_sum":2166.1319801439245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625000000000004,"seconds":6.901100277900696e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.9140625,"distances_sum":2981.9195956565495}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9273929195804201,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.875,"distances_sum":2677.988301611562}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658711080586087,"seconds":9.845942258834839e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.9453125,"distances_sum":3000.574088921209}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658711080586087,"seconds":9.845942258834839e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.9453125,"distances_sum":3000.574088921209}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9658711080586087,"seconds":9.845942258834839e-6,"exhaustive_search_seconds":1.8756836652755737e-6,"evaluations":8.9453125,"distances_sum":3000.574088921209}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.7886202335357666e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.9296875,"distances_sum":991.3907248177036}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.778570908258409,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.8203125,"distances_sum":1745.0641659973637}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.778570908258409,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.8203125,"distances_sum":1745.0641659973637}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8947146603396611,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3125,"distances_sum":2360.2466402798927}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9069742757242764,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4140625,"distances_sum":2461.847119587211}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9169013278388287,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4296875,"distances_sum":2504.382396322482}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8469206141081149,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1171875,"distances_sum":2114.7590516386417}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9169013278388287,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4296875,"distances_sum":2504.382396322482}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601419413919419,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8046875,"distances_sum":2922.0114207058614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9551797161172166,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7578125,"distances_sum":2903.786180643534}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846158,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.828125,"distances_sum":2978.1828797179305}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9292129745254751,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.53125,"distances_sum":2632.0352316287267}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619448260073266,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8125,"distances_sum":2929.3262274688286}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846158,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.828125,"distances_sum":2978.1828797179305}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846158,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.828125,"distances_sum":2978.1828797179305}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7740244130869138,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.4609375,"distances_sum":1923.2605756615144}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":3.376975655555725e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":5.2265625,"distances_sum":983.5479445918647}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65234375,"f1":0.7740244130869138,"seconds":4.718080163002014e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.4609375,"distances_sum":1923.2605756615144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9169705294705301,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.4921875,"distances_sum":2629.36551282039}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9465659340659346,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.65625,"distances_sum":2927.3495231077354}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8862215909090916,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.3046875,"distances_sum":2383.7185111033596}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9301282051282058,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.6328125,"distances_sum":2712.2470049462063}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8682390526140533,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.2109375,"distances_sum":2273.852590905463}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9465659340659346,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.65625,"distances_sum":2927.3495231077354}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965905448717949,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8359375,"distances_sum":3024.587481221656}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9621108058608063,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8359375,"distances_sum":2988.7751127774154}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681433150183154,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.875,"distances_sum":3032.207993965189}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9511961996337002,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7578125,"distances_sum":2920.420401865234}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681433150183154,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.875,"distances_sum":3032.207993965189}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681433150183154,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.875,"distances_sum":3032.207993965189}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.0249357223510742e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.3125,"distances_sum":476.1917321023878}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8631358225108233,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.265625,"distances_sum":1553.5357493756396}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8631358225108233,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.265625,"distances_sum":1553.5357493756396}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9540610431235435,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":1959.2687150411423}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9540610431235435,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":1959.2687150411423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2102.8228711599295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9721211080586083,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2064.4928065618437}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2102.8228711599295}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":2102.8228711599295}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3662109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.421875,"distances_sum":693.8131950363066}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3662109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3662109375,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.421875,"distances_sum":693.8131950363066}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.484375,"distances_sum":713.3233177384053}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8768262987012996,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1484375,"distances_sum":1733.78858056525}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8768262987012996,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1484375,"distances_sum":1733.78858056525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9469551282051285,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.671875,"distances_sum":2081.5986293591186}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9469551282051285,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.671875,"distances_sum":2081.5986293591186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9469551282051285,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.671875,"distances_sum":2081.5986293591186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":3.602355718612671e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":5.625,"distances_sum":350.1270862589336}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.0859375,"distances_sum":1030.700130052267}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5498046875,"f1":null,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.0859375,"distances_sum":1030.700130052267}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8646119505494513,"seconds":6.362795829772949e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":7.9375,"distances_sum":1658.1797134089572}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.944394147519148,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5546875,"distances_sum":2079.3425341659545}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8703034812409821,"seconds":6.077811121940613e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.03125,"distances_sum":1763.213780490288}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.944394147519148,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5546875,"distances_sum":2079.3425341659545}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750919,"seconds":6.930902600288391e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.859375,"distances_sum":2222.3806644113306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518486721611726,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.734375,"distances_sum":2123.6012649791487}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9483516483516488,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.5234375,"distances_sum":2113.915680333225}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750919,"seconds":6.930902600288391e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.859375,"distances_sum":2222.3806644113306}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750919,"seconds":6.930902600288391e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.859375,"distances_sum":2222.3806644113306}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.236328125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.236328125,"f1":null,"seconds":2.8721988201141357e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.2421875,"distances_sum":522.6083574861777}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7229489260739267,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.4140625,"distances_sum":1153.4028376972}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7229489260739267,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.4140625,"distances_sum":1153.4028376972}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8724447427572437,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.015625,"distances_sum":1683.525157433429}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9445429570429575,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5625,"distances_sum":2037.9554221125925}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.813002102064603,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.875,"distances_sum":1479.2577371744608}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9445429570429575,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5625,"distances_sum":2037.9554221125925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715602106227108,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8828125,"distances_sum":2221.349869776915}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9729910714285719,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.890625,"distances_sum":2231.137236905319}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9729910714285719,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.890625,"distances_sum":2231.137236905319}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9729910714285719,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.890625,"distances_sum":2231.137236905319}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8838203463203471,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.046875,"distances_sum":1679.2628211262074}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8838203463203471,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.046875,"distances_sum":1679.2628211262074}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9573317307692315,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.8046875,"distances_sum":2069.3757714673748}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9573317307692315,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.8046875,"distances_sum":2069.3757714673748}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9453125,"distances_sum":2234.140148354642}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654075091575094,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.828125,"distances_sum":2130.74168417154}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9453125,"distances_sum":2234.140148354642}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9825148809523814,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.9453125,"distances_sum":2234.140148354642}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.797211122211123,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.453125,"distances_sum":1417.6521827974925}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1796875,"f1":null,"seconds":2.7436763048171997e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.109375,"distances_sum":346.4039632210308}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.400390625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.400390625,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.78125,"distances_sum":815.283693182799}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.797211122211123,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.453125,"distances_sum":1417.6521827974925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936913607226108,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.703125,"distances_sum":2033.3246026945142}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8597423409923417,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.1328125,"distances_sum":1646.2941309059581}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.936913607226108,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.703125,"distances_sum":2033.3246026945142}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9542925824175832,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2151.74712114506}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9531536172161177,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7890625,"distances_sum":2112.8197642216182}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9542925824175832,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2151.74712114506}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9542925824175832,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2151.74712114506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.208984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":2.9299408197402954e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.2421875,"distances_sum":361.4442365553596}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.208984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":2.9299408197402954e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.2421875,"distances_sum":361.4442365553596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.860548826173827,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.1953125,"distances_sum":1595.9638483030278}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.0528753995895386e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.703125,"distances_sum":777.4206321386082}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7031744297369305,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.734375,"distances_sum":1115.3206822954721}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.860548826173827,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.1953125,"distances_sum":1595.9638483030278}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9417525183150188,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.6015625,"distances_sum":1990.5022275335516}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9453582875457881,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.734375,"distances_sum":1981.2596413459114}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9092464826839834,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.390625,"distances_sum":1784.562909306275}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8656026265401274,"seconds":4.680827260017395e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.1796875,"distances_sum":1620.1311128235495}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9453582875457881,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.734375,"distances_sum":1981.2596413459114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.964251373626374,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8515625,"distances_sum":2117.679223113893}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":2180.1949156087267}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.96875,"distances_sum":2174.015968669929}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546932234432238,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.765625,"distances_sum":2066.4707157723074}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.96073717948718,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8046875,"distances_sum":2115.5626427412208}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":2180.1949156087267}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":2180.1949156087267}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6920281107781114,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.5234375,"distances_sum":979.6962146924336}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6920281107781114,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.5234375,"distances_sum":979.6962146924336}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7023355117105123,"seconds":3.6135315895080566e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.53125,"distances_sum":1050.6968829027558}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8529777514152522,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1875,"distances_sum":1480.9701131880806}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8529777514152522,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1875,"distances_sum":1480.9701131880806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8924512987012992,"seconds":6.720423698425293e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.234375,"distances_sum":1609.5034961074764}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9063249250749256,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.34375,"distances_sum":1697.756754184324}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9332334332334337,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5078125,"distances_sum":1834.3927975374443}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9332334332334337,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5078125,"distances_sum":1834.3927975374443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8837890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9332334332334337,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5078125,"distances_sum":1834.3927975374443}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.069639205932617e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.2578125,"distances_sum":711.5984560431873}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8591387778887787,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.25,"distances_sum":1610.1142088871072}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.505859375,"f1":0.6550402722277727,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.296875,"distances_sum":963.3278010321925}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8591387778887787,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.25,"distances_sum":1610.1142088871072}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9469551282051288,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6328125,"distances_sum":2017.3300141086581}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961538461538462,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8125,"distances_sum":2082.393162991679}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9177801365301371,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.40625,"distances_sum":1841.7033886719985}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961538461538462,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8125,"distances_sum":2082.393162991679}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941397,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2133.8899588852837}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719150641025645,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2125.2082149580633}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9630640193140195,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.875,"distances_sum":2073.5288128023208}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9666494963369966,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.890625,"distances_sum":2093.8148433381593}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941397,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2133.8899588852837}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9735691391941397,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2133.8899588852837}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.26171875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.26171875,"f1":null,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.734375,"distances_sum":518.3728177651177}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8663211788211796,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.328125,"distances_sum":1627.3806142018848}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2578125,"f1":null,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.765625,"distances_sum":497.4011552587767}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8663211788211796,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.328125,"distances_sum":1627.3806142018848}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9560668498168503,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":2047.9101524441398}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9002003205128214,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.40625,"distances_sum":1784.9036198678643}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9560668498168503,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.796875,"distances_sum":2047.9101524441398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964199862637363,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.859375,"distances_sum":2077.586414442772}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964199862637363,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.859375,"distances_sum":2077.586414442772}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.964199862637363,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.859375,"distances_sum":2077.586414442772}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6981785575535583,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.515625,"distances_sum":1041.5675629128389}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6960719835719841,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.5,"distances_sum":1010.6961761518362}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2705078125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2705078125,"f1":null,"seconds":3.1460076570510864e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.984375,"distances_sum":468.41082122601875}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.5859375,"distances_sum":713.0394668706973}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.6981785575535583,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.515625,"distances_sum":1041.5675629128389}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7730477855477862,"seconds":4.520639777183533e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.6015625,"distances_sum":1204.4910711008192}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9020432692307702,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4921875,"distances_sum":1691.1241156600893}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8607605935730944,"seconds":4.995614290237427e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1484375,"distances_sum":1549.0843447447521}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8968411796536805,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3828125,"distances_sum":1620.8045336781047}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8533919205794214,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.15625,"distances_sum":1504.6648062628406}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8310546875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8310546875,"f1":0.9020432692307702,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4921875,"distances_sum":1691.1241156600893}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419158966033973,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.703125,"distances_sum":1890.1707161972095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9222813644688652,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.484375,"distances_sum":1828.2568375902306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9556636072261078,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":1970.0009851140076}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665407509157512,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.828125,"distances_sum":2039.8783611598496}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.957537774725275,"seconds":7.214024662971497e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":1986.3297475636136}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9413976648351652,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7578125,"distances_sum":1889.3214164818178}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9530594405594409,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7265625,"distances_sum":1939.1051804904087}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9388507326007333,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.734375,"distances_sum":1893.521643625078}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665407509157512,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.828125,"distances_sum":2039.8783611598496}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665407509157512,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.828125,"distances_sum":2039.8783611598496}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":2.430751919746399e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":5.921875,"distances_sum":810.2900732060051}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.4049153327941895e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":6.046875,"distances_sum":814.1668223899668}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5283203125,"f1":0.6726868617493622,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":6.4453125,"distances_sum":1018.6541083605582}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5283203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5283203125,"f1":0.6726868617493622,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":6.4453125,"distances_sum":1018.6541083605582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.931948260073261,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.796875,"distances_sum":1948.3483238489052}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.849769501332002,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.1640625,"distances_sum":1610.5317408329836}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9076616092241099,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.609375,"distances_sum":1817.1781639918813}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7864833083583094,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":7.6015625,"distances_sum":1329.4671778364816}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6921051171051177,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":6.5078125,"distances_sum":1039.1657681222584}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8485491938616947,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.1484375,"distances_sum":1578.7330987756084}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.931948260073261,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.796875,"distances_sum":1948.3483238489052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9454899267399273,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.828125,"distances_sum":2021.8319943636075}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595638736263743,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.921875,"distances_sum":2106.550885148437}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.942656822344323,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.796875,"distances_sum":2011.670981929474}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542296245421251,"seconds":6.556510925292969e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.9140625,"distances_sum":2057.51908056712}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602163461538463,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.890625,"distances_sum":2117.085196663655}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9602163461538463,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.890625,"distances_sum":2117.085196663655}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9602163461538463,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":8.586794137954712e-7,"evaluations":8.890625,"distances_sum":2117.085196663655}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.28515625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.28515625,"f1":null,"seconds":3.4384429454803467e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.90625,"distances_sum":545.4356651363287}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.9375,"distances_sum":832.5194265949004}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4267578125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.9375,"distances_sum":832.5194265949004}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7894131909756918,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.5625,"distances_sum":1403.1555235350272}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8453567266067273,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1598.2354969193318}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8453567266067273,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1598.2354969193318}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565934065934071,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2182.8998331851863}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9028856560106567,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5,"distances_sum":1866.599286452457}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9565934065934071,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2182.8998331851863}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9565934065934071,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8046875,"distances_sum":2182.8998331851863}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8601393398268408,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0703125,"distances_sum":1769.2808380156148}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":5.875,"distances_sum":852.7822398869707}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8601393398268408,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0703125,"distances_sum":1769.2808380156148}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9645661630036635,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8203125,"distances_sum":2358.7060351578702}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9386618589743595,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5,"distances_sum":2166.478017125895}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.920773497335998,"seconds":3.055110573768616e-5,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5,"distances_sum":2046.1929419591772}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9645661630036635,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8203125,"distances_sum":2358.7060351578702}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":6,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9787774725274728,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9609375,"distances_sum":2424.960872172669}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787774725274728,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9609375,"distances_sum":2424.960872172669}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":6,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787774725274728,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9609375,"distances_sum":2424.960872172669}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8506046037296044,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.34375,"distances_sum":1656.403808279589}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":4.015862941741943e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.21875,"distances_sum":816.5847262999163}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":5.90625,"distances_sum":762.3427648201274}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8506046037296044,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.34375,"distances_sum":1656.403808279589}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8621342199467208,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.3046875,"distances_sum":1694.9784563993783}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9323431776556783,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5234375,"distances_sum":2050.250451900053}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.853291500166501,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.234375,"distances_sum":1665.9470909648533}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9323431776556783,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.5234375,"distances_sum":2050.250451900053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669871794871797,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.859375,"distances_sum":2304.020343796768}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9519605394605399,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2200.3367119785116}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601762820512827,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.796875,"distances_sum":2249.985191388968}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9504235347985353,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.6796875,"distances_sum":2205.0343914092705}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669871794871797,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.859375,"distances_sum":2304.020343796768}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669871794871797,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.859375,"distances_sum":2304.020343796768}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7838474025974033,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0625,"distances_sum":1275.1745920972487}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7052076395826402,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.765625,"distances_sum":1085.7223220088713}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7838474025974033,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0625,"distances_sum":1275.1745920972487}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9196974900099906,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.71875,"distances_sum":1851.8747102406116}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9069342116217123,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7265625,"distances_sum":1767.6924060273025}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8461892274392284,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5,"distances_sum":1531.3353443470833}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8181885822510832,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3359375,"distances_sum":1436.4128424089172}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9196974900099906,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.71875,"distances_sum":1851.8747102406116}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9484260531135533,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":2053.771439010306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9346642940392949,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7578125,"distances_sum":1958.410000123091}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737923534798538,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2209.7224778253108}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9411572802197808,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7734375,"distances_sum":2004.884072625695}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9737923534798538,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2209.7224778253108}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9737923534798538,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9375,"distances_sum":2209.7224778253108}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.974884748458862e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.2265625,"distances_sum":708.5769055727739}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7020949536574541,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.71875,"distances_sum":1090.4667323030626}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2138671875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.3671875,"distances_sum":456.8103425161376}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7020949536574541,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.71875,"distances_sum":1090.4667323030626}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5634765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7020949536574541,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.71875,"distances_sum":1090.4667323030626}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.5634765625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5634765625,"f1":0.7020949536574541,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.71875,"distances_sum":1090.4667323030626}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8658372877122883,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.65625,"distances_sum":1627.8833291635144}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7831500097125103,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.203125,"distances_sum":1335.5864624416124}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8658372877122883,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.65625,"distances_sum":1627.8833291635144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8851310148185155,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.484375,"distances_sum":1770.235524178549}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9536172161172167,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7265625,"distances_sum":2147.8174643400866}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8700370809745819,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6171875,"distances_sum":1657.959529984634}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9536172161172167,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7265625,"distances_sum":2147.8174643400866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9536172161172167,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7265625,"distances_sum":2147.8174643400866}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9536172161172167,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7265625,"distances_sum":2147.8174643400866}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.1171875,"distances_sum":403.7305993882449}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8047051906426914,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.984375,"distances_sum":1449.1125694367367}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8047051906426914,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.984375,"distances_sum":1449.1125694367367}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9394688644688651,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.46875,"distances_sum":1972.5831780069109}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.846687687312688,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0703125,"distances_sum":1599.8196525547237}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9394688644688651,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.46875,"distances_sum":1972.5831780069109}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9567364926739932,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2078.5811939975642}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546588827838833,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.78125,"distances_sum":2074.6213254277286}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967880036630037,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2162.6325701797973}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9554372710622718,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2115.471972088784}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9453411172161178,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2022.348806779767}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.967880036630037,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2162.6325701797973}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.967880036630037,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2162.6325701797973}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.3046875,"distances_sum":485.92383923984215}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7045253357753364,"seconds":3.976747393608093e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7421875,"distances_sum":1191.822111250732}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.3956021070480347e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.234375,"distances_sum":478.7743604333343}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5654296875,"f1":0.7045253357753364,"seconds":3.976747393608093e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7421875,"distances_sum":1191.822111250732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9098901098901107,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4609375,"distances_sum":1969.4638547771035}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8558764152514161,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.359375,"distances_sum":1732.2410328828266}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8338940573315581,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1640625,"distances_sum":1707.6346610871635}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8041024947274954,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.15625,"distances_sum":1590.6235372354506}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9098901098901107,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.4609375,"distances_sum":1969.4638547771035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9646265193140195,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8203125,"distances_sum":2372.645576725752}, best_list's length: 5, n: 9
inertia(cfft.distances) = 18.308681714200848
inertia(cdnet.distances) = 20.210861652236666
inertia(crand.distances) = 20.64558688672439
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9434809981684986,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6484375,"distances_sum":2274.877680426761}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9646265193140195,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8203125,"distances_sum":2372.645576725752}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9646265193140195,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8203125,"distances_sum":2372.645576725752}}, n: 9
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> k=5
===> k=7
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9466666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.891111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8955555555555557
===> k=11
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.88
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 3, 1, 3, 3, 1, 3, 3, 1, 3, 2, 2, 3, 3, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 11, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 12, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 1, 2, 3, 2, 3]
acc = 0.96
*** starting iteration: 1; err: [Inf, 0.4576666680012168] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4576666680012168, 0.17566781600394624] ***
*** starting iteration: 2; err: [Inf, 0.4576666680012168, 0.17566781600394624] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4576666680012168, 0.17566781600394624, 0.16640413988701483] ***
*** starting iteration: 3; err: [Inf, 0.4576666680012168, 0.17566781600394624, 0.16640413988701483] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4576666680012168, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696] ***
*** starting iteration: 4; err: [Inf, 0.4576666680012168, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4576666680012168, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696, 0.16349131641382694] ***
*** finished computation of 12 references, err: [Inf, 0.4576666680012168, 0.17566781600394624, 0.16640413988701483, 0.1640939623501696, 0.16349131641382694] ***
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 3.951300009379982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.951300009379982, 1.0583629646341253] ***
*** finished computation of 3 references, err: [Inf, 3.951300009379982, 1.0583629646341253] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [17, 4, 0]]
** centroid: 2, normalized-entropy: 0.7024665512903904, [(1, 17), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 29]]
** centroid: 3, normalized-entropy: 0.9982545693874832, [(2, 32), (3, 29)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.295499990120228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.295499990120228, 1.0272849908780635] ***
*** finished computation of 3 references, err: [Inf, 2.295499990120228, 1.0272849908780635] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 1, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 7, 0]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(1, 4), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.545399959860257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.545399959860257, 1.3720982802751973] ***
*** finished computation of 3 references, err: [Inf, 4.545399959860257, 1.3720982802751973] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 19, 21]]
** centroid: 2, normalized-entropy: 0.99819587904281, [(2, 19), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 6, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 36), (2, 6)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5873000023145302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5873000023145302, 0.2509646248952954] ***
*** finished computation of 7 references, err: [Inf, 0.5873000023145302, 0.2509646248952954] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.787000009432834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.787000009432834, 0.3863969117528977] ***
*** finished computation of 7 references, err: [Inf, 0.787000009432834, 0.3863969117528977] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 34, 1]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4171000007611751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4171000007611751, 0.3196668471968261] ***
*** finished computation of 7 references, err: [Inf, 0.4171000007611751, 0.3196668471968261] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 28]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 7), (3, 28)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3915368958619284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3915368958619284, 0.23108069944892343] ***
*** finished computation of 7 references, err: [Inf, 0.3915368958619284, 0.23108069944892343] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 5]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 6, 10]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(2, 6), (3, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8972671177480457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8972671177480457, 0.23916703590756325] ***
*** finished computation of 7 references, err: [Inf, 0.8972671177480457, 0.23916703590756325] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 3, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40255408569650925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40255408569650925, 0.24103909450459393] ***
*** finished computation of 7 references, err: [Inf, 0.40255408569650925, 0.24103909450459393] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 19]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(2, 6), (3, 19)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 4]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5300402947850357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5300402947850357, 0.38462783407494444] ***
*** starting iteration: 2; err: [Inf, 0.5300402947850357, 0.38462783407494444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5300402947850357, 0.38462783407494444, 0.3748289377138559] ***
*** starting iteration: 3; err: [Inf, 0.5300402947850357, 0.38462783407494444, 0.3748289377138559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5300402947850357, 0.38462783407494444, 0.3748289377138559, 0.3739371550883199] ***
*** finished computation of 3 references, err: [Inf, 0.5300402947850357, 0.38462783407494444, 0.3748289377138559, 0.3739371550883199] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 2]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 32), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 27]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.295766444177569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087] ***
*** starting iteration: 2; err: [Inf, 1.295766444177569, 0.48570122999243087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436] ***
*** starting iteration: 3; err: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206] ***
*** starting iteration: 4; err: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627] ***
*** starting iteration: 5; err: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627, 0.3765412054087514] ***
*** starting iteration: 6; err: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627, 0.3765412054087514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627, 0.3765412054087514, 0.37394521298659017] ***
*** starting iteration: 7; err: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627, 0.3765412054087514, 0.37394521298659017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627, 0.3765412054087514, 0.37394521298659017, 0.3731213096886584] ***
*** finished computation of 3 references, err: [Inf, 1.295766444177569, 0.48570122999243087, 0.3949063486050436, 0.38186333567537206, 0.3790986547314627, 0.3765412054087514, 0.37394521298659017, 0.3731213096886584] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 29]]
** centroid: 1, normalized-entropy: 0.6024308020404452, [(2, 5), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 3]]
** centroid: 2, normalized-entropy: 0.40597703847557104, [(2, 34), (3, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5593495919832506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469] ***
*** starting iteration: 2; err: [Inf, 0.5593495919832506, 0.3882238464364469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219] ***
*** starting iteration: 3; err: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083] ***
*** starting iteration: 4; err: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464] ***
*** starting iteration: 5; err: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464, 0.35330041219616254] ***
*** starting iteration: 6; err: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464, 0.35330041219616254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622] ***
*** starting iteration: 7; err: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622, 0.35049291017101875] ***
*** finished computation of 3 references, err: [Inf, 0.5593495919832506, 0.3882238464364469, 0.3736499851391219, 0.3630713392737083, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622, 0.35049291017101875] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 10]]
** centroid: 3, normalized-entropy: 0.8849636363831529, [(2, 23), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0209999952443314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0209999952443314, 0.7651796030746618] ***
*** starting iteration: 2; err: [Inf, 1.0209999952443314, 0.7651796030746618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0209999952443314, 0.7651796030746618, 0.5857708692318678] ***
*** starting iteration: 3; err: [Inf, 1.0209999952443314, 0.7651796030746618, 0.5857708692318678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0209999952443314, 0.7651796030746618, 0.5857708692318678, 0.49650743045786727] ***
*** finished computation of 7 references, err: [Inf, 1.0209999952443314, 0.7651796030746618, 0.5857708692318678, 0.49650743045786727] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 16, 29]]
** centroid: 2, normalized-entropy: 0.9389320105807949, [(2, 16), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8051000023307625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8051000023307625, 0.43622087182855795] ***
*** starting iteration: 2; err: [Inf, 0.8051000023307625, 0.43622087182855795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8051000023307625, 0.43622087182855795, 0.34402635801093423] ***
*** starting iteration: 3; err: [Inf, 0.8051000023307625, 0.43622087182855795, 0.34402635801093423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8051000023307625, 0.43622087182855795, 0.34402635801093423, 0.3275882491650286] ***
*** finished computation of 7 references, err: [Inf, 0.8051000023307625, 0.43622087182855795, 0.34402635801093423, 0.3275882491650286] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 9]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(2, 25), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5729000040737598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5729000040737598, 0.275396624777781] ***
*** starting iteration: 2; err: [Inf, 0.5729000040737598, 0.275396624777781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5729000040737598, 0.275396624777781, 0.26124284723414365] ***
*** starting iteration: 3; err: [Inf, 0.5729000040737598, 0.275396624777781, 0.26124284723414365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5729000040737598, 0.275396624777781, 0.26124284723414365, 0.2563914320151126] ***
*** finished computation of 7 references, err: [Inf, 0.5729000040737598, 0.275396624777781, 0.26124284723414365, 0.2563914320151126] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 2, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5706999944140345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295] ***
*** starting iteration: 2; err: [Inf, 0.5706999944140345, 0.3379967771902295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333] ***
*** starting iteration: 3; err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304] ***
*** starting iteration: 4; err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854] ***
*** starting iteration: 5; err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944] ***
*** starting iteration: 6; err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944, 0.25527409136239404] ***
*** starting iteration: 7; err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944, 0.25527409136239404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944, 0.25527409136239404, 0.25422738105907267] ***
*** starting iteration: 8; err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944, 0.25527409136239404, 0.25422738105907267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944, 0.25527409136239404, 0.25422738105907267, 0.25422738105907267] ***
*** finished computation of 7 references, err: [Inf, 0.5706999944140345, 0.3379967771902295, 0.2955852161968333, 0.28712699377092304, 0.27853520051095854, 0.26409669026651944, 0.25527409136239404, 0.25422738105907267, 0.25422738105907267] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.2010999839354253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2010999839354253, 0.31170657736520807] ***
*** starting iteration: 2; err: [Inf, 2.2010999839354253, 0.31170657736520807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2010999839354253, 0.31170657736520807, 0.2919254965633326] ***
*** starting iteration: 3; err: [Inf, 2.2010999839354253, 0.31170657736520807, 0.2919254965633326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2010999839354253, 0.31170657736520807, 0.2919254965633326, 0.2899350947957301] ***
*** starting iteration: 4; err: [Inf, 2.2010999839354253, 0.31170657736520807, 0.2919254965633326, 0.2899350947957301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2010999839354253, 0.31170657736520807, 0.2919254965633326, 0.2899350947957301, 0.2899350947957301] ***
*** finished computation of 7 references, err: [Inf, 2.2010999839354253, 0.31170657736520807, 0.2919254965633326, 0.2899350947957301, 0.2899350947957301] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 4]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 1), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 2, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.75050000350047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136] ***
*** starting iteration: 2; err: [Inf, 0.75050000350047, 0.35542653980087136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396] ***
*** starting iteration: 3; err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944] ***
*** starting iteration: 4; err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528] ***
*** starting iteration: 5; err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981] ***
*** starting iteration: 6; err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981, 0.24297753268189612] ***
*** starting iteration: 7; err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981, 0.24297753268189612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981, 0.24297753268189612, 0.23537567095694428] ***
*** starting iteration: 8; err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981, 0.24297753268189612, 0.23537567095694428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981, 0.24297753268189612, 0.23537567095694428, 0.23537567095694428] ***
*** finished computation of 7 references, err: [Inf, 0.75050000350047, 0.35542653980087136, 0.31872297269976396, 0.3027950277446944, 0.287578657221528, 0.2655713149458981, 0.24297753268189612, 0.23537567095694428, 0.23537567095694428] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0264519260717329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0264519260717329, 0.3764443800332171] ***
*** starting iteration: 2; err: [Inf, 1.0264519260717329, 0.3764443800332171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0264519260717329, 0.3764443800332171, 0.37141511478391254] ***
*** starting iteration: 3; err: [Inf, 1.0264519260717329, 0.3764443800332171, 0.37141511478391254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0264519260717329, 0.3764443800332171, 0.37141511478391254, 0.3709479337067926] ***
*** finished computation of 3 references, err: [Inf, 1.0264519260717329, 0.3764443800332171, 0.37141511478391254, 0.3709479337067926] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8066020430135749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8066020430135749, 0.42887405377662363] ***
*** starting iteration: 2; err: [Inf, 0.8066020430135749, 0.42887405377662363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8066020430135749, 0.42887405377662363, 0.3793939496776092] ***
*** starting iteration: 3; err: [Inf, 0.8066020430135749, 0.42887405377662363, 0.3793939496776092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8066020430135749, 0.42887405377662363, 0.3793939496776092, 0.37305940737012905] ***
*** starting iteration: 4; err: [Inf, 0.8066020430135749, 0.42887405377662363, 0.3793939496776092, 0.37305940737012905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8066020430135749, 0.42887405377662363, 0.3793939496776092, 0.37305940737012905, 0.37229100075496985] ***
*** finished computation of 3 references, err: [Inf, 0.8066020430135749, 0.42887405377662363, 0.3793939496776092, 0.37305940737012905, 0.37229100075496985] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 9]]
** centroid: 1, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0645635251733692] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0645635251733692, 0.36766755788946687] ***
*** starting iteration: 2; err: [Inf, 1.0645635251733692, 0.36766755788946687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464] ***
*** starting iteration: 3; err: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254] ***
*** starting iteration: 4; err: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622] ***
*** starting iteration: 5; err: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622, 0.35049291017101875] ***
*** finished computation of 3 references, err: [Inf, 1.0645635251733692, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254, 0.3512723758420622, 0.35049291017101875] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 29]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 10]]
** centroid: 3, normalized-entropy: 0.8849636363831529, [(2, 23), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0228000182597243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611] ***
*** starting iteration: 2; err: [Inf, 1.0228000182597243, 0.5780936059582611] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621] ***
*** starting iteration: 3; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446] ***
*** starting iteration: 4; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072] ***
*** starting iteration: 5; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414] ***
*** starting iteration: 6; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939] ***
*** starting iteration: 7; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914] ***
*** starting iteration: 8; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914, 0.5410936881181546] ***
*** starting iteration: 9; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914, 0.5410936881181546] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914, 0.5410936881181546, 0.5382136701109809] ***
*** starting iteration: 10; err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914, 0.5410936881181546, 0.5382136701109809] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914, 0.5410936881181546, 0.5382136701109809, 0.5305055206116335] ***
*** finished computation of 3 references, err: [Inf, 1.0228000182597243, 0.5780936059582611, 0.5620129923101621, 0.555866510446, 0.5536027309087072, 0.5482609301911414, 0.5458650559132939, 0.5445442276943914, 0.5410936881181546, 0.5382136701109809, 0.5305055206116335] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 24]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 5]]
** centroid: 3, normalized-entropy: 0.5617526078313283, [(2, 33), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.23350000235775] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.23350000235775, 0.6833616217047599] ***
*** starting iteration: 2; err: [Inf, 1.23350000235775, 0.6833616217047599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.23350000235775, 0.6833616217047599, 0.5793090978580198] ***
*** starting iteration: 3; err: [Inf, 1.23350000235775, 0.6833616217047599, 0.5793090978580198] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.23350000235775, 0.6833616217047599, 0.5793090978580198, 0.5376322937058801] ***
*** starting iteration: 4; err: [Inf, 1.23350000235775, 0.6833616217047599, 0.5793090978580198, 0.5376322937058801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.23350000235775, 0.6833616217047599, 0.5793090978580198, 0.5376322937058801, 0.5368053808983039] ***
*** finished computation of 3 references, err: [Inf, 1.23350000235775, 0.6833616217047599, 0.5793090978580198, 0.5376322937058801, 0.5368053808983039] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 38, 10]]
** centroid: 1, normalized-entropy: 0.7382848661434506, [(2, 38), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9569999994130165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569999994130165, 0.586868800931462] ***
*** starting iteration: 2; err: [Inf, 0.9569999994130165, 0.586868800931462] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594] ***
*** starting iteration: 3; err: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182] ***
*** starting iteration: 4; err: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182, 0.510348856760696] ***
*** starting iteration: 5; err: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182, 0.510348856760696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182, 0.510348856760696, 0.5033712394814106] ***
*** starting iteration: 6; err: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182, 0.510348856760696, 0.5033712394814106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182, 0.510348856760696, 0.5033712394814106, 0.5026118997939484] ***
*** finished computation of 3 references, err: [Inf, 0.9569999994130165, 0.586868800931462, 0.5569152816180594, 0.5299964573495182, 0.510348856760696, 0.5033712394814106, 0.5026118997939484] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 29]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(2, 2), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 10]]
** centroid: 3, normalized-entropy: 0.8849636363831529, [(2, 23), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5298849071153335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5298849071153335, 0.36983920079344557] ***
*** starting iteration: 2; err: [Inf, 1.5298849071153335, 0.36983920079344557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5298849071153335, 0.36983920079344557, 0.36983920079344557] ***
*** finished computation of 3 references, err: [Inf, 1.5298849071153335, 0.36983920079344557, 0.36983920079344557] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 7]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(2, 33), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 22]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7226577013848993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7226577013848993, 0.3915966780861002] ***
*** starting iteration: 2; err: [Inf, 0.7226577013848993, 0.3915966780861002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7226577013848993, 0.3915966780861002, 0.3806242848050292] ***
*** starting iteration: 3; err: [Inf, 0.7226577013848993, 0.3915966780861002, 0.3806242848050292] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7226577013848993, 0.3915966780861002, 0.3806242848050292, 0.3765412054087514] ***
*** finished computation of 3 references, err: [Inf, 0.7226577013848993, 0.3915966780861002, 0.3806242848050292, 0.3765412054087514] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 30]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 2]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(2, 32), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.121801877759182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.121801877759182, 0.36766755788946687] ***
*** starting iteration: 2; err: [Inf, 1.121801877759182, 0.36766755788946687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.121801877759182, 0.36766755788946687, 0.3581558322392464] ***
*** starting iteration: 3; err: [Inf, 1.121801877759182, 0.36766755788946687, 0.3581558322392464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.121801877759182, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254] ***
*** finished computation of 3 references, err: [Inf, 1.121801877759182, 0.36766755788946687, 0.3581558322392464, 0.35330041219616254] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 10]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5402999899086154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5402999899086154, 0.5307593741636961] ***
*** finished computation of 3 references, err: [Inf, 1.5402999899086154, 0.5307593741636961] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 10]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 36), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5825999987226431] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5825999987226431, 0.5570111853318399] ***
*** finished computation of 3 references, err: [Inf, 1.5825999987226431, 0.5570111853318399] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 39, 10]]
** centroid: 3, normalized-entropy: 0.7300166301457938, [(2, 39), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.595899990625398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.595899990625398, 0.51610928559676] ***
*** finished computation of 3 references, err: [Inf, 1.595899990625398, 0.51610928559676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 27]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 12]]
** centroid: 3, normalized-entropy: 0.9090221560878149, [(2, 25), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41155076928793544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41155076928793544, 0.1739403946745857] ***
*** starting iteration: 2; err: [Inf, 0.41155076928793544, 0.1739403946745857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41155076928793544, 0.1739403946745857, 0.1702794684259116] ***
*** starting iteration: 3; err: [Inf, 0.41155076928793544, 0.1739403946745857, 0.1702794684259116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41155076928793544, 0.1739403946745857, 0.1702794684259116, 0.16995821031810907] ***
*** finished computation of 7 references, err: [Inf, 0.41155076928793544, 0.1739403946745857, 0.1702794684259116, 0.16995821031810907] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 19, 2]]
** centroid: 7, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44294823470053485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44294823470053485, 0.20539826737457936] ***
*** starting iteration: 2; err: [Inf, 0.44294823470053485, 0.20539826737457936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44294823470053485, 0.20539826737457936, 0.19090280470538423] ***
*** starting iteration: 3; err: [Inf, 0.44294823470053485, 0.20539826737457936, 0.19090280470538423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44294823470053485, 0.20539826737457936, 0.19090280470538423, 0.18844197518943978] ***
*** finished computation of 7 references, err: [Inf, 0.44294823470053485, 0.20539826737457936, 0.19090280470538423, 0.18844197518943978] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 17]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 8), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 20, 3]]
** centroid: 6, normalized-entropy: 0.5586293734521991, [(2, 20), (3, 3)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45669297289778243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45669297289778243, 0.1974020303085365] ***
*** starting iteration: 2; err: [Inf, 0.45669297289778243, 0.1974020303085365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45669297289778243, 0.1974020303085365, 0.19301675936178558] ***
*** starting iteration: 3; err: [Inf, 0.45669297289778243, 0.1974020303085365, 0.19301675936178558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45669297289778243, 0.1974020303085365, 0.19301675936178558, 0.19149600455061883] ***
*** finished computation of 7 references, err: [Inf, 0.45669297289778243, 0.1974020303085365, 0.19301675936178558, 0.19149600455061883] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 6]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 11), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 8, 3]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(2, 8), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4034171997937534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4034171997937534, 0.19754810221875924] ***
*** starting iteration: 2; err: [Inf, 0.4034171997937534, 0.19754810221875924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4034171997937534, 0.19754810221875924, 0.17783255670604817] ***
*** starting iteration: 3; err: [Inf, 0.4034171997937534, 0.19754810221875924, 0.17783255670604817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4034171997937534, 0.19754810221875924, 0.17783255670604817, 0.17304462705822835] ***
*** starting iteration: 4; err: [Inf, 0.4034171997937534, 0.19754810221875924, 0.17783255670604817, 0.17304462705822835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4034171997937534, 0.19754810221875924, 0.17783255670604817, 0.17304462705822835, 0.1727217416598526] ***
*** finished computation of 7 references, err: [Inf, 0.4034171997937534, 0.19754810221875924, 0.17783255670604817, 0.17304462705822835, 0.1727217416598526] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 11]]
** centroid: 4, normalized-entropy: 0.9666186325481027, [(2, 17), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4742070468387257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992] ***
*** starting iteration: 2; err: [Inf, 0.4742070468387257, 0.21909490530850992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194] ***
*** starting iteration: 3; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614] ***
*** starting iteration: 4; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023] ***
*** starting iteration: 5; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947] ***
*** starting iteration: 6; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271] ***
*** starting iteration: 7; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982] ***
*** starting iteration: 8; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982, 0.15794311300188274] ***
*** starting iteration: 9; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982, 0.15794311300188274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982, 0.15794311300188274, 0.15575658578718587] ***
*** starting iteration: 10; err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982, 0.15794311300188274, 0.15575658578718587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982, 0.15794311300188274, 0.15575658578718587, 0.15541659805452948] ***
*** finished computation of 7 references, err: [Inf, 0.4742070468387257, 0.21909490530850992, 0.19855558182302194, 0.18861140520562614, 0.1863610731729023, 0.1851235151880947, 0.1748610172645271, 0.1618330935210982, 0.15794311300188274, 0.15575658578718587, 0.15541659805452948] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4250654421597511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4250654421597511, 0.18141720705969344] ***
*** starting iteration: 2; err: [Inf, 0.4250654421597511, 0.18141720705969344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4250654421597511, 0.18141720705969344, 0.17587865894883262] ***
*** starting iteration: 3; err: [Inf, 0.4250654421597511, 0.18141720705969344, 0.17587865894883262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4250654421597511, 0.18141720705969344, 0.17587865894883262, 0.1755340527922794] ***
*** finished computation of 7 references, err: [Inf, 0.4250654421597511, 0.18141720705969344, 0.17587865894883262, 0.1755340527922794] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 8]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44754439664211026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44754439664211026, 0.17989910715878824] ***
*** starting iteration: 2; err: [Inf, 0.44754439664211026, 0.17989910715878824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44754439664211026, 0.17989910715878824, 0.17084245412807664] ***
*** starting iteration: 3; err: [Inf, 0.44754439664211026, 0.17989910715878824, 0.17084245412807664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44754439664211026, 0.17989910715878824, 0.17084245412807664, 0.1704742613396228] ***
*** finished computation of 7 references, err: [Inf, 0.44754439664211026, 0.17989910715878824, 0.17084245412807664, 0.1704742613396228] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 19, 2]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 19), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39815465378050957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39815465378050957, 0.20715637304152357] ***
*** starting iteration: 2; err: [Inf, 0.39815465378050957, 0.20715637304152357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785] ***
*** starting iteration: 3; err: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298] ***
*** starting iteration: 4; err: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298, 0.19111927090875183] ***
*** starting iteration: 5; err: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298, 0.19111927090875183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298, 0.19111927090875183, 0.18795337815993668] ***
*** starting iteration: 6; err: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298, 0.19111927090875183, 0.18795337815993668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298, 0.19111927090875183, 0.18795337815993668, 0.18709424687106752] ***
*** finished computation of 7 references, err: [Inf, 0.39815465378050957, 0.20715637304152357, 0.19699830877222785, 0.19384163195680298, 0.19111927090875183, 0.18795337815993668, 0.18709424687106752] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 3]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 21), (3, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40677125633515515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288] ***
*** starting iteration: 2; err: [Inf, 0.40677125633515515, 0.21429108449720288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863] ***
*** starting iteration: 3; err: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912] ***
*** starting iteration: 4; err: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644] ***
*** starting iteration: 5; err: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644, 0.1708178662339632] ***
*** starting iteration: 6; err: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644, 0.1708178662339632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644, 0.1708178662339632, 0.16653563711154323] ***
*** starting iteration: 7; err: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644, 0.1708178662339632, 0.16653563711154323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644, 0.1708178662339632, 0.16653563711154323, 0.16653563711154323] ***
*** finished computation of 7 references, err: [Inf, 0.40677125633515515, 0.21429108449720288, 0.18880628590818863, 0.1812293329607912, 0.1753929300335644, 0.1708178662339632, 0.16653563711154323, 0.16653563711154323] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 12]]
** centroid: 1, normalized-entropy: 0.9494520153879484, [(2, 7), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45170000836304425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45170000836304425, 0.28303757029095694] ***
*** starting iteration: 2; err: [Inf, 0.45170000836304425, 0.28303757029095694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45170000836304425, 0.28303757029095694, 0.2654313853341171] ***
*** starting iteration: 3; err: [Inf, 0.45170000836304425, 0.28303757029095694, 0.2654313853341171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45170000836304425, 0.28303757029095694, 0.2654313853341171, 0.2645620508905665] ***
*** finished computation of 7 references, err: [Inf, 0.45170000836304425, 0.28303757029095694, 0.2654313853341171, 0.2645620508905665] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 20]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 8), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7218000069702514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218000069702514, 0.2882850230498204] ***
*** starting iteration: 2; err: [Inf, 0.7218000069702514, 0.2882850230498204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218000069702514, 0.2882850230498204, 0.2732337935012889] ***
*** starting iteration: 3; err: [Inf, 0.7218000069702514, 0.2882850230498204, 0.2732337935012889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7218000069702514, 0.2882850230498204, 0.2732337935012889, 0.2637545591149269] ***
*** finished computation of 7 references, err: [Inf, 0.7218000069702514, 0.2882850230498204, 0.2732337935012889, 0.2637545591149269] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 7]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 16]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(2, 6), (3, 16)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5701999994063672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701999994063672, 0.24734087371166294] ***
*** starting iteration: 2; err: [Inf, 0.5701999994063672, 0.24734087371166294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701999994063672, 0.24734087371166294, 0.2373527985213799] ***
*** starting iteration: 3; err: [Inf, 0.5701999994063672, 0.24734087371166294, 0.2373527985213799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701999994063672, 0.24734087371166294, 0.2373527985213799, 0.2335300643818474] ***
*** finished computation of 7 references, err: [Inf, 0.5701999994063672, 0.24734087371166294, 0.2373527985213799, 0.2335300643818474] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 11]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 2), (3, 11)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5130000018006946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5130000018006946, 0.25421870109063166] ***
*** starting iteration: 2; err: [Inf, 0.5130000018006946, 0.25421870109063166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5130000018006946, 0.25421870109063166, 0.23793976834507544] ***
*** starting iteration: 3; err: [Inf, 0.5130000018006946, 0.25421870109063166, 0.23793976834507544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5130000018006946, 0.25421870109063166, 0.23793976834507544, 0.23668743764678438] ***
*** finished computation of 7 references, err: [Inf, 0.5130000018006946, 0.25421870109063166, 0.23793976834507544, 0.23668743764678438] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 6, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5320000044430003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5320000044430003, 0.2587344240750404] ***
*** starting iteration: 2; err: [Inf, 0.5320000044430003, 0.2587344240750404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5320000044430003, 0.2587344240750404, 0.24847871844186517] ***
*** starting iteration: 3; err: [Inf, 0.5320000044430003, 0.2587344240750404, 0.24847871844186517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5320000044430003, 0.2587344240750404, 0.24847871844186517, 0.24847871844186517] ***
*** finished computation of 7 references, err: [Inf, 0.5320000044430003, 0.2587344240750404, 0.24847871844186517, 0.24847871844186517] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5205000012144073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000012144073, 0.28245329160701294] ***
*** starting iteration: 2; err: [Inf, 0.5205000012144073, 0.28245329160701294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000012144073, 0.28245329160701294, 0.26104113282307684] ***
*** starting iteration: 3; err: [Inf, 0.5205000012144073, 0.28245329160701294, 0.26104113282307684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5205000012144073, 0.28245329160701294, 0.26104113282307684, 0.24807721369848695] ***
*** finished computation of 7 references, err: [Inf, 0.5205000012144073, 0.28245329160701294, 0.26104113282307684, 0.24807721369848695] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 12, 9]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 15
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.45710000371954096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45710000371954096, 0.32186679971492166] ***
*** starting iteration: 2; err: [Inf, 0.45710000371954096, 0.32186679971492166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45710000371954096, 0.32186679971492166, 0.315571500132385] ***
*** starting iteration: 3; err: [Inf, 0.45710000371954096, 0.32186679971492166, 0.315571500132385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45710000371954096, 0.32186679971492166, 0.315571500132385, 0.3107645479922309] ***
*** finished computation of 7 references, err: [Inf, 0.45710000371954096, 0.32186679971492166, 0.315571500132385, 0.3107645479922309] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 16]]
** centroid: 4, normalized-entropy: 1.0, [(2, 16), (3, 16)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7814000081664838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7814000081664838, 0.26281573225035343] ***
*** starting iteration: 2; err: [Inf, 0.7814000081664838, 0.26281573225035343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7814000081664838, 0.26281573225035343, 0.2487185775121616] ***
*** starting iteration: 3; err: [Inf, 0.7814000081664838, 0.26281573225035343, 0.2487185775121616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7814000081664838, 0.26281573225035343, 0.2487185775121616, 0.2487185775121616] ***
*** finished computation of 7 references, err: [Inf, 0.7814000081664838, 0.26281573225035343, 0.2487185775121616, 0.2487185775121616] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 1]]
** centroid: 1, normalized-entropy: 0.23519338181924157, [(2, 25), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 9]]
** centroid: 2, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.666099992554913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.666099992554913, 0.3757098757073772] ***
*** starting iteration: 2; err: [Inf, 0.666099992554913, 0.3757098757073772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.666099992554913, 0.3757098757073772, 0.3159158123899708] ***
*** starting iteration: 3; err: [Inf, 0.666099992554913, 0.3757098757073772, 0.3159158123899708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.666099992554913, 0.3757098757073772, 0.3159158123899708, 0.3019836467653932] ***
*** finished computation of 7 references, err: [Inf, 0.666099992554913, 0.3757098757073772, 0.3159158123899708, 0.3019836467653932] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 8, 13]]
** centroid: 2, normalized-entropy: 0.9587118829771317, [(2, 8), (3, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6833015608207801] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6833015608207801, 0.31361867327706905] ***
*** starting iteration: 2; err: [Inf, 0.6833015608207801, 0.31361867327706905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6833015608207801, 0.31361867327706905, 0.3081874634690034] ***
*** starting iteration: 3; err: [Inf, 0.6833015608207801, 0.31361867327706905, 0.3081874634690034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6833015608207801, 0.31361867327706905, 0.3081874634690034, 0.3066969261345564] ***
*** finished computation of 7 references, err: [Inf, 0.6833015608207801, 0.31361867327706905, 0.3081874634690034, 0.3066969261345564] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38266677347234973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38266677347234973, 0.24607062607873467] ***
*** starting iteration: 2; err: [Inf, 0.38266677347234973, 0.24607062607873467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38266677347234973, 0.24607062607873467, 0.21525061704616608] ***
*** starting iteration: 3; err: [Inf, 0.38266677347234973, 0.24607062607873467, 0.21525061704616608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38266677347234973, 0.24607062607873467, 0.21525061704616608, 0.21044124287278357] ***
*** finished computation of 7 references, err: [Inf, 0.38266677347234973, 0.24607062607873467, 0.21525061704616608, 0.21044124287278357] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6644603646711486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6644603646711486, 0.357787294472161] ***
*** starting iteration: 2; err: [Inf, 0.6644603646711486, 0.357787294472161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6644603646711486, 0.357787294472161, 0.3318871059564351] ***
*** starting iteration: 3; err: [Inf, 0.6644603646711486, 0.357787294472161, 0.3318871059564351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6644603646711486, 0.357787294472161, 0.3318871059564351, 0.3183943983037738] ***
*** finished computation of 7 references, err: [Inf, 0.6644603646711486, 0.357787294472161, 0.3318871059564351, 0.3183943983037738] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 1, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 7), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 24, 15]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(2, 24), (3, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.6021000074011669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6021000074011669, 0.23753660266780174] ***
*** starting iteration: 2; err: [Inf, 0.6021000074011669, 0.23753660266780174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422] ***
*** starting iteration: 3; err: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422, 0.21404944712035212] ***
*** starting iteration: 4; err: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422, 0.21404944712035212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422, 0.21404944712035212, 0.21225687616462374] ***
*** starting iteration: 5; err: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422, 0.21404944712035212, 0.21225687616462374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422, 0.21404944712035212, 0.21225687616462374, 0.21225687616462374] ***
*** finished computation of 7 references, err: [Inf, 0.6021000074011669, 0.23753660266780174, 0.219124364453422, 0.21404944712035212, 0.21225687616462374, 0.21225687616462374] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6959000095745956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6959000095745956, 0.2895372771350134] ***
*** starting iteration: 2; err: [Inf, 0.6959000095745956, 0.2895372771350134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6959000095745956, 0.2895372771350134, 0.27331848410402904] ***
*** starting iteration: 3; err: [Inf, 0.6959000095745956, 0.2895372771350134, 0.27331848410402904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6959000095745956, 0.2895372771350134, 0.27331848410402904, 0.26586278363498445] ***
*** starting iteration: 4; err: [Inf, 0.6959000095745956, 0.2895372771350134, 0.27331848410402904, 0.26586278363498445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6959000095745956, 0.2895372771350134, 0.27331848410402904, 0.26586278363498445, 0.2650369580014832] ***
*** finished computation of 7 references, err: [Inf, 0.6959000095745956, 0.2895372771350134, 0.27331848410402904, 0.26586278363498445, 0.2650369580014832] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 21]]
** centroid: 4, normalized-entropy: 0.634309554640566, [(2, 4), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 2]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(2, 5), (3, 2)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6249999983060459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6249999983060459, 0.24720338586626242] ***
*** starting iteration: 2; err: [Inf, 0.6249999983060459, 0.24720338586626242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6249999983060459, 0.24720338586626242, 0.23971425620981318] ***
*** starting iteration: 3; err: [Inf, 0.6249999983060459, 0.24720338586626242, 0.23971425620981318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6249999983060459, 0.24720338586626242, 0.23971425620981318, 0.23857940447257936] ***
*** starting iteration: 4; err: [Inf, 0.6249999983060459, 0.24720338586626242, 0.23971425620981318, 0.23857940447257936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6249999983060459, 0.24720338586626242, 0.23971425620981318, 0.23857940447257936, 0.23787311044819365] ***
*** finished computation of 7 references, err: [Inf, 0.6249999983060459, 0.24720338586626242, 0.23971425620981318, 0.23857940447257936, 0.23787311044819365] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 5]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 5]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 10), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 9 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.7, 2.621052631578947, 3.9894736842105263, 1.2210526315789474], [4.929411764705883, 3.3000000000000003, 1.4764705882352938, 0.2529411764705882], [7.528571428571429, 3.2142857142857144, 6.285714285714286, 1.957142857142857], [6.423529411764706, 3.0176470588235302, 4.670588235294118, 1.4941176470588236], [6.081818181818182, 2.7818181818181817, 5.109090909090909, 1.8727272727272728], [4.433333333333334, 2.9166666666666665, 1.3166666666666667, 0.20000000000000004], [5.375, 3.758333333333333, 1.4916666666666665, 0.24166666666666672], [6.62, 3.0700000000000007, 5.619999999999999, 2.22]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 3, 2, 3, 1, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.335714285714286, 3.728571428571428, 1.4928571428571427, 0.26428571428571435], [7.442857142857143, 3.142857142857143, 6.285714285714286, 2.1], [5.75625, 2.7625, 4.237500000000001, 1.2875], [5.5, 2.5, 4.8, 1.7333333333333334], [6.416666666666667, 3.0, 4.658333333333334, 1.4333333333333333], [6.187499999999999, 2.8375, 4.9625, 1.8125000000000002], [5.327272727272728, 2.4545454545454546, 3.5909090909090904, 1.1181818181818184], [4.746666666666667, 3.12, 1.4666666666666666, 0.18666666666666668], [6.5428571428571445, 3.085714285714286, 5.564285714285715, 2.15]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 2, 1, 3], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.85, 3.1, 4.85, 1.5499999999999998], [6.500000000000002, 3.0300000000000002, 5.505, 2.13], [4.888888888888889, 3.281481481481481, 1.4370370370370371, 0.24814814814814815], [5.390000000000001, 2.4899999999999998, 3.91, 1.21], [6.121428571428572, 2.864285714285714, 4.521428571428571, 1.4571428571428575], [5.925, 2.7375, 4.9625, 1.8250000000000002], [7.566666666666667, 2.8499999999999996, 6.45, 2.066666666666667], [7.3, 3.3499999999999996, 6.125, 2.1], [5.311111111111113, 3.9444444444444446, 1.5333333333333334, 0.3111111111111111]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 2, 3, 3, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[97, 1, 1, 4, 2, 1, 3, 1, 12, 18, 30, 25, 27, 10, 20, 26, 29, 24, 28, 20, 1, 44, 20, 41, 1, 19, 26, 14, 34, 20, 26, 21, 19, 32, 2, 1, 24, 38, 35, 36, 26, 44, 18, 21, 23, 72, 22, 54, 24, 14, 26, 34, 2, 15, 34, 31, 51, 24, 34, 33, 34, 32, 44, 25, 18, 42, 1, 53, 18, 27, 25, 38, 31, 47, 60, 40, 53, 37, 38, 28, 40, 41, 35, 21, 31, 36, 50, 18, 39, 8, 53, 1, 9, 39, 26, 31, 53, 14, 25, 36, 41, 52, 28, 31, 31, 42, 28, 26, 58, 24, 36, 32, 44, 37, 50, 44, 29, 50, 24, 28, 35, 34, 29, 21, 27, 35, 25, 42, 32, 62, 29, 29, 45, 13, 25, 25, 24, 29, 1, 22, 1, 44, 40, 39, 37, 37, 64, 37, 53, 30, 53, 40, 32, 38, 28, 54, 24, 3, 27, 27, 39, 28, 1, 37, 30, 16, 65, 28, 38, 35, 48, 33, 41, 54, 61, 32, 31, 34, 36, 7, 41, 51, 14, 41, 47, 33, 39, 62, 32, 33, 38, 45, 19, 29, 49, 44, 25, 30, 27, 29, 34, 48, 53, 34, 52, 29, 32, 26, 53, 40, 31, 27, 28, 54, 32, 30, 29, 32, 66, 48, 31, 37, 1, 30, 43, 89, 28, 41, 47, 45, 32, 47, 43, 25, 1, 70, 25, 36, 30, 41, 49, 16, 26, 35, 35, 39, 47, 54, 32, 44, 58, 60, 55, 23, 49, 27, 54, 43, 41, 52, 60, 46, 39, 46, 22, 29, 50, 64, 28, 49, 37, 40, 33, 30, 36, 34, 22, 33, 30, 26, 48, 45, 43, 28, 14, 23, 14, 50, 30, 29, 54, 22, 42, 55, 36, 57, 4, 30, 36, 46]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.643, speedup = 0.37817448600393166, eval_ratio = 0.04161)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.418402777777778,"recall":0.4166666666666669,"f1":null,"seconds":6.883032619953156e-5,"exhaustive_search_seconds":0.00034478120505809784,"evaluations":340.6875,"distances_sum":1692.0648357287976}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5711805555555555,"recall":0.5711805555555555,"f1":0.5711805555555555,"seconds":0.00010468252003192902,"exhaustive_search_seconds":0.00034478120505809784,"evaluations":380.984375,"distances_sum":1593.1667145067645}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6675347222222218,"recall":0.6675347222222218,"f1":0.6675347222222218,"seconds":0.00013783574104309082,"exhaustive_search_seconds":0.00034478120505809784,"evaluations":422.4140625,"distances_sum":1550.9168889239245}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.756944444444444,"recall":0.756944444444444,"f1":0.756944444444444,"seconds":0.00017170608043670654,"exhaustive_search_seconds":0.00034478120505809784,"evaluations":464.0078125,"distances_sum":1522.8701325401094}
KCenters.DeloneInvIndex> reached performance {"precision":0.8020833333333328,"recall":0.8020833333333328,"f1":0.8020833333333328,"seconds":0.00020190328359603882,"exhaustive_search_seconds":0.00034478120505809784,"evaluations":505.0625,"distances_sum":1511.0074106695224}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7770000000000001, speedup = 1.714268488261326, eval_ratio = 0.049377)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
