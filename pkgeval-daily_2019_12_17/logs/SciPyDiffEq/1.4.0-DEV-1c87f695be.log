Julia Version 1.4.0-DEV.596
Commit 1c87f695be (2019-12-12 22:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed ZygoteRules ───────────────── v0.2.0
 Installed FunctionWrappers ──────────── v1.0.0
 Installed TreeViews ─────────────────── v0.3.0
 Installed Compat ────────────────────── v2.2.0
 Installed SciPyDiffEq ───────────────── v0.1.0
 Installed DiffEqDiffTools ───────────── v1.6.0
 Installed ArrayInterface ────────────── v2.1.0
 Installed DataStructures ────────────── v0.17.6
 Installed DocStringExtensions ───────── v0.8.1
 Installed Requires ──────────────────── v0.5.2
 Installed Conda ─────────────────────── v1.3.0
 Installed VersionParsing ────────────── v1.2.0
 Installed StaticArrays ──────────────── v0.12.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed PyCall ────────────────────── v1.91.2
 Installed JSON ──────────────────────── v0.21.0
 Installed MuladdMacro ───────────────── v0.2.1
 Installed Parsers ───────────────────── v0.3.10
 Installed Roots ─────────────────────── v0.8.4
 Installed RecipesBase ───────────────── v0.7.0
 Installed RecursiveArrayTools ───────── v1.2.0
 Installed MacroTools ────────────────── v0.5.3
 Installed IterativeSolvers ──────────── v0.8.1
 Installed DiffEqBase ────────────────── v6.9.1
 Installed Reexport ──────────────────── v0.2.0
 Installed RecursiveFactorization ────── v0.1.0
 Installed Parameters ────────────────── v0.12.0
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [505e40e9] + SciPyDiffEq v0.1.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [4fba245c] + ArrayInterface v2.1.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.6
  [2b5f629d] + DiffEqBase v6.9.1
  [01453d9d] + DiffEqDiffTools v1.6.0
  [ffbed154] + DocStringExtensions v0.8.1
  [069b7b12] + FunctionWrappers v1.0.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.3
  [46d2c3a1] + MuladdMacro v0.2.1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [438e738f] + PyCall v1.91.2
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.2.0
  [f2c3362d] + RecursiveFactorization v0.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [f2b01f46] + Roots v0.8.4
  [505e40e9] + SciPyDiffEq v0.1.0
  [90137ffa] + StaticArrays v0.12.1
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [81def892] + VersionParsing v1.2.0
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
   Testing SciPyDiffEq
 Resolving package versions...
Status `/tmp/jl_Q8lfBu/Manifest.toml`
  [4fba245c] ArrayInterface v2.1.0
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [864edb3b] DataStructures v0.17.6
  [2b5f629d] DiffEqBase v6.9.1
  [01453d9d] DiffEqDiffTools v1.6.0
  [ffbed154] DocStringExtensions v0.8.1
  [069b7b12] FunctionWrappers v1.0.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.3
  [46d2c3a1] MuladdMacro v0.2.1
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [438e738f] PyCall v1.91.2
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v1.2.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [f2b01f46] Roots v0.8.4
  [505e40e9] SciPyDiffEq v0.1.0
  [90137ffa] StaticArrays v0.12.1
  [3783bdb8] TableTraits v1.0.0
  [a2a6695c] TreeViews v0.3.0
  [81def892] VersionParsing v1.2.0
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package scipy.integrate could not be found by pyimport. Usually this means
that you did not install scipy.integrate in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the scipy.integrate module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the scipy.integrate module, you can use `pyimport_conda("scipy.integrate", PKG)`,
where PKG is the Anaconda package the contains the module scipy.integrate,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'scipy'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:544
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/ttONZ/src/PyCall.jl:702
 [3] __init__() at /home/pkgeval/.julia/packages/SciPyDiffEq/ZVtQF/src/SciPyDiffEq.jl:17
 [4] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:690
 [5] _require_from_serialized(::String) at ./loading.jl:741
 [6] _require(::Base.PkgId) at ./loading.jl:1032
 [7] require(::Base.PkgId) at ./loading.jl:920
 [8] require(::Module, ::Symbol) at ./loading.jl:915
 [9] include(::String) at ./client.jl:439
 [10] top-level scope at none:6
during initialization of module SciPyDiffEq
in expression starting at /home/pkgeval/.julia/packages/SciPyDiffEq/ZVtQF/test/runtests.jl:1
ERROR: Package SciPyDiffEq errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1391
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:287
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:274
 [5] #test#56 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:268 [inlined]
 [7] #test#55 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:267 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:266
 [11] top-level scope at none:12
