Julia Version 1.4.0-DEV.630
Commit 2aac82eed7 (2019-12-17 21:57 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_9NeC2R/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_9NeC2R/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_9NeC2R/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  2.797813 seconds (3.48 M allocations: 727.550 MiB, 11.83% gc time)
  0.728917 seconds (81.45 k allocations: 561.032 MiB, 2.87% gc time)

Testing LLL on 10x10 complex matrix...
  4.526853 seconds (9.87 M allocations: 475.760 MiB, 8.15% gc time)
  0.000405 seconds (796 allocations: 145.891 KiB)
Testing Seysen on same 10x10 complex matrix...
  1.262153 seconds (2.29 M allocations: 117.965 MiB, 3.59% gc time)
  0.000691 seconds (563 allocations: 230.391 KiB)
Testing VBLAST on same 10x10 complex matrix...
  1.278426 seconds (1.95 M allocations: 94.626 MiB, 2.87% gc time)
  0.000374 seconds (181 allocations: 121.000 KiB)
Testing Brun on real part of same 10x10 matrix...
  0.898423 seconds (1.55 M allocations: 80.668 MiB, 4.08% gc time)
  0.000115 seconds (24 allocations: 12.188 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  1.342919 seconds (4.00 M allocations: 312.296 MiB, 6.59% gc time)
  0.403280 seconds (2.00 M allocations: 209.838 MiB, 8.99% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  0.606089 seconds (312.40 k allocations: 335.329 MiB, 14.08% gc time)
min norm of lll-reduced basis is 29.30870177950569
  3.730290 seconds (4.43 M allocations: 1.230 GiB, 4.07% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
