Julia Version 1.4.0-DEV.660
Commit 27eb582279 (2019-12-23 19:29 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataValueInterfaces ───────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.8
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed DataStructures ────────────── v0.17.6
 Installed Parsers ───────────────────── v0.3.10
 Installed Compat ────────────────────── v3.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed Reexport ──────────────────── v0.2.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed SimilaritySearch ──────────── v0.3.17
 Installed PooledArrays ──────────────── v0.5.3
 Installed CategoricalArrays ─────────── v0.7.5
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SortingAlgorithms ─────────── v0.3.1
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_P7wQun/Project.toml`
 [no changes]
  Updating `/tmp/jl_P7wQun/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_P7wQun/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 158.01999999999995
[ Info: 95.42000000000004
[ Info: 36.96
[ Info: 26.99999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 75.78000114538527
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.077234808314646
inertia(cdnet.distances) = 25.584964136932825
inertia(crand.distances) = 19.906301295280645
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8660605019980026,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.34375,"distances_sum":2382.010636605245}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1591796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1591796875,"f1":null,"seconds":2.5779008865356445e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":4.0703125,"distances_sum":498.8506538274997}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.322265625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.322265625,"f1":null,"seconds":2.989545464515686e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":4.90625,"distances_sum":977.4605740651539}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8660605019980026,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.34375,"distances_sum":2382.010636605245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9254183316683323,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.5859375,"distances_sum":2791.003266403923}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9040438727938733,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.5625,"distances_sum":2592.5326313382793}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485977564102567,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.7421875,"distances_sum":2933.9579325856466}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9038149350649357,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.5390625,"distances_sum":2667.945305035503}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9485977564102567,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.7421875,"distances_sum":2933.9579325856466}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495020604395611,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.6875,"distances_sum":2958.9081147233333}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9580013736263739,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.765625,"distances_sum":3013.7149432238693}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9511790293040296,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.7265625,"distances_sum":2962.3190562246295}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9500457875457882,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.7734375,"distances_sum":2948.0624608734643}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9580013736263739,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.765625,"distances_sum":3013.7149432238693}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9580013736263739,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":2.000480890274048e-6,"evaluations":8.765625,"distances_sum":3013.7149432238693}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5283203125,"f1":0.6807040182040187,"seconds":4.235655069351196e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.703125,"distances_sum":1444.5461768078092}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8451317779442789,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3046875,"distances_sum":2206.0251134744785}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7674521658896665,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.96875,"distances_sum":1771.130522822257}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8451317779442789,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.3046875,"distances_sum":2206.0251134744785}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9017544955044964,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.65625,"distances_sum":2447.7054014048317}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9313015109890119,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5859375,"distances_sum":2726.390389418377}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9316709332334339,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6796875,"distances_sum":2697.6586176305145}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9458791208791214,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2781.824478872318}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9047936438561446,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.65625,"distances_sum":2489.3531249356156}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9290693681318687,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2685.1961742133794}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9458791208791214,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2781.824478872318}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.963604624542125,"seconds":6.165355443954468e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.84375,"distances_sum":2933.411657507006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9735004578754581,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2982.0934206104685}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522607600732608,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8359375,"distances_sum":2826.9141008649267}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.890625,"distances_sum":2985.1867542273526}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585393772893779,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2875.727918057301}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9735004578754581,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2982.0934206104685}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9735004578754581,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2982.0934206104685}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.764124417249418,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.4140625,"distances_sum":1827.135665311579}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8408180361305368,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0078125,"distances_sum":2148.3405924493436}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8408180361305368,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0078125,"distances_sum":2148.3405924493436}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9228771228771235,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.609375,"distances_sum":2607.444713844308}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9450721153846162,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2825.1910592393774}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9450721153846162,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2825.1910592393774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718578296703301,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.875,"distances_sum":2966.9292296069507}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612179487179495,"seconds":6.737187504768372e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.796875,"distances_sum":2912.179297310602}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9604567307692313,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7734375,"distances_sum":2903.5516265700044}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621909340659345,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8203125,"distances_sum":2891.9791843678386}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718578296703301,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.875,"distances_sum":2966.9292296069507}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718578296703301,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.875,"distances_sum":2966.9292296069507}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.33984375,"f1":null,"seconds":3.593042492866516e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":5.7578125,"distances_sum":950.6668828995985}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7620230463980472,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.859375,"distances_sum":1723.1183574823478}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6328125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6328125,"f1":0.7620230463980472,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.859375,"distances_sum":1723.1183574823478}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.841040730103231,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.1640625,"distances_sum":2076.92285035729}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8997653388278396,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.421875,"distances_sum":2453.247432912511}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7932142510267518,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":7.984375,"distances_sum":1900.9317420110708}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.8997653388278396,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.421875,"distances_sum":2453.247432912511}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670615842490846,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8359375,"distances_sum":2917.0320359766647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598672161172166,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.828125,"distances_sum":2856.275079325932}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9026052072927079,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.6484375,"distances_sum":2451.996836161035}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9220014360639369,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.734375,"distances_sum":2579.045994656484}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9320632492507499,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.7578125,"distances_sum":2645.9886386219896}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670615842490846,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8359375,"distances_sum":2917.0320359766647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670615842490846,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5534460544586182e-6,"evaluations":8.8359375,"distances_sum":2917.0320359766647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8707339535464543,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.171875,"distances_sum":2188.5541034057283}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8707339535464543,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.171875,"distances_sum":2188.5541034057283}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9165095321345329,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.6171875,"distances_sum":2501.1437631023978}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9438129578754585,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2761.8028462178163}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9438129578754585,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2761.8028462178163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9438129578754585,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2761.8028462178163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9438129578754585,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.75,"distances_sum":2761.8028462178163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3701171875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3701171875,"f1":null,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.265625,"distances_sum":598.4277234041676}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1533203125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1533203125,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":5.65625,"distances_sum":311.40302816400384}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3701171875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.3701171875,"f1":null,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":6.265625,"distances_sum":598.4277234041676}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.9673177083333334,"recall":0.5400390625,"f1":0.6809531614219118,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.40625,"distances_sum":1010.2809051242559}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5400390625,"state":{"ssize":4,"bsize":3},"perf":{"precision":0.9673177083333334,"recall":0.5400390625,"f1":0.6809531614219118,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.40625,"distances_sum":1010.2809051242559}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9717261904761905,"recall":0.8564453125,"f1":0.906684981684982,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8046875,"distances_sum":1841.726185827193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":8,"bsize":4}, perf: {"precision":0.9547433035714282,"recall":0.638671875,"f1":0.7554919906482409,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":7.875,"distances_sum":1248.5019370409925}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9717261904761905,"recall":0.8564453125,"f1":0.906684981684982,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8046875,"distances_sum":1841.726185827193}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8564453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9717261904761905,"recall":0.8564453125,"f1":0.906684981684982,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.687556505203247e-6,"evaluations":8.8046875,"distances_sum":1841.726185827193}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.7066638469696045e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.015625,"distances_sum":417.56382511245687}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8084082584082591,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.21875,"distances_sum":1439.0040247122754}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8084082584082591,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.21875,"distances_sum":1439.0040247122754}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8690073815073822,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4765625,"distances_sum":1708.2940411723293}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9313046328671336,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6796875,"distances_sum":2018.2389445937495}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9313046328671336,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6796875,"distances_sum":2018.2389445937495}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9634901556776562,"seconds":7.050111889839172e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2226.8547000550393}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9712282509157514,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2308.6933913873636}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9425511988011995,"seconds":6.107613444328308e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2116.8284320382613}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9667983058608063,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":2277.7768682192554}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9712282509157514,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2308.6933913873636}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9712282509157514,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2308.6933913873636}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7093411796536803,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5625,"distances_sum":1130.6157394132717}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5693359375,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5693359375,"f1":0.7093411796536803,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5625,"distances_sum":1130.6157394132717}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7145193348318355,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.6015625,"distances_sum":1164.2363671855799}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9263850732600739,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7421875,"distances_sum":1926.3544692427213}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.576171875,"f1":null,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.4140625,"distances_sum":1169.5139790316457}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7810548826173833,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.0,"distances_sum":1311.2790397523781}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7868535977910985,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.015625,"distances_sum":1387.7013927574383}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9263850732600739,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7421875,"distances_sum":1926.3544692427213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617788461538468,"seconds":6.506219506263733e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2171.712852084499}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9545444139194144,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.796875,"distances_sum":2156.798628170234}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333338,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2264.537660384693}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9387534340659348,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8125,"distances_sum":1993.666042432303}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333338,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2264.537660384693}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333338,"seconds":6.271526217460632e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9140625,"distances_sum":2264.537660384693}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8493053821178829,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1953125,"distances_sum":1617.0906736465254}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":3.1106173992156982e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.6953125,"distances_sum":395.3182590785472}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8493053821178829,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1953125,"distances_sum":1617.0906736465254}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8778367465867472,"seconds":1.2850388884544373e-5,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5078125,"distances_sum":1707.728796190889}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9301458957708961,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6328125,"distances_sum":1988.0830895580175}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449519230769236,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.75,"distances_sum":2044.393118456406}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449519230769236,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.75,"distances_sum":2044.393118456406}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9667067307692314,"seconds":6.664544343948364e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2201.0629491825116}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9618131868131872,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2156.479825381492}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.971354166666667,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9296875,"distances_sum":2190.5296660052927}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720982142857146,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2214.6445167596376}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9477392399267405,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6796875,"distances_sum":2113.180746111777}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720982142857146,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2214.6445167596376}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720982142857146,"seconds":6.6123902797698975e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2214.6445167596376}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8002903346653355,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.0234375,"distances_sum":1237.2175793933739}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.4375,"distances_sum":968.3029038638654}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7135231088356094,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.546875,"distances_sum":1006.9916764889042}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.8002903346653355,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.0234375,"distances_sum":1237.2175793933739}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.811511405261406,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.046875,"distances_sum":1305.3919232499118}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8135222416472423,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.046875,"distances_sum":1325.2982299984806}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949410485347986,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8046875,"distances_sum":1920.261337227569}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8787837162837172,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4609375,"distances_sum":1536.8039024319316}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.933361950549451,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":1759.9881677363255}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8154111513486522,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.0,"distances_sum":1309.6700066471724}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.949410485347986,"seconds":6.418675184249878e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8046875,"distances_sum":1920.261337227569}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9587854853479858,"seconds":6.6999346017837524e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9296875,"distances_sum":1960.8371071467323}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623168498168503,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8515625,"distances_sum":2019.7091648085534}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9748340201465204,"seconds":6.9607049226760864e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.953125,"distances_sum":2073.4255227844164}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2070.44752436095}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9588369963369967,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":1982.0347907116989}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2070.44752436095}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975280448717949,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.9609375,"distances_sum":2070.44752436095}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8582199050949058,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4921875,"distances_sum":1569.3149699379712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.4375,"distances_sum":750.488017791535}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.234375,"distances_sum":374.24531660236846}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8582199050949058,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.4921875,"distances_sum":1569.3149699379712}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9529075091575097,"seconds":6.647780537605286e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2086.5995750474603}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8603769494394501,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.484375,"distances_sum":1590.2367738605087}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9529075091575097,"seconds":6.647780537605286e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2086.5995750474603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807119963369966,"seconds":1.0050833225250244e-5,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9609375,"distances_sum":2266.8906784004143}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.961876144688645,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9453125,"distances_sum":2133.1301496332417}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772893772893776,"seconds":8.020550012588501e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.90625,"distances_sum":2263.5205514498866}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369966,"seconds":1.0050833225250244e-5,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9609375,"distances_sum":2266.8906784004143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369966,"seconds":1.0050833225250244e-5,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9609375,"distances_sum":2266.8906784004143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7898055069930078,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":7.84375,"distances_sum":1380.879772384387}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.53125,"f1":null,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":6.9296875,"distances_sum":1073.266434108644}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7898055069930078,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":7.84375,"distances_sum":1380.879772384387}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8519100690975698,"seconds":7.266178727149963e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.1640625,"distances_sum":1602.4240268384383}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8889567030192038,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.4765625,"distances_sum":1814.6530379028263}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9251831501831507,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.734375,"distances_sum":2000.4469879596768}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9251831501831507,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.734375,"distances_sum":2000.4469879596768}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9662030677655682,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.875,"distances_sum":2270.4140551827827}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9464915293040299,"seconds":6.910413503646851e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.6953125,"distances_sum":2172.991998588733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612580128205134,"seconds":7.5623393058776855e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.8515625,"distances_sum":2230.493821544828}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9662030677655682,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.875,"distances_sum":2270.4140551827827}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9662030677655682,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":2.9690563678741455e-6,"evaluations":8.875,"distances_sum":2270.4140551827827}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2900390625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.2900390625,"f1":null,"seconds":2.9671937227249146e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.9921875,"distances_sum":694.2478808823396}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4658203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4658203125,"f1":0.6247433122433126,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.109375,"distances_sum":1031.396161647162}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6240234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6240234375,"f1":0.7560422216672223,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4453125,"distances_sum":1395.6288818548883}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6240234375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6240234375,"f1":0.7560422216672223,"seconds":4.434958100318909e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4453125,"distances_sum":1395.6288818548883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9032457126207131,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5625,"distances_sum":1996.3052471768954}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8901738886113892,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5234375,"distances_sum":1924.4867657435138}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9368074633699639,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.78125,"distances_sum":2107.8474349247053}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9291323260073265,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.671875,"distances_sum":2091.7939240142246}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7849296536796544,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.6953125,"distances_sum":1444.9801410588877}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9368074633699639,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.78125,"distances_sum":2107.8474349247053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717662545787548,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2325.300238986114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664434523809529,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2294.862163341093}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521806318681322,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8125,"distances_sum":2237.283626790567}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.963375686813187,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2310.110780047376}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718406593406598,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2341.209100028362}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956759386446887,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2250.5247780502796}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616674991674995,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.921875,"distances_sum":2258.2448754403677}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717662545787548,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2325.300238986114}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9717662545787548,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9296875,"distances_sum":2325.300238986114}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2001953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2001953125,"f1":null,"seconds":3.0584633350372314e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.4453125,"distances_sum":411.1821600368211}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8885765276390285,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.71875,"distances_sum":1830.7058440249918}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8885765276390285,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.71875,"distances_sum":1830.7058440249918}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9453811813186819,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2093.7612416195775}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9453811813186819,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2093.7612416195775}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9598443223443227,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2204.0255711978057}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9821428571428574,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.984375,"distances_sum":2350.190469155997}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9821428571428574,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.984375,"distances_sum":2350.190469155997}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9821428571428574,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.984375,"distances_sum":2350.190469155997}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8572349525474534,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1875,"distances_sum":1676.7156676085826}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":3.4794211387634277e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.2890625,"distances_sum":845.7416551194489}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8572349525474534,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.1875,"distances_sum":1676.7156676085826}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9485550907425913,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2146.0593699823885}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9513850732600737,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":2200.9956162969133}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8978027181152188,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6015625,"distances_sum":1817.1753760440206}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.914059898434899,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.6328125,"distances_sum":1921.7639496586576}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9180918040293046,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7265625,"distances_sum":1942.7072155742317}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9513850732600737,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":2200.9956162969133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9784626831501835,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.96875,"distances_sum":2363.3214287782357}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.976636904761905,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.953125,"distances_sum":2349.5372306690365}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604624542124546,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8984375,"distances_sum":2252.695555745372}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9784626831501835,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.96875,"distances_sum":2363.3214287782357}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9784626831501835,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.96875,"distances_sum":2363.3214287782357}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.150390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.150390625,"f1":null,"seconds":2.512708306312561e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":4.265625,"distances_sum":343.3261678294542}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7707277097902104,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.3359375,"distances_sum":1363.091592517152}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.37890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.37890625,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.5390625,"distances_sum":763.7474652986136}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7707277097902104,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.3359375,"distances_sum":1363.091592517152}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.65234375,"f1":null,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.34375,"distances_sum":1389.1345109479232}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.898532717282718,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.515625,"distances_sum":1824.87576278289}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.898532717282718,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.515625,"distances_sum":1824.87576278289}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667239010989018,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.875,"distances_sum":2240.842076589045}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667239010989018,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.875,"distances_sum":2240.842076589045}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9667239010989018,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.875,"distances_sum":2240.842076589045}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.811444805194806,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.046875,"distances_sum":1386.8286197354519}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.96875,"distances_sum":812.592141431503}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.811444805194806,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.046875,"distances_sum":1386.8286197354519}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9397149725274732,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":2083.446058588314}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9383413461538468,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2049.806734306661}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9397149725274732,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":2083.446058588314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714285714285718,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2293.4352736990095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9689217032967038,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8984375,"distances_sum":2279.5437913236724}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706673534798539,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2286.4195805251}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300373,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2272.445520752269}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649954212454215,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2251.6543088587455}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714285714285718,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2293.4352736990095}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714285714285718,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2293.4352736990095}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8363863566988575,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0703125,"distances_sum":1511.1958772825824}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8363863566988575,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0703125,"distances_sum":1511.1958772825824}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8363863566988575,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0703125,"distances_sum":1511.1958772825824}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.73046875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8363863566988575,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0703125,"distances_sum":1511.1958772825824}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8645042457542468,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.375,"distances_sum":1543.1284445227136}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":2.5797635316848755e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.2734375,"distances_sum":349.43979208570545}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8645042457542468,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.375,"distances_sum":1543.1284445227136}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9025334040959049,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.59375,"distances_sum":1741.4451984367495}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.918787462537463,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.625,"distances_sum":1857.1349618984455}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.918787462537463,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.625,"distances_sum":1857.1349618984455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593063186813192,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2094.0739296315246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661114926739929,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2163.6260291164795}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661114926739929,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2163.6260291164795}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9661114926739929,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8046875,"distances_sum":2163.6260291164795}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":2.7026981115341187e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.125,"distances_sum":303.7798937142264}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8586085789210798,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0390625,"distances_sum":1147.705756436332}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":2.7976930141448975e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.2421875,"distances_sum":296.6358737855482}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8586085789210798,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.0390625,"distances_sum":1147.705756436332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8988813270063277,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3671875,"distances_sum":1244.9208136480106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9455986721611728,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":1431.2154807333875}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9455986721611728,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":1431.2154807333875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9549507783882787,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7890625,"distances_sum":1484.5891657588445}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572401556776561,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7578125,"distances_sum":1495.5061422262313}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1539.8576821876786}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9520718864468869,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7421875,"distances_sum":1484.1470207289242}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9602335164835165,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":1513.4980819151112}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1539.8576821876786}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9639365842490847,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":1539.8576821876786}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.232421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4453125,"distances_sum":324.6824923632087}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.232421875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.232421875,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.4453125,"distances_sum":324.6824923632087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.3192336559295654e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.7421875,"distances_sum":339.061910298025}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.234375,"f1":null,"seconds":3.3192336559295654e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.7421875,"distances_sum":339.061910298025}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.234375,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.234375,"f1":null,"seconds":3.3192336559295654e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.7421875,"distances_sum":339.061910298025}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5439453125,"f1":null,"seconds":3.980472683906555e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.5,"distances_sum":886.8022071222895}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8643008033633042,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":1325.4044815911643}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":2.9373914003372192e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.484375,"distances_sum":426.50684766534664}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":3.3285468816757202e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.9296875,"distances_sum":600.1065993179996}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8643008033633042,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.65625,"distances_sum":1325.4044815911643}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9534314643689649,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":1731.3993621265386}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9143918581418585,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8125,"distances_sum":1506.5040451500947}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9267399267399271,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.875,"distances_sum":1568.6983479951277}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9321714743589748,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8359375,"distances_sum":1601.6606559856464}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9294819763569768,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9140625,"distances_sum":1602.8857572148722}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9534314643689649,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":1731.3993621265386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761904761904766,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9609375,"distances_sum":1824.8870097109113}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683836996337001,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":1784.8703797244866}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9654590201465205,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9296875,"distances_sum":1756.9915902000055}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761904761904766,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9609375,"distances_sum":1824.8870097109113}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761904761904766,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9609375,"distances_sum":1824.8870097109113}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8672051906426914,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5703125,"distances_sum":1358.5372762918814}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8672051906426914,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5703125,"distances_sum":1358.5372762918814}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968046016483517,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9453125,"distances_sum":1805.2747042552714}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9437213827838835,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":1665.9282723360536}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556063727938733,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":1760.8469582417724}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968046016483517,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9453125,"distances_sum":1805.2747042552714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":1871.8185224948381}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9735863095238101,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":1853.6865537064316}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713942307692313,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9453125,"distances_sum":1828.4392493627263}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":1871.8185224948381}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":1871.8185224948381}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.626953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.626953125,"f1":0.7601705586080595,"seconds":4.37907874584198e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.78125,"distances_sum":1101.3715091204647}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8591809232434241,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.375,"distances_sum":1362.0776008779421}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8591809232434241,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.375,"distances_sum":1362.0776008779421}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9335451007326012,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.734375,"distances_sum":1660.7210626244732}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9435496794871804,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1685.0980344138163}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9054601648351657,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.640625,"distances_sum":1539.9385319821777}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9435496794871804,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1685.0980344138163}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9523866758241762,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":1751.1827648061453}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569425366300369,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":1784.230293697807}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216124,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":1832.7585469127025}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9503236346986353,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":1728.968665549297}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216124,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":1832.7585469127025}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9664091117216124,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":1832.7585469127025}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8570658508158515,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5078125,"distances_sum":1261.3984141892615}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.484375,"distances_sum":672.2764623241831}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8550574425574432,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":1295.0022322680722}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8550574425574432,"seconds":4.855915904045105e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":1295.0022322680722}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.887357434232435,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":1380.9224794278243}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8751462079587088,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.46875,"distances_sum":1335.3771011694475}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.887357434232435,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":1380.9224794278243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596440018315022,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":1716.97791493324}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9372138278388286,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9765625,"distances_sum":1584.919440575287}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9480368589743595,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8125,"distances_sum":1696.3786435748605}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596440018315022,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":1716.97791493324}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596440018315022,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9140625,"distances_sum":1716.97791493324}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8030120920745929,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.0703125,"distances_sum":1228.830199434533}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.8030120920745929,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.0703125,"distances_sum":1228.830199434533}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8629386238761247,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.515625,"distances_sum":1501.74988297628}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8629386238761247,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.515625,"distances_sum":1501.74988297628}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9296588827838833,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7890625,"distances_sum":1764.6358364095433}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8913867382617389,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.875,"distances_sum":1563.9059807495664}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9296588827838833,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7890625,"distances_sum":1764.6358364095433}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9296588827838833,"seconds":5.338340997695923e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7890625,"distances_sum":1764.6358364095433}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7116272616272622,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.6171875,"distances_sum":1008.8353424950009}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5576171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5576171875,"f1":0.7025453712953721,"seconds":4.004687070846558e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.421875,"distances_sum":939.4051593555886}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8357101232101241,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.375,"distances_sum":1328.6865058862386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8357101232101241,"seconds":4.896894097328186e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.375,"distances_sum":1328.6865058862386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8943915459540467,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":1502.992979065426}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787551,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":1804.255267364582}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575549450549454,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":1791.9568919849914}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8383781149406159,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4453125,"distances_sum":1278.5698288167305}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9216720779220785,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":1626.582105947092}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9670787545787551,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":1804.255267364582}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9813988095238099,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":1915.134388675509}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970873397435898,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9765625,"distances_sum":1830.644625197574}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714858058608062,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":1837.1584006089677}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9813988095238099,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":1915.134388675509}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9813988095238099,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":1915.134388675509}}, n: 9
inertia(cfft.distances) = 19.287528651903653
inertia(cdnet.distances) = 26.540470295653872
inertia(crand.distances) = 22.17775427350427
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.888888888888889
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8666666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9377777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.888888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9311111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8688888888888888
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8644444444444446
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 3, 3, 3, 1, 2, 3, 2, 3, 2, 1, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 1, 3, 2, 2, 2, 3, 3, 1, 3]
acc = 0.9266666666666666
*** starting iteration: 1; err: [Inf, 0.32133333780611184] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32133333780611184, 0.17133977060997477] ***
*** starting iteration: 2; err: [Inf, 0.32133333780611184, 0.17133977060997477] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32133333780611184, 0.17133977060997477, 0.1661255945398747] ***
*** starting iteration: 3; err: [Inf, 0.32133333780611184, 0.17133977060997477, 0.1661255945398747] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32133333780611184, 0.17133977060997477, 0.1661255945398747, 0.1641988410982624] ***
*** starting iteration: 4; err: [Inf, 0.32133333780611184, 0.17133977060997477, 0.1661255945398747, 0.1641988410982624] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.32133333780611184, 0.17133977060997477, 0.1661255945398747, 0.1641988410982624, 0.1635711232413357] ***
*** finished computation of 12 references, err: [Inf, 0.32133333780611184, 0.17133977060997477, 0.1661255945398747, 0.1641988410982624, 0.1635711232413357] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 8, normalized-entropy: 0.7219280948873623, [(2,acc = 0.9533333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
 2), (3, 8)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 7, 9]]
** centroid: 12, normalized-entropy: 0.9886994082884974, [(2, 7), (3, 9)]
finished with 15 centroids; started with 12
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.6970999941552058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6970999941552058, 0.42255397647995424] ***
*** finished computation of 7 references, err: [Inf, 0.6970999941552058, 0.42255397647995424] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6313999990168465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6313999990168465, 0.3031720867314094] ***
*** finished computation of 7 references, err: [Inf, 0.6313999990168465, 0.3031720867314094] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 7]]
** centroid: 4, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9192999970612727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9192999970612727, 0.26414331235601934] ***
*** finished computation of 7 references, err: [Inf, 0.9192999970612727, 0.26414331235601934] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 12]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 1), (3, 12)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5929222866091333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173] ***
*** starting iteration: 2; err: [Inf, 0.5929222866091333, 0.22649192532479173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588] ***
*** starting iteration: 3; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311] ***
*** starting iteration: 4; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222] ***
*** starting iteration: 5; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372] ***
*** starting iteration: 6; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514] ***
*** starting iteration: 7; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514, 0.1651303447115552] ***
*** starting iteration: 8; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514, 0.1651303447115552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514, 0.1651303447115552, 0.16311426538835808] ***
*** starting iteration: 9; err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514, 0.1651303447115552, 0.16311426538835808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514, 0.1651303447115552, 0.16311426538835808, 0.16311426538835808] ***
*** finished computation of 7 references, err: [Inf, 0.5929222866091333, 0.22649192532479173, 0.18944454132159588, 0.1796254059719311, 0.17513222165459222, 0.17120029941449372, 0.16654828148441514, 0.1651303447115552, 0.16311426538835808, 0.16311426538835808] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 3, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.977117459611224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104] ***
*** starting iteration: 2; err: [Inf, 1.977117459611224, 0.2949526165048104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038] ***
*** starting iteration: 3; err: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643] ***
*** starting iteration: 4; err: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001] ***
*** starting iteration: 5; err: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001, 0.1895254252069153] ***
*** starting iteration: 6; err: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001, 0.1895254252069153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001, 0.1895254252069153, 0.18849132681656766] ***
*** starting iteration: 7; err: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001, 0.1895254252069153, 0.18849132681656766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001, 0.1895254252069153, 0.18849132681656766, 0.18849132681656766] ***
*** finished computation of 7 references, err: [Inf, 1.977117459611224, 0.2949526165048104, 0.203884234079038, 0.1945128086106643, 0.1911683914326001, 0.1895254252069153, 0.18849132681656766, 0.18849132681656766] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 5, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 7, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5763021818546952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455] ***
*** starting iteration: 2; err: [Inf, 0.5763021818546952, 0.26618699811280455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654] ***
*** starting iteration: 3; err: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763] ***
*** starting iteration: 4; err: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988] ***
*** starting iteration: 5; err: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988, 0.15802263514951037] ***
*** starting iteration: 6; err: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988, 0.15802263514951037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988, 0.15802263514951037, 0.15640951536995637] ***
*** starting iteration: 7; err: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988, 0.15802263514951037, 0.15640951536995637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988, 0.15802263514951037, 0.15640951536995637, 0.15619554708090921] ***
*** finished computation of 7 references, err: [Inf, 0.5763021818546952, 0.26618699811280455, 0.20432291226886654, 0.18254659631410763, 0.16246275180760988, 0.15802263514951037, 0.15640951536995637, 0.15619554708090921] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 13]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 6, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.467269379504225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.467269379504225, 0.23681579528222277] ***
*** finished computation of 7 references, err: [Inf, 0.467269379504225, 0.23681579528222277] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 1]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 6, 18]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 18)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.3672299033886413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3672299033886413, 0.19512470765634635] ***
*** finished computation of 7 references, err: [Inf, 1.3672299033886413, 0.19512470765634635] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 7]]
** centroid: 6, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.2992837411690443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.2992837411690443, 0.6801452874185255] ***
*** finished computation of 7 references, err: [Inf, 3.2992837411690443, 0.6801452874185255] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 9]]
** centroid: 1, normalized-entropy: 0.9980008838722993, [(2, 10), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 3, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 33), (2, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 5]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5553688371282042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5553688371282042, 0.4066013443050091] ***
*** starting iteration: 2; err: [Inf, 0.5553688371282042, 0.4066013443050091] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5553688371282042, 0.4066013443050091, 0.3987317330941513] ***
*** starting iteration: 3; err: [Inf, 0.5553688371282042, 0.4066013443050091, 0.3987317330941513] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5553688371282042, 0.4066013443050091, 0.3987317330941513, 0.3917680205138362] ***
*** finished computation of 3 references, err: [Inf, 0.5553688371282042, 0.4066013443050091, 0.3987317330941513, 0.3917680205138362] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 22]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(2, 4), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4686100052960934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4686100052960934, 0.3679134467311623] ***
*** starting iteration: 2; err: [Inf, 0.4686100052960934, 0.3679134467311623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4686100052960934, 0.3679134467311623, 0.3607904055809057] ***
*** starting iteration: 3; err: [Inf, 0.4686100052960934, 0.3679134467311623, 0.3607904055809057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4686100052960934, 0.3679134467311623, 0.3607904055809057, 0.3532001931259481] ***
*** finished computation of 3 references, err: [Inf, 0.4686100052960934, 0.3679134467311623, 0.3607904055809057, 0.3532001931259481] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 34, 7]]
** centroid: 2, normalized-entropy: 0.6593758812786991, [(2, 34), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.751718530274477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.751718530274477, 0.5631735977400828] ***
*** starting iteration: 2; err: [Inf, 2.751718530274477, 0.5631735977400828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.751718530274477, 0.5631735977400828, 0.41317666822039484] ***
*** starting iteration: 3; err: [Inf, 2.751718530274477, 0.5631735977400828, 0.41317666822039484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.751718530274477, 0.5631735977400828, 0.41317666822039484, 0.37542031196187536] ***
*** finished computation of 3 references, err: [Inf, 2.751718530274477, 0.5631735977400828, 0.41317666822039484, 0.37542031196187536] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 35]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 7), (3, 35)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 2]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 23), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3698934965709131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855] ***
*** starting iteration: 2; err: [Inf, 0.3698934965709131, 0.26574798540305855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784] ***
*** starting iteration: 3; err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877] ***
*** starting iteration: 4; err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706] ***
*** starting iteration: 5; err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562] ***
*** starting iteration: 6; err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562, 0.2151808742073066] ***
*** starting iteration: 7; err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562, 0.2151808742073066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562, 0.2151808742073066, 0.2133114578870647] ***
*** starting iteration: 8; err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562, 0.2151808742073066, 0.2133114578870647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562, 0.2151808742073066, 0.2133114578870647, 0.2129656688105383] ***
*** finished computation of 7 references, err: [Inf, 0.3698934965709131, 0.26574798540305855, 0.24015134954235784, 0.22372874409322877, 0.22242961463957706, 0.22021644330222562, 0.2151808742073066, 0.2133114578870647, 0.2129656688105383] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 14]]
** centroid: 5, normalized-entropy: 0.9886994082884974, [(2, 18), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2514803396841406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2514803396841406, 0.16160154735083748] ***
*** starting iteration: 2; err: [Inf, 0.2514803396841406, 0.16160154735083748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2514803396841406, 0.16160154735083748, 0.1507081344264883] ***
*** starting iteration: 3; err: [Inf, 0.2514803396841406, 0.16160154735083748, 0.1507081344264883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2514803396841406, 0.16160154735083748, 0.1507081344264883, 0.1474974599071742] ***
*** starting iteration: 4; err: [Inf, 0.2514803396841406, 0.16160154735083748, 0.1507081344264883, 0.1474974599071742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2514803396841406, 0.16160154735083748, 0.1507081344264883, 0.1474974599071742, 0.14681149257791162] ***
*** finished computation of 7 references, err: [Inf, 0.2514803396841406, 0.16160154735083748, 0.1507081344264883, 0.1474974599071742, 0.14681149257791162] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 7]]
** centroid: 7, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25894143436995903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25894143436995903, 0.1759011450972063] ***
*** starting iteration: 2; err: [Inf, 0.25894143436995903, 0.1759011450972063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25894143436995903, 0.1759011450972063, 0.15568731599099186] ***
*** starting iteration: 3; err: [Inf, 0.25894143436995903, 0.1759011450972063, 0.15568731599099186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25894143436995903, 0.1759011450972063, 0.15568731599099186, 0.14968380646659527] ***
*** starting iteration: 4; err: [Inf, 0.25894143436995903, 0.1759011450972063, 0.15568731599099186, 0.14968380646659527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25894143436995903, 0.1759011450972063, 0.15568731599099186, 0.14968380646659527, 0.14968380646659527] ***
*** finished computation of 7 references, err: [Inf, 0.25894143436995903, 0.1759011450972063, 0.15568731599099186, 0.14968380646659527, 0.14968380646659527] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.607998899596754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.607998899596754, 0.9586987941108511] ***
*** finished computation of 3 references, err: [Inf, 4.607998899596754, 0.9586987941108511] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 11]]
** centroid: 1, normalized-entropy: 0.9283620723948678, [(2, 21), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 8, 0]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(1, 35), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 20]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 5), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5614264564725324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5614264564725324, 0.35090658752075954] ***
*** finished computation of 3 references, err: [Inf, 0.5614264564725324, 0.35090658752075954] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 7]]
** centroid: 1, normalized-entropy: 0.6409441847875289, [(2, 36), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6485204470531448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6485204470531448, 0.3704383901971394] ***
*** finished computation of 3 references, err: [Inf, 0.6485204470531448, 0.3704383901971394] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 25, 3]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 34]]
** centroid: 3, normalized-entropy: 0.552495114325111, [(2, 5), (3, 34)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42769836033341846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42769836033341846, 0.24522165174681856] ***
*** starting iteration: 2; err: [Inf, 0.42769836033341846, 0.24522165174681856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517] ***
*** starting iteration: 3; err: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075] ***
*** starting iteration: 4; err: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075, 0.17061685903170867] ***
*** starting iteration: 5; err: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075, 0.17061685903170867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075, 0.17061685903170867, 0.16317714130024755] ***
*** starting iteration: 6; err: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075, 0.17061685903170867, 0.16317714130024755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075, 0.17061685903170867, 0.16317714130024755, 0.16245479885428163] ***
*** finished computation of 7 references, err: [Inf, 0.42769836033341846, 0.24522165174681856, 0.206046402523517, 0.18063765952294075, 0.17061685903170867, 0.16317714130024755, 0.16245479885428163] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 7]]
** centroid: 1, normalized-entropy: 0.9774178175281716, [(2, 10), (3, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 7, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4288780762285974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128] ***
*** starting iteration: 2; err: [Inf, 0.4288780762285974, 0.23578075627882128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948] ***
*** starting iteration: 3; err: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883] ***
*** starting iteration: 4; err: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907] ***
*** starting iteration: 5; err: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907, 0.18706905218648157] ***
*** starting iteration: 6; err: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907, 0.18706905218648157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907, 0.18706905218648157, 0.18593167462721447] ***
*** starting iteration: 7; err: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907, 0.18706905218648157, 0.18593167462721447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907, 0.18706905218648157, 0.18593167462721447, 0.18593167462721447] ***
*** finished computation of 7 references, err: [Inf, 0.4288780762285974, 0.23578075627882128, 0.19893352518840948, 0.1941674251968883, 0.18985775797652907, 0.18706905218648157, 0.18593167462721447, 0.18593167462721447] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 4]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41429690905242617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41429690905242617, 0.24689645134732394] ***
*** starting iteration: 2; err: [Inf, 0.41429690905242617, 0.24689645134732394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378] ***
*** starting iteration: 3; err: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024] ***
*** starting iteration: 4; err: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024, 0.16324350212457162] ***
*** starting iteration: 5; err: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024, 0.16324350212457162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024, 0.16324350212457162, 0.16208448026727917] ***
*** starting iteration: 6; err: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024, 0.16324350212457162, 0.16208448026727917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024, 0.16324350212457162, 0.16208448026727917, 0.16135901012737655] ***
*** finished computation of 7 references, err: [Inf, 0.41429690905242617, 0.24689645134732394, 0.2201338800291378, 0.17852327778680024, 0.16324350212457162, 0.16208448026727917, 0.16135901012737655] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 6, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0153999926862551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0153999926862551, 0.47574977980451366] ***
*** finished computation of 7 references, err: [Inf, 1.0153999926862551, 0.47574977980451366] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 30]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 15), (3, 30)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4428000004066463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4428000004066463, 0.26336095851097185] ***
*** finished computation of 7 references, err: [Inf, 0.4428000004066463, 0.26336095851097185] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4330000057416397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4330000057416397, 0.26327777657055385] ***
*** finished computation of 7 references, err: [Inf, 0.4330000057416397, 0.26327777657055385] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 1, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 2, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 14, 9]]
** centroid: 7, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.545163858264478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.545163858264478, 0.4003386104468954] ***
*** starting iteration: 2; err: [Inf, 0.545163858264478, 0.4003386104468954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.545163858264478, 0.4003386104468954, 0.39433615766673996] ***
*** starting iteration: 3; err: [Inf, 0.545163858264478, 0.4003386104468954, 0.39433615766673996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.545163858264478, 0.4003386104468954, 0.39433615766673996, 0.3895981633376842] ***
*** starting iteration: 4; err: [Inf, 0.545163858264478, 0.4003386104468954, 0.39433615766673996, 0.3895981633376842] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.545163858264478, 0.4003386104468954, 0.39433615766673996, 0.3895981633376842, 0.38900960606006313] ***
*** finished computation of 3 references, err: [Inf, 0.545163858264478, 0.4003386104468954, 0.39433615766673996, 0.3895981633376842, 0.38900960606006313] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 22]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 6), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 9]]
** centroid: 2, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.743315777632802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.743315777632802, 0.742924356062938] ***
*** starting iteration: 2; err: [Inf, 7.743315777632802, 0.742924356062938] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275] ***
*** starting iteration: 3; err: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275, 0.6759657800650924] ***
*** starting iteration: 4; err: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275, 0.6759657800650924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275, 0.6759657800650924, 0.6724711323519582] ***
*** starting iteration: 5; err: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275, 0.6759657800650924, 0.6724711323519582] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275, 0.6759657800650924, 0.6724711323519582, 0.6724711323519582] ***
*** finished computation of 3 references, err: [Inf, 7.743315777632802, 0.742924356062938, 0.6813885092364275, 0.6759657800650924, 0.6724711323519582, 0.6724711323519582] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 32]]
** centroid: 2, normalized-entropy: 0.9998292601233937, [(2, 33), (3, 32)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [13, 3, 0]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(1, 13), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4029496476637284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4029496476637284, 0.34594449966742247] ***
*** starting iteration: 2; err: [Inf, 0.4029496476637284, 0.34594449966742247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4029496476637284, 0.34594449966742247, 0.34594449966742247] ***
*** finished computation of 3 references, err: [Inf, 0.4029496476637284, 0.34594449966742247, 0.34594449966742247] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 10]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.412106022558103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.412106022558103, 0.24868867553828428] ***
*** finished computation of 7 references, err: [Inf, 0.412106022558103, 0.24868867553828428] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 13]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(2, 5), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 8]]
** centroid: 4, normalized-entropy: 1.0, [(2, 8), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.41007349625214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.41007349625214, 0.5366840143592135] ***
*** finished computation of 7 references, err: [Inf, 2.41007349625214, 0.5366840143592135] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 3, 0]]
** centroid: 1, normalized-entropy: 0.4220005168831531, [(1, 32), (2, 3)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 3]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(2, 23), (3, 3)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2999154149669263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2999154149669263, 0.19323160213453294] ***
*** finished computation of 7 references, err: [Inf, 0.2999154149669263, 0.19323160213453294] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7635999948152846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7635999948152846, 0.3265325722100819] ***
*** starting iteration: 2; err: [Inf, 0.7635999948152846, 0.3265325722100819] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7635999948152846, 0.3265325722100819, 0.2867866807425125] ***
*** starting iteration: 3; err: [Inf, 0.7635999948152846, 0.3265325722100819, 0.2867866807425125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7635999948152846, 0.3265325722100819, 0.2867866807425125, 0.28092835478052186] ***
*** finished computation of 7 references, err: [Inf, 0.7635999948152846, 0.3265325722100819, 0.2867866807425125, 0.28092835478052186] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 9]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(2, 5), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5671000014573901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5671000014573901, 0.27959030775526583] ***
*** starting iteration: 2; err: [Inf, 0.5671000014573901, 0.27959030775526583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5671000014573901, 0.27959030775526583, 0.2550126717759096] ***
*** starting iteration: 3; err: [Inf, 0.5671000014573901, 0.27959030775526583, 0.2550126717759096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5671000014573901, 0.27959030775526583, 0.2550126717759096, 0.2500461239987384] ***
*** finished computation of 7 references, err: [Inf, 0.5671000014573901, 0.27959030775526583, 0.2550126717759096, 0.2500461239987384] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5857000028880687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5857000028880687, 0.34333178454852686] ***
*** starting iteration: 2; err: [Inf, 0.5857000028880687, 0.34333178454852686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5857000028880687, 0.34333178454852686, 0.3079979418360188] ***
*** starting iteration: 3; err: [Inf, 0.5857000028880687, 0.34333178454852686, 0.3079979418360188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5857000028880687, 0.34333178454852686, 0.3079979418360188, 0.26776107782671793] ***
*** finished computation of 7 references, err: [Inf, 0.5857000028880687, 0.34333178454852686, 0.3079979418360188, 0.26776107782671793] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 4]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 12), (3, 4)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.274699999220289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.274699999220289, 0.5638404416884506] ***
*** starting iteration: 2; err: [Inf, 1.274699999220289, 0.5638404416884506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.274699999220289, 0.5638404416884506, 0.5614473770998536] ***
*** starting iteration: 3; err: [Inf, 1.274699999220289, 0.5638404416884506, 0.5614473770998536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.274699999220289, 0.5638404416884506, 0.5614473770998536, 0.5605021435839994] ***
*** finished computation of 3 references, err: [Inf, 1.274699999220289, 0.5638404416884506, 0.5614473770998536, 0.5605021435839994] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 21]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 3), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2687999998168318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2687999998168318, 0.5062637066484433] ***
*** starting iteration: 2; err: [Inf, 1.2687999998168318, 0.5062637066484433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2687999998168318, 0.5062637066484433, 0.5038004102924363] ***
*** starting iteration: 3; err: [Inf, 1.2687999998168318, 0.5062637066484433, 0.5038004102924363] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2687999998168318, 0.5062637066484433, 0.5038004102924363, 0.5038004102924363] ***
*** finished computation of 3 references, err: [Inf, 1.2687999998168318, 0.5062637066484433, 0.5038004102924363, 0.5038004102924363] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 7]]
** centroid: 3, normalized-entropy: 0.6409441847875289, [(2, 36), (3, 7)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5943000012809039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5943000012809039, 0.5160214632757111] ***
*** starting iteration: 2; err: [Inf, 1.5943000012809039, 0.5160214632757111] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455] ***
*** starting iteration: 3; err: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455, 0.4974753385486396] ***
*** starting iteration: 4; err: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455, 0.4974753385486396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455, 0.4974753385486396, 0.49461961394205334] ***
*** starting iteration: 5; err: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455, 0.4974753385486396, 0.49461961394205334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455, 0.4974753385486396, 0.49461961394205334, 0.49380321081188483] ***
*** finished computation of 3 references, err: [Inf, 1.5943000012809039, 0.5160214632757111, 0.49886925499613455, 0.4974753385486396, 0.49461961394205334, 0.49380321081188483] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.467199995562475] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.467199995562475, 0.571678856120879] ***
*** finished computation of 3 references, err: [Inf, 1.467199995562475, 0.571678856120879] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 20]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 3, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.127999996817815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.127999996817815, 0.5259414619031153] ***
*** finished computation of 3 references, err: [Inf, 1.127999996817815, 0.5259414619031153] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.018000001474974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.018000001474974, 0.5726014137762406] ***
*** finished computation of 3 references, err: [Inf, 1.018000001474974, 0.5726014137762406] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 21]]
** centroid: 1, normalized-entropy: 0.9774178175281716, [(2, 30), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5108000097269161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000097269161, 0.27247142086475845] ***
*** starting iteration: 2; err: [Inf, 0.5108000097269161, 0.27247142086475845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276] ***
*** starting iteration: 3; err: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276, 0.2377988435928901] ***
*** starting iteration: 4; err: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276, 0.2377988435928901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276, 0.2377988435928901, 0.23188811033525913] ***
*** starting iteration: 5; err: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276, 0.2377988435928901, 0.23188811033525913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276, 0.2377988435928901, 0.23188811033525913, 0.23159292840371382] ***
*** finished computation of 7 references, err: [Inf, 0.5108000097269161, 0.27247142086475845, 0.24417199567415276, 0.2377988435928901, 0.23188811033525913, 0.23159292840371382] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 2]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 7, normalized-entropy: 0.8904916402194913, [(2, 4), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5043000055816459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5043000055816459, 0.24441549784320105] ***
*** starting iteration: 2; err: [Inf, 0.5043000055816459, 0.24441549784320105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651] ***
*** starting iteration: 3; err: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651, 0.22530908919393322] ***
*** starting iteration: 4; err: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651, 0.22530908919393322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651, 0.22530908919393322, 0.2242353952138066] ***
*** starting iteration: 5; err: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651, 0.22530908919393322, 0.2242353952138066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651, 0.22530908919393322, 0.2242353952138066, 0.2242353952138066] ***
*** finished computation of 7 references, err: [Inf, 0.5043000055816459, 0.24441549784320105, 0.2289633634264651, 0.22530908919393322, 0.2242353952138066, 0.2242353952138066] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6305999993104662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6305999993104662, 0.25394392523589737] ***
*** starting iteration: 2; err: [Inf, 0.6305999993104662, 0.25394392523589737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6305999993104662, 0.25394392523589737, 0.23154000357536655] ***
*** starting iteration: 3; err: [Inf, 0.6305999993104662, 0.25394392523589737, 0.23154000357536655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6305999993104662, 0.25394392523589737, 0.23154000357536655, 0.22446062307552] ***
*** starting iteration: 4; err: [Inf, 0.6305999993104662, 0.25394392523589737, 0.23154000357536655, 0.22446062307552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6305999993104662, 0.25394392523589737, 0.23154000357536655, 0.22446062307552, 0.22383106083255097] ***
*** finished computation of 7 references, err: [Inf, 0.6305999993104662, 0.25394392523589737, 0.23154000357536655, 0.22446062307552, 0.22383106083255097] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 9]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5950000020494253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950000020494253, 0.27691619195909767] ***
*** starting iteration: 2; err: [Inf, 0.5950000020494253, 0.27691619195909767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950000020494253, 0.27691619195909767, 0.2641163647022784] ***
*** starting iteration: 3; err: [Inf, 0.5950000020494253, 0.27691619195909767, 0.2641163647022784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5950000020494253, 0.27691619195909767, 0.2641163647022784, 0.2608834062666002] ***
*** finished computation of 7 references, err: [Inf, 0.5950000020494253, 0.27691619195909767, 0.2641163647022784, 0.2608834062666002] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 9]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47319999775281646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47319999775281646, 0.27827685352838755] ***
*** starting iteration: 2; err: [Inf, 0.47319999775281646, 0.27827685352838755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47319999775281646, 0.27827685352838755, 0.26564493828893015] ***
*** starting iteration: 3; err: [Inf, 0.47319999775281646, 0.27827685352838755, 0.26564493828893015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47319999775281646, 0.27827685352838755, 0.26564493828893015, 0.25473753192815635] ***
*** finished computation of 7 references, err: [Inf, 0.47319999775281646, 0.27827685352838755, 0.26564493828893015, 0.25473753192815635] ***
*** center 1: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 24, 3]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(2, 24), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 20]]
** centroid: 4, normalized-entropy: 0.5586293734521991, [(2, 3), (3, 20)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5007000041832214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5007000041832214, 0.27423066619088454] ***
*** starting iteration: 2; err: [Inf, 0.5007000041832214, 0.27423066619088454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5007000041832214, 0.27423066619088454, 0.2619509440815663] ***
*** starting iteration: 3; err: [Inf, 0.5007000041832214, 0.27423066619088454, 0.2619509440815663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5007000041832214, 0.27423066619088454, 0.2619509440815663, 0.25289484870565954] ***
*** finished computation of 7 references, err: [Inf, 0.5007000041832214, 0.27423066619088454, 0.2619509440815663, 0.25289484870565954] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 5]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 12), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5108000097269161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5108000097269161, 0.27247142086475845] ***
*** finished computation of 7 references, err: [Inf, 0.5108000097269161, 0.27247142086475845] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(2, 1), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 5]]
** centroid: 5, normalized-entropy: 0.7382848661434506, [(2, 19), (3, 5)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 6]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.509800001316171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.509800001316171, 0.2424254536193002] ***
*** finished computation of 7 references, err: [Inf, 0.509800001316171, 0.2424254536193002] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 25, 7]]
** centroid: 1, normalized-entropy: 0.7578784625383954, [(2, 25), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4893000019031399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4893000019031399, 0.27423066619088454] ***
*** finished computation of 7 references, err: [Inf, 0.4893000019031399, 0.27423066619088454] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 4]]
** centroid: 3, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 4, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 1, 1.0, :dnet, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 2.464400026745475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.464400026745475, 0.30901339878557477] ***
*** starting iteration: 2; err: [Inf, 2.464400026745475, 0.30901339878557477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.464400026745475, 0.30901339878557477, 0.2958013634093628] ***
*** starting iteration: 3; err: [Inf, 2.464400026745475, 0.30901339878557477, 0.2958013634093628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.464400026745475, 0.30901339878557477, 0.2958013634093628, 0.2947211839519392] ***
*** starting iteration: 4; err: [Inf, 2.464400026745475, 0.30901339878557477, 0.2958013634093628, 0.2947211839519392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.464400026745475, 0.30901339878557477, 0.2958013634093628, 0.2947211839519392, 0.2947211839519392] ***
*** finished computation of 7 references, err: [Inf, 2.464400026745475, 0.30901339878557477, 0.2958013634093628, 0.2947211839519392, 0.2947211839519392] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.8992000037950247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8992000037950247, 0.37923583180868375] ***
*** starting iteration: 2; err: [Inf, 2.8992000037950247, 0.37923583180868375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8992000037950247, 0.37923583180868375, 0.2377030224584364] ***
*** starting iteration: 3; err: [Inf, 2.8992000037950247, 0.37923583180868375, 0.2377030224584364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8992000037950247, 0.37923583180868375, 0.2377030224584364, 0.2360500006151755] ***
*** starting iteration: 4; err: [Inf, 2.8992000037950247, 0.37923583180868375, 0.2377030224584364, 0.2360500006151755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.8992000037950247, 0.37923583180868375, 0.2377030224584364, 0.2360500006151755, 0.2360500006151755] ***
*** finished computation of 7 references, err: [Inf, 2.8992000037950247, 0.37923583180868375, 0.2377030224584364, 0.2360500006151755, 0.2360500006151755] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 7]]
** centroid: 2, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8833999922384943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707] ***
*** starting iteration: 2; err: [Inf, 0.8833999922384943, 0.29763197488808707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277] ***
*** starting iteration: 3; err: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886] ***
*** starting iteration: 4; err: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124] ***
*** starting iteration: 5; err: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124, 0.2124957774971699] ***
*** starting iteration: 6; err: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124, 0.2124957774971699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124, 0.2124957774971699, 0.21095200942488934] ***
*** starting iteration: 7; err: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124, 0.2124957774971699, 0.21095200942488934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124, 0.2124957774971699, 0.21095200942488934, 0.2106594284736328] ***
*** finished computation of 7 references, err: [Inf, 0.8833999922384943, 0.29763197488808707, 0.26535633099251277, 0.2369928837677886, 0.22323865352261124, 0.2124957774971699, 0.21095200942488934, 0.2106594284736328] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 2.818600012656488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094] ***
*** starting iteration: 2; err: [Inf, 2.818600012656488, 0.5131312765228094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752] ***
*** starting iteration: 3; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249] ***
*** starting iteration: 4; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201] ***
*** starting iteration: 5; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226] ***
*** starting iteration: 6; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477] ***
*** starting iteration: 7; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477, 0.25976278373042805] ***
*** starting iteration: 8; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477, 0.25976278373042805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477, 0.25976278373042805, 0.25767304953820797] ***
*** starting iteration: 9; err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477, 0.25976278373042805, 0.25767304953820797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477, 0.25976278373042805, 0.25767304953820797, 0.25767304953820797] ***
*** finished computation of 7 references, err: [Inf, 2.818600012656488, 0.5131312765228094, 0.3388557372097752, 0.3073537842799249, 0.2952680577873201, 0.2789076340505226, 0.2646251919537477, 0.25976278373042805, 0.25767304953820797, 0.25767304953820797] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 5, 1]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 5), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5809000076360799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000076360799, 0.28623110545036906] ***
*** starting iteration: 2; err: [Inf, 0.5809000076360799, 0.28623110545036906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585] ***
*** starting iteration: 3; err: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183] ***
*** starting iteration: 4; err: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183, 0.24938235601924086] ***
*** starting iteration: 5; err: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183, 0.24938235601924086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183, 0.24938235601924086, 0.24539340014476682] ***
*** starting iteration: 6; err: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183, 0.24938235601924086, 0.24539340014476682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183, 0.24938235601924086, 0.24539340014476682, 0.2450209736165031] ***
*** finished computation of 7 references, err: [Inf, 0.5809000076360799, 0.28623110545036906, 0.25832298821677585, 0.25136228428988183, 0.24938235601924086, 0.24539340014476682, 0.2450209736165031] ***
*** center 1: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 6, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5623999979273536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5623999979273536, 0.2920380258040222] ***
*** starting iteration: 2; err: [Inf, 0.5623999979273536, 0.2920380258040222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285] ***
*** starting iteration: 3; err: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285, 0.2346781660048034] ***
*** starting iteration: 4; err: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285, 0.2346781660048034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285, 0.2346781660048034, 0.23063619775178076] ***
*** starting iteration: 5; err: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285, 0.2346781660048034, 0.23063619775178076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285, 0.2346781660048034, 0.23063619775178076, 0.22985754234432895] ***
*** finished computation of 7 references, err: [Inf, 0.5623999979273536, 0.2920380258040222, 0.24642226810204285, 0.2346781660048034, 0.23063619775178076, 0.22985754234432895] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 7]]
** centroid: 6, normalized-entropy: 0.9494520153879484, [(2, 12), (3, 7)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.5432000015090008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5432000015090008, 0.2698807137539822] ***
*** finished computation of 7 references, err: [Inf, 0.5432000015090008, 0.2698807137539822] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 4]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 4)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6322999995994022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6322999995994022, 0.28436889109328506] ***
*** finished computation of 7 references, err: [Inf, 0.6322999995994022, 0.28436889109328506] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.7406999739939923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.7406999739939923, 1.2046504299438752] ***
*** finished computation of 7 references, err: [Inf, 3.7406999739939923, 1.2046504299438752] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 18]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(2, 26), (3, 18)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [33, 4, 0]]
** centroid: 4, normalized-entropy: 0.4941829348497886, [(1, 33), (2, 4)]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1) => 0.98
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.817647058823529, 3.041176470588235, 5.847058823529411, 2.135294117647059], [5.633333333333334, 2.6750000000000003, 4.158333333333333, 1.2916666666666667], [5.022857142857142, 3.4342857142857146, 1.4600000000000002, 0.2428571428571429], [5.242857142857143, 2.3714285714285714, 3.442857142857143, 1.0285714285714285], [6.15, 2.5, 4.6, 1.35], [6.0, 2.2, 5.0, 1.5], [5.9875, 2.84375, 4.98125, 1.7625], [6.67, 3.0300000000000002, 4.73, 1.52]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 1, 2, 2, 3, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.643750000000001, 3.0625000000000004, 5.51875, 2.1375], [6.166666666666667, 2.5833333333333335, 4.7, 1.4166666666666667], [6.1000000000000005, 2.6999999999999997, 4.928571428571429, 1.785714285714286], [5.006249999999999, 3.4687500000000004, 1.4937500000000001, 0.2625], [5.8, 2.8785714285714277, 4.235714285714286, 1.3214285714285716], [5.311111111111112, 2.4444444444444446, 3.6555555555555554, 1.1444444444444444], [6.614285714285714, 3.0, 4.585714285714286, 1.4142857142857141], [7.533333333333335, 3.1444444444444444, 6.344444444444445, 2.0666666666666664]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 3, 1, 2, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.605555555555556, 2.7055555555555557, 4.066666666666666, 1.2777777777777777], [5.210526315789475, 3.6105263157894742, 1.463157894736842, 0.2578947368421053], [4.685714285714285, 3.0, 1.4071428571428573, 0.18571428571428572], [6.438461538461538, 2.930769230769231, 4.653846153846154, 1.469230769230769], [5.9399999999999995, 2.79, 5.03, 1.8800000000000001], [6.58421052631579, 3.1105263157894734, 5.547368421052631, 2.136842105263158], [7.600000000000001, 3.1714285714285713, 6.3999999999999995, 2.085714285714286]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 1, 2, 3, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.9, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[22, 51, 6, 32, 1, 29, 3, 18, 27, 26, 60, 11, 29, 31, 19, 39, 44, 1, 1, 12, 1, 21, 39, 29, 26, 20, 48, 54, 37, 32, 27, 26, 24, 41, 35, 3, 32, 9, 36, 21, 33, 8, 24, 41, 23, 27, 23, 54, 5, 16, 1, 31, 38, 27, 41, 4, 37, 31, 34, 27, 27, 26, 35, 19, 38, 37, 35, 32, 28, 23, 38, 38, 50, 38, 39, 33, 20, 30, 38, 27, 23, 28, 39, 23, 52, 26, 10, 39, 38, 39, 19, 25, 42, 47, 25, 24, 24, 6, 47, 27, 38, 27, 14, 32, 25, 28, 26, 31, 40, 52, 32, 26, 54, 40, 42, 42, 44, 50, 15, 36, 27, 34, 53, 11, 21, 56, 18, 45, 13, 34, 38, 57, 34, 37, 32, 30, 31, 33, 30, 69, 28, 35, 39, 46, 34, 49, 23, 27, 39, 48, 24, 31, 19, 25, 32, 29, 44, 35, 28, 31, 43, 77, 22, 31, 13, 37, 34, 44, 52, 18, 36, 32, 40, 31, 18, 36, 21, 45, 29, 31, 27, 90, 36, 32, 20, 46, 31, 29, 35, 46, 29, 45, 50, 29, 40, 22, 42, 66, 31, 28, 40, 65, 24, 22, 43, 42, 41, 43, 17, 46, 46, 48, 6, 55, 36, 39, 46, 60, 48, 61, 29, 35, 13, 24, 38, 41, 12, 30, 46, 44, 39, 36, 41, 48, 38, 24, 27, 18, 33, 43, 39, 26, 31, 36, 38, 32, 3, 8, 55, 44, 1, 54, 45, 67, 50, 26, 28, 29, 38, 36, 22, 46, 38, 16, 32, 34, 45, 39, 36, 52, 56, 29, 53, 80, 51, 29, 40, 21, 39, 42, 53, 29, 29, 34, 40, 28, 71, 27, 27, 32, 31, 2, 22, 27, 33, 62, 36, 40, 33, 42]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.627, speedup = 0.45253705956230655, eval_ratio = 0.041446)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3810763888888889,"recall":0.3810763888888889,"f1":null,"seconds":8.228980004787445e-5,"exhaustive_search_seconds":0.00042269565165042877,"evaluations":338.328125,"distances_sum":1772.2535079930765}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5468749999999998,"recall":0.5468749999999998,"f1":0.5468749999999998,"seconds":0.00011008791625499725,"exhaustive_search_seconds":0.00042269565165042877,"evaluations":376.5078125,"distances_sum":1651.2360496734984}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6536458333333333,"recall":0.6536458333333333,"f1":0.6536458333333333,"seconds":0.00017632544040679932,"exhaustive_search_seconds":0.00042269565165042877,"evaluations":414.5234375,"distances_sum":1604.0335251366696}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7413194444444442,"recall":0.7413194444444442,"f1":0.7413194444444442,"seconds":0.00019465014338493347,"exhaustive_search_seconds":0.00042269565165042877,"evaluations":452.3671875,"distances_sum":1574.900818780584}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7899305555555551,"recall":0.7899305555555551,"f1":0.7899305555555551,"seconds":0.00022147223353385925,"exhaustive_search_seconds":0.00042269565165042877,"evaluations":490.3125,"distances_sum":1561.6860828188005}
KCenters.DeloneInvIndex> reached performance {"precision":0.8324652777777769,"recall":0.8324652777777769,"f1":0.8324652777777769,"seconds":0.000295320525765419,"exhaustive_search_seconds":0.00042269565165042877,"evaluations":529.2421875,"distances_sum":1551.632813253766}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7920000000000003, speedup = 1.5496575487432165, eval_ratio = 0.053212999999999996)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
