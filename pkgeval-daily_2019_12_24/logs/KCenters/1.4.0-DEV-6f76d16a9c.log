Julia Version 1.4.0-DEV.657
Commit 6f76d16a9c (2019-12-23 01:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed PooledArrays ──────────────── v0.5.3
 Installed Missings ──────────────────── v0.4.3
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataStructures ────────────── v0.17.6
 Installed CategoricalArrays ─────────── v0.7.5
 Installed SimilaritySearch ──────────── v0.3.17
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Compat ────────────────────── v3.0.0
 Installed Reexport ──────────────────── v0.2.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_w8vHUM/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_w8vHUM/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_w8vHUM/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 149.18999999999997
[ Info: 73.05000000000004
[ Info: 44.44999999999999
[ Info: 25.450000000000006
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.2399983987154
[ Info: 76.62000116877203
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 27.637937995374145
inertia(crand.distances) = 19.611023800340302
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5,"f1":null,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":5.953125,"distances_sum":1448.7692051184156}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.5,"f1":null,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":5.953125,"distances_sum":1448.7692051184156}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5009765625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5009765625,"f1":0.6568240786990791,"seconds":4.148110747337341e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":5.9921875,"distances_sum":1421.13629878794}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8456657925407932,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.140625,"distances_sum":2179.244089688769}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8528081293706302,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.3046875,"distances_sum":2181.7999239520627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6240234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6240234375,"f1":0.7553616522366527,"seconds":4.3157488107681274e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":7.1640625,"distances_sum":1826.1366456164417}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":9,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8528081293706302,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.3046875,"distances_sum":2181.7999239520627}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9076527639027648,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.546875,"distances_sum":2519.3145622231496}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8987611346986353,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.53125,"distances_sum":2449.721917569784}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9213846916971923,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.515625,"distances_sum":2670.604137623693}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9510473901098905,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.765625,"distances_sum":2848.101222957382}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9007305194805201,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.625,"distances_sum":2482.233947835571}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8866133866133874,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.4609375,"distances_sum":2389.380685584425}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9163492757242762,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.546875,"distances_sum":2588.2099562963576}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9510473901098905,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.765625,"distances_sum":2848.101222957382}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9510473901098905,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":2.0619481801986694e-6,"evaluations":8.765625,"distances_sum":2848.101222957382}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2080078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.1050294637680054e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.6640625,"distances_sum":506.54674422122}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2080078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.1050294637680054e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.6640625,"distances_sum":506.54674422122}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.5,"distances_sum":925.6542798810409}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.408203125,"f1":null,"seconds":4.187226295471191e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.453125,"distances_sum":925.8877150714854}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.427734375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.427734375,"f1":null,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.5,"distances_sum":925.6542798810409}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8122391497391507,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.796875,"distances_sum":1705.378896077479}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8664408508158519,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.34375,"distances_sum":1925.7898083663545}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8573728354978364,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.40625,"distances_sum":1864.6559069510201}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9160833957708965,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.703125,"distances_sum":2218.6624729328846}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9160833957708965,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.703125,"distances_sum":2218.6624729328846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9714514652014656,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9609375,"distances_sum":2645.406677022425}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9514766483516488,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.953125,"distances_sum":2480.3952363690446}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9328614094239099,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8984375,"distances_sum":2338.2375077520155}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9665979853479857,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9296875,"distances_sum":2604.882445746713}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9355030386280391,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8359375,"distances_sum":2383.5683724628143}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714514652014656,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9609375,"distances_sum":2645.406677022425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714514652014656,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9609375,"distances_sum":2645.406677022425}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4599609375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4599609375,"f1":null,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.96875,"distances_sum":986.6218833178206}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6162109375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.6162109375,"f1":0.7470350829725836,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.640625,"distances_sum":1366.8622442126677}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4453125,"f1":null,"seconds":3.7923455238342285e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.6796875,"distances_sum":978.1216071287132}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6162109375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.6162109375,"f1":0.7470350829725836,"seconds":4.602596163749695e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.640625,"distances_sum":1366.8622442126677}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9146837537462547,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2096.787911272397}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8163607226107235,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.2265625,"distances_sum":1627.971710635925}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.8505859375,"f1":0.9146837537462547,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2096.787911272397}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719150641025643,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2480.506465124277}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9272467116217122,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.765625,"distances_sum":2157.2651519590754}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719150641025643,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2480.506465124277}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9719150641025643,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2480.506465124277}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.697975635475636,"seconds":4.2729079723358154e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.0234375,"distances_sum":1312.6107611201246}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.0234375,"distances_sum":567.4071311416885}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.697975635475636,"seconds":4.2729079723358154e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.0234375,"distances_sum":1312.6107611201246}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7884795759795769,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.5859375,"distances_sum":1607.1891069830124}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.931707875457876,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4765625,"distances_sum":2347.48265214466}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9247424450549457,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4921875,"distances_sum":2293.1162248455275}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.931707875457876,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.4765625,"distances_sum":2347.48265214466}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600331959706965,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8515625,"distances_sum":2519.951991312611}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751144688644693,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.90625,"distances_sum":2635.4256494306464}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751144688644693,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.90625,"distances_sum":2635.4256494306464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751144688644693,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.90625,"distances_sum":2635.4256494306464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8437217296592305,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4921875,"distances_sum":1790.9089262157488}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8593285187035196,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4921875,"distances_sum":1825.1173357709113}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8593285187035196,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4921875,"distances_sum":1825.1173357709113}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9378548534798542,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.7890625,"distances_sum":2265.269738877074}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9566277472527478,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.90625,"distances_sum":2403.5915935378994}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9667639652014658,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.921875,"distances_sum":2490.545139248508}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494848901098907,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.84375,"distances_sum":2367.73219016314}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9667639652014658,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.921875,"distances_sum":2490.545139248508}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974759615384616,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9296875,"distances_sum":2539.390029292111}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.982423305860806,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2602.72911840705}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.982423305860806,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2602.72911840705}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.982423305860806,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.9609375,"distances_sum":2602.72911840705}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.213062882423401e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.9375,"distances_sum":476.7611813500607}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8695200632700641,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.90625,"distances_sum":1354.3471201254783}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8695200632700641,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.90625,"distances_sum":1354.3471201254783}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8741191100566109,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.859375,"distances_sum":1354.5625480107165}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8741191100566109,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.859375,"distances_sum":1354.5625480107165}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7861328125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8741191100566109,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.859375,"distances_sum":1354.5625480107165}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2685546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2685546875,"f1":null,"seconds":3.864988684654236e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.4453125,"distances_sum":508.85174789649454}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7879186785436794,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.2890625,"distances_sum":1051.2922856810821}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7879186785436794,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.2890625,"distances_sum":1051.2922856810821}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8508564352314362,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.734375,"distances_sum":1285.2203455511533}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8508564352314362,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.734375,"distances_sum":1285.2203455511533}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8515151515151522,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.7265625,"distances_sum":1310.4505684375006}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9244963369963379,"seconds":6.409361958503723e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7109375,"distances_sum":1633.9350355608601}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9205643315018321,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":1592.1520946968935}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8513843795093804,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.6640625,"distances_sum":1294.2953760911755}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.930013736263737,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7890625,"distances_sum":1658.0468009257622}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9286604020979027,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":1642.740686618586}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.930013736263737,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7890625,"distances_sum":1658.0468009257622}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.876953125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.930013736263737,"seconds":5.302950739860535e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7890625,"distances_sum":1658.0468009257622}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.795232198357199,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":7.7578125,"distances_sum":1122.774261673161}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8751347610722617,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.609375,"distances_sum":1398.2187507919257}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.8751347610722617,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.609375,"distances_sum":1398.2187507919257}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9002778471528479,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.7734375,"distances_sum":1507.3450737921887}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9250832500832508,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.8828125,"distances_sum":1622.062443754154}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9500801282051285,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.921875,"distances_sum":1758.365306405656}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9500801282051285,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.921875,"distances_sum":1758.365306405656}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9742044413919416,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.9296875,"distances_sum":1931.8783328579407}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597298534798538,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.9375,"distances_sum":1832.497140717186}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9742044413919416,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.9296875,"distances_sum":1931.8783328579407}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9742044413919416,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.6409903764724731e-6,"evaluations":8.9296875,"distances_sum":1931.8783328579407}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.9140625,"distances_sum":716.0375704956658}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.41796875,"f1":0.5633411727161728,"seconds":3.8780272006988525e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.828125,"distances_sum":677.7548796173785}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.431640625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.431640625,"f1":null,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":5.9140625,"distances_sum":716.0375704956658}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7869848901098909,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.2890625,"distances_sum":1147.1965459555768}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8376200188700197,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.6875,"distances_sum":1356.775182691159}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8376200188700197,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.6875,"distances_sum":1356.775182691159}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8907228188478196,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.234375,"distances_sum":1560.4800836909933}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9571886446886451,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8671875,"distances_sum":1956.4954652579952}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8586798618048626,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.71875,"distances_sum":1402.89953807704}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9499313186813191,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.84375,"distances_sum":1915.2885606706054}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9337912087912095,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.875,"distances_sum":1776.8061530022924}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9496737637362641,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.78125,"distances_sum":1923.7748448062737}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571886446886451,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8671875,"distances_sum":1956.4954652579952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571886446886451,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.8671875,"distances_sum":1956.4954652579952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.478515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.478515625,"f1":null,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.4609375,"distances_sum":813.4007935394105}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.478515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.478515625,"f1":null,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.4609375,"distances_sum":813.4007935394105}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8690455377955387,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.90625,"distances_sum":1490.388990435193}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8733318764568774,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9375,"distances_sum":1487.386776188657}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8733318764568774,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9375,"distances_sum":1487.386776188657}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.94979967948718,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":1928.2380997134032}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9386275183150191,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":1833.897678532153}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9070429570429578,"seconds":6.105750799179077e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.3125,"distances_sum":1670.4614647677358}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496368215118218,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8828125,"distances_sum":1908.7880938358835}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.94979967948718,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":1928.2380997134032}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.94979967948718,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":1928.2380997134032}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.244140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.244140625,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.7734375,"distances_sum":445.84143928461765}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8706964910089919,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1015625,"distances_sum":1478.79655215248}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8706964910089919,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1015625,"distances_sum":1478.79655215248}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491357600732605,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.78125,"distances_sum":1882.2822694402546}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9491357600732605,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.78125,"distances_sum":1882.2822694402546}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9686755952380955,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.921875,"distances_sum":1991.1108004254256}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552884615384623,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8046875,"distances_sum":1918.8982301415292}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968137591575092,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9609375,"distances_sum":1964.1226745906042}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495192307692314,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7890625,"distances_sum":1897.0484504965916}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9686755952380955,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.921875,"distances_sum":1991.1108004254256}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9686755952380955,"seconds":6.444752216339111e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.921875,"distances_sum":1991.1108004254256}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8073388417138425,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.4765625,"distances_sum":1260.3205766833905}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.359375,"f1":null,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.046875,"distances_sum":636.1057031945244}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.8046875,"distances_sum":917.4687737512196}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8073388417138425,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.4765625,"distances_sum":1260.3205766833905}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8523310023310032,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.7734375,"distances_sum":1440.2635929021724}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9145724067599073,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6171875,"distances_sum":1770.556179452116}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9145724067599073,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6171875,"distances_sum":1770.556179452116}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501201923076927,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.71875,"distances_sum":1985.1133008752788}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9291781135531143,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.75,"distances_sum":1827.609333517771}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9572604478854484,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":1998.5579165395036}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9532967032967038,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8359375,"distances_sum":1983.1007980050533}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9479853479853485,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":1961.3367127350712}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9572604478854484,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":1998.5579165395036}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9572604478854484,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":1998.5579165395036}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8479140651015662,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.6953125,"distances_sum":1403.0011995956652}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8479140651015662,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.6953125,"distances_sum":1403.0011995956652}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9442364926739932,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.9296875,"distances_sum":1856.7204579683903}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526842948717953,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.859375,"distances_sum":1919.0991375676606}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9526842948717953,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.859375,"distances_sum":1919.0991375676606}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962986492673993,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8984375,"distances_sum":1984.2499622181942}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584706959706966,"seconds":6.366521120071411e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8671875,"distances_sum":1970.442288938926}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.962986492673993,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8984375,"distances_sum":1984.2499622181942}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.962986492673993,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8984375,"distances_sum":1984.2499622181942}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7838588494838501,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.2890625,"distances_sum":1251.3759697231098}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.5408884286880493e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":4.4609375,"distances_sum":377.69913152267725}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3603515625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3603515625,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.2578125,"distances_sum":610.3380665844003}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.658203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.658203125,"f1":0.7838588494838501,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.2890625,"distances_sum":1251.3759697231098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8367193570318578,"seconds":4.909932613372803e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.6328125,"distances_sum":1440.344263324058}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9417155760905767,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6875,"distances_sum":1870.0654340995945}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8603490259740266,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.9296875,"distances_sum":1507.1559905948623}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8514027639027647,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.734375,"distances_sum":1451.4859243725748}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9417155760905767,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6875,"distances_sum":1870.0654340995945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672275641025646,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1998.8797681390758}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9545844780219785,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":1917.9695330012405}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9472413003663007,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.671875,"distances_sum":1924.9436942566576}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502518315018321,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":1883.2250951002}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672275641025646,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1998.8797681390758}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672275641025646,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":1998.8797681390758}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.294921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.294921875,"f1":null,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.96875,"distances_sum":524.3127051160046}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3095703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.3095703125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.0234375,"distances_sum":512.4761899118522}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3095703125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.3095703125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.0234375,"distances_sum":512.4761899118522}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.209578037261963e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.640625,"distances_sum":1026.8082485507887}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8733693389943398,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.90625,"distances_sum":1568.494270832477}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.702050900488401,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.8359375,"distances_sum":1036.2002821097801}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8733693389943398,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.90625,"distances_sum":1568.494270832477}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2123.334981180363}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9363927738927744,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8125,"distances_sum":1928.9163977567578}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.878537608225109,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9296875,"distances_sum":1601.8494473223523}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2123.334981180363}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709649725274729,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2123.334981180363}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.867325382950384,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9375,"distances_sum":1551.5503920427768}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.867325382950384,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.9375,"distances_sum":1551.5503920427768}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649954212454215,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2137.227650097036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9317822802197809,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":1918.2803802492579}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9649954212454215,"seconds":6.036832928657532e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2137.227650097036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807119963369965,"seconds":6.601214408874512e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.96875,"distances_sum":2227.3135425287583}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369965,"seconds":6.601214408874512e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.96875,"distances_sum":2227.3135425287583}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807119963369965,"seconds":6.601214408874512e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.96875,"distances_sum":2227.3135425287583}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5791015625,"f1":0.7153176684426691,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":6.8125,"distances_sum":1047.0681167841747}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.298828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.298828125,"f1":null,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":6.21875,"distances_sum":542.1337218885725}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.844305694305695,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.671875,"distances_sum":1387.6609706049098}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.844305694305695,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":7.671875,"distances_sum":1387.6609706049098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9354312354312361,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8046875,"distances_sum":1853.2168812940604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9476648351648357,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.7734375,"distances_sum":1942.3799046915592}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632841117216121,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8984375,"distances_sum":2023.2920161951536}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9632841117216121,"seconds":6.375834345817566e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8984375,"distances_sum":2023.2920161951536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9638621794871797,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.8984375,"distances_sum":2045.3283911910676}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978026,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.9765625,"distances_sum":2087.1437178286437}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978026,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.9765625,"distances_sum":2087.1437178286437}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9756353021978026,"seconds":6.563961505889893e-6,"exhaustive_search_seconds":1.4826655387878418e-6,"evaluations":8.9765625,"distances_sum":2087.1437178286437}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8002998737373745,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.546875,"distances_sum":1288.3409836341484}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.27734375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.27734375,"f1":null,"seconds":3.831461071968079e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.53125,"distances_sum":498.027466444145}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7065056471306478,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":6.953125,"distances_sum":1004.136025123515}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8002998737373745,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":7.546875,"distances_sum":1288.3409836341484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9583047161172166,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8515625,"distances_sum":2023.5196116719824}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8977080211455218,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.15625,"distances_sum":1637.0246046434665}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.927240988178489,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8203125,"distances_sum":1827.5161411333575}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9583047161172166,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.8515625,"distances_sum":2023.5196116719824}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704269688644693,"seconds":6.856396794319153e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.9453125,"distances_sum":2070.4792772268784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9743303571428575,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.96875,"distances_sum":2102.5893984191766}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893776,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.96875,"distances_sum":2110.049481076126}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635244963369965,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.9453125,"distances_sum":2031.1784525735923}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893776,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.96875,"distances_sum":2110.049481076126}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757268772893776,"seconds":6.638467311859131e-6,"exhaustive_search_seconds":1.475214958190918e-6,"evaluations":8.96875,"distances_sum":2110.049481076126}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6798368298368302,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.6484375,"distances_sum":904.7540858757063}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.53515625,"f1":0.6798368298368302,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.6484375,"distances_sum":904.7540858757063}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8675121753246761,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8046875,"distances_sum":1492.6949408011742}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8675121753246761,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.8046875,"distances_sum":1492.6949408011742}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9308150183150191,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":1843.3968073481024}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8803030303030309,"seconds":4.928559064865112e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.859375,"distances_sum":1559.9848479577545}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9308150183150191,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":1843.3968073481024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9308150183150191,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":1843.3968073481024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.169921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.169921875,"f1":null,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.9765625,"distances_sum":355.4475831675187}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.169921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.169921875,"f1":null,"seconds":2.993270754814148e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.9765625,"distances_sum":355.4475831675187}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8510161713286724,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.0546875,"distances_sum":1761.7731966178471}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8331970113220121,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9296875,"distances_sum":1671.4908346554691}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8510161713286724,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.0546875,"distances_sum":1761.7731966178471}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9059466575091584,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.375,"distances_sum":2055.7378257933947}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9538950632700637,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2419.255828766661}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9401561979686984,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.71875,"distances_sum":2343.6123655642755}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9047046703296712,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.3828125,"distances_sum":2042.7700957143243}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9538950632700637,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8515625,"distances_sum":2419.255828766661}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977529761904762,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2566.038883891337}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9777930402930407,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.953125,"distances_sum":2545.685093501729}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588427197802203,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2433.488372335919}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977529761904762,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2566.038883891337}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977529761904762,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2566.038883891337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.53125,"f1":0.6795114607614614,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.3203125,"distances_sum":1096.2006846466488}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.53125,"f1":0.6795114607614614,"seconds":3.8035213947296143e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.3203125,"distances_sum":1096.2006846466488}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6911099317349322,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.5078125,"distances_sum":1147.9329699873938}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.546875,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.546875,"f1":0.6911099317349322,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.5078125,"distances_sum":1147.9329699873938}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7237385878010885,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.6796875,"distances_sum":1257.088701369553}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7014922577422581,"seconds":3.727152943611145e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":6.5625,"distances_sum":1193.1713520090636}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8509193931068939,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.8515625,"distances_sum":1737.1437695942645}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8509193931068939,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.8515625,"distances_sum":1737.1437695942645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.75390625,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8509193931068939,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.8515625,"distances_sum":1737.1437695942645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.33203125,"f1":null,"seconds":3.1050294637680054e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.2265625,"distances_sum":756.610420608906}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.33203125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.33203125,"f1":null,"seconds":3.1050294637680054e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.2265625,"distances_sum":756.610420608906}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.47265625, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.47265625,"f1":0.6148804320679322,"seconds":3.302469849586487e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.890625,"distances_sum":952.2973570506849}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.7613265207015215,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.90625,"distances_sum":1330.6209238345089}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.630859375,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.630859375,"f1":0.7613265207015215,"seconds":4.0549784898757935e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.90625,"distances_sum":1330.6209238345089}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7770370254745262,"seconds":4.116445779800415e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.9765625,"distances_sum":1385.9672597335461}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9120821886446895,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1953125,"distances_sum":1994.447881739454}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9487065018315022,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2295.8091515837787}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9153617216117222,"seconds":7.020309567451477e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.171875,"distances_sum":2046.1295170044132}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7860223110223118,"seconds":4.155561327934265e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.203125,"distances_sum":1414.365696895503}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7939971486846494,"seconds":4.062429070472717e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.125,"distances_sum":1482.9893373916575}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9487065018315022,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2295.8091515837787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9487065018315022,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2295.8091515837787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8410984848484856,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.734375,"distances_sum":1649.7344083520784}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3115234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.3115234375,"f1":null,"seconds":3.116205334663391e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.8984375,"distances_sum":684.4436366074839}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8410984848484856,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.734375,"distances_sum":1649.7344083520784}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652930402930407,"seconds":7.80448317527771e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9609375,"distances_sum":2393.931792421561}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556261446886454,"seconds":6.039440631866455e-5,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7890625,"distances_sum":2356.0817192841523}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9652930402930407,"seconds":7.80448317527771e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9609375,"distances_sum":2393.931792421561}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9686755952380957,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9296875,"distances_sum":2396.4523877392344}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764136904761908,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9921875,"distances_sum":2441.561077822988}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776785714285718,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2461.89509915077}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776785714285718,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2461.89509915077}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776785714285718,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2461.89509915077}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.435546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.435546875,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.6796875,"distances_sum":850.7438308154519}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.435546875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.435546875,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.6796875,"distances_sum":850.7438308154519}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8854978354978363,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9140625,"distances_sum":1860.0803361193882}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.2782554626464844e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.7109375,"distances_sum":921.4573724921332}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.544921875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.544921875,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.375,"distances_sum":1092.3738661706998}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6777977231102237,"seconds":3.807246685028076e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.5,"distances_sum":1066.462274808891}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8360899517149525,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.6171875,"distances_sum":1660.107036890502}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7909834956709965,"seconds":7.404014468193054e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1796875,"distances_sum":1451.5241378751105}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.673003732378733,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.4921875,"distances_sum":1050.0311440988019}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8854978354978363,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9140625,"distances_sum":1860.0803361193882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9257326007326013,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5390625,"distances_sum":2116.4502782863087}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9337740384615392,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6171875,"distances_sum":2147.993070012684}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9456902472527478,"seconds":7.854774594306946e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7421875,"distances_sum":2246.762031273198}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9385421869796875,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2232.1498023542617}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9456902472527478,"seconds":7.854774594306946e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7421875,"distances_sum":2246.762031273198}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9456902472527478,"seconds":7.854774594306946e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7421875,"distances_sum":2246.762031273198}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2978515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2978515625,"f1":null,"seconds":3.334134817123413e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.0390625,"distances_sum":679.1179547239386}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2978515625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2978515625,"f1":null,"seconds":3.334134817123413e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.0390625,"distances_sum":679.1179547239386}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2978515625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2978515625,"f1":null,"seconds":3.334134817123413e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.0390625,"distances_sum":679.1179547239386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.279296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.279296875,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.9609375,"distances_sum":606.1230452069378}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.279296875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.279296875,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.9609375,"distances_sum":606.1230452069378}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5439453125,"f1":null,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.546875,"distances_sum":1082.938529699903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.291015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.291015625,"f1":null,"seconds":3.5259872674942017e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.046875,"distances_sum":622.2310519145457}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5302734375,"f1":0.6732305888555894,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.4609375,"distances_sum":1032.5734456908424}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5439453125,"f1":null,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.546875,"distances_sum":1082.938529699903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8456975316350325,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.78125,"distances_sum":1643.4936463326578}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7874888999889008,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.1640625,"distances_sum":1397.4830924866258}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7025436369186375,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.8046875,"distances_sum":1128.4826182177985}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8441485597735607,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.90625,"distances_sum":1635.0603458634266}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9188847610722617,"seconds":6.513670086860657e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.78125,"distances_sum":2023.695479865702}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8462381368631375,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.75,"distances_sum":1645.561231385723}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.859375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.859375,"f1":0.9188847610722617,"seconds":6.513670086860657e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.78125,"distances_sum":2023.695479865702}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.859375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.859375,"f1":0.9188847610722617,"seconds":6.513670086860657e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.78125,"distances_sum":2023.695479865702}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4404296875,"f1":null,"seconds":2.343207597732544e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.7734375,"distances_sum":911.3733175577057}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8380562146187153,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.6796875,"distances_sum":1621.600401104077}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8380562146187153,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.6796875,"distances_sum":1621.600401104077}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9301828379953384,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6171875,"distances_sum":2172.492315249925}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9649241383616388,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2417.1569107076625}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9649241383616388,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2417.1569107076625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9702438186813191,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2458.5549546624293}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702438186813191,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2458.5549546624293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9702438186813191,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.875,"distances_sum":2458.5549546624293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":2.261251211166382e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":5.6875,"distances_sum":891.5877008721872}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7826740967365975,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.09375,"distances_sum":1389.0638551619136}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7826740967365975,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.09375,"distances_sum":1389.0638551619136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9212568681318688,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.71875,"distances_sum":2117.4761626906097}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607028388278394,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.90625,"distances_sum":2377.5052193253473}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8798800158175165,"seconds":3.28943133354187e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.171875,"distances_sum":1886.76155726648}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7813009906759916,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":7.1796875,"distances_sum":1416.3950218151376}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8445861430236439,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.0234375,"distances_sum":1679.7727717910186}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9607028388278394,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.90625,"distances_sum":2377.5052193253473}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970798992673993,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.9609375,"distances_sum":2445.0431881272457}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655683,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.984375,"distances_sum":2442.655600336244}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655683,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.984375,"distances_sum":2442.655600336244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655683,"seconds":3.809109330177307e-6,"exhaustive_search_seconds":8.828938007354736e-7,"evaluations":8.984375,"distances_sum":2442.655600336244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8456335331335341,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.828125,"distances_sum":1659.867908105077}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8372570138195146,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7265625,"distances_sum":1611.9008627050362}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8456335331335341,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.828125,"distances_sum":1659.867908105077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538465,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2411.9188371151567}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9446688727938733,"seconds":3.56137752532959e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2313.1038867981774}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.920238095238096,"seconds":3.5017728805541992e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6875,"distances_sum":2145.984125421594}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499713827838835,"seconds":4.462897777557373e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2350.167322604458}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.850750291375292,"seconds":4.560500383377075e-5,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.8984375,"distances_sum":1701.3593766841182}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538465,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2411.9188371151567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9737923534798538,"seconds":6.856396794319153e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2480.4909793253546}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190479,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2529.960988711829}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707417582417587,"seconds":6.590038537979126e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.953125,"distances_sum":2461.2990540778947}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190479,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2529.960988711829}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9804315476190479,"seconds":6.649643182754517e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.96875,"distances_sum":2529.960988711829}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6912625568875576,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.40625,"distances_sum":1155.5706141507733}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.6708984375,"f1":null,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.1796875,"distances_sum":1457.0699648388843}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":6.4609375,"distances_sum":1120.0245217511724}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":5,"bsize":4},"perf":{"precision":null,"recall":0.6708984375,"f1":null,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.1796875,"distances_sum":1457.0699648388843}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9347184065934073,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6171875,"distances_sum":2176.123749794386}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8481747419247427,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.8359375,"distances_sum":1696.490209933634}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.843293165168166,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.8125,"distances_sum":1672.7831336598983}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9347184065934073,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.6171875,"distances_sum":2176.123749794386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558493589743594,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2340.38431151441}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.944262508325009,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.703125,"distances_sum":2289.965995133562}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558493589743594,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2340.38431151441}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558493589743594,"seconds":6.318092346191406e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8359375,"distances_sum":2340.38431151441}}, n: 9
inertia(cfft.distances) = 20.224220614017636
inertia(cdnet.distances) = 39.7053522949387
inertia(crand.distances) = 21.34317163899053
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9488888888888889
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9266666666666666
===> k=7
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333335
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8755555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9177777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333332
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.888888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 1, 2, 3, 3, 3, 3, 2, 3, 1, 1, 3, 1, 2, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(2, 16), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 9, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 12, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 13 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 1, 2, 2, 3]
acc = 0.9533333333333334
*** starting iteration: 1; err: [Inf, 0.38446666851153444] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223] ***
*** starting iteration: 2; err: [Inf, 0.38446666851153444, 0.18394914390589223] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934] ***
*** starting iteration: 3; err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964] ***
*** starting iteration: 4; err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.38446666851153444, 0.18394914390589223, 0.16983942214707934, 0.16633198347999964, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.7522000010241007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7522000010241007, 0.38976513871824614] ***
*** starting iteration: 2; err: [Inf, 0.7522000010241007, 0.38976513871824614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746] ***
*** starting iteration: 3; err: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746, 0.2824278674682271] ***
*** starting iteration: 4; err: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746, 0.2824278674682271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746, 0.2824278674682271, 0.27776122431677563] ***
*** starting iteration: 5; err: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746, 0.2824278674682271, 0.27776122431677563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746, 0.2824278674682271, 0.27776122431677563, 0.27776122431677563] ***
*** finished computation of 7 references, err: [Inf, 0.7522000010241007, 0.38976513871824614, 0.30326060720835746, 0.2824278674682271, 0.27776122431677563, 0.27776122431677563] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 15]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(2, 8), (3, 15)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7480000046710981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684] ***
*** starting iteration: 2; err: [Inf, 0.7480000046710981, 0.3550410040871684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636] ***
*** starting iteration: 3; err: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243] ***
*** starting iteration: 4; err: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268] ***
*** starting iteration: 5; err: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268, 0.31845917123367995] ***
*** starting iteration: 6; err: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268, 0.31845917123367995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268, 0.31845917123367995, 0.3170916823499949] ***
*** starting iteration: 7; err: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268, 0.31845917123367995, 0.3170916823499949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268, 0.31845917123367995, 0.3170916823499949, 0.3170916823499949] ***
*** finished computation of 7 references, err: [Inf, 0.7480000046710981, 0.3550410040871684, 0.33256372704264636, 0.32288774561612243, 0.3215337239991268, 0.31845917123367995, 0.3170916823499949, 0.3170916823499949] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 16]]
** centroid: 4, normalized-entropy: 0.9975025463691153, [(2, 18), (3, 16)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7200000002601468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7200000002601468, 0.3580374029093973] ***
*** starting iteration: 2; err: [Inf, 0.7200000002601468, 0.3580374029093973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093] ***
*** starting iteration: 3; err: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093, 0.321810648944839] ***
*** starting iteration: 4; err: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093, 0.321810648944839] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093, 0.321810648944839, 0.30931888099190813] ***
*** starting iteration: 5; err: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093, 0.321810648944839, 0.30931888099190813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093, 0.321810648944839, 0.30931888099190813, 0.30859510573165716] ***
*** finished computation of 7 references, err: [Inf, 0.7200000002601468, 0.3580374029093973, 0.33525520460741093, 0.321810648944839, 0.30931888099190813, 0.30859510573165716] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 8]]
** centroid: 5, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1597592108975863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1597592108975863, 0.6048320784270693] ***
*** starting iteration: 2; err: [Inf, 1.1597592108975863, 0.6048320784270693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1597592108975863, 0.6048320784270693, 0.5942197370539065] ***
*** starting iteration: 3; err: [Inf, 1.1597592108975863, 0.6048320784270693, 0.5942197370539065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1597592108975863, 0.6048320784270693, 0.5942197370539065, 0.5873397622564387] ***
*** finished computation of 3 references, err: [Inf, 1.1597592108975863, 0.6048320784270693, 0.5942197370539065, 0.5873397622564387] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.391416606028468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.391416606028468, 1.2159344377887533] ***
*** starting iteration: 2; err: [Inf, 9.391416606028468, 1.2159344377887533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.391416606028468, 1.2159344377887533, 0.6888362343102337] ***
*** starting iteration: 3; err: [Inf, 9.391416606028468, 1.2159344377887533, 0.6888362343102337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.391416606028468, 1.2159344377887533, 0.6888362343102337, 0.6669997046855353] ***
*** finished computation of 3 references, err: [Inf, 9.391416606028468, 1.2159344377887533, 0.6888362343102337, 0.6669997046855353] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 1, 0]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(1, 13), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 35]]
** centroid: 3, normalized-entropy: 0.9993759069576513, [(2, 33), (3, 35)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9814219456246066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9814219456246066, 0.406024840134118] ***
*** starting iteration: 2; err: [Inf, 0.9814219456246066, 0.406024840134118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9814219456246066, 0.406024840134118, 0.3651171116847239] ***
*** starting iteration: 3; err: [Inf, 0.9814219456246066, 0.406024840134118, 0.3651171116847239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9814219456246066, 0.406024840134118, 0.3651171116847239, 0.3629891629488867] ***
*** finished computation of 3 references, err: [Inf, 0.9814219456246066, 0.406024840134118, 0.3651171116847239, 0.3629891629488867] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5067999959001651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296] ***
*** starting iteration: 2; err: [Inf, 0.5067999959001651, 0.33104059511706296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299] ***
*** starting iteration: 3; err: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364] ***
*** starting iteration: 4; err: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386] ***
*** starting iteration: 5; err: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386, 0.2879536660888016] ***
*** starting iteration: 6; err: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386, 0.2879536660888016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386, 0.2879536660888016, 0.2860359999036619] ***
*** starting iteration: 7; err: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386, 0.2879536660888016, 0.2860359999036619] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386, 0.2879536660888016, 0.2860359999036619, 0.2858475726285123] ***
*** finished computation of 7 references, err: [Inf, 0.5067999959001651, 0.33104059511706296, 0.3130187579773299, 0.2994402332854364, 0.28990528914888386, 0.2879536660888016, 0.2860359999036619, 0.2858475726285123] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 26]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6882999956256282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248] ***
*** starting iteration: 2; err: [Inf, 0.6882999956256282, 0.559024387206248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834] ***
*** starting iteration: 3; err: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557] ***
*** starting iteration: 4; err: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089] ***
*** starting iteration: 5; err: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089, 0.4830096004129674] ***
*** starting iteration: 6; err: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089, 0.4830096004129674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089, 0.4830096004129674, 0.47391867928248305] ***
*** starting iteration: 7; err: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089, 0.4830096004129674, 0.47391867928248305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089, 0.4830096004129674, 0.47391867928248305, 0.47305774270114553] ***
*** finished computation of 7 references, err: [Inf, 0.6882999956256282, 0.559024387206248, 0.5388805167068834, 0.5173686718274557, 0.4995058492490089, 0.4830096004129674, 0.47391867928248305, 0.47305774270114553] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7518999953948234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7518999953948234, 0.3763911135728847] ***
*** starting iteration: 2; err: [Inf, 0.7518999953948234, 0.3763911135728847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108] ***
*** starting iteration: 3; err: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563] ***
*** starting iteration: 4; err: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563, 0.2869267439618353] ***
*** starting iteration: 5; err: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563, 0.2869267439618353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563, 0.2869267439618353, 0.28447891762111505] ***
*** starting iteration: 6; err: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563, 0.2869267439618353, 0.28447891762111505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563, 0.2869267439618353, 0.28447891762111505, 0.28447891762111505] ***
*** finished computation of 7 references, err: [Inf, 0.7518999953948234, 0.3763911135728847, 0.2970809556665108, 0.2897695193622563, 0.2869267439618353, 0.28447891762111505, 0.28447891762111505] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 2]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 22), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 18]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 6), (3, 18)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.5721000053090304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.5721000053090304, 0.7696462898498148] ***
*** finished computation of 3 references, err: [Inf, 3.5721000053090304, 0.7696462898498148] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 27]]
** centroid: 1, normalized-entropy: 1.0, [(2, 27), (3, 27)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 2, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 38), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.416800032817248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.416800032817248, 1.0068233120404597] ***
*** finished computation of 3 references, err: [Inf, 2.416800032817248, 1.0068233120404597] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 35]]
** centroid: 1, normalized-entropy: 0.9993759069576513, [(2, 33), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2013000128006497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2013000128006497, 0.5455713788658143] ***
*** finished computation of 3 references, err: [Inf, 1.2013000128006497, 0.5455713788658143] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 3, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5940160502383216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5940160502383216, 0.5675909712114867] ***
*** starting iteration: 2; err: [Inf, 0.5940160502383216, 0.5675909712114867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5940160502383216, 0.5675909712114867, 0.5636665607684256] ***
*** starting iteration: 3; err: [Inf, 0.5940160502383216, 0.5675909712114867, 0.5636665607684256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5940160502383216, 0.5675909712114867, 0.5636665607684256, 0.5593187367650023] ***
*** finished computation of 7 references, err: [Inf, 0.5940160502383216, 0.5675909712114867, 0.5636665607684256, 0.5593187367650023] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [9, 2, 0]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(1, 9), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 33]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(2, 27), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6497712624105481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6497712624105481, 0.3646635268921651] ***
*** starting iteration: 2; err: [Inf, 0.6497712624105481, 0.3646635268921651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6497712624105481, 0.3646635268921651, 0.32583818214590166] ***
*** starting iteration: 3; err: [Inf, 0.6497712624105481, 0.3646635268921651, 0.32583818214590166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6497712624105481, 0.3646635268921651, 0.32583818214590166, 0.28608012078103523] ***
*** finished computation of 7 references, err: [Inf, 0.6497712624105481, 0.3646635268921651, 0.32583818214590166, 0.28608012078103523] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 28]]
** centroid: 1, normalized-entropy: 0.45868581620054033, [(2, 3), (3, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 24, 7]]
** centroid: 5, normalized-entropy: 0.7706290693639406, [(2, 24), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.362971694518624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.362971694518624, 0.20663189740482824] ***
*** starting iteration: 2; err: [Inf, 1.362971694518624, 0.20663189740482824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.362971694518624, 0.20663189740482824, 0.18510314703852415] ***
*** starting iteration: 3; err: [Inf, 1.362971694518624, 0.20663189740482824, 0.18510314703852415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.362971694518624, 0.20663189740482824, 0.18510314703852415, 0.1814119168734432] ***
*** finished computation of 7 references, err: [Inf, 1.362971694518624, 0.20663189740482824, 0.18510314703852415, 0.1814119168734432] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 6]]
** centroid: 4, normalized-entropy: 0.9957274520849256, [(2, 7), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32060813286423867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254] ***
*** starting iteration: 2; err: [Inf, 0.32060813286423867, 0.23408748221967254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824] ***
*** starting iteration: 3; err: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242] ***
*** starting iteration: 4; err: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118] ***
*** starting iteration: 5; err: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118, 0.21270021950188847] ***
*** starting iteration: 6; err: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118, 0.21270021950188847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118, 0.21270021950188847, 0.21072673204204848] ***
*** starting iteration: 7; err: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118, 0.21270021950188847, 0.21072673204204848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118, 0.21270021950188847, 0.21072673204204848, 0.2098397867373605] ***
*** finished computation of 7 references, err: [Inf, 0.32060813286423867, 0.23408748221967254, 0.22199835107978824, 0.21777391201949242, 0.21565867955878118, 0.21270021950188847, 0.21072673204204848, 0.2098397867373605] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 1, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5484297123538557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5484297123538557, 0.21323043762233124] ***
*** starting iteration: 2; err: [Inf, 0.5484297123538557, 0.21323043762233124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5484297123538557, 0.21323043762233124, 0.1801909794260525] ***
*** starting iteration: 3; err: [Inf, 0.5484297123538557, 0.21323043762233124, 0.1801909794260525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5484297123538557, 0.21323043762233124, 0.1801909794260525, 0.1794569225733388] ***
*** finished computation of 7 references, err: [Inf, 0.5484297123538557, 0.21323043762233124, 0.1801909794260525, 0.1794569225733388] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46263930486864835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46263930486864835, 0.2624358669272027] ***
*** starting iteration: 2; err: [Inf, 0.46263930486864835, 0.2624358669272027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584] ***
*** starting iteration: 3; err: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584, 0.19859429887331032] ***
*** starting iteration: 4; err: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584, 0.19859429887331032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584, 0.19859429887331032, 0.19638560293628435] ***
*** starting iteration: 5; err: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584, 0.19859429887331032, 0.19638560293628435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584, 0.19859429887331032, 0.19638560293628435, 0.1958264077574498] ***
*** finished computation of 7 references, err: [Inf, 0.46263930486864835, 0.2624358669272027, 0.21583493094339584, 0.19859429887331032, 0.19638560293628435, 0.1958264077574498] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 13, 6]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.641111627928828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.641111627928828, 0.6750637118036538] ***
*** finished computation of 3 references, err: [Inf, 2.641111627928828, 0.6750637118036538] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 5, 0]]
** centroid: 1, normalized-entropy: 0.8960382325345574, [(1, 11), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 24, 33]]
** centroid: 2, normalized-entropy: 0.9819407868640977, [(2, 24), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0412265982018327] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0412265982018327, 0.446530180617801] ***
*** finished computation of 3 references, err: [Inf, 1.0412265982018327, 0.446530180617801] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 35]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 15), (3, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8963314296671663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8963314296671663, 0.406024840134118] ***
*** finished computation of 3 references, err: [Inf, 0.8963314296671663, 0.406024840134118] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.743448311553424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.743448311553424, 0.5978670271329207] ***
*** starting iteration: 2; err: [Inf, 0.743448311553424, 0.5978670271329207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497] ***
*** starting iteration: 3; err: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497, 0.5833820342293856] ***
*** starting iteration: 4; err: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497, 0.5833820342293856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497, 0.5833820342293856, 0.578318608225114] ***
*** starting iteration: 5; err: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497, 0.5833820342293856, 0.578318608225114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497, 0.5833820342293856, 0.578318608225114, 0.5778991661352022] ***
*** finished computation of 3 references, err: [Inf, 0.743448311553424, 0.5978670271329207, 0.5908411843946497, 0.5833820342293856, 0.578318608225114, 0.5778991661352022] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 1, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7928948386621838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7928948386621838, 0.6789480335665179] ***
*** starting iteration: 2; err: [Inf, 0.7928948386621838, 0.6789480335665179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7928948386621838, 0.6789480335665179, 0.6668530839449538] ***
*** starting iteration: 3; err: [Inf, 0.7928948386621838, 0.6789480335665179, 0.6668530839449538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7928948386621838, 0.6789480335665179, 0.6668530839449538, 0.662663010501316] ***
*** starting iteration: 4; err: [Inf, 0.7928948386621838, 0.6789480335665179, 0.6668530839449538, 0.662663010501316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7928948386621838, 0.6789480335665179, 0.6668530839449538, 0.662663010501316, 0.6619373823755709] ***
*** finished computation of 3 references, err: [Inf, 0.7928948386621838, 0.6789480335665179, 0.6668530839449538, 0.662663010501316, 0.6619373823755709] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 35]]
** centroid: 1, normalized-entropy: 0.9993759069576513, [(2, 33), (3, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [19, 1, 0]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(1, 19), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7780909783741989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324] ***
*** starting iteration: 2; err: [Inf, 0.7780909783741989, 0.38426788227584324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125] ***
*** starting iteration: 3; err: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785] ***
*** starting iteration: 4; err: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987] ***
*** starting iteration: 5; err: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987, 0.36782049565150876] ***
*** starting iteration: 6; err: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987, 0.36782049565150876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987, 0.36782049565150876, 0.36319575509215035] ***
*** starting iteration: 7; err: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987, 0.36782049565150876, 0.36319575509215035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987, 0.36782049565150876, 0.36319575509215035, 0.3626954998847269] ***
*** finished computation of 3 references, err: [Inf, 0.7780909783741989, 0.38426788227584324, 0.37626088259074125, 0.37411552840589785, 0.37121889290785987, 0.36782049565150876, 0.36319575509215035, 0.3626954998847269] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 6]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 32), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 26]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 5), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.3545999901252697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3545999901252697, 0.5768751448567108] ***
*** starting iteration: 2; err: [Inf, 3.3545999901252697, 0.5768751448567108] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3545999901252697, 0.5768751448567108, 0.49060526402955207] ***
*** starting iteration: 3; err: [Inf, 3.3545999901252697, 0.5768751448567108, 0.49060526402955207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.3545999901252697, 0.5768751448567108, 0.49060526402955207, 0.49060526402955207] ***
*** finished computation of 3 references, err: [Inf, 3.3545999901252697, 0.5768751448567108, 0.49060526402955207, 0.49060526402955207] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 10]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 2, normalized-entropy: 0.24988229283318547, [(2, 1), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2516000113443704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2516000113443704, 0.6968720839690399] ***
*** starting iteration: 2; err: [Inf, 1.2516000113443704, 0.6968720839690399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2516000113443704, 0.6968720839690399, 0.6501940795118099] ***
*** starting iteration: 3; err: [Inf, 1.2516000113443704, 0.6968720839690399, 0.6501940795118099] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2516000113443704, 0.6968720839690399, 0.6501940795118099, 0.6256600928729429] ***
*** finished computation of 3 references, err: [Inf, 1.2516000113443704, 0.6968720839690399, 0.6501940795118099, 0.6256600928729429] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 35]]
** centroid: 2, normalized-entropy: 0.8196004346196011, [(2, 12), (3, 35)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8070000220510765] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8070000220510765, 0.9853729443329056] ***
*** starting iteration: 2; err: [Inf, 1.8070000220510765, 0.9853729443329056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8070000220510765, 0.9853729443329056, 0.8496213529498382] ***
*** starting iteration: 3; err: [Inf, 1.8070000220510765, 0.9853729443329056, 0.8496213529498382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8070000220510765, 0.9853729443329056, 0.8496213529498382, 0.6718293775632331] ***
*** finished computation of 3 references, err: [Inf, 1.8070000220510765, 0.9853729443329056, 0.8496213529498382, 0.6718293775632331] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 31]]
** centroid: 1, normalized-entropy: 0.9661773513883509, [(2, 20), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5543553868366855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5543553868366855, 0.2907680696449925] ***
*** starting iteration: 2; err: [Inf, 0.5543553868366855, 0.2907680696449925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887] ***
*** starting iteration: 3; err: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752] ***
*** starting iteration: 4; err: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752, 0.2705155522618153] ***
*** starting iteration: 5; err: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752, 0.2705155522618153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752, 0.2705155522618153, 0.26688157994858885] ***
*** starting iteration: 6; err: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752, 0.2705155522618153, 0.26688157994858885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752, 0.2705155522618153, 0.26688157994858885, 0.2667080320856522] ***
*** finished computation of 7 references, err: [Inf, 0.5543553868366855, 0.2907680696449925, 0.2772329198455887, 0.2742722307985752, 0.2705155522618153, 0.26688157994858885, 0.2667080320856522] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 9]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(2, 28), (3, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 4, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5519484429937641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5519484429937641, 0.350496860093765] ***
*** starting iteration: 2; err: [Inf, 0.5519484429937641, 0.350496860093765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502] ***
*** starting iteration: 3; err: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502, 0.31906056729366217] ***
*** starting iteration: 4; err: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502, 0.31906056729366217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502, 0.31906056729366217, 0.31789833233879294] ***
*** starting iteration: 5; err: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502, 0.31906056729366217, 0.31789833233879294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502, 0.31906056729366217, 0.31789833233879294, 0.317550881947583] ***
*** finished computation of 7 references, err: [Inf, 0.5519484429937641, 0.350496860093765, 0.3354535255121502, 0.31906056729366217, 0.31789833233879294, 0.317550881947583] ***
*** center 1: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [10, 1, 0]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(1, 10), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7887920562040303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589] ***
*** starting iteration: 2; err: [Inf, 0.7887920562040303, 0.2972319790838589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302] ***
*** starting iteration: 3; err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926] ***
*** starting iteration: 4; err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849] ***
*** starting iteration: 5; err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142] ***
*** starting iteration: 6; err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142, 0.21111055738716777] ***
*** starting iteration: 7; err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142, 0.21111055738716777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142, 0.21111055738716777, 0.2100374040899269] ***
*** starting iteration: 8; err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142, 0.21111055738716777, 0.2100374040899269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142, 0.21111055738716777, 0.2100374040899269, 0.2093824740870808] ***
*** finished computation of 7 references, err: [Inf, 0.7887920562040303, 0.2972319790838589, 0.2435740727251302, 0.2321083104547926, 0.22497728212346849, 0.21590228301191142, 0.21111055738716777, 0.2100374040899269, 0.2093824740870808] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 7]]
** centroid: 1, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3554757140106615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3554757140106615, 0.21532881347987323] ***
*** finished computation of 7 references, err: [Inf, 0.3554757140106615, 0.21532881347987323] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 11]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 1), (3, 11)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39118930922346573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39118930922346573, 0.20947867688209929] ***
*** finished computation of 7 references, err: [Inf, 0.39118930922346573, 0.20947867688209929] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 4]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 18), (3, 4)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31781301357544545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31781301357544545, 0.22315685675984853] ***
*** finished computation of 7 references, err: [Inf, 0.31781301357544545, 0.22315685675984853] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 10]]
** centroid: 6, normalized-entropy: 0.9774178175281716, [(2, 7), (3, 10)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 4]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(2, 7), (3, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4494999993705835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4494999993705835, 0.24797012200110913] ***
*** starting iteration: 2; err: [Inf, 0.4494999993705835, 0.24797012200110913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098] ***
*** starting iteration: 3; err: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692] ***
*** starting iteration: 4; err: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692, 0.22467161586116355] ***
*** starting iteration: 5; err: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692, 0.22467161586116355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692, 0.22467161586116355, 0.22029769532296406] ***
*** starting iteration: 6; err: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692, 0.22467161586116355, 0.22029769532296406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692, 0.22467161586116355, 0.22029769532296406, 0.22029769532296406] ***
*** finished computation of 7 references, err: [Inf, 0.4494999993705835, 0.24797012200110913, 0.2311861907069098, 0.22855961756230692, 0.22467161586116355, 0.22029769532296406, 0.22029769532296406] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 9, 5]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6060000097742037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6060000097742037, 0.2937622212927853] ***
*** starting iteration: 2; err: [Inf, 0.6060000097742037, 0.2937622212927853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716] ***
*** starting iteration: 3; err: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716, 0.256357700197511] ***
*** starting iteration: 4; err: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716, 0.256357700197511] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716, 0.256357700197511, 0.2527621340588464] ***
*** starting iteration: 5; err: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716, 0.256357700197511, 0.2527621340588464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716, 0.256357700197511, 0.2527621340588464, 0.25219763107009624] ***
*** finished computation of 7 references, err: [Inf, 0.6060000097742037, 0.2937622212927853, 0.267708654321716, 0.256357700197511, 0.2527621340588464, 0.25219763107009624] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4058000015728352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000015728352, 0.25096692843160967] ***
*** starting iteration: 2; err: [Inf, 0.4058000015728352, 0.25096692843160967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000015728352, 0.25096692843160967, 0.23350243856567068] ***
*** starting iteration: 3; err: [Inf, 0.4058000015728352, 0.25096692843160967, 0.23350243856567068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000015728352, 0.25096692843160967, 0.23350243856567068, 0.22972725510157901] ***
*** starting iteration: 4; err: [Inf, 0.4058000015728352, 0.25096692843160967, 0.23350243856567068, 0.22972725510157901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4058000015728352, 0.25096692843160967, 0.23350243856567068, 0.22972725510157901, 0.22972725510157901] ***
*** finished computation of 7 references, err: [Inf, 0.4058000015728352, 0.25096692843160967, 0.23350243856567068, 0.22972725510157901, 0.22972725510157901] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49920000542095794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49920000542095794, 0.25684458259911713] ***
*** starting iteration: 2; err: [Inf, 0.49920000542095794, 0.25684458259911713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49920000542095794, 0.25684458259911713, 0.2424347947758667] ***
*** starting iteration: 3; err: [Inf, 0.49920000542095794, 0.25684458259911713, 0.2424347947758667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49920000542095794, 0.25684458259911713, 0.2424347947758667, 0.23592948144197887] ***
*** starting iteration: 4; err: [Inf, 0.49920000542095794, 0.25684458259911713, 0.2424347947758667, 0.23592948144197887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49920000542095794, 0.25684458259911713, 0.2424347947758667, 0.23592948144197887, 0.23569228612311993] ***
*** finished computation of 7 references, err: [Inf, 0.49920000542095794, 0.25684458259911713, 0.2424347947758667, 0.23592948144197887, 0.23569228612311993] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 5]]
** centroid: 3, normalized-entropy: 1.0, [(2, 5), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 11]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.581600002227278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334] ***
*** starting iteration: 2; err: [Inf, 0.581600002227278, 0.30398121305711334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244] ***
*** starting iteration: 3; err: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393] ***
*** starting iteration: 4; err: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152] ***
*** starting iteration: 5; err: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152, 0.2603955784252953] ***
*** starting iteration: 6; err: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152, 0.2603955784252953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152, 0.2603955784252953, 0.2532582393473065] ***
*** starting iteration: 7; err: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152, 0.2603955784252953, 0.2532582393473065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152, 0.2603955784252953, 0.2532582393473065, 0.25264569760899863] ***
*** finished computation of 7 references, err: [Inf, 0.581600002227278, 0.30398121305711334, 0.28610446726618244, 0.27715671524580393, 0.2715031923458152, 0.2603955784252953, 0.2532582393473065, 0.25264569760899863] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 21]]
** centroid: 4, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45240000313674444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697] ***
*** starting iteration: 2; err: [Inf, 0.45240000313674444, 0.2781434632172697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988] ***
*** starting iteration: 3; err: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415] ***
*** starting iteration: 4; err: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092] ***
*** starting iteration: 5; err: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092, 0.2196117732818928] ***
*** starting iteration: 6; err: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092, 0.2196117732818928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092, 0.2196117732818928, 0.21844770465492364] ***
*** starting iteration: 7; err: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092, 0.2196117732818928, 0.21844770465492364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092, 0.2196117732818928, 0.21844770465492364, 0.21794547835492104] ***
*** finished computation of 7 references, err: [Inf, 0.45240000313674444, 0.2781434632172697, 0.2562920868644988, 0.23454227922479415, 0.22376832195505092, 0.2196117732818928, 0.21844770465492364, 0.21794547835492104] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5880000051893668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000051893668, 0.23310622082184262] ***
*** starting iteration: 2; err: [Inf, 0.5880000051893668, 0.23310622082184262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000051893668, 0.23310622082184262, 0.22299987074123423] ***
*** starting iteration: 3; err: [Inf, 0.5880000051893668, 0.23310622082184262, 0.22299987074123423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5880000051893668, 0.23310622082184262, 0.22299987074123423, 0.2170970230062586] ***
*** finished computation of 7 references, err: [Inf, 0.5880000051893668, 0.23310622082184262, 0.22299987074123423, 0.2170970230062586] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(2, 7), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5964000000002143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000000002143, 0.26017112992459335] ***
*** starting iteration: 2; err: [Inf, 0.5964000000002143, 0.26017112992459335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000000002143, 0.26017112992459335, 0.25006390019917246] ***
*** starting iteration: 3; err: [Inf, 0.5964000000002143, 0.26017112992459335, 0.25006390019917246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000000002143, 0.26017112992459335, 0.25006390019917246, 0.24809131848366994] ***
*** finished computation of 7 references, err: [Inf, 0.5964000000002143, 0.26017112992459335, 0.25006390019917246, 0.24809131848366994] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 7]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34880000189700394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34880000189700394, 0.2330284510613036] ***
*** starting iteration: 2; err: [Inf, 0.34880000189700394, 0.2330284510613036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34880000189700394, 0.2330284510613036, 0.22642080299273354] ***
*** starting iteration: 3; err: [Inf, 0.34880000189700394, 0.2330284510613036, 0.22642080299273354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34880000189700394, 0.2330284510613036, 0.22642080299273354, 0.22532604901715986] ***
*** finished computation of 7 references, err: [Inf, 0.34880000189700394, 0.2330284510613036, 0.22642080299273354, 0.22532604901715986] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5351000033088034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5351000033088034, 0.26629273955412436] ***
*** starting iteration: 2; err: [Inf, 0.5351000033088034, 0.26629273955412436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5351000033088034, 0.26629273955412436, 0.24388013003788112] ***
*** starting iteration: 3; err: [Inf, 0.5351000033088034, 0.26629273955412436, 0.24388013003788112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5351000033088034, 0.26629273955412436, 0.24388013003788112, 0.23329253941727943] ***
*** starting iteration: 4; err: [Inf, 0.5351000033088034, 0.26629273955412436, 0.24388013003788112, 0.23329253941727943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5351000033088034, 0.26629273955412436, 0.24388013003788112, 0.23329253941727943, 0.2325620394975047] ***
*** finished computation of 7 references, err: [Inf, 0.5351000033088034, 0.26629273955412436, 0.24388013003788112, 0.23329253941727943, 0.2325620394975047] ***
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 5]]
** centroid: 3, normalized-entropy: 1.0, [(2, 5), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 6, 11]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6180000038981832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6180000038981832, 0.2659421365235147] ***
*** starting iteration: 2; err: [Inf, 0.6180000038981832, 0.2659421365235147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6180000038981832, 0.2659421365235147, 0.2510895729606079] ***
*** starting iteration: 3; err: [Inf, 0.6180000038981832, 0.2659421365235147, 0.2510895729606079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6180000038981832, 0.2659421365235147, 0.2510895729606079, 0.24767585631801484] ***
*** starting iteration: 4; err: [Inf, 0.6180000038981832, 0.2659421365235147, 0.2510895729606079, 0.24767585631801484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6180000038981832, 0.2659421365235147, 0.2510895729606079, 0.24767585631801484, 0.24767585631801484] ***
*** finished computation of 7 references, err: [Inf, 0.6180000038981832, 0.2659421365235147, 0.2510895729606079, 0.24767585631801484, 0.24767585631801484] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 4, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(2, 11), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6359999995077643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6359999995077643, 0.2238656419992284] ***
*** starting iteration: 2; err: [Inf, 0.6359999995077643, 0.2238656419992284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6359999995077643, 0.2238656419992284, 0.2207724144833053] ***
*** starting iteration: 3; err: [Inf, 0.6359999995077643, 0.2238656419992284, 0.2207724144833053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6359999995077643, 0.2238656419992284, 0.2207724144833053, 0.22021163459423548] ***
*** finished computation of 7 references, err: [Inf, 0.6359999995077643, 0.2238656419992284, 0.2207724144833053, 0.22021163459423548] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 4, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44079729265396606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44079729265396606, 0.20970521982409232] ***
*** starting iteration: 2; err: [Inf, 0.44079729265396606, 0.20970521982409232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628] ***
*** starting iteration: 3; err: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811] ***
*** starting iteration: 4; err: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811, 0.16380161499352572] ***
*** starting iteration: 5; err: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811, 0.16380161499352572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811, 0.16380161499352572, 0.1622234760849571] ***
*** starting iteration: 6; err: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811, 0.16380161499352572, 0.1622234760849571] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811, 0.16380161499352572, 0.1622234760849571, 0.16148384505046834] ***
*** finished computation of 7 references, err: [Inf, 0.44079729265396606, 0.20970521982409232, 0.18863401350756628, 0.1752572661907811, 0.16380161499352572, 0.1622234760849571, 0.16148384505046834] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42414109488967683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42414109488967683, 0.18308527925188633] ***
*** starting iteration: 2; err: [Inf, 0.42414109488967683, 0.18308527925188633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42414109488967683, 0.18308527925188633, 0.17344021323714373] ***
*** starting iteration: 3; err: [Inf, 0.42414109488967683, 0.18308527925188633, 0.17344021323714373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42414109488967683, 0.18308527925188633, 0.17344021323714373, 0.17188476186192161] ***
*** starting iteration: 4; err: [Inf, 0.42414109488967683, 0.18308527925188633, 0.17344021323714373, 0.17188476186192161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42414109488967683, 0.18308527925188633, 0.17344021323714373, 0.17188476186192161, 0.17188476186192161] ***
*** finished computation of 7 references, err: [Inf, 0.42414109488967683, 0.18308527925188633, 0.17344021323714373, 0.17188476186192161, 0.17188476186192161] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 7]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 21), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29034600983042785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29034600983042785, 0.1827062007576709] ***
*** starting iteration: 2; err: [Inf, 0.29034600983042785, 0.1827062007576709] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29034600983042785, 0.1827062007576709, 0.17554008998810164] ***
*** starting iteration: 3; err: [Inf, 0.29034600983042785, 0.1827062007576709, 0.17554008998810164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29034600983042785, 0.1827062007576709, 0.17554008998810164, 0.1710413007271136] ***
*** starting iteration: 4; err: [Inf, 0.29034600983042785, 0.1827062007576709, 0.17554008998810164, 0.1710413007271136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29034600983042785, 0.1827062007576709, 0.17554008998810164, 0.1710413007271136, 0.17078768677470843] ***
*** finished computation of 7 references, err: [Inf, 0.29034600983042785, 0.1827062007576709, 0.17554008998810164, 0.1710413007271136, 0.17078768677470843] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 8]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 4]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 16), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 18
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4442678158207971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442678158207971, 0.17709537024310812] ***
*** starting iteration: 2; err: [Inf, 0.4442678158207971, 0.17709537024310812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674] ***
*** starting iteration: 3; err: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674, 0.15018657409011335] ***
*** starting iteration: 4; err: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674, 0.15018657409011335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674, 0.15018657409011335, 0.14889319871827755] ***
*** starting iteration: 5; err: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674, 0.15018657409011335, 0.14889319871827755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674, 0.15018657409011335, 0.14889319871827755, 0.14889319871827755] ***
*** finished computation of 7 references, err: [Inf, 0.4442678158207971, 0.17709537024310812, 0.15514614254407674, 0.15018657409011335, 0.14889319871827755, 0.14889319871827755] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 15]]
** centroid: 4, normalized-entropy: 0.9023932827949788, [(2, 7), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3820106184605111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188] ***
*** starting iteration: 2; err: [Inf, 0.3820106184605111, 0.18674197611767188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235] ***
*** starting iteration: 3; err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254] ***
*** starting iteration: 4; err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248] ***
*** starting iteration: 5; err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953] ***
*** starting iteration: 6; err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953, 0.15844139468636254] ***
*** starting iteration: 7; err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953, 0.15844139468636254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953, 0.15844139468636254, 0.15335212412953667] ***
*** starting iteration: 8; err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953, 0.15844139468636254, 0.15335212412953667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953, 0.15844139468636254, 0.15335212412953667, 0.15307441709063407] ***
*** finished computation of 7 references, err: [Inf, 0.3820106184605111, 0.18674197611767188, 0.1745914578632235, 0.16957075742004254, 0.16619936501647248, 0.16333505962964953, 0.15844139468636254, 0.15335212412953667, 0.15307441709063407] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 8]]
** centroid: 3, normalized-entropy: 0.9967916319816367, [(2, 7), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4422402579429628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4422402579429628, 0.16272134268226324] ***
*** starting iteration: 2; err: [Inf, 0.4422402579429628, 0.16272134268226324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4422402579429628, 0.16272134268226324, 0.15426617421337138] ***
*** starting iteration: 3; err: [Inf, 0.4422402579429628, 0.16272134268226324, 0.15426617421337138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4422402579429628, 0.16272134268226324, 0.15426617421337138, 0.1532478623939012] ***
*** starting iteration: 4; err: [Inf, 0.4422402579429628, 0.16272134268226324, 0.15426617421337138, 0.1532478623939012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4422402579429628, 0.16272134268226324, 0.15426617421337138, 0.1532478623939012, 0.15257078039527125] ***
*** finished computation of 7 references, err: [Inf, 0.4422402579429628, 0.16272134268226324, 0.15426617421337138, 0.1532478623939012, 0.15257078039527125] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 14), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 6]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 16), (3, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4926000092158981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4926000092158981, 0.2663967935875484] ***
*** starting iteration: 2; err: [Inf, 0.4926000092158981, 0.2663967935875484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364] ***
*** starting iteration: 3; err: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313] ***
*** starting iteration: 4; err: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313, 0.25288800781153953] ***
*** starting iteration: 5; err: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313, 0.25288800781153953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313, 0.25288800781153953, 0.2517250558433863] ***
*** starting iteration: 6; err: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313, 0.25288800781153953, 0.2517250558433863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313, 0.25288800781153953, 0.2517250558433863, 0.2514558237381145] ***
*** finished computation of 7 references, err: [Inf, 0.4926000092158981, 0.2663967935875484, 0.25742899338576364, 0.25434721024971313, 0.25288800781153953, 0.2517250558433863, 0.2514558237381145] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4419000031877887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4419000031877887, 0.25843991759856555] ***
*** starting iteration: 2; err: [Inf, 0.4419000031877887, 0.25843991759856555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4419000031877887, 0.25843991759856555, 0.24839115626532987] ***
*** starting iteration: 3; err: [Inf, 0.4419000031877887, 0.25843991759856555, 0.24839115626532987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4419000031877887, 0.25843991759856555, 0.24839115626532987, 0.24839115626532987] ***
*** finished computation of 7 references, err: [Inf, 0.4419000031877887, 0.25843991759856555, 0.24839115626532987, 0.24839115626532987] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37980000498058275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37980000498058275, 0.2629924812016353] ***
*** starting iteration: 2; err: [Inf, 0.37980000498058275, 0.2629924812016353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858] ***
*** starting iteration: 3; err: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858, 0.2212344626482183] ***
*** starting iteration: 4; err: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858, 0.2212344626482183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858, 0.2212344626482183, 0.21925490760498037] ***
*** starting iteration: 5; err: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858, 0.2212344626482183, 0.21925490760498037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858, 0.2212344626482183, 0.21925490760498037, 0.2183119863648646] ***
*** finished computation of 7 references, err: [Inf, 0.37980000498058275, 0.2629924812016353, 0.23645134124444858, 0.2212344626482183, 0.21925490760498037, 0.2183119863648646] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 19
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.9051000026391661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9051000026391661, 0.536317838922302] ***
*** finished computation of 3 references, err: [Inf, 0.9051000026391661, 0.536317838922302] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 7, 32]]
** centroid: 1, normalized-entropy: 0.6789538995185759, [(2, 7), (3, 32)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9876000061221837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9876000061221837, 0.5745128887626926] ***
*** finished computation of 3 references, err: [Inf, 0.9876000061221837, 0.5745128887626926] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 14]]
** centroid: 3, normalized-entropy: 0.8708644692353648, [(2, 34), (3, 14)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9703000022558228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9703000022558228, 0.8809586763734266] ***
*** finished computation of 3 references, err: [Inf, 1.9703000022558228, 0.8809586763734266] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 5, 0]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(1, 31), (2, 5)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 19]]
** centroid: 3, normalized-entropy: 0.9526092095121206, [(2, 32), (3, 19)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 19
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.2933484696223636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2933484696223636, 0.19589218169154826] ***
*** starting iteration: 2; err: [Inf, 0.2933484696223636, 0.19589218169154826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2933484696223636, 0.19589218169154826, 0.1822090233427428] ***
*** starting iteration: 3; err: [Inf, 0.2933484696223636, 0.19589218169154826, 0.1822090233427428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2933484696223636, 0.19589218169154826, 0.1822090233427428, 0.18110367478770503] ***
*** starting iteration: 4; err: [Inf, 0.2933484696223636, 0.19589218169154826, 0.1822090233427428, 0.18110367478770503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2933484696223636, 0.19589218169154826, 0.1822090233427428, 0.18110367478770503, 0.18085469913502586] ***
*** finished computation of 7 references, err: [Inf, 0.2933484696223636, 0.19589218169154826, 0.1822090233427428, 0.18110367478770503, 0.18085469913502586] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5406755018385526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863] ***
*** starting iteration: 2; err: [Inf, 0.5406755018385526, 0.23133050608757863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696] ***
*** starting iteration: 3; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058] ***
*** starting iteration: 4; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831] ***
*** starting iteration: 5; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393] ***
*** starting iteration: 6; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549] ***
*** starting iteration: 7; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903] ***
*** starting iteration: 8; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903, 0.16102818998869572] ***
*** starting iteration: 9; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903, 0.16102818998869572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903, 0.16102818998869572, 0.15690732418983308] ***
*** starting iteration: 10; err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903, 0.16102818998869572, 0.15690732418983308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903, 0.16102818998869572, 0.15690732418983308, 0.1541729017900864] ***
*** finished computation of 7 references, err: [Inf, 0.5406755018385526, 0.23133050608757863, 0.17650012068895696, 0.1714472692125058, 0.1680631728467831, 0.16650162683421393, 0.1653377339188549, 0.1628831998378903, 0.16102818998869572, 0.15690732418983308, 0.1541729017900864] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 7]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29780453392939615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426] ***
*** starting iteration: 2; err: [Inf, 0.29780453392939615, 0.20699179233496426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271] ***
*** starting iteration: 3; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767] ***
*** starting iteration: 4; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738] ***
*** starting iteration: 5; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202] ***
*** starting iteration: 6; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872] ***
*** starting iteration: 7; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317] ***
*** starting iteration: 8; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317, 0.18364223740390684] ***
*** starting iteration: 9; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317, 0.18364223740390684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317, 0.18364223740390684, 0.1820156978115063] ***
*** starting iteration: 10; err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317, 0.18364223740390684, 0.1820156978115063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317, 0.18364223740390684, 0.1820156978115063, 0.18086841222684774] ***
*** finished computation of 7 references, err: [Inf, 0.29780453392939615, 0.20699179233496426, 0.1972099334397271, 0.1959352467796767, 0.19320047365765738, 0.18895786170998202, 0.18657422445446872, 0.18552143276342317, 0.18364223740390684, 0.1820156978115063, 0.18086841222684774] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 17]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 6 finished
*** starting iteration: 1; err: [Inf, 1.3213000009262328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3213000009262328, 0.5081680239847394] ***
*** finished computation of 3 references, err: [Inf, 1.3213000009262328, 0.5081680239847394] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 13]]
** centroid: 1, normalized-entropy: 0.8926230133850988, [(2, 29), (3, 13)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4890999963550928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4890999963550928, 0.5494593405788314] ***
*** finished computation of 3 references, err: [Inf, 1.4890999963550928, 0.5494593405788314] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 34), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5012999956355884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5012999956355884, 0.5222939446059125] ***
*** finished computation of 3 references, err: [Inf, 1.5012999956355884, 0.5222939446059125] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0282118869012367] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0282118869012367, 0.3538758401007928] ***
*** finished computation of 3 references, err: [Inf, 1.0282118869012367, 0.3538758401007928] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 12]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 28), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6687182700322069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6687182700322069, 0.45012118968882686] ***
*** finished computation of 3 references, err: [Inf, 0.6687182700322069, 0.45012118968882686] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 35]]
** centroid: 1, normalized-entropy: 0.8974271930876951, [(2, 16), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7186793195082046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7186793195082046, 0.4141040892689023] ***
*** finished computation of 3 references, err: [Inf, 0.7186793195082046, 0.4141040892689023] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 9]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 36), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334, 0.8733333333333334, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334, 0.8733333333333334, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333334, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667, 0.8733333333333334, 0.8733333333333334, 0.84]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.9666666666666667
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2), 0.9666666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.664705882352941, 3.0764705882352943, 1.3823529411764706, 0.19411764705882353], [5.572727272727273, 2.709090909090909, 4.040909090909092, 1.2590909090909093], [6.2749999999999995, 2.8625, 4.6625, 1.5], [6.12, 2.746666666666667, 5.066666666666666, 1.8399999999999996], [6.870588235294118, 3.0705882352941174, 5.81764705882353, 2.176470588235294], [5.62, 4.0600000000000005, 1.5, 0.3], [5.061538461538461, 3.5, 1.5384615384615385, 0.276923076923077], [5.433333333333334, 3.4333333333333336, 1.5, 0.26666666666666666]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 2, 3, 3, 1, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.656250000000001, 2.5625, 3.95625, 1.2125000000000001], [5.55, 4.066666666666667, 1.4333333333333333, 0.26666666666666666], [4.930000000000001, 3.46, 1.4700000000000002, 0.29], [6.405555555555556, 2.983333333333333, 4.68888888888889, 1.4833333333333334], [6.1875, 2.8625000000000003, 5.19375, 1.9812499999999997], [7.163157894736842, 3.068421052631579, 6.063157894736842, 2.094736842105263], [5.279999999999999, 3.62, 1.5, 0.26], [4.709999999999999, 3.07, 1.3800000000000001, 0.16999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 1, 2, 3, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.830434782608696, 3.1652173913043478, 5.782608695652174, 2.1391304347826083], [4.874999999999999, 3.2125, 1.5499999999999998, 0.1875], [5.472222222222222, 2.5611111111111113, 3.855555555555556, 1.1722222222222223], [5.371428571428571, 3.742857142857143, 1.5, 0.24285714285714285], [6.363157894736841, 2.931578947368421, 4.589473684210527, 1.4526315789473683], [6.025, 2.7625, 5.000000000000001, 1.7375], [5.08, 3.59, 1.52, 0.32999999999999996], [4.6000000000000005, 2.966666666666667, 1.3666666666666665, 0.19999999999999998]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 1, 2, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[77, 1, 17, 15, 13, 20, 21, 1, 1, 15, 24, 22, 5, 7, 15, 2, 29, 1, 2, 25, 37, 2, 35, 35, 39, 27, 17, 1, 15, 12, 1, 8, 20, 27, 19, 54, 33, 24, 14, 11, 34, 22, 4, 42, 33, 53, 36, 13, 1, 20, 44, 31, 16, 33, 41, 20, 36, 32, 51, 29, 45, 42, 52, 9, 46, 4, 39, 8, 25, 33, 34, 39, 47, 52, 6, 29, 46, 35, 49, 29, 23, 33, 30, 7, 47, 27, 49, 45, 37, 33, 24, 32, 19, 50, 48, 41, 40, 36, 27, 34, 36, 26, 39, 36, 14, 37, 29, 28, 25, 30, 41, 28, 17, 38, 30, 45, 25, 19, 51, 40, 19, 41, 33, 40, 47, 51, 21, 4, 21, 40, 23, 53, 37, 39, 38, 15, 32, 24, 58, 31, 22, 21, 27, 23, 40, 37, 58, 34, 34, 38, 38, 36, 24, 28, 36, 13, 2, 1, 88, 37, 21, 37, 34, 28, 41, 38, 38, 33, 27, 35, 61, 36, 52, 33, 22, 48, 59, 52, 48, 21, 40, 32, 50, 42, 41, 48, 40, 38, 35, 40, 41, 41, 72, 82, 17, 30, 35, 19, 43, 41, 25, 59, 49, 39, 38, 31, 20, 47, 38, 35, 53, 28, 30, 48, 27, 41, 50, 45, 30, 48, 22, 35, 59, 30, 42, 44, 48, 37, 40, 35, 27, 46, 32, 25, 34, 27, 56, 56, 45, 47, 38, 3, 22, 24, 31, 20, 54, 62, 42, 23, 20, 64, 42, 29, 49, 21, 43, 43, 39, 31, 27, 17, 18, 57, 51, 41, 52, 45, 39, 38, 28, 62, 65, 33, 44, 55, 38, 35, 32, 23, 33, 27, 28, 44, 39, 45, 38, 44, 28, 49, 39, 25, 21, 51, 26, 48, 35, 22, 38, 37]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.585, speedup = 0.34370478608728977, eval_ratio = 0.041574)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.4149305555555556,"f1":null,"seconds":7.176399230957031e-5,"exhaustive_search_seconds":0.00037935003638267517,"evaluations":340.7734375,"distances_sum":1710.605747311722}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5538194444444443,"recall":0.5538194444444443,"f1":0.5538194444444443,"seconds":0.00010551325976848602,"exhaustive_search_seconds":0.00037935003638267517,"evaluations":379.515625,"distances_sum":1666.710135943823}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6571180555555549,"recall":0.6571180555555549,"f1":0.6571180555555549,"seconds":0.0001383516937494278,"exhaustive_search_seconds":0.00037935003638267517,"evaluations":421.59375,"distances_sum":1621.2776787147009}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7265624999999996,"recall":0.7265624999999996,"f1":0.7265624999999996,"seconds":0.0001708008348941803,"exhaustive_search_seconds":0.00037935003638267517,"evaluations":460.9765625,"distances_sum":1595.6451247041825}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7786458333333326,"recall":0.7786458333333326,"f1":0.7786458333333326,"seconds":0.00023565813899040222,"exhaustive_search_seconds":0.00037935003638267517,"evaluations":500.46875,"distances_sum":1580.1420813308932}
KCenters.DeloneInvIndex> reached performance {"precision":0.8133680555555548,"recall":0.8133680555555548,"f1":0.8133680555555548,"seconds":0.00025906041264533997,"exhaustive_search_seconds":0.00037935003638267517,"evaluations":537.9609375,"distances_sum":1572.1199048420763}
Test Summary:                 | Pass  ┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7769999999999996, speedup = 1.3244503110750088, eval_ratio = 0.053417)
Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
