Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Arpack ────────────────────── v0.4.0
 Installed Primes ────────────────────── v0.4.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed DataStructures ────────────── v0.17.6
 Installed ExperimentalDesign ────────── v0.1.0
 Installed DocStringExtensions ───────── v0.8.1
 Installed CategoricalArrays ─────────── v0.7.4
 Installed InvertedIndices ───────────── v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed StatsFuns ─────────────────── v0.9.3
 Installed Distributions ─────────────── v0.21.11
 Installed Missings ──────────────────── v0.4.3
 Installed Compat ────────────────────── v3.0.0
 Installed BinaryProvider ────────────── v0.5.8
 Installed Rmath ─────────────────────── v0.6.0
 Installed OrderedCollections ────────── v1.1.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+1
 Installed TableTraits ───────────────── v1.0.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed JSON ──────────────────────── v0.21.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed ShiftedArrays ─────────────── v1.0.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed Tables ────────────────────── v0.2.11
 Installed SpecialFunctions ──────────── v0.9.0
 Installed StatsModels ───────────────── v0.6.7
 Installed OpenSpecFun_jll ───────────── v0.5.3+1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Documenter ────────────────── v0.24.3
 Installed PDMats ────────────────────── v0.9.10
 Installed PooledArrays ──────────────── v0.5.2
 Installed DataFrames ────────────────── v0.20.0
 Installed FillArrays ────────────────── v0.8.2
 Installed Reexport ──────────────────── v0.2.0
 Installed StatsBase ─────────────────── v0.32.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [4babbea4] + ExperimentalDesign v0.1.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [b99e7846] + BinaryProvider v0.5.8
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [31c24e10] + Distributions v0.21.11
  [ffbed154] + DocStringExtensions v0.8.1
  [e30172f5] + Documenter v0.24.3
  [4babbea4] + ExperimentalDesign v0.1.0
  [1a297f60] + FillArrays v0.8.2
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [27ebfcd6] + Primes v0.4.0
  [1fd47b50] + QuadGK v2.3.1
  [189a3867] + Reexport v0.2.0
  [79098fc4] + Rmath v0.6.0
  [1277b4bf] + ShiftedArrays v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.3
  [3eaba693] + StatsModels v0.6.7
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
   Testing ExperimentalDesign
    Status `/tmp/jl_tR4B9E/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.4
  [34da2185] Compat v3.0.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.21.11
  [ffbed154] DocStringExtensions v0.8.1
  [e30172f5] Documenter v0.24.3
  [4babbea4] ExperimentalDesign v0.1.0
  [1a297f60] FillArrays v0.8.2
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [4536629a] OpenBLAS_jll v0.3.7+1
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [27ebfcd6] Primes v0.4.0
  [1fd47b50] QuadGK v2.3.1
  [189a3867] Reexport v0.2.0
  [79098fc4] Rmath v0.6.0
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.3
  [3eaba693] StatsModels v0.6.7
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:130-148
│ 
│ ```jldoctest
│ julia> FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), @formula(y ~ A + B +C), explicit = true)
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), @formula(y ~ A + B +C), explicit = true)
│ 
│ Evaluated output:
│ 
│ ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│ │   caller = #FullFactorial#7(::Bool, ::Type{FullFactorial}, ::NamedTuple{(:A, :B, :C),Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}, ::StatsModels.FormulaTerm{StatsModels.Term,Tuple{StatsModels.Term,StatsModels.Term,StatsModels.Term}}) at design.jl:157
│ └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:157
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
│ 
│ Expected output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│    │   caller = #FullFactorial#7(::Bool, ::Type{FullFactorial}, ::NamedTuple{(:A, :B, :C),Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}, ::StatsModels.FormulaTerm{StatsModels.Term,Tuple{StatsModels.Term,StatsModels.Term,StatsModels.Term}}) at design.jl:157
│    └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:157
│    FullFactorial(12×3 DataFrames.DataFrame
│    │ Row │ A   │ B   │ C    │
│    │     │ Any │ Any │ Any  │
│    ├─────┼─────┼─────┼──────┤
│    │ 1   │ 1   │ a   │ 1.0  │
│    │ 2   │ 2   │ a   │ 1.0  │
│    │ 3   │ 4   │ a   │ 1.0  │
│    │ 4   │ 1   │ b   │ 1.0  │
│    │ 5   │ 2   │ b   │ 1.0  │
│    │ 6   │ 4   │ b   │ 1.0  │
│    │ 7   │ 1   │ a   │ -1.0 │
│    │ 8   │ 2   │ a   │ -1.0 │
│    │ 9   │ 4   │ a   │ -1.0 │
│    │ 10  │ 1   │ b   │ -1.0 │
│    │ 11  │ 2   │ b   │ -1.0 │
│    │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), y ~ A + B + C)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/BZNsm/src/DocTests.jl:364
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:166-184
│ 
│ ```jldoctest
│ julia> FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), explicit = true)
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ FullFactorial((A = [1, 2, 4], B = [:a, :b], C = [1.0, -1.0]), explicit = true)
│ 
│ Evaluated output:
│ 
│ ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│ │   caller = #FullFactorial#7(::Bool, ::Type{FullFactorial}, ::NamedTuple{(:A, :B, :C),Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}, ::StatsModels.FormulaTerm{StatsModels.Term,Tuple{StatsModels.Term,StatsModels.Term,StatsModels.Term}}) at design.jl:157
│ └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:157
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
│ 
│ Expected output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ A   │ B   │ C    │
│ │     │ Any │ Any │ Any  │
│ ├─────┼─────┼─────┼──────┤
│ │ 1   │ 1   │ a   │ 1.0  │
│ │ 2   │ 2   │ a   │ 1.0  │
│ │ 3   │ 4   │ a   │ 1.0  │
│ │ 4   │ 1   │ b   │ 1.0  │
│ │ 5   │ 2   │ b   │ 1.0  │
│ │ 6   │ 4   │ b   │ 1.0  │
│ │ 7   │ 1   │ a   │ -1.0 │
│ │ 8   │ 2   │ a   │ -1.0 │
│ │ 9   │ 4   │ a   │ -1.0 │
│ │ 10  │ 1   │ b   │ -1.0 │
│ │ 11  │ 2   │ b   │ -1.0 │
│ │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│    │   caller = #FullFactorial#7(::Bool, ::Type{FullFactorial}, ::NamedTuple{(:A, :B, :C),Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}, ::StatsModels.FormulaTerm{StatsModels.Term,Tuple{StatsModels.Term,StatsModels.Term,StatsModels.Term}}) at design.jl:157
│    └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:157
│    FullFactorial(12×3 DataFrames.DataFrame
│    │ Row │ A   │ B   │ C    │
│    │     │ Any │ Any │ Any  │
│    ├─────┼─────┼─────┼──────┤
│    │ 1   │ 1   │ a   │ 1.0  │
│    │ 2   │ 2   │ a   │ 1.0  │
│    │ 3   │ 4   │ a   │ 1.0  │
│    │ 4   │ 1   │ b   │ 1.0  │
│    │ 5   │ 2   │ b   │ 1.0  │
│    │ 6   │ 4   │ b   │ 1.0  │
│    │ 7   │ 1   │ a   │ -1.0 │
│    │ 8   │ 2   │ a   │ -1.0 │
│    │ 9   │ 4   │ a   │ -1.0 │
│    │ 10  │ 1   │ b   │ -1.0 │
│    │ 11  │ 2   │ b   │ -1.0 │
│    │ 12  │ 4   │ b   │ -1.0 │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (A = [1, 2, 4], B = Symbol[:a, :b], C = [1.0, -1.0]), response ~ A + B + C)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/BZNsm/src/DocTests.jl:364
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:194-212
│ 
│ ```jldoctest
│ julia> FullFactorial(([1, 2, 4], [:a, :b], [1.0, -1.0]), explicit = true)
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │
│ │     │ Any     │ Any     │ Any     │
│ ├─────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1       │ a       │ 1.0     │
│ │ 2   │ 2       │ a       │ 1.0     │
│ │ 3   │ 4       │ a       │ 1.0     │
│ │ 4   │ 1       │ b       │ 1.0     │
│ │ 5   │ 2       │ b       │ 1.0     │
│ │ 6   │ 4       │ b       │ 1.0     │
│ │ 7   │ 1       │ a       │ -1.0    │
│ │ 8   │ 2       │ a       │ -1.0    │
│ │ 9   │ 4       │ a       │ -1.0    │
│ │ 10  │ 1       │ b       │ -1.0    │
│ │ 11  │ 2       │ b       │ -1.0    │
│ │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ FullFactorial(([1, 2, 4], [:a, :b], [1.0, -1.0]), explicit = true)
│ 
│ Evaluated output:
│ 
│ ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│ │   caller = #FullFactorial#7(::Bool, ::Type{FullFactorial}, ::NamedTuple{(:factor1, :factor2, :factor3),Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}, ::StatsModels.FormulaTerm{StatsModels.Term,Tuple{StatsModels.Term,StatsModels.Term,StatsModels.Term}}) at design.jl:157
│ └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:157
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │
│ │     │ Any     │ Any     │ Any     │
│ ├─────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1       │ a       │ 1.0     │
│ │ 2   │ 2       │ a       │ 1.0     │
│ │ 3   │ 4       │ a       │ 1.0     │
│ │ 4   │ 1       │ b       │ 1.0     │
│ │ 5   │ 2       │ b       │ 1.0     │
│ │ 6   │ 4       │ b       │ 1.0     │
│ │ 7   │ 1       │ a       │ -1.0    │
│ │ 8   │ 2       │ a       │ -1.0    │
│ │ 9   │ 4       │ a       │ -1.0    │
│ │ 10  │ 1       │ b       │ -1.0    │
│ │ 11  │ 2       │ b       │ -1.0    │
│ │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
│ 
│ Expected output:
│ 
│ FullFactorial(12×3 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │
│ │     │ Any     │ Any     │ Any     │
│ ├─────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1       │ a       │ 1.0     │
│ │ 2   │ 2       │ a       │ 1.0     │
│ │ 3   │ 4       │ a       │ 1.0     │
│ │ 4   │ 1       │ b       │ 1.0     │
│ │ 5   │ 2       │ b       │ 1.0     │
│ │ 6   │ 4       │ b       │ 1.0     │
│ │ 7   │ 1       │ a       │ -1.0    │
│ │ 8   │ 2       │ a       │ -1.0    │
│ │ 9   │ 4       │ a       │ -1.0    │
│ │ 10  │ 1       │ b       │ -1.0    │
│ │ 11  │ 2       │ b       │ -1.0    │
│ │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│    │   caller = #FullFactorial#7(::Bool, ::Type{FullFactorial}, ::NamedTuple{(:factor1, :factor2, :factor3),Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}, ::StatsModels.FormulaTerm{StatsModels.Term,Tuple{StatsModels.Term,StatsModels.Term,StatsModels.Term}}) at design.jl:157
│    └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:157
│    FullFactorial(12×3 DataFrames.DataFrame
│    │ Row │ factor1 │ factor2 │ factor3 │
│    │     │ Any     │ Any     │ Any     │
│    ├─────┼─────────┼─────────┼─────────┤
│    │ 1   │ 1       │ a       │ 1.0     │
│    │ 2   │ 2       │ a       │ 1.0     │
│    │ 3   │ 4       │ a       │ 1.0     │
│    │ 4   │ 1       │ b       │ 1.0     │
│    │ 5   │ 2       │ b       │ 1.0     │
│    │ 6   │ 4       │ b       │ 1.0     │
│    │ 7   │ 1       │ a       │ -1.0    │
│    │ 8   │ 2       │ a       │ -1.0    │
│    │ 9   │ 4       │ a       │ -1.0    │
│    │ 10  │ 1       │ b       │ -1.0    │
│    │ 11  │ 2       │ b       │ -1.0    │
│    │ 12  │ 4       │ b       │ -1.0    │, Base.Iterators.ProductIterator{Tuple{Array{Int64,1},Array{Symbol,1},Array{Float64,1}}}(([1, 2, 4], Symbol[:a, :b], [1.0, -1.0])), (factor1 = [1, 2, 4], factor2 = Symbol[:a, :b], factor3 = [1.0, -1.0]), response ~ factor1 + factor2 + factor3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/BZNsm/src/DocTests.jl:364
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:46-60
│ 
│ ```jldoctest
│ julia> PlackettBurman(@formula(y ~ x1 + x2 + x3 + x4))
│ PlackettBurman(8×7 DataFrames.DataFrame
│ │ Row │ x1     │ x2     │ x3     │ x4     │ dummy1 │ dummy2 │ dummy3 │
│ │     │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │
│ ├─────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┤
│ │ 1   │ high   │ high   │ high   │ high   │ high   │ high   │ high   │
│ │ 2   │ low    │ high   │ low    │ high   │ high   │ low    │ low    │
│ │ 3   │ high   │ low    │ high   │ high   │ low    │ low    │ low    │
│ │ 4   │ low    │ high   │ high   │ low    │ low    │ low    │ high   │
│ │ 5   │ high   │ high   │ low    │ low    │ low    │ high   │ low    │
│ │ 6   │ high   │ low    │ low    │ low    │ high   │ low    │ high   │
│ │ 7   │ low    │ low    │ low    │ high   │ low    │ high   │ high   │
│ │ 8   │ low    │ low    │ high   │ low    │ high   │ high   │ low    │, (:x1, :x2, :x3, :x4), (:dummy1, :dummy2, :dummy3), y ~ x1 + x2 + x3 + x4 + dummy1 + dummy2 + dummy3)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ PlackettBurman(@formula(y ~ x1 + x2 + x3 + x4))
│ 
│ Evaluated output:
│ 
│ ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│ │   caller = PlackettBurman(::StatsModels.FormulaTerm{StatsModels.Term,NTuple{4,StatsModels.Term}}) at design.jl:79
│ └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:79
│ PlackettBurman(8×7 DataFrames.DataFrame
│ │ Row │ x1     │ x2     │ x3     │ x4     │ dummy1 │ dummy2 │ dummy3 │
│ │     │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │
│ ├─────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┤
│ │ 1   │ high   │ high   │ high   │ high   │ high   │ high   │ high   │
│ │ 2   │ low    │ high   │ low    │ high   │ high   │ low    │ low    │
│ │ 3   │ high   │ low    │ high   │ high   │ low    │ low    │ low    │
│ │ 4   │ low    │ high   │ high   │ low    │ low    │ low    │ high   │
│ │ 5   │ high   │ high   │ low    │ low    │ low    │ high   │ low    │
│ │ 6   │ high   │ low    │ low    │ low    │ high   │ low    │ high   │
│ │ 7   │ low    │ low    │ low    │ high   │ low    │ high   │ high   │
│ │ 8   │ low    │ low    │ high   │ low    │ high   │ high   │ low    │, (:x1, :x2, :x3, :x4), (:dummy1, :dummy2, :dummy3), y ~ x1 + x2 + x3 + x4 + dummy1 + dummy2 + dummy3)
│ 
│ Expected output:
│ 
│ PlackettBurman(8×7 DataFrames.DataFrame
│ │ Row │ x1     │ x2     │ x3     │ x4     │ dummy1 │ dummy2 │ dummy3 │
│ │     │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │
│ ├─────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┤
│ │ 1   │ high   │ high   │ high   │ high   │ high   │ high   │ high   │
│ │ 2   │ low    │ high   │ low    │ high   │ high   │ low    │ low    │
│ │ 3   │ high   │ low    │ high   │ high   │ low    │ low    │ low    │
│ │ 4   │ low    │ high   │ high   │ low    │ low    │ low    │ high   │
│ │ 5   │ high   │ high   │ low    │ low    │ low    │ high   │ low    │
│ │ 6   │ high   │ low    │ low    │ low    │ high   │ low    │ high   │
│ │ 7   │ low    │ low    │ low    │ high   │ low    │ high   │ high   │
│ │ 8   │ low    │ low    │ high   │ low    │ high   │ high   │ low    │, (:x1, :x2, :x3, :x4), (:dummy1, :dummy2, :dummy3), y ~ x1 + x2 + x3 + x4 + dummy1 + dummy2 + dummy3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│    │   caller = PlackettBurman(::StatsModels.FormulaTerm{StatsModels.Term,NTuple{4,StatsModels.Term}}) at design.jl:79
│    └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:79
│    PlackettBurman(8×7 DataFrames.DataFrame
│    │ Row │ x1     │ x2     │ x3     │ x4     │ dummy1 │ dummy2 │ dummy3 │
│    │     │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │ Symbol │
│    ├─────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┤
│    │ 1   │ high   │ high   │ high   │ high   │ high   │ high   │ high   │
│    │ 2   │ low    │ high   │ low    │ high   │ high   │ low    │ low    │
│    │ 3   │ high   │ low    │ high   │ high   │ low    │ low    │ low    │
│    │ 4   │ low    │ high   │ high   │ low    │ low    │ low    │ high   │
│    │ 5   │ high   │ high   │ low    │ low    │ low    │ high   │ low    │
│    │ 6   │ high   │ low    │ low    │ low    │ high   │ low    │ high   │
│    │ 7   │ low    │ low    │ low    │ high   │ low    │ high   │ high   │
│    │ 8   │ low    │ low    │ high   │ low    │ high   │ high   │ low    │, (:x1, :x2, :x3, :x4), (:dummy1, :dummy2, :dummy3), y ~ x1 + x2 + x3 + x4 + dummy1 + dummy2 + dummy3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/BZNsm/src/DocTests.jl:364
┌ Error: doctest failure in ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:90-104
│ 
│ ```jldoctest
│ julia> PlackettBurman(4)
│ PlackettBurman(8×7 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │ factor4 │ dummy1 │ dummy2 │ dummy3 │
│ │     │ Symbol  │ Symbol  │ Symbol  │ Symbol  │ Symbol │ Symbol │ Symbol │
│ ├─────┼─────────┼─────────┼─────────┼─────────┼────────┼────────┼────────┤
│ │ 1   │ high    │ high    │ high    │ high    │ high   │ high   │ high   │
│ │ 2   │ low     │ high    │ low     │ high    │ high   │ low    │ low    │
│ │ 3   │ high    │ low     │ high    │ high    │ low    │ low    │ low    │
│ │ 4   │ low     │ high    │ high    │ low     │ low    │ low    │ high   │
│ │ 5   │ high    │ high    │ low     │ low     │ low    │ high   │ low    │
│ │ 6   │ high    │ low     │ low     │ low     │ high   │ low    │ high   │
│ │ 7   │ low     │ low     │ low     │ high    │ low    │ high   │ high   │
│ │ 8   │ low     │ low     │ high    │ low     │ high   │ high   │ low    │, (:factor1, :factor2, :factor3, :factor4), (:dummy1, :dummy2, :dummy3), response ~ factor1 + factor2 + factor3 + factor4 + dummy1 + dummy2 + dummy3)
│ 
│ ```
│ 
│ Subexpression:
│ 
│ PlackettBurman(4)
│ 
│ Evaluated output:
│ 
│ ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│ │   caller = PlackettBurman(::StatsModels.FormulaTerm{StatsModels.Term,NTuple{4,StatsModels.Term}}) at design.jl:79
│ └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:79
│ PlackettBurman(8×7 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │ factor4 │ dummy1 │ dummy2 │ dummy3 │
│ │     │ Symbol  │ Symbol  │ Symbol  │ Symbol  │ Symbol │ Symbol │ Symbol │
│ ├─────┼─────────┼─────────┼─────────┼─────────┼────────┼────────┼────────┤
│ │ 1   │ high    │ high    │ high    │ high    │ high   │ high   │ high   │
│ │ 2   │ low     │ high    │ low     │ high    │ high   │ low    │ low    │
│ │ 3   │ high    │ low     │ high    │ high    │ low    │ low    │ low    │
│ │ 4   │ low     │ high    │ high    │ low     │ low    │ low    │ high   │
│ │ 5   │ high    │ high    │ low     │ low     │ low    │ high   │ low    │
│ │ 6   │ high    │ low     │ low     │ low     │ high   │ low    │ high   │
│ │ 7   │ low     │ low     │ low     │ high    │ low    │ high   │ high   │
│ │ 8   │ low     │ low     │ high    │ low     │ high   │ high   │ low    │, (:factor1, :factor2, :factor3, :factor4), (:dummy1, :dummy2, :dummy3), response ~ factor1 + factor2 + factor3 + factor4 + dummy1 + dummy2 + dummy3)
│ 
│ Expected output:
│ 
│ PlackettBurman(8×7 DataFrames.DataFrame
│ │ Row │ factor1 │ factor2 │ factor3 │ factor4 │ dummy1 │ dummy2 │ dummy3 │
│ │     │ Symbol  │ Symbol  │ Symbol  │ Symbol  │ Symbol │ Symbol │ Symbol │
│ ├─────┼─────────┼─────────┼─────────┼─────────┼────────┼────────┼────────┤
│ │ 1   │ high    │ high    │ high    │ high    │ high   │ high   │ high   │
│ │ 2   │ low     │ high    │ low     │ high    │ high   │ low    │ low    │
│ │ 3   │ high    │ low     │ high    │ high    │ low    │ low    │ low    │
│ │ 4   │ low     │ high    │ high    │ low     │ low    │ low    │ high   │
│ │ 5   │ high    │ high    │ low     │ low     │ low    │ high   │ low    │
│ │ 6   │ high    │ low     │ low     │ low     │ high   │ low    │ high   │
│ │ 7   │ low     │ low     │ low     │ high    │ low    │ high   │ high   │
│ │ 8   │ low     │ low     │ high    │ low     │ high   │ high   │ low    │, (:factor1, :factor2, :factor3, :factor4), (:dummy1, :dummy2, :dummy3), response ~ factor1 + factor2 + factor3 + factor4 + dummy1 + dummy2 + dummy3)
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: `names!(df::AbstractDataFrame, vals::Vector{Symbol}; makeunique::Bool=false)` is deprecated, use `rename!(df, vals, makeunique=makeunique)` instead.
│    │   caller = PlackettBurman(::StatsModels.FormulaTerm{StatsModels.Term,NTuple{4,StatsModels.Term}}) at design.jl:79
│    └ @ ExperimentalDesign ~/.julia/packages/ExperimentalDesign/Cqcyh/src/design.jl:79
│    PlackettBurman(8×7 DataFrames.DataFrame
│    │ Row │ factor1 │ factor2 │ factor3 │ factor4 │ dummy1 │ dummy2 │ dummy3 │
│    │     │ Symbol  │ Symbol  │ Symbol  │ Symbol  │ Symbol │ Symbol │ Symbol │
│    ├─────┼─────────┼─────────┼─────────┼─────────┼────────┼────────┼────────┤
│    │ 1   │ high    │ high    │ high    │ high    │ high   │ high   │ high   │
│    │ 2   │ low     │ high    │ low     │ high    │ high   │ low    │ low    │
│    │ 3   │ high    │ low     │ high    │ high    │ low    │ low    │ low    │
│    │ 4   │ low     │ high    │ high    │ low     │ low    │ low    │ high   │
│    │ 5   │ high    │ high    │ low     │ low     │ low    │ high   │ low    │
│    │ 6   │ high    │ low     │ low     │ low     │ high   │ low    │ high   │
│    │ 7   │ low     │ low     │ low     │ high    │ low    │ high   │ high   │
│    │ 8   │ low     │ low     │ high    │ low     │ high   │ high   │ low    │, (:factor1, :factor2, :factor3, :factor4), (:dummy1, :dummy2, :dummy3), response ~ factor1 + factor2 + factor3 + factor4 + dummy1 + dummy2 + dummy3)
└ @ Documenter.DocTests ~/.julia/packages/Documenter/BZNsm/src/DocTests.jl:364
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Builder.jl:204
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Utilities/Selectors.jl:167
│     [4] #2 at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:237 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] #makedocs#1(::Bool, ::Documenter.Writers.HTMLWriter.HTML, ::Base.Iterators.Pairs{Symbol,Any,NTuple{5,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}}, ::typeof(makedocs)) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:236
│     [7] (::Documenter.var"#kw##makedocs")(::NamedTuple{(:root, :source, :sitename, :doctest, :modules),Tuple{String,String,String,Symbol,Array{Module,1}}}, ::typeof(makedocs)) at ./none:0
│     [8] (::Documenter.var"#all_doctests#32"{Bool,Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:724
│     [9] macro expansion at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740 [inlined]
│     [10] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107 [inlined]
│     [11] #doctest#31(::Bool, ::String, ::typeof(doctest), ::String, ::Array{Module,1}) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740
│     [12] #doctest at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:0 [inlined]
│     [13] #doctest#30(::Bool, ::Nothing, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}, ::typeof(doctest), ::Module) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:683
│     [14] doctest(::Module) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:670
│     [15] top-level scope at /home/pkgeval/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:19
│     [16] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
│     [17] top-level scope at /home/pkgeval/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:13
│     [18] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
│     [19] top-level scope at /home/pkgeval/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:8
│     [20] include at ./boot.jl:328 [inlined]
│     [21] include_relative(::Module, ::String) at ./loading.jl:1105
│     [22] include(::Module, ::String) at ./Base.jl:31
│     [23] include(::String) at ./client.jl:424
│     [24] top-level scope at none:6
│     [25] eval(::Module, ::Any) at ./boot.jl:330
│     [26] exec_options(::Base.JLOptions) at ./client.jl:263
│     [27] _start() at ./client.jl:460
└ @ Documenter ~/.julia/packages/Documenter/BZNsm/src/Documenter.jl:733
Doctests: ExperimentalDesign: Test Failed at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740 [inlined]
 [2] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107 [inlined]
 [3] #doctest#31(::Bool, ::String, ::typeof(doctest), ::String, ::Array{Module,1}) at /home/pkgeval/.julia/packages/Documenter/BZNsm/src/Documenter.jl:740
Test Summary:                    | Pass  Fail  Total
ExperimentalDesign               |    4     1      5
  variance_predictions           |    4            4
  Doctests                       |          1      1
    Doctests: ExperimentalDesign |          1      1
ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ExperimentalDesign/Cqcyh/test/runtests.jl:7
ERROR: Package ExperimentalDesign errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
