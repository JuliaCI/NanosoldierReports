Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Compat ───────────── v2.2.0
 Installed OrderedCollections ─ v1.1.0
 Installed DataStructures ───── v0.17.6
 Installed vOptSpecific ─────── v1.0.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [98dea707] + vOptSpecific v1.0.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.6
  [bac558e1] + OrderedCollections v1.1.0
  [98dea707] + vOptSpecific v1.0.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building vOptSpecific → `~/.julia/packages/vOptSpecific/yfRZf/deps/build.log`
ERROR: SystemError: opening file "/home/pkgeval/.julia/packages/vOptSpecific/yfRZf/deps/build.log": Permission denied
Stacktrace:
 [1] #systemerror#44(::Nothing, ::typeof(systemerror), ::String, ::Bool) at ./error.jl:134
 [2] systemerror at ./error.jl:134 [inlined]
 [3] #open#512(::Nothing, ::Nothing, ::Nothing, ::Bool, ::Nothing, ::typeof(open), ::String) at ./iostream.jl:254
 [4] #open at ./none:0 [inlined]
 [5] open(::String, ::String) at ./iostream.jl:310
 [6] #open#271(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(open), ::Pkg.Operations.var"#46#49"{Bool,Cmd}, ::String, ::Vararg{String,N} where N) at ./io.jl:296
 [7] open at ./io.jl:296 [inlined]
 [8] (::Pkg.Operations.var"#45#48"{Pkg.Types.PackageSpec,Bool,String,Cmd})() at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:634
 [9] #47 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:654 [inlined]
 [10] #32 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:568 [inlined]
 [11] withenv(::Pkg.Operations.var"#32#39"{Pkg.Operations.var"#47#50"{Pkg.Operations.var"#45#48"{Pkg.Types.PackageSpec,Bool,String,Cmd}},Pkg.Types.Context}, ::Pair{String,String}, ::Vararg{Pair{String,B} where B,N} where N) at ./env.jl:161
 [12] (::Pkg.Operations.var"#30#36"{Bool,Pkg.Operations.var"#47#50"{Pkg.Operations.var"#45#48"{Pkg.Types.PackageSpec,Bool,String,Cmd}},Pkg.Types.Context,Pkg.Types.PackageSpec,Pkg.Types.Context,Set{Base.UUID},Set{Base.UUID},Array{Pkg.Types.PackageSpec,1}})(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:567
 [13] #mktempdir#18(::String, ::typeof(mktempdir), ::Pkg.Operations.var"#30#36"{Bool,Pkg.Operations.var"#47#50"{Pkg.Operations.var"#45#48"{Pkg.Types.PackageSpec,Bool,String,Cmd}},Pkg.Types.Context,Pkg.Types.PackageSpec,Pkg.Types.Context,Set{Base.UUID},Set{Base.UUID},Array{Pkg.Types.PackageSpec,1}}, ::String) at ./file.jl:634
 [14] mktempdir(::Function, ::String) at ./file.jl:632 (repeats 2 times)
 [15] #with_dependencies_loadable_at_toplevel#27(::Bool, ::typeof(Pkg.Operations.with_dependencies_loadable_at_toplevel), ::Pkg.Operations.var"#47#50"{Pkg.Operations.var"#45#48"{Pkg.Types.PackageSpec,Bool,String,Cmd}}, ::Pkg.Types.Context, ::Pkg.Types.PackageSpec) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:516
 [16] (::Pkg.Operations.var"#kw##with_dependencies_loadable_at_toplevel")(::NamedTuple{(:might_need_to_resolve,),Tuple{Bool}}, ::typeof(Pkg.Operations.with_dependencies_loadable_at_toplevel), ::Function, ::Pkg.Types.Context, ::Pkg.Types.PackageSpec) at ./none:0
 [17] backwards_compat_for_build(::Pkg.Types.Context, ::Pkg.Types.PackageSpec, ::String, ::Bool, ::Bool, ::Int64) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:652
 [18] #build_versions#97(::Bool, ::Bool, ::typeof(Pkg.Operations.build_versions), ::Pkg.Types.Context, ::Array{Base.UUID,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:838
 [19] build_versions at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:805 [inlined]
 [20] #add#112(::Bool, ::Pkg.BinaryPlatforms.Linux, ::typeof(Pkg.Operations.add), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}, ::Array{Base.UUID,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1020
 [21] #add at ./none:0 [inlined]
 [22] #add#25(::Bool, ::Pkg.BinaryPlatforms.Linux, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.add), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:102
 [23] add(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:72
 [24] #add#24 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:69 [inlined]
 [25] add at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:69 [inlined]
 [26] #add#21 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:67 [inlined]
 [27] add at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:67 [inlined]
 [28] #add#20(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.add), ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:66
 [29] add(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:66
 [30] top-level scope at none:11
