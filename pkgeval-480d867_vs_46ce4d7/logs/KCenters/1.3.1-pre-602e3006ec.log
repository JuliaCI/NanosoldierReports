Julia Version 1.3.1-pre.19
Commit 602e3006ec (2019-12-17 12:50 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed LearnBase ─────────────────── v0.2.2
 Installed InvertedIndices ───────────── v1.0.0
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed DataStructures ────────────── v0.17.6
 Installed StatsBase ─────────────────── v0.32.0
 Installed Missings ──────────────────── v0.4.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed Reexport ──────────────────── v0.2.0
 Installed TableTraits ───────────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed DataFrames ────────────────── v0.20.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed Compat ────────────────────── v3.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Tables ────────────────────── v0.2.11
 Installed MLDataUtils ───────────────── v0.5.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
    Status `/tmp/jl_BBSc25/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.4
  [34da2185] Compat v3.0.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 203.71999999999997
[ Info: 73.08000000000001
[ Info: 36.94000000000001
[ Info: 26.389999999999993
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.04000118347305
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.410199979152303
inertia(cdnet.distances) = 32.517602988845645
inertia(crand.distances) = 21.687203670062132
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":4.284083843231201e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":6.265625,"distances_sum":1038.6596426492895}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8686537420912428,"seconds":6.450340151786804e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5703125,"distances_sum":2399.4198266215053}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.58984375,"f1":0.724567793317794,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":7.765625,"distances_sum":1706.8594574594829}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8708801615051623,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5234375,"distances_sum":2401.279396147817}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8708801615051623,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5234375,"distances_sum":2401.279396147817}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.942493964368965,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.9296875,"distances_sum":2939.4120482416097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9127294580419588,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7578125,"distances_sum":2720.5519111350764}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9046479562104571,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.8125,"distances_sum":2601.2100833908594}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.942493964368965,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.9296875,"distances_sum":2939.4120482416097}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741643772893778,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.96875,"distances_sum":3208.1299210361617}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9465888278388285,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.828125,"distances_sum":3008.2537924083795}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9653502747252751,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.9453125,"distances_sum":3124.463751356724}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684924450549455,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.90625,"distances_sum":3174.7742757814167}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741643772893778,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.96875,"distances_sum":3208.1299210361617}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9741643772893778,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.96875,"distances_sum":3208.1299210361617}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8627180111555119,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.3203125,"distances_sum":2083.7419914078005}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7834372224997234,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.875,"distances_sum":1718.9758315312881}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8627180111555119,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.3203125,"distances_sum":2083.7419914078005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9570913461538466,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.875,"distances_sum":2744.248610078647}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8906782453657461,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.5078125,"distances_sum":2270.561336601368}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":9,"bsize":5}, perf: {"precision":null,"recall":0.779296875,"f1":null,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1875,"distances_sum":2140.3723653435864}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9343838453213459,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.84375,"distances_sum":2578.9872307156165}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9570913461538466,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.875,"distances_sum":2744.248610078647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9711309523809528,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.953125,"distances_sum":2825.270041712872}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9840773809523813,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.984375,"distances_sum":2940.3916534422997}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766769688644692,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9375,"distances_sum":2893.3631797705575}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9566480394605398,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8828125,"distances_sum":2738.285248136152}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701121794871799,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.90625,"distances_sum":2835.3611199903603}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9590258699633702,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8515625,"distances_sum":2773.210324122868}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9576350732600739,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.859375,"distances_sum":2745.4973525081105}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523813,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.984375,"distances_sum":2940.3916534422997}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840773809523813,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.984375,"distances_sum":2940.3916534422997}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5166015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5166015625,"f1":null,"seconds":4.246830940246582e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.640625,"distances_sum":1323.9667849511454}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.7401914596557617e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.8125,"distances_sum":982.4097202305545}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7931899697524706,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8828125,"distances_sum":1783.7141165650967}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7931899697524706,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8828125,"distances_sum":1783.7141165650967}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8956252081252088,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.625,"distances_sum":2299.7317989897297}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8801942848817856,"seconds":3.4926459193229675e-5,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4609375,"distances_sum":2189.1577926938735}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9320601273726281,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.78125,"distances_sum":2524.051719945145}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9320601273726281,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.78125,"distances_sum":2524.051719945145}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9515541749916755,"seconds":7.694587111473083e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2674.4116011278047}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.969534111721612,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2807.6824834265135}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9470467032967038,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":2668.4562913017708}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.969534111721612,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2807.6824834265135}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.969534111721612,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":2807.6824834265135}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7872299575424584,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":7.890625,"distances_sum":1605.6103858164124}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.548828125,"f1":null,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":6.984375,"distances_sum":1353.3413521700163}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7872299575424584,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":7.890625,"distances_sum":1605.6103858164124}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9433321886446892,"seconds":7.698312401771545e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.8671875,"distances_sum":2549.784978979422}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9078072968697976,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.8203125,"distances_sum":2288.0420662218503}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8924278846153854,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.6875,"distances_sum":2167.0933312769707}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8415671134421143,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.515625,"distances_sum":1895.2239763273442}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8471939518814527,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.5625,"distances_sum":1912.5247392495612}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9433321886446892,"seconds":7.698312401771545e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.8671875,"distances_sum":2549.784978979422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9749656593406596,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.9609375,"distances_sum":2771.690193369507}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9828353937728942,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.96875,"distances_sum":2830.6531782003954}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9544299450549455,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.875,"distances_sum":2607.836399429623}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9640853937728943,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.90625,"distances_sum":2693.301169391638}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9575721153846156,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.8984375,"distances_sum":2612.2980777355338}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584878663003669,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.921875,"distances_sum":2621.609320369018}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9491701007326012,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.8125,"distances_sum":2592.585743174924}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9828353937728942,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.96875,"distances_sum":2830.6531782003954}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9828353937728942,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":8.96875,"distances_sum":2830.6531782003954}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7941979895104903,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.90625,"distances_sum":1715.8216792854241}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7941979895104903,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.90625,"distances_sum":1715.8216792854241}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.955288461538462,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.890625,"distances_sum":2748.7864948450565}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8979712995338004,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.5703125,"distances_sum":2322.192810048618}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8646353646353656,"seconds":6.778165698051453e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.2265625,"distances_sum":2059.1271913541714}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9497309981684984,"seconds":6.470829248428345e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9453125,"distances_sum":2681.5808948028075}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8040563603063612,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":7.9140625,"distances_sum":1815.808441586864}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8500010406260415,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.1484375,"distances_sum":2003.0868264966696}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.848663836163837,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.1171875,"distances_sum":1962.0692826961824}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.955288461538462,"seconds":6.9141387939453125e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.890625,"distances_sum":2748.7864948450565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663175366300372,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9453125,"distances_sum":2802.808875352901}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9765625,"distances_sum":2883.304340711274}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664835164835168,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.921875,"distances_sum":2827.7707326545815}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9765625,"distances_sum":2883.304340711274}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227111,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9765625,"distances_sum":2883.304340711274}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8494541916416924,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.25,"distances_sum":2021.0428524193946}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4130859375,"f1":null,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.15625,"distances_sum":1010.6674793437322}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8494541916416924,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.25,"distances_sum":2021.0428524193946}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9319597069597074,"seconds":7.444992661476135e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8125,"distances_sum":2524.1871453812464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9243823884448891,"seconds":7.3444098234176636e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.734375,"distances_sum":2509.43482823113}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8521155927405938,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.2109375,"distances_sum":2058.255009243929}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9037405303030313,"seconds":6.213784217834473e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.4453125,"distances_sum":2350.9019037978783}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9319597069597074,"seconds":7.444992661476135e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.8125,"distances_sum":2524.1871453812464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9489640567765574,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.71875,"distances_sum":2697.8813081620297}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518315018315024,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.78125,"distances_sum":2725.2670692043766}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9649954212454217,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2781.2866319294494}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.967542353479854,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2775.6908525546223}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9339806027306033,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.828125,"distances_sum":2536.985817972888}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9338859057609065,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7265625,"distances_sum":2563.349628349107}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9499313186813191,"seconds":0.00010377541184425354,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7890625,"distances_sum":2678.0753729085886}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.967542353479854,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2775.6908525546223}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.967542353479854,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.890625,"distances_sum":2775.6908525546223}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.4049153327941895e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.1015625,"distances_sum":1015.3157384844342}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5478515625,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8671875,"distances_sum":1357.7620448255766}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5478515625,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.8671875,"distances_sum":1357.7620448255766}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9137794497169502,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.5546875,"distances_sum":2366.357291651535}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9384043040293047,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2547.4611788768907}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8041441197691205,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.046875,"distances_sum":1735.1520359674155}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7810104825729833,"seconds":4.393979907035828e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8046875,"distances_sum":1644.1880787412672}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9384043040293047,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2547.4611788768907}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9391686438561444,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.875,"distances_sum":2560.258094884054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9458104395604401,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.875,"distances_sum":2594.2970731649484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9695684523809527,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.96875,"distances_sum":2754.0490012126907}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978023,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2797.515333887554}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431636072261079,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8203125,"distances_sum":2579.5746152324145}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978023,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2797.515333887554}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9725103021978023,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9453125,"distances_sum":2797.515333887554}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.1813979148864746e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.6171875,"distances_sum":951.4504810098168}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4013671875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.1813979148864746e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":5.6171875,"distances_sum":951.4504810098168}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8582988192363201,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.296875,"distances_sum":2068.5521143614956}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8582988192363201,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.296875,"distances_sum":2068.5521143614956}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.90325663919414,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.515625,"distances_sum":2328.916738742098}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.90325663919414,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.515625,"distances_sum":2328.916738742098}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.90325663919414,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.515625,"distances_sum":2328.916738742098}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8638429279054285,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.0703125,"distances_sum":1837.5513851497024}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":2.8815120458602905e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":5.90625,"distances_sum":441.03644151833464}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8638429279054285,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.0703125,"distances_sum":1837.5513851497024}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.919869193306694,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.4765625,"distances_sum":2158.5626403727656}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.958527930402931,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":2440.3561892390653}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.958527930402931,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8125,"distances_sum":2440.3561892390653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714858058608064,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2495.0811122194154}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714858058608064,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2495.0811122194154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714858058608064,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8828125,"distances_sum":2495.0811122194154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8674367299367305,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.015625,"distances_sum":1783.6219338973324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.1907111406326294e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.09375,"distances_sum":800.3577163968833}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8674367299367305,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.015625,"distances_sum":1783.6219338973324}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9372512903762912,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.671875,"distances_sum":2197.336190380524}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8744541916416924,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.109375,"distances_sum":1815.7534881209237}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8729572510822521,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0703125,"distances_sum":1800.8426322797582}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8828468406593415,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.1328125,"distances_sum":1821.3151367458993}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9372512903762912,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.671875,"distances_sum":2197.336190380524}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9660542582417588,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2385.1938222064878}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637877747252751,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8671875,"distances_sum":2360.340006895966}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510874542124547,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.7578125,"distances_sum":2278.3292607363915}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9634500915750919,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8515625,"distances_sum":2356.1558390810656}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9587282509157515,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8046875,"distances_sum":2342.5427778115736}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9660542582417588,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2385.1938222064878}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9660542582417588,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2385.1938222064878}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1884765625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1884765625,"f1":null,"seconds":2.6170164346694946e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":4.390625,"distances_sum":444.8794898760553}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.169921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.169921875,"f1":null,"seconds":2.9616057872772217e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":4.3671875,"distances_sum":429.7227307189776}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3154296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3154296875,"f1":null,"seconds":3.0975788831710815e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":4.8046875,"distances_sum":715.8718356827386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3154296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3154296875,"f1":null,"seconds":3.0975788831710815e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":4.8046875,"distances_sum":715.8718356827386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9118990384615391,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6171875,"distances_sum":1966.0859806635074}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9035350066600075,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6171875,"distances_sum":1933.5650681234079}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5068359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5068359375,"f1":0.6547360625485631,"seconds":4.114583134651184e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.421875,"distances_sum":1131.6031097584985}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8670912420912429,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.3203125,"distances_sum":1750.7482881147125}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3349609375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3349609375,"f1":null,"seconds":3.423541784286499e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.0,"distances_sum":731.3161918340134}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9118990384615391,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6171875,"distances_sum":1966.0859806635074}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9171646062271068,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6640625,"distances_sum":2015.9308136687027}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9229681776556783,"seconds":6.379559636116028e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6953125,"distances_sum":2020.395444738861}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9384589368964374,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6796875,"distances_sum":2144.5047443529925}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9546531593406599,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2235.4285473956497}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9546531593406599,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2235.4285473956497}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9546531593406599,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2235.4285473956497}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7108563311688317,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.203125,"distances_sum":1206.997035466363}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8878408050283059,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.1484375,"distances_sum":1873.5623331926422}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8095703125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.8095703125,"f1":0.8878408050283059,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.1484375,"distances_sum":1873.5623331926422}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9188363719613726,"seconds":9.127147495746613e-5,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5625,"distances_sum":2092.354973074868}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9205357142857151,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.3671875,"distances_sum":2056.9142356297098}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8623046875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8623046875,"f1":0.9205357142857151,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.3671875,"distances_sum":2056.9142356297098}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9553800366300372,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7421875,"distances_sum":2369.3187155552278}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745020604395607,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2456.685344217467}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745020604395607,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2456.685344217467}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9745020604395607,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2456.685344217467}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8135026431901439,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.921875,"distances_sum":1496.6429249950784}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8135026431901439,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.921875,"distances_sum":1496.6429249950784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8858662171162178,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2890625,"distances_sum":1809.070980436663}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8858662171162178,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2890625,"distances_sum":1809.070980436663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9235093031968038,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6171875,"distances_sum":2048.331998438609}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510817307692312,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2245.5127146742516}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9421620046620054,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2189.0486034385353}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510817307692312,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2245.5127146742516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510817307692312,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8046875,"distances_sum":2245.5127146742516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.3203125,"distances_sum":506.4662717402034}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2021484375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2021484375,"f1":null,"seconds":2.8703361749649048e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.3203125,"distances_sum":506.4662717402034}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8104588120213126,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.0390625,"distances_sum":1450.8819879407852}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8742741633366643,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1796875,"distances_sum":1743.1962977251235}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8254828504828512,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.171875,"distances_sum":1553.8198900407074}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8742741633366643,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.1796875,"distances_sum":1743.1962977251235}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9177770146520153,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4765625,"distances_sum":1970.7696038628144}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8847673160173166,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2890625,"distances_sum":1824.8559479271564}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.947252747252748,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.734375,"distances_sum":2206.0941827094935}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9523122710622716,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2253.510827611114}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9523122710622716,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2253.510827611114}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":10,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9523122710622716,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2253.510827611114}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8541867854367865,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.9296875,"distances_sum":1737.4593570404804}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3779296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.1441450119018555e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.84375,"distances_sum":816.3637250225976}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":2.8274953365325928e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.3671875,"distances_sum":471.4736967958004}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8541867854367865,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.9296875,"distances_sum":1737.4593570404804}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.942902930402931,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.734375,"distances_sum":2219.365035731282}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.921829212454213,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.421875,"distances_sum":2044.1889979214586}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.884338578088579,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.1328125,"distances_sum":1866.569450375656}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.862455253080254,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.9375,"distances_sum":1724.6141580645594}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.942902930402931,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.734375,"distances_sum":2219.365035731282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614640567765571,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.75,"distances_sum":2367.3590925813196}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476193,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9296875,"distances_sum":2480.663133392164}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592319139194144,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2308.435909407684}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633585164835168,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.84375,"distances_sum":2351.3581514269563}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9546359890109896,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7578125,"distances_sum":2293.0995402178237}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476193,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9296875,"distances_sum":2480.663133392164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476193,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9296875,"distances_sum":2480.663133392164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8937219030969036,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.234375,"distances_sum":1843.5471638055449}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7923659673659682,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.6484375,"distances_sum":1443.614124832027}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8937219030969036,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.234375,"distances_sum":1843.5471638055449}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9190106768231775,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5078125,"distances_sum":1993.5976567874714}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9333276098901103,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5703125,"distances_sum":2161.4915440782993}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9333276098901103,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5703125,"distances_sum":2161.4915440782993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688072344322347,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8359375,"distances_sum":2365.288244965464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9708333333333339,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2352.8576917415803}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9708333333333339,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2352.8576917415803}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9708333333333339,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2352.8576917415803}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.6805872946497952,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2109375,"distances_sum":1187.200622329288}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5322265625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5322265625,"f1":0.6805872946497952,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.2109375,"distances_sum":1187.200622329288}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9143772893772901,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2040.7848727855464}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9188280469530478,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.625,"distances_sum":2079.3466102485695}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9270375457875463,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.75,"distances_sum":2072.6407897622794}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9270375457875463,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.75,"distances_sum":2072.6407897622794}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9565049533799537,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2283.5547002455146}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534455128205135,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2275.2976614868808}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9584134615384621,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.84375,"distances_sum":2316.1267209348284}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638793498168504,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2358.9709234883985}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9433925449550455,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7265625,"distances_sum":2230.9538491308}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9638793498168504,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2358.9709234883985}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9638793498168504,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":2358.9709234883985}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9909319196428572,"recall":0.76953125,"f1":0.8562007653804535,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.3203125,"distances_sum":1326.4163055433462}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":0.9909319196428572,"recall":0.76953125,"f1":0.8562007653804535,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.3203125,"distances_sum":1326.4163055433462}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":6,"bsize":7}, perf: {"precision":0.9912574404761905,"recall":0.8505859375,"f1":0.9097801937645693,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.890625,"distances_sum":1516.0855875494842}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8505859375,"state":{"ssize":6,"bsize":7},"perf":{"precision":0.9912574404761905,"recall":0.8505859375,"f1":0.9097801937645693,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.890625,"distances_sum":1516.0855875494842}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":8,"bsize":10}, perf: {"precision":0.9867466517857143,"recall":0.923828125,"f1":0.951112494276557,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":1791.3454184078678}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":0.9896763392857144,"recall":0.939453125,"f1":0.9620550022893779,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":1829.0230033840862}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":11}, perf: {"precision":0.9879557291666666,"recall":0.955078125,"f1":0.9699125744047621,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":1905.3602246386108}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":0.9879557291666666,"recall":0.955078125,"f1":0.9699125744047621,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":1905.3602246386108}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":11},"perf":{"precision":0.9879557291666666,"recall":0.955078125,"f1":0.9699125744047621,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":1905.3602246386108}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.0547380447387695e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.609375,"distances_sum":689.1016896202739}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3544921875,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.0547380447387695e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.609375,"distances_sum":689.1016896202739}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8928550616050623,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4609375,"distances_sum":1625.2752249438536}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.35546875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.35546875,"f1":null,"seconds":2.989545464515686e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.53125,"distances_sum":660.8930220525717}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.380859375, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.380859375,"f1":null,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.875,"distances_sum":714.1142442129031}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8928550616050623,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4609375,"distances_sum":1625.2752249438536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8991820679320688,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.59375,"distances_sum":1649.078203136691}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9051790223665229,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.578125,"distances_sum":1680.4489289589642}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8970441017316026,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6328125,"distances_sum":1607.463166277793}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9051790223665229,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.578125,"distances_sum":1680.4489289589642}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8408203125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9051790223665229,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.578125,"distances_sum":1680.4489289589642}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":2.7418136596679688e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.4140625,"distances_sum":373.27915414580946}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3544921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3544921875,"f1":null,"seconds":3.0659139156341553e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":5.265625,"distances_sum":597.8293241217809}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7792707292707299,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.359375,"distances_sum":1202.907860223429}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7792707292707299,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.359375,"distances_sum":1202.907860223429}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9431032509157516,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5859375,"distances_sum":1895.9647816157417}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.904258762071263,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.375,"distances_sum":1635.3102654637746}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9397035256410261,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.578125,"distances_sum":1869.518050745322}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9079784798534808,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.40625,"distances_sum":1675.5695031745922}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.794649621212122,"seconds":4.252418875694275e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.4375,"distances_sum":1224.3589849997293}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8984375,"f1":0.9431032509157516,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5859375,"distances_sum":1895.9647816157417}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561298076923079,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.75,"distances_sum":1935.36010377101}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728823260073263,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2031.9053270246445}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656478937728942,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.84375,"distances_sum":1957.923410778123}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9512934981684987,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6953125,"distances_sum":1913.4949657182942}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9605139652014656,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.75,"distances_sum":1982.9853597168558}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9594150641025646,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.796875,"distances_sum":1936.4727705328266}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.943572573260074,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.6796875,"distances_sum":1857.7261251407908}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728823260073263,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2031.9053270246445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728823260073263,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2031.9053270246445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4375,"f1":null,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.359375,"distances_sum":779.4694106486058}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4560546875, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4560546875,"f1":0.6067481129981132,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.6875,"distances_sum":828.5337426778277}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4560546875,"state":{"ssize":4,"bsize":2},"perf":{"precision":1.0,"recall":0.4560546875,"f1":0.6067481129981132,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.6875,"distances_sum":828.5337426778277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7222921176046181,"seconds":3.956258296966553e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.078125,"distances_sum":1047.310436207524}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7757577491952499,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.6953125,"distances_sum":1200.6590594013228}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7206295440670446,"seconds":3.900378942489624e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.078125,"distances_sum":1050.184825010034}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7218697968697975,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.9921875,"distances_sum":1028.8375799178455}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6533203125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6533203125,"f1":0.7757577491952499,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.6953125,"distances_sum":1200.6590594013228}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7872949966699975,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.5703125,"distances_sum":1263.368459872825}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9593234890109894,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8359375,"distances_sum":1995.875524609813}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8959998334998341,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.4296875,"distances_sum":1628.81967919319}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9307380119880125,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.453125,"distances_sum":1845.5505351490513}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9593234890109894,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8359375,"distances_sum":1995.875524609813}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9593234890109894,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8359375,"distances_sum":1995.875524609813}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8165251415251423,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.3203125,"distances_sum":1474.6858076241551}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6722060925185931,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3046875,"distances_sum":1070.2947605334273}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8678097943722953,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.796875,"distances_sum":1667.6611281583562}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8678097943722953,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.796875,"distances_sum":1667.6611281583562}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506353021978026,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2120.82549710998}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9345524267399274,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.765625,"distances_sum":1983.029183892714}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9506353021978026,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7421875,"distances_sum":2120.82549710998}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723614926739932,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2240.614569201983}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9529449716949719,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.78125,"distances_sum":2139.8794165676745}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626717032967036,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.859375,"distances_sum":2179.3281496223462}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2275.352188575671}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2275.352188575671}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.061047315597534e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2275.352188575671}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.9296875,"distances_sum":965.165430028549}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.3248215913772583e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.3828125,"distances_sum":377.4594104664339}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.9296875,"distances_sum":965.165430028549}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.89386498917749,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":1602.1593429473883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9037582209457217,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6875,"distances_sum":1690.949729106875}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9037582209457217,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6875,"distances_sum":1690.949729106875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9430517399267406,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8359375,"distances_sum":1846.393182365636}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.971056547619048,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":2036.7143444833744}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610347985347989,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":1964.0978292909715}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.971056547619048,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":2036.7143444833744}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.971056547619048,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":2036.7143444833744}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2236328125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.9140625,"distances_sum":404.12231471118315}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2236328125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.2838433980941772e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.9140625,"distances_sum":404.12231471118315}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8011285589410596,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0,"distances_sum":1359.8068516336295}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.8011285589410596,"seconds":4.362314939498901e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0,"distances_sum":1359.8068516336295}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9031942016317027,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4140625,"distances_sum":1782.4533247723248}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9031942016317027,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4140625,"distances_sum":1782.4533247723248}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590430402930409,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2094.4148137277048}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9763392857142861,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2215.533644035862}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9313358516483523,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5234375,"distances_sum":1932.9842581495614}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9763392857142861,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2215.533644035862}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9763392857142861,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2215.533644035862}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.9140625,"distances_sum":560.1189198079767}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7867897727272737,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.53125,"distances_sum":1362.266149437106}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7867897727272737,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.53125,"distances_sum":1362.266149437106}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595695970695974,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2184.2286762943236}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8507284382284391,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.0078125,"distances_sum":1629.5575452428668}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9595695970695974,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2184.2286762943236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693280677655681,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":2215.928667089857}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9698489010989017,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8125,"distances_sum":2264.6165446993245}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693280677655681,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":2215.928667089857}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9693280677655681,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8828125,"distances_sum":2215.928667089857}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":2.950429916381836e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.296875,"distances_sum":490.85021769454556}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6015625,"f1":0.7373536186036193,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.453125,"distances_sum":1164.0486001848237}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.5859375,"distances_sum":782.922556036496}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6015625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.6015625,"f1":0.7373536186036193,"seconds":3.909692168235779e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.453125,"distances_sum":1164.0486001848237}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8668617840492848,"seconds":4.757195711135864e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.234375,"distances_sum":1601.9373186956616}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9019116300366309,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.4375,"distances_sum":1782.2835122811255}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9019116300366309,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.4375,"distances_sum":1782.2835122811255}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9375286172161179,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5078125,"distances_sum":1958.928907217275}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9329727564102572,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5546875,"distances_sum":1966.6077697654255}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681322,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2165.749360858795}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681322,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2165.749360858795}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681322,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.828125,"distances_sum":2165.749360858795}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7918420121545131,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.875,"distances_sum":1396.8798919978308}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6785683066933073,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.2734375,"distances_sum":1065.596148174392}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7918420121545131,"seconds":4.343688488006592e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.875,"distances_sum":1396.8798919978308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9446886446886452,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.625,"distances_sum":1989.1860538274134}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8957365551115556,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4296875,"distances_sum":1712.9908407709177}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9022264194139201,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4453125,"distances_sum":1727.0397075020448}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9446886446886452,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.625,"distances_sum":1989.1860538274134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.967920100732601,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8671875,"distances_sum":2150.5908648645377}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2195.3958908360423}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487783050283054,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7421875,"distances_sum":2030.8206108828597}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2195.3958908360423}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2195.3958908360423}}, n: 9
inertia(cfft.distances) = 19.06330303030304
inertia(cdnet.distances) = 24.265921328671343
inertia(crand.distances) = 21.682979490328055
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.888888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8666666666666667
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9177777777777777
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8844444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8488888888888889
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 3, 1, 3, 1, 2, 3, 1, 3, 3, 2, 3, 1, 3, 3, 2, 3, 2, 2, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3248666713731242] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3248666713731242, 0.17569904691194907] ***
*** starting iteration: 2; err: [Inf, 0.3248666713731242, 0.17569904691194907] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807] ***
*** starting iteration: 3; err: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807, 0.1595736615177767] ***
*** starting iteration: 4; err: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807, 0.1595736615177767] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807, 0.1595736615177767, 0.15786240548064875] ***
*** starting iteration: 5; err: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807, 0.1595736615177767, 0.15786240548064875] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807, 0.1595736615177767, 0.15786240548064875, 0.15705185921925724] ***
*** finished computation of 12 references, err: [Inf, 0.3248666713731242, 0.17569904691194907, 0.16239099127300807, 0.1595736615177767, 0.15786240548064875, 0.15705185921925724] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 1, normalized-entropy: 0.8631205685666311, Tuple{Int64,Int64}[(2, 6), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 3), acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
(3, 1)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
finished with 14 centroids; started with 12
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.7938000097413017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7938000097413017, 0.47693591768895416] ***
*** finished computation of 7 references, err: [Inf, 0.7938000097413017, 0.47693591768895416] ***
*** center 1: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 34, 12]]
** centroid: 6, normalized-entropy: 0.828055725379504, Tuple{Int64,Int64}[(2, 34), (3, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5650999987828221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5650999987828221, 0.27955994703971354] ***
*** finished computation of 7 references, err: [Inf, 0.5650999987828221, 0.27955994703971354] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 4, normalized-entropy: 0.8960382325345574, Tuple{Int64,Int64}[(2, 11), (3, 5)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6759000043961493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6759000043961493, 0.42542099342752576] ***
*** finished computation of 7 references, err: [Inf, 0.6759000043961493, 0.42542099342752576] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 2, normalized-entropy: 0.32275695889739825, Tuple{Int64,Int64}[(2, 16), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 12]]
** centroid: 5, normalized-entropy: 0.9852281360342514, Tuple{Int64,Int64}[(2, 16), (3, 12)]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.442399966502453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.442399966502453, 0.4108648573705063] ***
*** finished computation of 7 references, err: [Inf, 2.442399966502453, 0.4108648573705063] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 2, normalized-entropy: 0.2580186686648155, Tuple{Int64,Int64}[(2, 22), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 13]]
** centroid: 3, normalized-entropy: 0.9340680553754911, Tuple{Int64,Int64}[(2, 7), (3, 13)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 3]]
** centroid: 4, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 2), (3, 3)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3756000060624018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3756000060624018, 0.26360975837648826] ***
*** finished computation of 7 references, err: [Inf, 0.3756000060624018, 0.26360975837648826] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 12]]
** centroid: 1, normalized-entropy: 0.9182958340544894, Tuple{Int64,Int64}[(2, 6), (3, 12)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 4, normalized-entropy: 0.6500224216483541, Tuple{Int64,Int64}[(2, 10), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8258000039344122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8258000039344122, 0.43071721839066895] ***
*** finished computation of 7 references, err: [Inf, 0.8258000039344122, 0.43071721839066895] ***
*** center 1: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 28, 15]]
** centroid: 2, normalized-entropy: 0.9330252953592912, Tuple{Int64,Int64}[(2, 28), (3, 15)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25923910324354166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25923910324354166, 0.17464977841226387] ***
*** starting iteration: 2; err: [Inf, 0.25923910324354166, 0.17464977841226387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25923910324354166, 0.17464977841226387, 0.172692182988937] ***
*** starting iteration: 3; err: [Inf, 0.25923910324354166, 0.17464977841226387, 0.172692182988937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25923910324354166, 0.17464977841226387, 0.172692182988937, 0.17267612054730846] ***
*** finished computation of 7 references, err: [Inf, 0.25923910324354166, 0.17464977841226387, 0.172692182988937, 0.17267612054730846] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 10]]
** centroid: 2, normalized-entropy: 0.9509560484549724, Tuple{Int64,Int64}[(2, 17), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26887605105461876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26887605105461876, 0.1693607266205626] ***
*** starting iteration: 2; err: [Inf, 0.26887605105461876, 0.1693607266205626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26887605105461876, 0.1693607266205626, 0.15575770157961405] ***
*** starting iteration: 3; err: [Inf, 0.26887605105461876, 0.1693607266205626, 0.15575770157961405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26887605105461876, 0.1693607266205626, 0.15575770157961405, 0.1548051558828373] ***
*** finished computation of 7 references, err: [Inf, 0.26887605105461876, 0.1693607266205626, 0.15575770157961405, 0.1548051558828373] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 13]]
** centroid: 1, normalized-entropy: 0.6962122601251459, Tuple{Int64,Int64}[(2, 3), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 2]]
** centroid: 5, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 3), (3, 2)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3255558530158222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255558530158222, 0.20247345221703633] ***
*** starting iteration: 2; err: [Inf, 0.3255558530158222, 0.20247345221703633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255558530158222, 0.20247345221703633, 0.1734010002696061] ***
*** starting iteration: 3; err: [Inf, 0.3255558530158222, 0.20247345221703633, 0.1734010002696061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255558530158222, 0.20247345221703633, 0.1734010002696061, 0.16387150042225154] ***
*** finished computation of 7 references, err: [Inf, 0.3255558530158222, 0.20247345221703633, 0.1734010002696061, 0.16387150042225154] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 7, 11]]
** centroid: 4, normalized-entropy: 0.9640787648082293, Tuple{Int64,Int64}[(2, 7), (3, 11)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.900599986625535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982] ***
*** starting iteration: 2; err: [Inf, 2.900599986625535, 0.5234550067853982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005] ***
*** starting iteration: 3; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407] ***
*** starting iteration: 4; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334] ***
*** starting iteration: 5; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434] ***
*** starting iteration: 6; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917] ***
*** starting iteration: 7; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917, 0.31899102738425567] ***
*** starting iteration: 8; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917, 0.31899102738425567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917, 0.31899102738425567, 0.31734152574064667] ***
*** starting iteration: 9; err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917, 0.31899102738425567, 0.31734152574064667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917, 0.31899102738425567, 0.31734152574064667, 0.3169897704202582] ***
*** finished computation of 7 references, err: [Inf, 2.900599986625535, 0.5234550067853982, 0.3413270810548005, 0.3302614520883407, 0.32911695168928334, 0.32605415753825434, 0.3222275963284917, 0.31899102738425567, 0.31734152574064667, 0.3169897704202582] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39120000614806855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39120000614806855, 0.267216629895177] ***
*** starting iteration: 2; err: [Inf, 0.39120000614806855, 0.267216629895177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573] ***
*** starting iteration: 3; err: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573, 0.23439826737900063] ***
*** starting iteration: 4; err: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573, 0.23439826737900063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573, 0.23439826737900063, 0.22662518821180885] ***
*** starting iteration: 5; err: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573, 0.23439826737900063, 0.22662518821180885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573, 0.23439826737900063, 0.22662518821180885, 0.22627643054939375] ***
*** finished computation of 7 references, err: [Inf, 0.39120000614806855, 0.267216629895177, 0.24649010979356573, 0.23439826737900063, 0.22662518821180885, 0.22627643054939375] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 6]]
** centroid: 7, normalized-entropy: 0.9957274520849256, Tuple{Int64,Int64}[(2, 7), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3909999965665196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3909999965665196, 0.22483848084367156] ***
*** starting iteration: 2; err: [Inf, 0.3909999965665196, 0.22483848084367156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3909999965665196, 0.22483848084367156, 0.22126716911358657] ***
*** starting iteration: 3; err: [Inf, 0.3909999965665196, 0.22483848084367156, 0.22126716911358657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3909999965665196, 0.22483848084367156, 0.22126716911358657, 0.22068415328760613] ***
*** finished computation of 7 references, err: [Inf, 0.3909999965665196, 0.22483848084367156, 0.22126716911358657, 0.22068415328760613] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 3, 12]]
** centroid: 6, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 3), (3, 12)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4382683921698243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4382683921698243, 0.7323103385475618] ***
*** finished computation of 3 references, err: [Inf, 1.4382683921698243, 0.7323103385475618] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 5, 0]]
** centroid: 1, normalized-entropy: 0.581321498763703, Tuple{Int64,Int64}[(1, 31), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 31, 15]]
** centroid: 2, normalized-entropy: 0.9108783787500366, Tuple{Int64,Int64}[(2, 31), (3, 15)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5346070992997478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5346070992997478, 0.3222312172783864] ***
*** finished computation of 3 references, err: [Inf, 0.5346070992997478, 0.3222312172783864] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 6]]
** centroid: 2, normalized-entropy: 0.6292492238560344, Tuple{Int64,Int64}[(2, 32), (3, 6)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1057013157837379] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1057013157837379, 0.6967212115831125] ***
*** finished computation of 3 references, err: [Inf, 1.1057013157837379, 0.6967212115831125] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 3, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, Tuple{Int64,Int64}[(1, 18), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 39]]
** centroid: 2, normalized-entropy: 0.9843432030984676, Tuple{Int64,Int64}[(2, 29), (3, 39)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45895627840812947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45895627840812947, 0.2547063923090668] ***
*** starting iteration: 2; err: [Inf, 0.45895627840812947, 0.2547063923090668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476] ***
*** starting iteration: 3; err: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476, 0.16187901430729632] ***
*** starting iteration: 4; err: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476, 0.16187901430729632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476, 0.16187901430729632, 0.1582587214507577] ***
*** starting iteration: 5; err: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476, 0.16187901430729632, 0.1582587214507577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476, 0.16187901430729632, 0.1582587214507577, 0.15736505895101718] ***
*** finished computation of 7 references, err: [Inf, 0.45895627840812947, 0.2547063923090668, 0.18157186390647476, 0.16187901430729632, 0.1582587214507577, 0.15736505895101718] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 6, normalized-entropy: 0.9910760598382222, Tuple{Int64,Int64}[(2, 8), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31785740551293257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785740551293257, 0.17347496757303138] ***
*** starting iteration: 2; err: [Inf, 0.31785740551293257, 0.17347496757303138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785740551293257, 0.17347496757303138, 0.1527784868355497] ***
*** starting iteration: 3; err: [Inf, 0.31785740551293257, 0.17347496757303138, 0.1527784868355497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785740551293257, 0.17347496757303138, 0.1527784868355497, 0.14717117273239164] ***
*** starting iteration: 4; err: [Inf, 0.31785740551293257, 0.17347496757303138, 0.1527784868355497, 0.14717117273239164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31785740551293257, 0.17347496757303138, 0.1527784868355497, 0.14717117273239164, 0.14683425057344085] ***
*** finished computation of 7 references, err: [Inf, 0.31785740551293257, 0.17347496757303138, 0.1527784868355497, 0.14717117273239164, 0.14683425057344085] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 5]]
** centroid: 1, normalized-entropy: 0.7918583525674836, Tuple{Int64,Int64}[(2, 16), (3, 5)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44173904636539846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44173904636539846, 0.25691970126876723] ***
*** starting iteration: 2; err: [Inf, 0.44173904636539846, 0.25691970126876723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592] ***
*** starting iteration: 3; err: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436] ***
*** starting iteration: 4; err: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436, 0.23809288995904734] ***
*** starting iteration: 5; err: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436, 0.23809288995904734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436, 0.23809288995904734, 0.2358969043402963] ***
*** starting iteration: 6; err: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436, 0.23809288995904734, 0.2358969043402963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436, 0.23809288995904734, 0.2358969043402963, 0.23521122572340414] ***
*** finished computation of 7 references, err: [Inf, 0.44173904636539846, 0.25691970126876723, 0.245236913911592, 0.2396549324402436, 0.23809288995904734, 0.2358969043402963, 0.23521122572340414] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 23]]
** centroid: 1, normalized-entropy: 0.9766349114440099, Tuple{Int64,Int64}[(2, 16), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4641648137034936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4641648137034936, 0.2654887393046721] ***
*** starting iteration: 2; err: [Inf, 0.4641648137034936, 0.2654887393046721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4641648137034936, 0.2654887393046721, 0.2545740221304128] ***
*** starting iteration: 3; err: [Inf, 0.4641648137034936, 0.2654887393046721, 0.2545740221304128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4641648137034936, 0.2654887393046721, 0.2545740221304128, 0.24518962226047525] ***
*** finished computation of 7 references, err: [Inf, 0.4641648137034936, 0.2654887393046721, 0.2545740221304128, 0.24518962226047525] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 1, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 2), (3, 18)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 6, normalized-entropy: 0.2761954276479391, Tuple{Int64,Int64}[(2, 20), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.618190989405039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.618190989405039, 0.5130482599569959] ***
*** starting iteration: 2; err: [Inf, 0.618190989405039, 0.5130482599569959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.618190989405039, 0.5130482599569959, 0.2692171093235995] ***
*** starting iteration: 3; err: [Inf, 0.618190989405039, 0.5130482599569959, 0.2692171093235995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.618190989405039, 0.5130482599569959, 0.2692171093235995, 0.22022306971360261] ***
*** finished computation of 7 references, err: [Inf, 0.618190989405039, 0.5130482599569959, 0.2692171093235995, 0.22022306971360261] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 5]]
** centroid: 1, normalized-entropy: 0.6631968402398286, Tuple{Int64,Int64}[(2, 24), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, Tuple{Int64,Int64}[(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6281494979124435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6281494979124435, 0.3012775391865612] ***
*** starting iteration: 2; err: [Inf, 0.6281494979124435, 0.3012775391865612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6281494979124435, 0.3012775391865612, 0.2803373288285995] ***
*** starting iteration: 3; err: [Inf, 0.6281494979124435, 0.3012775391865612, 0.2803373288285995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6281494979124435, 0.3012775391865612, 0.2803373288285995, 0.27177430086903526] ***
*** finished computation of 7 references, err: [Inf, 0.6281494979124435, 0.3012775391865612, 0.2803373288285995, 0.27177430086903526] ***
*** center 1: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 28), (3, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 22]]
** centroid: 4, normalized-entropy: 0.6193821946787638, Tuple{Int64,Int64}[(2, 4), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.079200019739046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.079200019739046, 1.5878609022576011] ***
*** starting iteration: 2; err: [Inf, 5.079200019739046, 1.5878609022576011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.079200019739046, 1.5878609022576011, 0.8494717886407389] ***
*** starting iteration: 3; err: [Inf, 5.079200019739046, 1.5878609022576011, 0.8494717886407389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.079200019739046, 1.5878609022576011, 0.8494717886407389, 0.5764028424704236] ***
*** finished computation of 3 references, err: [Inf, 5.079200019739046, 1.5878609022576011, 0.8494717886407389, 0.5764028424704236] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, Tuple{Int64,Int64}[(2, 35), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.758999995194305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.758999995194305, 0.4507530914595469] ***
*** starting iteration: 2; err: [Inf, 0.758999995194305, 0.4507530914595469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.758999995194305, 0.4507530914595469, 0.4441907877743898] ***
*** starting iteration: 3; err: [Inf, 0.758999995194305, 0.4507530914595469, 0.4441907877743898] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.758999995194305, 0.4507530914595469, 0.4441907877743898, 0.4441907877743898] ***
*** finished computation of 3 references, err: [Inf, 0.758999995194305, 0.4507530914595469, 0.4441907877743898, 0.4441907877743898] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 5]]
** centroid: 2, normalized-entropy: 0.5916727785823274, Tuple{Int64,Int64}[(2, 30), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, Tuple{Int64,Int64}[(2, 2), (3, 23)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3485000181622644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3485000181622644, 0.6709589817104846] ***
*** starting iteration: 2; err: [Inf, 1.3485000181622644, 0.6709589817104846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3485000181622644, 0.6709589817104846, 0.6389663399470576] ***
*** starting iteration: 3; err: [Inf, 1.3485000181622644, 0.6709589817104846, 0.6389663399470576] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3485000181622644, 0.6709589817104846, 0.6389663399470576, 0.6376938694441167] ***
*** finished computation of 3 references, err: [Inf, 1.3485000181622644, 0.6709589817104846, 0.6389663399470576, 0.6376938694441167] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 23, 3]]
** centroid: 2, normalized-entropy: 0.5159469300074472, Tuple{Int64,Int64}[(2, 23), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 36]]
** centroid: 3, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 9), (3, 36)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3728000330917305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3728000330917305, 0.9477475408401418] ***
*** finished computation of 3 references, err: [Inf, 2.3728000330917305, 0.9477475408401418] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 3, 0]]
** centroid: 1, normalized-entropy: 0.43055186701043935, Tuple{Int64,Int64}[(1, 31), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 2, normalized-entropy: 0.8390040613676978, Tuple{Int64,Int64}[(2, 30), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 22]]
** centroid: 3, normalized-entropy: 0.5293608652873645, Tuple{Int64,Int64}[(2, 3), (3, 22)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2622000070864494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2622000070864494, 0.850766972414705] ***
*** finished computation of 3 references, err: [Inf, 1.2622000070864494, 0.850766972414705] ***
*** center 1: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 28]]
** centroid: 2, normalized-entropy: 0.999142103991909, Tuple{Int64,Int64}[(2, 30), (3, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 2, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(1, 18), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2960000019079525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2960000019079525, 0.9789568656740105] ***
*** finished computation of 3 references, err: [Inf, 1.2960000019079525, 0.9789568656740105] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 39]]
** centroid: 1, normalized-entropy: 0.9804679314541813, Tuple{Int64,Int64}[(2, 28), (3, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 4, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(1, 1), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6901706722282467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6901706722282467, 0.4454661160805823] ***
*** starting iteration: 2; err: [Inf, 0.6901706722282467, 0.4454661160805823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6901706722282467, 0.4454661160805823, 0.3838277139419961] ***
*** starting iteration: 3; err: [Inf, 0.6901706722282467, 0.4454661160805823, 0.3838277139419961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6901706722282467, 0.4454661160805823, 0.3838277139419961, 0.3831935981114778] ***
*** finished computation of 3 references, err: [Inf, 0.6901706722282467, 0.4454661160805823, 0.3838277139419961, 0.3831935981114778] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 1, normalized-entropy: 0.7918583525674836, Tuple{Int64,Int64}[(2, 32), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 23]]
** centroid: 3, normalized-entropy: 0.6051865766334207, Tuple{Int64,Int64}[(2, 4), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8348575840587538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8348575840587538, 0.34787986571450846] ***
*** starting iteration: 2; err: [Inf, 0.8348575840587538, 0.34787986571450846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8348575840587538, 0.34787986571450846, 0.30398547128585224] ***
*** starting iteration: 3; err: [Inf, 0.8348575840587538, 0.34787986571450846, 0.30398547128585224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8348575840587538, 0.34787986571450846, 0.30398547128585224, 0.303057608440012] ***
*** finished computation of 3 references, err: [Inf, 0.8348575840587538, 0.34787986571450846, 0.30398547128585224, 0.303057608440012] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 3]]
** centroid: 2, normalized-entropy: 0.43949698692151346, Tuple{Int64,Int64}[(2, 30), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, Tuple{Int64,Int64}[(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8710903394806315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8710903394806315, 0.6932449458658186] ***
*** starting iteration: 2; err: [Inf, 0.8710903394806315, 0.6932449458658186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8710903394806315, 0.6932449458658186, 0.6923208401067498] ***
*** finished computation of 3 references, err: [Inf, 0.8710903394806315, 0.6932449458658186, 0.6923208401067498] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 39]]
** centroid: 1, normalized-entropy: 0.9843432030984676, Tuple{Int64,Int64}[(2, 29), (3, 39)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [19, 3, 0]]
** centroid: 2, normalized-entropy: 0.5746356978376794, Tuple{Int64,Int64}[(1, 19), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.151599996754948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.151599996754948, 0.5442574174640914] ***
*** finished computation of 3 references, err: [Inf, 1.151599996754948, 0.5442574174640914] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 2, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 33), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 3, normalized-entropy: 0.5293608652873645, Tuple{Int64,Int64}[(2, 3), (3, 22)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6989999877587467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6989999877587467, 0.5226142266317081] ***
*** finished computation of 3 references, err: [Inf, 1.6989999877587467, 0.5226142266317081] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 24, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 28]]
** centroid: 3, normalized-entropy: 0.7642045065086204, Tuple{Int64,Int64}[(2, 8), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.014200020015362] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.014200020015362, 0.6444611793327439] ***
*** finished computation of 3 references, err: [Inf, 2.014200020015362, 0.6444611793327439] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 22]]
** centroid: 2, normalized-entropy: 0.9863676072907089, Tuple{Int64,Int64}[(2, 29), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [29, 3, 0]]
** centroid: 3, normalized-entropy: 0.44886448872302936, Tuple{Int64,Int64}[(1, 29), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.576372331967872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.576372331967872, 0.740861923420106] ***
*** starting iteration: 2; err: [Inf, 3.576372331967872, 0.740861923420106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307] ***
*** starting iteration: 3; err: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307, 0.20830212358456] ***
*** starting iteration: 4; err: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307, 0.20830212358456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307, 0.20830212358456, 0.2040711379121928] ***
*** starting iteration: 5; err: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307, 0.20830212358456, 0.2040711379121928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307, 0.20830212358456, 0.2040711379121928, 0.2036658069110838] ***
*** finished computation of 7 references, err: [Inf, 3.576372331967872, 0.740861923420106, 0.23959402493971307, 0.20830212358456, 0.2040711379121928, 0.2036658069110838] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 10]]
** centroid: 1, normalized-entropy: 0.9910760598382222, Tuple{Int64,Int64}[(2, 8), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44906132445665364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44906132445665364, 0.27063733200850193] ***
*** starting iteration: 2; err: [Inf, 0.44906132445665364, 0.27063733200850193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44906132445665364, 0.27063733200850193, 0.25615544492734754] ***
*** starting iteration: 3; err: [Inf, 0.44906132445665364, 0.27063733200850193, 0.25615544492734754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44906132445665364, 0.27063733200850193, 0.25615544492734754, 0.24760779695955792] ***
*** starting iteration: 4; err: [Inf, 0.44906132445665364, 0.27063733200850193, 0.25615544492734754, 0.24760779695955792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44906132445665364, 0.27063733200850193, 0.25615544492734754, 0.24760779695955792, 0.24663915661395422] ***
*** finished computation of 7 references, err: [Inf, 0.44906132445665364, 0.27063733200850193, 0.25615544492734754, 0.24760779695955792, 0.24663915661395422] ***
*** center 1: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 4]]
** centroid: 2, normalized-entropy: 0.5225593745369407, Tuple{Int64,Int64}[(2, 30), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 3, normalized-entropy: 0.3912435636292556, Tuple{Int64,Int64}[(2, 2), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4571660438955368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914] ***
*** starting iteration: 2; err: [Inf, 0.4571660438955368, 0.37885422289841914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927] ***
*** starting iteration: 3; err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594] ***
*** starting iteration: 4; err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524] ***
*** starting iteration: 5; err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963] ***
*** starting iteration: 6; err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963, 0.2144800483701635] ***
*** starting iteration: 7; err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963, 0.2144800483701635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963, 0.2144800483701635, 0.2122842576019642] ***
*** starting iteration: 8; err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963, 0.2144800483701635, 0.2122842576019642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963, 0.2144800483701635, 0.2122842576019642, 0.21144983483455757] ***
*** finished computation of 7 references, err: [Inf, 0.4571660438955368, 0.37885422289841914, 0.32919270115811927, 0.31397229722490594, 0.30284758026008524, 0.28239044652546963, 0.2144800483701635, 0.2122842576019642, 0.21144983483455757] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 23]]
** centroid: 2, normalized-entropy: 0.9677884628267678, Tuple{Int64,Int64}[(2, 15), (3, 23)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6106419354788776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6106419354788776, 0.3059469684433754] ***
*** finished computation of 7 references, err: [Inf, 0.6106419354788776, 0.3059469684433754] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 1, normalized-entropy: 0.22853814395352806, Tuple{Int64,Int64}[(2, 26), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 7, 9]]
** centroid: 3, normalized-entropy: 0.9886994082884974, Tuple{Int64,Int64}[(2, 7), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 3, 23]]
** centroid: 6, normalized-entropy: 0.5159469300074472, Tuple{Int64,Int64}[(2, 3), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38449671991449663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38449671991449663, 0.20978184643085018] ***
*** finished computation of 7 references, err: [Inf, 0.38449671991449663, 0.20978184643085018] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, Tuple{Int64,Int64}[(2, 2), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 3]]
** centroid: 6, normalized-entropy: 0.5916727785823274, Tuple{Int64,Int64}[(2, 18), (3, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46412895624546324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46412895624546324, 0.27807998579433557] ***
*** finished computation of 7 references, err: [Inf, 0.46412895624546324, 0.27807998579433557] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 1, normalized-entropy: 0.5225593745369407, Tuple{Int64,Int64}[(2, 2), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 3]]
** centroid: 3, normalized-entropy: 0.5293608652873645, Tuple{Int64,Int64}[(2, 22), (3, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, Tuple{Int64,Int64}[(2, 8), (3, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7399000061175057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7399000061175057, 0.24505737094981986] ***
*** starting iteration: 2; err: [Inf, 0.7399000061175057, 0.24505737094981986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7399000061175057, 0.24505737094981986, 0.2371483481883745] ***
*** starting iteration: 3; err: [Inf, 0.7399000061175057, 0.24505737094981986, 0.2371483481883745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7399000061175057, 0.24505737094981986, 0.2371483481883745, 0.23572234089577881] ***
*** finished computation of 7 references, err: [Inf, 0.7399000061175057, 0.24505737094981986, 0.2371483481883745, 0.23572234089577881] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 1]]
** centroid: 3, normalized-entropy: 0.4138168503036336, Tuple{Int64,Int64}[(2, 11), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 10]]
** centroid: 4, normalized-entropy: 0.9798687566511527, Tuple{Int64,Int64}[(2, 14), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5473000033088149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5473000033088149, 0.21952395303838979] ***
*** starting iteration: 2; err: [Inf, 0.5473000033088149, 0.21952395303838979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5473000033088149, 0.21952395303838979, 0.21084970630067437] ***
*** starting iteration: 3; err: [Inf, 0.5473000033088149, 0.21952395303838979, 0.21084970630067437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5473000033088149, 0.21952395303838979, 0.21084970630067437, 0.20929124944050467] ***
*** finished computation of 7 references, err: [Inf, 0.5473000033088149, 0.21952395303838979, 0.21084970630067437, 0.20929124944050467] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 6]]
** centroid: 6, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 9), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5610999990278289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5610999990278289, 0.23076209208077367] ***
*** starting iteration: 2; err: [Inf, 0.5610999990278289, 0.23076209208077367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5610999990278289, 0.23076209208077367, 0.22011179194997538] ***
*** starting iteration: 3; err: [Inf, 0.5610999990278289, 0.23076209208077367, 0.22011179194997538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5610999990278289, 0.23076209208077367, 0.22011179194997538, 0.22011179194997538] ***
*** finished computation of 7 references, err: [Inf, 0.5610999990278289, 0.23076209208077367, 0.22011179194997538, 0.22011179194997538] ***
*** center 1: selecting labels [1] (freq >= 1) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, Tuple{Int64,Int64}[(2, 12), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 7, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 4), (3, 12)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3748190049449363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3748190049449363, 0.1940895224344702] ***
*** starting iteration: 2; err: [Inf, 0.3748190049449363, 0.1940895224344702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912] ***
*** starting iteration: 3; err: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912, 0.1831664708555979] ***
*** finished computation of 7 references, err: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912, 0.1831664708555979] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 16, 5]]
** centroid: 7, normalized-entropy: 0.7918583525674836, Tuple{Int64,Int64}[(2, 16), (3, 5)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3491313532114833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3491313532114833, 0.1602130706196066] ***
*** starting iteration: 2; err: [Inf, 0.3491313532114833, 0.1602130706196066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3491313532114833, 0.1602130706196066, 0.15147700976343573] ***
*** starting iteration: 3; err: [Inf, 0.3491313532114833, 0.1602130706196066, 0.15147700976343573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3491313532114833, 0.1602130706196066, 0.15147700976343573, 0.15092443794171875] ***
*** finished computation of 7 references, err: [Inf, 0.3491313532114833, 0.1602130706196066, 0.15147700976343573, 0.15092443794171875] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 7, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 4), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4071251467697945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4071251467697945, 0.1880734710652775] ***
*** starting iteration: 2; err: [Inf, 0.4071251467697945, 0.1880734710652775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4071251467697945, 0.1880734710652775, 0.17978131135951841] ***
*** starting iteration: 3; err: [Inf, 0.4071251467697945, 0.1880734710652775, 0.17978131135951841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4071251467697945, 0.1880734710652775, 0.17978131135951841, 0.17671101154341243] ***
*** finished computation of 7 references, err: [Inf, 0.4071251467697945, 0.1880734710652775, 0.17978131135951841, 0.17671101154341243] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, Tuple{Int64,Int64}[(2, 15), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 15
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 15
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 15
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 15
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 15
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 15
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 17
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.9016652205310439] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9016652205310439, 0.39401793029941046] ***
*** starting iteration: 2; err: [Inf, 0.9016652205310439, 0.39401793029941046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9016652205310439, 0.39401793029941046, 0.39151983479523933] ***
*** starting iteration: 3; err: [Inf, 0.9016652205310439, 0.39401793029941046, 0.39151983479523933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9016652205310439, 0.39401793029941046, 0.39151983479523933, 0.3906504564805601] ***
*** finished computation of 3 references, err: [Inf, 0.9016652205310439, 0.39401793029941046, 0.39151983479523933, 0.3906504564805601] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 31]]
** centroid: 1, normalized-entropy: 0.7691928290130138, Tuple{Int64,Int64}[(2, 9), (3, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 2]]
** centroid: 3, normalized-entropy: 0.36205125173399805, Tuple{Int64,Int64}[(2, 27), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6601218646810857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6601218646810857, 0.3463570677540542] ***
*** starting iteration: 2; err: [Inf, 0.6601218646810857, 0.3463570677540542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6601218646810857, 0.3463570677540542, 0.31606729935084044] ***
*** starting iteration: 3; err: [Inf, 0.6601218646810857, 0.3463570677540542, 0.31606729935084044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6601218646810857, 0.3463570677540542, 0.31606729935084044, 0.31056472862191004] ***
*** finished computation of 3 references, err: [Inf, 0.6601218646810857, 0.3463570677540542, 0.31606729935084044, 0.31056472862191004] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 5]]
** centroid: 1, normalized-entropy: 0.5916727785823274, Tuple{Int64,Int64}[(2, 30), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, Tuple{Int64,Int64}[(2, 2), (3, 23)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6633865890604536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6633865890604536, 0.45063345968826424] ***
*** starting iteration: 2; err: [Inf, 0.6633865890604536, 0.45063345968826424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6633865890604536, 0.45063345968826424, 0.4423925950879918] ***
*** starting iteration: 3; err: [Inf, 0.6633865890604536, 0.45063345968826424, 0.4423925950879918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6633865890604536, 0.45063345968826424, 0.4423925950879918, 0.43725511896110136] ***
*** finished computation of 3 references, err: [Inf, 0.6633865890604536, 0.45063345968826424, 0.4423925950879918, 0.43725511896110136] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 37]]
** centroid: 1, normalized-entropy: 0.7131467486384921, Tuple{Int64,Int64}[(2, 9), (3, 37)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 23, 2]]
** centroid: 3, normalized-entropy: 0.4021791902022729, Tuple{Int64,Int64}[(2, 23), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8370999961594305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8370999961594305, 0.5575836248019214] ***
*** starting iteration: 2; err: [Inf, 1.8370999961594305, 0.5575836248019214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8370999961594305, 0.5575836248019214, 0.5455591316819273] ***
*** starting iteration: 3; err: [Inf, 1.8370999961594305, 0.5575836248019214, 0.5455591316819273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8370999961594305, 0.5575836248019214, 0.5455591316819273, 0.5428852049507449] ***
*** finished computation of 3 references, err: [Inf, 1.8370999961594305, 0.5575836248019214, 0.5455591316819273, 0.5428852049507449] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, Tuple{Int64,Int64}[(2, 2), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 3, normalized-entropy: 0.80235344282919, Tuple{Int64,Int64}[(2, 34), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8964000020333301] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8964000020333301, 0.5081441883319283] ***
*** starting iteration: 2; err: [Inf, 0.8964000020333301, 0.5081441883319283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8964000020333301, 0.5081441883319283, 0.46103048271781816] ***
*** starting iteration: 3; err: [Inf, 0.8964000020333301, 0.5081441883319283, 0.46103048271781816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8964000020333301, 0.5081441883319283, 0.46103048271781816, 0.44531217354713076] ***
*** finished computation of 3 references, err: [Inf, 0.8964000020333301, 0.5081441883319283, 0.46103048271781816, 0.44531217354713076] ***
*** center 1: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, Tuple{Int64,Int64}[(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 5]]
** centroid: 3, normalized-entropy: 0.5916727785823274, Tuple{Int64,Int64}[(2, 30), (3, 5)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.093600003526532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.093600003526532, 0.6526603047763235] ***
*** starting iteration: 2; err: [Inf, 1.093600003526532, 0.6526603047763235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.093600003526532, 0.6526603047763235, 0.6461288492345568] ***
*** starting iteration: 3; err: [Inf, 1.093600003526532, 0.6526603047763235, 0.6461288492345568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.093600003526532, 0.6526603047763235, 0.6461288492345568, 0.6411072641157395] ***
*** finished computation of 3 references, err: [Inf, 1.093600003526532, 0.6526603047763235, 0.6461288492345568, 0.6411072641157395] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 36]]
** centroid: 1, normalized-entropy: 0.7849920887641585, Tuple{Int64,Int64}[(2, 11), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 3]]
** centroid: 3, normalized-entropy: 0.5435644431995963, Tuple{Int64,Int64}[(2, 21), (3, 3)]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9199999999999999, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9133333333333332, 0.9066666666666666, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.98
finished with 18
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.3748190049449363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3748190049449363, 0.1940895224344702] ***
*** starting iteration: 2; err: [Inf, 0.3748190049449363, 0.1940895224344702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912] ***
*** starting iteration: 3; err: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912, 0.1831664708555979] ***
*** finished computation of 7 references, err: [Inf, 0.3748190049449363, 0.1940895224344702, 0.18331278505016912, 0.1831664708555979] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, Tuple{Int64,Int64}[(2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 16, 5]]
** centroid: 7, normalized-entropy: 0.7918583525674836, Tuple{Int64,Int64}[(2, 16), (3, 5)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30881451512902364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30881451512902364, 0.1645693809569746] ***
*** starting iteration: 2; err: [Inf, 0.30881451512902364, 0.1645693809569746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30881451512902364, 0.1645693809569746, 0.157959847816355] ***
*** starting iteration: 3; err: [Inf, 0.30881451512902364, 0.1645693809569746, 0.157959847816355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30881451512902364, 0.1645693809569746, 0.157959847816355, 0.15577584401120728] ***
*** finished computation of 7 references, err: [Inf, 0.30881451512902364, 0.1645693809569746, 0.157959847816355, 0.15577584401120728] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 17]]
** centroid: 1, normalized-entropy: 0.48546076074591343, Tuple{Int64,Int64}[(2, 2), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 4]]
** centroid: 5, normalized-entropy: 0.7024665512903904, Tuple{Int64,Int64}[(2, 17), (3, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4629677489345201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629677489345201, 0.18687370569885026] ***
*** starting iteration: 2; err: [Inf, 0.4629677489345201, 0.18687370569885026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629677489345201, 0.18687370569885026, 0.1686322090082324] ***
*** starting iteration: 3; err: [Inf, 0.4629677489345201, 0.18687370569885026, 0.1686322090082324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4629677489345201, 0.18687370569885026, 0.1686322090082324, 0.16351216394343282] ***
*** finished computation of 7 references, err: [Inf, 0.4629677489345201, 0.18687370569885026, 0.1686322090082324, 0.16351216394343282] ***
*** center 1: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, Tuple{Int64,Int64}[(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, Tuple{Int64,Int64}[(2, 15), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[5.557142857142857, 3.9857142857142853, 1.4714285714285715, 0.3], [5.078571428571428, 3.407142857142857, 1.5071428571428576, 0.2857142857142857], [4.512500000000001, 2.9624999999999995, 1.3250000000000002, 0.1875], [4.866666666666666, 3.0333333333333337, 2.1666666666666665, 0.5], [7.053333333333334, 3.0866666666666664, 5.94, 2.1866666666666665], [6.0, 2.8058823529411767, 4.326470588235294, 1.3382352941176472], [5.925, 2.775, 4.958333333333333, 1.8416666666666668], [5.5, 4.2, 1.4, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 1, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[5.4125000000000005, 2.5, 3.6374999999999997, 1.0999999999999999], [5.070588235294117, 3.264705882352941, 1.4823529411764707, 0.22352941176470587], [5.923076923076923, 2.6769230769230767, 4.2153846153846155, 1.2538461538461538], [6.3999999999999995, 3.0090909090909084, 4.636363636363637, 1.4636363636363638], [6.34, 2.8400000000000007, 5.039999999999999, 1.8], [6.781818181818182, 3.0454545454545454, 5.749999999999999, 2.0727272727272723], [5.85, 2.35, 5.0, 1.75], [5.004347826086957, 3.6000000000000005, 1.4304347826086958, 0.2521739130434783]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 1, 2, 2, 3, 3, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[6.735135135135134, 3.1081081081081083, 5.537837837837837, 2.013513513513513], [5.494444444444444, 2.627777777777778, 3.9833333333333343, 1.2722222222222224], [5.2, 3.766666666666667, 1.6333333333333335, 0.3], [4.872727272727273, 3.2454545454545456, 1.4727272727272727, 0.23636363636363636], [6.375, 2.9499999999999997, 4.65, 1.48125], [6.008333333333333, 2.725, 5.066666666666666, 1.8416666666666668], [5.35, 4.15, 1.45, 0.15000000000000002], [5.1, 3.3, 1.2999999999999998, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 2, 1, 1, 2, 3, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :rand, 0.6, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[52, 35, 23, 25, 23, 13, 1, 23, 28, 1, 23, 2, 1, 9, 30, 36, 31, 31, 24, 22, 1, 25, 31, 26, 1, 33, 32, 1, 38, 27, 15, 8, 24, 32, 25, 14, 27, 26, 48, 40, 26, 34, 22, 23, 26, 28, 26, 24, 51, 25, 40, 34, 29, 27, 51, 29, 21, 38, 28, 37, 35, 39, 31, 44, 19, 21, 2, 32, 49, 27, 16, 41, 35, 29, 37, 38, 27, 23, 20, 43, 36, 24, 28, 27, 31, 35, 35, 34, 1, 21, 9, 27, 60, 58, 35, 33, 23, 58, 30, 30, 36, 1, 25, 36, 27, 31, 34, 30, 79, 58, 17, 36, 38, 35, 34, 27, 48, 47, 35, 45, 41, 27, 4, 45, 47, 23, 49, 38, 26, 40, 34, 30, 21, 26, 39, 25, 44, 10, 58, 43, 32, 38, 46, 46, 18, 30, 36, 39, 28, 21, 38, 27, 36, 50, 39, 31, 42, 54, 18, 24, 53, 32, 47, 12, 59, 7, 42, 41, 31, 47, 42, 23, 32, 30, 25, 40, 30, 40, 42, 30, 37, 31, 38, 20, 33, 46, 30, 1, 44, 22, 32, 30, 48, 55, 48, 45, 46, 56, 44, 38, 33, 98, 17, 23, 27, 34, 34, 36, 63, 31, 64, 60, 40, 39, 50, 38, 34, 20, 44, 7, 30, 31, 16, 46, 13, 44, 43, 37, 17, 48, 60, 37, 35, 54, 27, 47, 29, 43, 44, 48, 34, 32, 51, 54, 36, 36, 41, 28, 8, 18, 33, 35, 48, 33, 23, 34, 40, 51, 55, 46, 27, 63, 51, 43, 50, 31, 4, 32, 36, 48, 30, 44, 62, 37, 37, 33, 36, 22, 3, 62, 46, 40, 42, 28, 20, 45, 30, 33, 35, 12, 55, 35, 43, 25, 1, 21, 51, 36, 31, 43]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.578, speedup = 0.6259441813767654, eval_ratio = 0.041711)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3637152777777778,"recall":0.3637152777777778,"f1":null,"seconds":8.35563987493515e-5,"exhaustive_search_seconds":0.000421648845076561,"evaluations":339.359375,"distances_sum":1760.2040047301036}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5381944444444445,"recall":0.5381944444444445,"f1":0.5381944444444445,"seconds":0.00011942163109779358,"exhaustive_search_seconds":0.000421648845076561,"evaluations":377.984375,"distances_sum":1633.5381875787923}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6510416666666665,"recall":0.6510416666666665,"f1":0.6510416666666665,"seconds":0.00014818832278251648,"exhaustive_search_seconds":0.000421648845076561,"evaluations":417.0859375,"distances_sum":1585.3190847732612}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7265624999999994,"recall":0.7265624999999994,"f1":0.7265624999999994,"seconds":0.00018161721527576447,"exhaustive_search_seconds":0.000421648845076561,"evaluations":455.1796875,"distances_sum":1561.782950229895}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.779513888888888,"recall":0.779513888888888,"f1":0.779513888888888,"seconds":0.000224946066737175,"exhaustive_search_seconds":0.000421648845076561,"evaluations":495.84375,"distances_sum":1547.3629596847964}
KCenters.DeloneInvIndex> reached performance {"precision":0.8211805555555541,"recall":0.8211805555555541,"f1":0.8211805555555541,"seconds":0.0002591516822576523,"exhaustive_search_seconds":0.000421648845076561,"evaluations":534.4765625,"distances_sum":1536.5803483158327}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7850000000000003, speedup = 2.2479573225374536, eval_ratio = 0.053583000000000006)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
