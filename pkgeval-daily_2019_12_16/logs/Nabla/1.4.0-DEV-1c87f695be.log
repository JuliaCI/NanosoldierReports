Julia Version 1.4.0-DEV.596
Commit 1c87f695be (2019-12-12 22:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed DualNumbers â”€â”€â”€â”€â”€â”€ v0.6.2
 Installed OpenSpecFun_jll â”€â”€ v0.5.3+1
 Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.10
 Installed SpecialFunctions â”€ v0.9.0
 Installed FDM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
 Installed Nabla â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
  Updating `~/.julia/environments/v1.4/Project.toml`
  [49c96f43] + Nabla v0.12.1
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [49dc2e85] + Calculus v0.5.1
  [b552c78f] + DiffRules v0.0.10
  [fa6b7ba4] + DualNumbers v0.6.2
  [e25cca7e] + FDM v0.6.1
  [77ba4419] + NaNMath v0.3.3
  [49c96f43] + Nabla v0.12.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [276daf66] + SpecialFunctions v0.9.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing Nabla
 Resolving package versions...

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaCI/BenchmarkTools.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaStats/Distributions.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaData/Missings.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaMath/QuadGK.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaStats/StatsBase.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaArrays/FillArrays.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaBinaryWrappers/Arpack_jll.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaCollections/DataStructures.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaCollections/SortingAlgorithms.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaData/DataAPI.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaBinaryWrappers/OpenBLAS_jll.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaStats/PDMats.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaIO/JSON.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaLinearAlgebra/Arpack.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaPackaging/BinaryProvider.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaStats/Rmath.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaStats/StatsFuns.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaCollections/OrderedCollections.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481

gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
â”Œ Warning: failed to extract archive downloaded from https://github.com/JuliaData/Parsers.jl.git
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:481
   Cloning [6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf] BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed BenchmarkTools â”€â”€â”€â”€â”€ v0.4.3
   Cloning [31c24e10-a181-5473-b8eb-7969acd0382f] Distributions from https://github.com/JuliaStats/Distributions.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Distributions â”€â”€â”€â”€â”€â”€ v0.21.11
   Cloning [e1d29d7a-bbdc-5cf2-9ac0-f12de2c33e28] Missings from https://github.com/JuliaData/Missings.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
   Cloning [1fd47b50-473d-5c70-9696-f719f8f3bcdc] QuadGK from https://github.com/JuliaMath/QuadGK.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed QuadGK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.1
   Cloning [2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91] StatsBase from https://github.com/JuliaStats/StatsBase.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.0
   Cloning [1a297f60-69ca-5386-bcde-b61e274b549b] FillArrays from https://github.com/JuliaArrays/FillArrays.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.2
   Cloning [68821587-b530-5797-8361-c406ea357684] Arpack_jll from https://github.com/JuliaBinaryWrappers/Arpack_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Arpack_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.5.0+2
   Cloning [864edb3b-99cc-5e75-8d2d-829cb0a9cfe8] DataStructures from https://github.com/JuliaCollections/DataStructures.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DataStructures â”€â”€â”€â”€â”€ v0.17.6
   Cloning [a2af1166-a08f-5f64-846c-94a0d3cef48c] SortingAlgorithms from https://github.com/JuliaCollections/SortingAlgorithms.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed SortingAlgorithms â”€â”€ v0.3.1
   Cloning [9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a] DataAPI from https://github.com/JuliaData/DataAPI.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
   Cloning [4536629a-c528-5b80-bd46-f80d51c5b363] OpenBLAS_jll from https://github.com/JuliaBinaryWrappers/OpenBLAS_jll.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h[?25l Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€ v0.3.7+1
   Cloning [90014a1f-27ba-587c-ab20-58faa44d9150] PDMats from https://github.com/JuliaStats/PDMats.jl.git
    Fetching: [>                                        ]  0.0 %[2K[?25h Installed PDMats â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.10
   Cloning [682c06a0-de6a-54ab-a142-c8b1cf79cde6] JSON from https://github.com/JuliaIO/JSON.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
   Cloning [7d9fca2a-8960-54d3-9f78-7d1dccf2cb97] Arpack from https://github.com/JuliaLinearAlgebra/Arpack.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Arpack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
   Cloning [b99e7846-7c00-51b0-8f62-c81ae34c0232] BinaryProvider from https://github.com/JuliaPackaging/BinaryProvider.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.8
   Cloning [79098fc4-a85e-5d69-aa6a-4863f24498fa] Rmath from https://github.com/JuliaStats/Rmath.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Rmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
   Cloning [4c63d2b9-4356-54db-8cca-17b64c39e42c] StatsFuns from https://github.com/JuliaStats/StatsFuns.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed StatsFuns â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
   Cloning [bac558e1-5e72-5ebc-8fee-abe8a469f55d] OrderedCollections from https://github.com/JuliaCollections/OrderedCollections.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed OrderedCollections â”€ v1.1.0
   Cloning [69de0a69-1ddd-5017-9359-2bf0b02dc9f0] Parsers from https://github.com/JuliaData/Parsers.jl.git
[?25l    Fetching: [>                                        ]  0.0 %[2K[?25h Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
  Building Rmath â†’ `~/.julia/packages/Rmath/BoBag/deps/build.log`
Status `/tmp/jl_1Xa6Om/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [49dc2e85] Calculus v0.5.1
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.6
  [b552c78f] DiffRules v0.0.10
  [31c24e10] Distributions v0.21.11
  [fa6b7ba4] DualNumbers v0.6.2
  [e25cca7e] FDM v0.6.1
  [1a297f60] FillArrays v0.8.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [77ba4419] NaNMath v0.3.3
  [49c96f43] Nabla v0.12.1
  [4536629a] OpenBLAS_jll v0.3.7+1
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [69de0a69] Parsers v0.3.10
  [1fd47b50] QuadGK v2.3.1
  [79098fc4] Rmath v0.6.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary: | Pass  Total
Core          |  234    234
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = in_domain(::Function, ::Float64) at finite_differencing.jl:128
â”” @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:128
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #Branch#13 at core.jl:82 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/core.jl:82
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = #44 at finite_differencing.jl:24 [inlined]
â”” @ Core ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = (::Nabla.var"#55#59"{Float64,typeof(lbeta)})(::Float64) at finite_differencing.jl:197
â”” @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:197
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = Branch(::Function, ::Tuple{Leaf{Float64},Leaf{Float64}}, ::Tape; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at core.jl:82
â”” @ Nabla ~/.julia/packages/Nabla/D60dX/src/core.jl:82
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = (::Nabla.var"#44#45"{typeof(lbeta),Float64,Tuple{Float64,Float64},Tuple{Float64,Float64}})(::Float64) at finite_differencing.jl:24
â”” @ Nabla ~/.julia/packages/Nabla/D60dX/src/finite_differencing.jl:24
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = broadcast(::Function, ::Float64) at broadcast.jl:760
â”” @ Base.Broadcast ./broadcast.jl:760
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf(::typeof(lgamma), ::Float64) at broadcast.jl:630
â”” @ Base.Broadcast ./broadcast.jl:630
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = _broadcast_getindex_evalf at broadcast.jl:630 [inlined]
â”” @ Core ./broadcast.jl:630
â”Œ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
â”‚   caller = broadcast(::Function, ::Float64, ::Float64) at broadcast.jl:760
â”” @ Base.Broadcast ./broadcast.jl:760
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
â”” @ Base ./reduce.jl:397
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
â”” @ Base ./reduce.jl:397
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:400
â”” @ Base ./reduce.jl:400
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = MappingRF at reduce.jl:90 [inlined]
â”” @ Core ./reduce.jl:90
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = MappingRF at reduce.jl:90 [inlined]
â”” @ Core ./reduce.jl:90
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = MappingRF at reduce.jl:90 [inlined]
â”” @ Core ./reduce.jl:90
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = MappingRF at reduce.jl:90 [inlined]
â”” @ Core ./reduce.jl:90
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
â”” @ Base ./reduce.jl:397
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:397
â”” @ Base ./reduce.jl:397
â”Œ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
â”‚   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:400
â”” @ Base ./reduce.jl:400
Test Summary: | Pass  Total
Sensitivities | 3343   3343
   Testing Nabla tests passed 
