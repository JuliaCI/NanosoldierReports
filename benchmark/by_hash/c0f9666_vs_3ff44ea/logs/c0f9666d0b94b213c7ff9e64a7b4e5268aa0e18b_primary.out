cset: moving following pidspec: 2852820
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.497495863 seconds)
loading group "shootout"... done (took 1.188612113 seconds)
loading group "string"... done (took 0.754419663 seconds)
loading group "linalg"... done (took 9.704398918 seconds)
loading group "parallel"... done (took 0.253776613 seconds)
loading group "find"... done (took 3.944432861 seconds)
loading group "tuple"... done (took 2.714706016 seconds)
loading group "union"... done (took 15.199664894 seconds)
loading group "dates"... done (took 1.968911764 seconds)
loading group "micro"... done (took 0.237686643 seconds)
loading group "simd"... done (took 7.365397414 seconds)
loading group "io"... done (took 1.501734532 seconds)
loading group "random"... done (took 13.937951255 seconds)
loading group "problem"... done (took 1.899278047 seconds)
loading group "array"... done (took 39.852787578 seconds)
loading group "misc"... done (took 2.306783761 seconds)
loading group "scalar"... done (took 75.763262733 seconds)
loading group "sort"... done (took 6.157686109 seconds)
loading group "sparse"... done (took 21.839634891 seconds)
loading group "collection"... done (took 28.494473193 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.475507329 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.298217446 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176279731 seconds)
  done (took 1.741496961 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.100265867 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.066343243 seconds)
    (3/3) benchmarking "different"...
    done (took 0.07473888 seconds)
  done (took 1.500771691 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.072022037 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152623566 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073031441 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073488795 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074104465 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072877327 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073574875 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072500937 seconds)
  done (took 1.866598151 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078032287 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072572756 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070848149 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073088524 seconds)
  done (took 1.552584401 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.070821963 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.134532663 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.070264699 seconds)
    (4/4) benchmarking "different"...
    done (took 0.070377912 seconds)
  done (took 1.59576269 seconds)
done (took 10.34852976 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.52570611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.174693076 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083972611 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100698352 seconds)
  done (took 2.168844364 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070361188 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081856756 seconds)
  done (took 1.404660327 seconds)
done (took 4.824010172 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.348648066 seconds)
  done (took 6.612112084 seconds)
done (took 7.872218439 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200516501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081029864 seconds)
  done (took 1.535520661 seconds)
done (took 2.894202704 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.469357254 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.456032509 seconds)
    (2/2) benchmarking "String"...
    done (took 1.555085472 seconds)
  done (took 4.312448372 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.748633537 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.30332705 seconds)
    (3/3) benchmarking "different"...
    done (took 1.351970388 seconds)
  done (took 5.663617075 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.628363447 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.162382602 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.580991133 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.323564151 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.324494345 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.835084483 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.43690561 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.94684 seconds)
  done (took 28.86112066 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.327604155 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610174326 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.567326689 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.701785645 seconds)
  done (took 18.542842464 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.758793624 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.713961984 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.71254496 seconds)
    (4/4) benchmarking "different"...
    done (took 1.99862407 seconds)
  done (took 8.561000118 seconds)
done (took 76.365782338 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.319159315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.920200701 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.342479725 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.412385301 seconds)
  done (took 20.258494661 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.815546977 seconds)
    (2/2) benchmarking "read"...
    done (took 1.737046643 seconds)
  done (took 4.808821529 seconds)
done (took 26.461989599 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.322185925 seconds)
  done (took 9.574517916 seconds)
done (took 10.817915963 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.936067779 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.366961687 seconds)
  done (took 7.565969429 seconds)
done (took 8.904684518 seconds)
SAVING RESULT...
DONE!
