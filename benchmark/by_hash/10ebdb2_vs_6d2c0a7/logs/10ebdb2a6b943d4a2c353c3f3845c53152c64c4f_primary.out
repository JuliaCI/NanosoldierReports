cset: moving following pidspec: 595845
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.322984651 seconds)
loading group "shootout"... done (took 0.91537735 seconds)
loading group "string"... done (took 0.227101981 seconds)
loading group "linalg"... done (took 3.305818706 seconds)
loading group "parallel"... done (took 0.021498444 seconds)
loading group "find"... done (took 1.204912278 seconds)
loading group "tuple"... done (took 0.719542133 seconds)
loading group "union"... done (took 3.178777076 seconds)
loading group "dates"... done (took 0.164239526 seconds)
loading group "micro"... done (took 0.058330271 seconds)
loading group "simd"... done (took 0.390934518 seconds)
loading group "io"... done (took 1.430770675 seconds)
loading group "random"... done (took 2.44854968 seconds)
loading group "problem"... done (took 1.199891742 seconds)
loading group "array"... done (took 4.839963678 seconds)
loading group "misc"... done (took 0.992857336 seconds)
loading group "scalar"... done (took 3.7401007 seconds)
loading group "sort"... done (took 0.328794183 seconds)
loading group "sparse"... done (took 3.642509765 seconds)
loading group "collection"... done (took 6.18979317 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548356786 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075106393 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.257500564 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.076664426 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.286737866 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084829542 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.088580029 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.074352168 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.146914539 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168684705 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.219980488 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.396964313 seconds)
done (took 5.15199062 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.315553639 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.034046249 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12985591 seconds)
  done (took 0.758035991 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.143436547 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015882819 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02294517 seconds)
  done (took 0.771578167 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020659126 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099832679 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021724764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022393612 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022323635 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021784609 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021502558 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.02152163 seconds)
  done (took 0.821469253 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029622919 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023200474 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021215158 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022558803 seconds)
  done (took 0.68611542 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023112248 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.087804523 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020576146 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020336919 seconds)
  done (took 0.737760048 seconds)
done (took 4.717181223 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.201821095 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.768796725 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.988873887 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.18564862 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.356405272 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.306143965 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076986773 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.243268914 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.154397456 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031838174 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186682503 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040074069 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.524087705 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.474084297 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029016263 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.143778872 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.565340977 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039301226 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.068801869 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.151235996 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.041541326 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039064192 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043671176 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.02700224 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.067922471 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13844044 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655543058 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.07022712 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.025387072 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.045391602 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028082891 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.03076353 seconds)
  done (took 9.378428727 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.154722662 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.149360656 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023854661 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.058244568 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050728405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025057465 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030402985 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023147248 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043138198 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.087071078 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046513207 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.165017047 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.02148294 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024945465 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14348609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.113475133 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.03817163 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037606272 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.02283249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036755777 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.048848418 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035289714 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033271957 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032903111 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067638211 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.086942023 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041218194 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.062070402 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023024856 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.035019501 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.050296327 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.062619829 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023122727 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021864924 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065040131 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.039751921 seconds)
  done (took 2.646503938 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.723178999 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051574774 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.143489308 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.134083747 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.062772874 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.049425167 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.186483638 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.07919528 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.056128397 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024326173 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.214885906 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.66637584 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.175635126 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.059293717 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028675153 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.188904327 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.925282694 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.920081772 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023837487 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024123266 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.139700283 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026733789 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.180531778 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.021846723 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.247438023 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.701750374 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025983805 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024492067 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.05338508 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.147219465 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021134642 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.097314739 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.050384039 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025438171 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.560294243 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.022089626 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.020058762 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.040980377 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051518348 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022408458 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023367211 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.034497162 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021445393 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072504649 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.036320299 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.526195757 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025622355 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.713258196 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.846381268 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.031833066 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.028558584 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.05825199 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020382095 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.024057338 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.595325763 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.115731962 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023200345 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.291575219 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025839088 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024643361 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024794539 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056862123 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023633495 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024803046 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026852067 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041248578 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.964783633 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032827987 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042528367 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022025507 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023086597 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021605358 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.532432285 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.031651384 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024858748 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020496601 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026167636 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022576236 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022120075 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.061523585 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.047370231 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.046309087 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025929115 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.022928418 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022015765 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.539594284 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.914350072 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025157883 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024317933 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.49171567 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020563338 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022530973 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024166443 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043525253 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022960695 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019828135 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.056428351 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.02450204 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.130994288 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.495768515 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.023716284 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020045979 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.472609803 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024407233 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.053054988 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.077151566 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022635492 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064387213 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022945206 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020232648 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026325012 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020081813 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.02438606 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.02126959 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022098068 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021240671 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023068329 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024046361 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023008536 seconds)
  done (took 19.911387385 seconds)
done (took 34.2499123 seconds)
(4/20) benchmarking "parallel"...
done (took 0.756045383 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.218775657 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049459583 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019679396 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.167655524 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.044917876 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.140821502 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.181104874 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.131500572 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.046249357 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.046215439 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.046252679 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.188475574 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.197845201 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.047469463 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.123615297 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.198692263 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.047435776 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020123849 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.047161114 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.048227258 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.048801102 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020251762 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.047503442 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.049429756 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.125698817 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.04795155 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.020037039 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.125201638 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.050475694 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.128516284 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.050339062 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.049230025 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.049976418 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.127083104 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.050373218 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.126700217 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020427475 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.050132468 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.050124049 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.05093707 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.05002887 seconds)
  done (took 4.051142778 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047676816 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038823147 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040975816 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.01842134 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028439028 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038823227 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018343737 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038333668 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041567401 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038731561 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038712178 seconds)
  done (took 1.134208103 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041917045 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039497764 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.040988389 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018275616 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030056864 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039355655 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018233851 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038960072 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041739193 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039322913 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039349818 seconds)
  done (took 1.067022785 seconds)
done (took 6.909988219 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.157173382 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.125977804 seconds)
  done (took 0.952556734 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.586227258 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.217147252 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.135386088 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.25845538 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.129121044 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.162502921 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.302590912 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.295972646 seconds)
  done (took 6.812804302 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.07598375 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.146310516 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024543901 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023068747 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.02337717 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023316237 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024817701 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023553236 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022846523 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025359497 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024929054 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023064615 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023809062 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024920422 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023052302 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023283813 seconds)
  done (took 1.304205074 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029103117 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025911182 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027054508 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017287282 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027859536 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026525294 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027513901 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028459048 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027152402 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026788893 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024772367 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027956682 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026459623 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025249561 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027881444 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017298695 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028070086 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027341575 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029299636 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.028156563 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.027468676 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.025107085 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.029240113 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.026462498 seconds)
  done (took 1.328321118 seconds)
done (took 11.078862091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142317304 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029749891 seconds)
  done (took 0.852203734 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.131865877 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.130350823 seconds)
  done (took 0.952213663 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029137169 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016229659 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032405478 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024495854 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0164895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016183609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.03154197 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016423467 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016284009 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016413784 seconds)
  done (took 0.909456948 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019627616 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023302901 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021302947 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019491698 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.021015597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017392771 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019638516 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017515171 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.02302081 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.01665885 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020357068 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038537856 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019781474 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.038897243 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019729673 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020275229 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021960397 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019860258 seconds)
  done (took 1.091242868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018062023 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.01717277 seconds)
  done (took 0.728961729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020935032 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017268462 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018988051 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018861942 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.01680089 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016252464 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016819808 seconds)
  done (took 0.813604024 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393071668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.089896798 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321531869 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024957331 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038742472 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.236536082 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020044582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024355484 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024257428 seconds)
  done (took 1.863732933 seconds)
done (took 7.904977282 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045381276 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144189736 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.153188736 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.455760957 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034507968 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022792646 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.05596486 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.236626826 seconds)
done (took 1.852489152 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.486595792 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.283536744 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.19235191 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024141754 seconds)
  done (took 2.196276301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315434049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145860753 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031083669 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023140493 seconds)
  done (took 1.226153732 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022216497 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027736834 seconds)
  done (took 0.755153882 seconds)
done (took 5.372904389 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030349888 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016994059 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023325451 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018457663 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018120934 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017622973 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017707836 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018651681 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016637243 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018609419 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018608564 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018581499 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018313555 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018339894 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017874712 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018584763 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016637929 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.01830936 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018341052 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0182867 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016638643 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018917744 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.018090969 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018636084 seconds)
  done (took 1.14274302 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.036387366 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.02121577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021759422 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021620519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.02212577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.021569857 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021551386 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.02081023 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021836189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020570066 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.022196676 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.022258925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020532838 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.022392884 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02067102 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.022342467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021856048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021018311 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020622762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.022411749 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021727818 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021071417 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.022297376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.021772767 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.022207693 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022272448 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.020775281 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.021262436 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.02206841 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.022505713 seconds)
  done (took 1.369543944 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.02333287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015326076 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015610326 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025922213 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015233617 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015431827 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015845082 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015039761 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015411155 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016231028 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015691253 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015121946 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015924544 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015122657 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.01531249 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015860384 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020541835 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036389201 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015534462 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015269669 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020020617 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015514495 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015273657 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015345426 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015791821 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015319239 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015074435 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015685244 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015286753 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015892561 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015273695 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019947466 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021525816 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015746152 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025734727 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.02050657 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015809309 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020001926 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016332026 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015279381 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015267541 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015358313 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015503474 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015474755 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026075023 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015668818 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016656202 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015954196 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015624447 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015322703 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015428902 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.017056545 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021295657 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016705064 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015281019 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016654603 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.01527648 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016110079 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015495335 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015313692 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.01531428 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0195321 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.01681376 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016124519 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037433851 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016860352 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026137029 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015529709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015918958 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019674479 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.016062731 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035612116 seconds)
  done (took 1.989312935 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028175634 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025846311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034470003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025181369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0186853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016205232 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019349294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016208755 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02554769 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019744387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016222492 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019351955 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025463682 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019770709 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017308654 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025421658 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019646091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018992476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016261271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.02000314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017521682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019692425 seconds)
  done (took 1.176181579 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104123031 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021548085 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.06555466 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024937034 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023801365 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.024901091 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021547766 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021511743 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021685071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022281615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022283545 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021758037 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023768638 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022351125 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022299191 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.022226927 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02202233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.022308436 seconds)
  done (took 1.237042111 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.034299677 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021525852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048956475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021148962 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021224382 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020838158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024704445 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024951817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020967484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021477809 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024958186 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021045103 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021001377 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021425641 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021051647 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021452731 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020957718 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021342861 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.025021212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024958416 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024983004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025003523 seconds)
  done (took 1.240368246 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035352961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020488676 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.036916275 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021967777 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015625262 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015675741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.022026401 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.020789102 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.021879287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020375093 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020993009 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015854868 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022918961 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020919643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.023140952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020959194 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020422076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.02095618 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02037414 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015815813 seconds)
  done (took 1.140893634 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135229103 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017868098 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017563971 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02193067 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017552892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017689921 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022267128 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017653304 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017783948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042161866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017797374 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017774679 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022253636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020513177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017648619 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022178293 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022296775 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0225798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017939163 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017905564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.04271597 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017991476 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022722465 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017925817 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017969539 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017966622 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018015973 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020924801 seconds)
  done (took 1.410303845 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039791694 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.01514874 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015341663 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019280095 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019165577 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025107752 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019175349 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019182385 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015025514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.01537719 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017343409 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015066569 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015037785 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024670148 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.01501861 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017335342 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024670787 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019323306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025388052 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025228487 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017394114 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024508566 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017330505 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015527681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025774273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017578635 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019612047 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020458737 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017584 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015592821 seconds)
  done (took 1.305863142 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030214485 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026811688 seconds)
  done (took 0.767120748 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018826018 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.033685834 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015192683 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028828372 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024045115 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.01952881 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024130914 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023956461 seconds)
  done (took 0.891701187 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.130227875 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.154331964 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017470554 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017607382 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127354578 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08460221 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138519558 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.02881384 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03077789 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020026001 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017302642 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.140287934 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016997936 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030727838 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018632102 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0268147 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024252093 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.035064109 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030045827 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015941355 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029737252 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017673349 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016880788 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017801931 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.01805115 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023883231 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032894062 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029523777 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025370133 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015217976 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035789456 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016068685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016750932 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025195021 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.129926256 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016332941 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054821576 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.01625498 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020601507 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015860816 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.028151672 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.03765568 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030521928 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.03428853 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017518966 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017972195 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015965642 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017733135 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020176073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025266099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016226062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023467956 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015851133 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017518455 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026655071 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.01630251 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020893992 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.02534756 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029742969 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026528268 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028567562 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031504925 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024850422 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024727558 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016857898 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036176574 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017693035 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029472879 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031099908 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.01738613 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029285484 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016080813 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015333161 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016223531 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.050314319 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017614138 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017061909 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016332991 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016402567 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017651308 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025767573 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021149919 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023603356 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019330594 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032144769 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025381451 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016063017 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023805031 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034881268 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020248496 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016278289 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.03353081 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020267407 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016024297 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034473063 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026808951 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.018447857 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.017495158 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020563951 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030565585 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.018275246 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015780142 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025154167 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018394444 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.133883106 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021902883 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024939974 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016587983 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.027095539 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023628 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018338736 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015769546 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021543191 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.0175667 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015767558 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026349193 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.01683313 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032233735 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023744843 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031486456 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.03194422 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027434165 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032990041 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016586095 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015710334 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035621169 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026149578 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.018045629 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035640694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016771547 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.02759646 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.017011535 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018496038 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.026345 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016158521 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018819256 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.017155652 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.024101392 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018572581 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018822798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022908107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025454369 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029621206 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.018105997 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025757243 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017186839 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.033226341 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026729408 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021876703 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020535171 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017743867 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029385119 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023870452 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.026124625 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016724799 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017738782 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016905784 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.02809784 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026524295 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018877328 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.027203045 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021827876 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017759528 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016966832 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017946604 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020787549 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020640706 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.01748358 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024657441 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025681872 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031661246 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.025154937 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026147997 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016277525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016779601 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018891882 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.01677512 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021766194 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026308128 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032831157 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.029164067 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038884261 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017197427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026792501 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018888301 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034571509 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030519174 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018012407 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022178267 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016052011 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018914776 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026452509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028745496 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031841963 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032312258 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.02195301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021829542 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.01684424 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032417168 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017410228 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025401374 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026321647 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023832869 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016923564 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018883598 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.026087428 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021811126 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.018037577 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.033083458 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.025432707 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016868884 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031565139 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017286313 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.173053383 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.015937186 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020048631 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021599899 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.017544598 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025427496 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031122599 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015116677 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016129962 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.031385325 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.017284997 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017116175 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.023881561 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.030902256 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.020831653 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.023634135 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026125617 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026455101 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.020718906 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026157662 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016532955 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024862596 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018451984 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.027289078 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015738698 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033657171 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015037779 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030928003 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016401226 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026579142 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016140337 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025017317 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016484223 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032691239 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.017069598 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016453987 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.027158824 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.014997252 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.024766108 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0155812 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021321148 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022776037 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024866138 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.017234608 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024995608 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017105513 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024613535 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020785833 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024256221 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024667955 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020656775 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015509698 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023828022 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.02618253 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023601403 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.016982447 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016966893 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016008765 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024770825 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016985096 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016528901 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023713079 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020757701 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021879285 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017017322 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017144203 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.017023964 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023961134 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024890564 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033472884 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024186624 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023022456 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024687101 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015521915 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031021163 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015583865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023270731 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.01513202 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022652202 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025035424 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016139287 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035076632 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017478392 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023761399 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027849651 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024458066 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.020101212 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033985025 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.019129863 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024290132 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023890124 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020993897 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.023108329 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.01763508 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024354085 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.025414589 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026639049 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.01681629 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023471136 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024897074 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017719873 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.024925312 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.01762371 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024505761 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017860791 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015486535 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.021203779 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.02745765 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.021356281 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.02155599 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016456553 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015302599 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016314435 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023539482 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.021230117 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024790954 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031827126 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.01545108 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.017043641 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.016096092 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020248177 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034677781 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025881803 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.024171681 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.021344066 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015600229 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017606665 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017917511 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.016346717 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.019330294 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015608676 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.016063228 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026772519 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017753792 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.021048081 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016429541 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017899455 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.026641597 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.021614172 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.017120674 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023919809 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016562005 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.022138627 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.016031412 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.018402693 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021614171 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.016350873 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020612817 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.0271787 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.033569636 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.02382773 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.025560932 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017681026 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024683396 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032493318 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.026351482 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017698491 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.026099013 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.016232737 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.036024341 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.026167716 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.025164881 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026604759 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017608668 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.034054895 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021542013 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02679981 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032412188 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017725963 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.026392845 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016835441 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.033022814 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021721287 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.0167242 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025673275 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024597093 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.023217311 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028945977 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017764621 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.02558165 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022597022 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020947522 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.018800555 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018752294 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.02558657 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.033471812 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017787384 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.023386865 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024911582 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.025144585 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.02174038 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029450003 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.025025006 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017922862 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018703374 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020778324 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017700162 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.02927304 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017219758 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021701085 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021700158 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016724505 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.02397439 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033731212 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.026178974 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026475944 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016751745 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016134807 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035503643 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020824739 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.020581478 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024945964 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.02664466 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029411114 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026221742 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034316523 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.01750089 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.023129112 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029299922 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.01786018 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016689052 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020755354 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018609608 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025975386 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026699711 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.024231387 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018867724 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.024053282 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030558746 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018462148 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021811427 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023757929 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017837365 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027598403 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024932656 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0254654 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018673585 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016805952 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020514898 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025752826 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024388896 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.026007558 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017975188 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026685795 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031838529 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024423967 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020726066 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016888787 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020725882 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.026065836 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.024141978 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.017046102 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021963054 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020769927 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026770692 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026419501 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021798812 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016753965 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.182202367 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024535627 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.024862957 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017249846 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017324581 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016042817 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.015650914 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026652364 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.01570844 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017069747 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.020914117 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.017199462 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.033333697 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.023816349 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031353395 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016452472 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.020668296 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.01553497 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.02507968 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.020739274 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.015710603 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026055042 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015200095 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030925813 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.027102099 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.021436814 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.015530139 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021202619 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024075244 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.030616504 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.02517025 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024505071 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.018524329 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025089241 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.01707781 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026353929 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015610195 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.014885012 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025453182 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024080895 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027483868 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015503021 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.025489751 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017108834 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.02379362 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.024001951 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.01698924 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.01699041 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.016917465 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024999661 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020603135 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.024691689 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020753441 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032458082 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.016424706 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026452217 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024436276 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.026167782 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029348809 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027189002 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023954158 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.01596798 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022988982 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023915347 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.016457265 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.02097588 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.018308627 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036981236 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017010039 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017009567 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.029188141 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.022481668 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.01587638 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.022877487 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.02090574 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.025782935 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.016744387 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026032898 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.020878281 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.016654111 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020912757 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020935547 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015191015 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.015871116 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016224708 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025608021 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021038391 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016106358 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035044432 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017348648 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.02456252 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026756852 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023022273 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017360992 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015229327 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016765286 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029252271 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031486544 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020237857 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024499196 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017618742 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.025175418 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015496081 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024752823 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.024002252 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024606564 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.016020789 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016307704 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.031086098 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03170395 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021164585 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.033042821 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.025023286 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017634696 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.038401007 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.025041056 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.01707419 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.027000302 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01825743 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.01564962 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015518294 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.01760904 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027641227 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016030665 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018191472 seconds)
  done (took 15.365362792 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061740436 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016987903 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015581311 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015509301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022480184 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016711229 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015500174 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016731778 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016795606 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017770897 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015625054 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015587056 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021093375 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030735005 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02331781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019214949 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015595569 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016794316 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015623541 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016823039 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021520622 seconds)
  done (took 1.193957988 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020056641 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019887007 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.01928632 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019461841 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018665528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015736981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019080473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015730912 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019600881 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016117132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019596198 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015829152 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016172855 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016148093 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016094294 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017251032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019587074 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018984636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015840305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019221809 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017255786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019229511 seconds)
  done (took 1.137562029 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018427285 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016358437 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024248493 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0152155 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015105259 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017904701 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015091483 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019908383 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019879312 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019898536 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024042541 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015926693 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015118661 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021271819 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015180828 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015909706 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.06016614 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016023732 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016085499 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015353936 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017575946 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024350004 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015441023 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015587654 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019977174 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018001869 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015302482 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017648557 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015906989 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020129424 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016252294 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015296709 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024276753 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023599059 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020188221 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020125446 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016739989 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016235349 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015566427 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015547441 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023778296 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016768585 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015793991 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.01651957 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024289184 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.01564672 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015394407 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024316882 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015355476 seconds)
  done (took 1.671703684 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028632745 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068129796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.021712792 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050729512 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027424593 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020730628 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.02143335 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053471976 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016557975 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016987664 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028200478 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0283652 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018059049 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019223504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022647524 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018208998 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018801845 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017562732 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020568312 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017891936 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020600004 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022920215 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027799466 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028358482 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019194616 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.01760504 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017823154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019432178 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028064301 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021051326 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019664488 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020083153 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028376567 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.023502762 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017866076 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018104237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029134931 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018597454 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018311956 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016833339 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017991406 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019479553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023028024 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.029337405 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018544532 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023568154 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018443054 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016412355 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028533842 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018191553 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0217377 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.02942448 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019291165 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018567363 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019630779 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028431922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018403253 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.01716583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018594926 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028270405 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016800351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019145226 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.028988194 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017937536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021285621 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029168982 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.023483913 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019249674 seconds)
  done (took 2.44639416 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.02543146 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.051866544 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.029365475 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.029306919 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.024944982 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.025240218 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.025188028 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.02511907 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.025089827 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027951841 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025367545 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.169889691 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.022480439 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027370808 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025774836 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.025803029 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.025723687 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025713542 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025710749 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025632076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025763045 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.03025287 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.025738633 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.030381997 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030132815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.022453523 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.025530443 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.025732053 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.030478448 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025678957 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.030121153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025716101 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025880124 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.030732982 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030319538 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.025709126 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016265126 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025652981 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.02590069 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025736 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.022536595 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.030734827 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025697313 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.02255438 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025913645 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.025681157 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030752376 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.030526345 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027656243 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028718808 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025896224 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.030722936 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025903281 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.026138755 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.03097509 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.034107691 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.03092679 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030978417 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026442776 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.031356368 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0312962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.035524856 seconds)
  done (took 2.614769068 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0309282 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021297445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.034445354 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015295884 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015236496 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.024371707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015354146 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015398594 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021148349 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.02114551 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022589821 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024599872 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026438817 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022581036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.024498143 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02640306 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024517941 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.02479024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0215878 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024864316 seconds)
  done (took 1.223397963 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019164294 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.02076104 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016056508 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.031887231 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016073045 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023390377 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016038183 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015999113 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016113105 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016154921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020582029 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020528269 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016128411 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.024114989 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019537565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023684148 seconds)
  done (took 1.064605783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020589152 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024426243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130770885 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016753537 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018582201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016148352 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.01696894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015853242 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018071523 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029987437 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016913392 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018939002 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.017020228 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015657719 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016240112 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.01896251 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018134987 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.01700381 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016903379 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132303656 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025789411 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017796105 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019335563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017833416 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018916489 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025353049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018550732 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018906167 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017125586 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019297672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018807564 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.02825734 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018885707 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017645577 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.01579798 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016772159 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017152646 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019248131 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019220932 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017189408 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0160629 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018915886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017197957 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017539093 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018354261 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019347519 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018422614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027556008 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.017119361 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018958022 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017216827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018417329 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017670419 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028665349 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.019258825 seconds)
  done (took 2.02263969 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034927863 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021052225 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015236203 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015166883 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020620264 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.021335768 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.02073805 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020827157 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021244323 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015152968 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021294625 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020353952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021452073 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020905038 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021505742 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020941763 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015280252 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.021168692 seconds)
  done (took 1.129426974 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024535464 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020884321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021165018 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017097461 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017052779 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.02096032 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015520417 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016827889 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016892415 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.01720743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017228081 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.01682854 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016789614 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016806561 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020742148 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017214286 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016840035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015769284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017252865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015668074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.02118656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015811794 seconds)
  done (took 1.145691637 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.19230393 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.151529073 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038889147 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034060933 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025787355 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.052065887 seconds)
  done (took 1.244771959 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053162802 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.054159499 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0208833 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020954888 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02479622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023199377 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023174979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023516174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026399007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029138785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023574408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026571729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026366045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028214182 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024929068 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025010381 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023894979 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023870746 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021191748 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031336331 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024008239 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027028656 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024052432 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023772175 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023992334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028705464 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026899719 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029670144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023823095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027146674 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025416645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023956045 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027174998 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029746172 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021141713 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026965957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024126332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031787152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025614036 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028912175 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021071128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025668402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027201903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027011844 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02725728 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024192398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026944297 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024096752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024168424 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.035284154 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025718243 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02879181 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025624808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027408887 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027174879 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.035360804 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030174821 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029094509 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025719785 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030622384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029683057 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0261321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029814709 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.032470372 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027377537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0312732 seconds)
  done (took 2.559287256 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061711748 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021279729 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023502856 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028693738 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027651548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023534604 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023598242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023516247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023517212 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021285397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.060263659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023765515 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02821663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028113724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023653585 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023628666 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023857779 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028544621 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021442886 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03489004 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023879975 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028529704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028642036 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028593494 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029664538 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142785546 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024834167 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024191467 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023966841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023941332 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026884276 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024098182 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028725731 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021412479 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028846701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024120544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024041801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026952782 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024057439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025628147 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028984695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031738609 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02411455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023969018 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029916572 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024015143 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024035066 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02160608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024089156 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021604831 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029945768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029921421 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029894201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028864021 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024168099 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024194494 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024160671 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024190123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02421969 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025589358 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028962693 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024500474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.036339222 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024535232 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024502171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.031329224 seconds)
  done (took 2.669777003 seconds)
done (took 51.86086772 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205466498 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16932553 seconds)
  done (took 1.114545754 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.141660856 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.139158129 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.168006097 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.02391282 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081421605 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.175070984 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.124651413 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026458476 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024152985 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025663032 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023754224 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025268811 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025582265 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023662637 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086070368 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026361366 seconds)
  done (took 1.901591709 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073749215 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277498881 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.05836392 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.02286035 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103509962 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029055732 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024452549 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028419638 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028872473 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023223131 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070022714 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045482731 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.028197153 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028535648 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024328818 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.028245157 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028414751 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028970093 seconds)
  done (took 1.711381161 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.08900136 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033796303 seconds)
  done (took 0.881462436 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.138723195 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.062331191 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.104186066 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.311881749 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.098284885 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.296097584 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.101260726 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.101162731 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.068661284 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095020914 seconds)
  done (took 2.130664214 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0624072 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056951651 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.285447061 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054597639 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034921787 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029852813 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030260405 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030427286 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030606423 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029476038 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075284975 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028049281 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024450437 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072181634 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049848366 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059408231 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.02394367 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029842424 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032980055 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023790555 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028727655 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030639818 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136669429 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030423475 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.05191163 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.028330342 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.03007331 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029900123 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029817943 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.03092303 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031473654 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.056343879 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.030134003 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037657276 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.029233326 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.051189979 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024876711 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.050942247 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027659967 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024617057 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.028137384 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031524099 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025352158 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030997552 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.031057907 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.030775274 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031170605 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.02396749 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030960214 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027793492 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024784128 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029247543 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028957743 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.03004823 seconds)
  done (took 3.033339622 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.078112299 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066840259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024279934 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.071493818 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065446688 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024471605 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079634178 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060251803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078591582 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023887497 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023931418 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.024187744 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.032125265 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035539848 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076670348 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.070035293 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025905647 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024484217 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.069315794 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069153421 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023117371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080913011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070045823 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.06786151 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022824838 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024363823 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023025878 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.02381246 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.03202242 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031375419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023453187 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034265489 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035385904 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031085483 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022758516 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.02318766 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023086223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.032308327 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033549334 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033445493 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030620185 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022865288 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023132557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023802984 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024316987 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022748972 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033549335 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031886576 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033594898 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023835159 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023851147 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023084667 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024019357 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031035211 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029878571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.03152915 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034859298 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023633784 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023584471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024941297 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035309931 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032016251 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031790367 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024538817 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03305595 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023409815 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034073756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036587373 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023342506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023938195 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02361512 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023565072 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023895243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030218033 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030285707 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023931378 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023895186 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02319031 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031836756 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030428321 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023247864 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032546778 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022974992 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023680581 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024400168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024832251 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.035639327 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.034066962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024777723 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024158772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024199257 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024197887 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023343504 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.034328707 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.033156381 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.033170551 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.035457277 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024692255 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.036263662 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033528997 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02483635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032458496 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.02427326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024644253 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024551919 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032436782 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.032190557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.034348097 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02450572 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.024030438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.033808143 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036709133 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.024223763 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.032560131 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034548806 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.033165568 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.02370303 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035895224 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024301277 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035819105 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024600127 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035367278 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024638852 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.033229864 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024600021 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023593437 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024449336 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036853088 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.025041051 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024404705 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024844152 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024370533 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.033382279 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037660221 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025142217 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033552672 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.033398775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.025045998 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035672386 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024696843 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036083446 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024722921 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.02500214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023649079 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.038349338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.024353418 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.025236842 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024833679 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035159237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024306742 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035150512 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032371358 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023860474 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036540365 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.035055915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.032377976 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035444348 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025254596 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024579639 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024229535 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024517345 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035684392 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.037468988 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.168091659 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023706347 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.029080651 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.032182298 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.022856506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.029284248 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.029098687 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.029521385 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023372605 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.02327369 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.032567539 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033876561 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029526527 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031836942 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030411204 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023019346 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.029148164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031800842 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023031022 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03558039 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022972806 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.03271065 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032201224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.02859392 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031960507 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.03317363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031093214 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031524326 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033524209 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022614774 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022800268 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029320483 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.02285312 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023183494 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029148585 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023508386 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023567863 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.036299242 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023223128 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032133415 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022631813 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030140371 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022435362 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02350072 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034556982 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022893534 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023474425 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030101341 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023193734 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029162953 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032137907 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029626624 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023119772 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023889879 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.034006849 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.033228053 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023248154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023116221 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023901419 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.032928077 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.032334078 seconds)
  done (took 7.872864728 seconds)
done (took 19.415106656 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.145397856 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072895061 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.143398925 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.084792199 seconds)
  done (took 1.198243434 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.057997102 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019679094 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.145302233 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.157417765 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.01985788 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.139797754 seconds)
  done (took 1.312692596 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.261857042 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.155353368 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.165881655 seconds)
  done (took 1.357522412 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.152718595 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.280741532 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.550423577 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.146643878 seconds)
  done (took 1.913636515 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.1736033 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169086696 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031461436 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187610822 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.039698059 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016537071 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.109620346 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017404995 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.053325403 seconds)
  done (took 1.634955037 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.100320767 seconds)
done (took 8.294099758 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.199168117 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.142505919 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.03391804 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028004005 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.12924904 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.13619802 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.143274386 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030348415 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133936293 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.313171938 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.182844286 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.049274059 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.160250882 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043315687 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.266771058 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031631429 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029954607 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.025048001 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.142055253 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.132981809 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.248533905 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028964391 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.09734244 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.031211621 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.101473277 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.081025055 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.189886777 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.320184306 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.283167704 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.03167585 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.120452695 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.043146784 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.116840728 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.125167036 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.140357324 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.049255489 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020531112 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.249086128 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.107722949 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.330453297 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.1681022 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.028148868 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.14558069 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.026267274 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.020392039 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.153759246 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.03370694 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027533552 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043952219 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027754101 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.043096956 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028750686 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.134497741 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024415503 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.094068165 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.148351284 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.185856093 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.103395911 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026799213 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.040220132 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030592274 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.160985235 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.039222408 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.02660724 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.033022694 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020833905 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.145148759 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040681979 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.021130931 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031791488 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029605519 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.100708845 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.16248939 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.067382473 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032526809 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.120357375 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.098314701 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.047313776 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.050346264 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.03017081 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020284875 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.192763736 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025957777 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038948121 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027463976 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.053973864 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020510591 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.036186055 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.3245966 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.145818557 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.085064013 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020454683 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.229656977 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021266443 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.044368123 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020667464 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020015407 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.183388124 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019904734 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020111339 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.030024488 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.028903008 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021574024 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.163119576 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.099366705 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.02820482 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.026906305 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020339257 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.02595516 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021029825 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020322215 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019978841 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094374719 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.036877529 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019388208 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.102812174 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.116598579 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031139408 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036027774 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.084962338 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023379144 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.029869113 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.02713972 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.134007552 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026555422 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.130888984 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021523463 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.042572748 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119383069 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.096045523 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102277286 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019881729 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.138076789 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029860134 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019503879 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027357001 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.048018713 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029413219 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.03666458 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028074563 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.139257971 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.031095969 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025882883 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.119841247 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019589524 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.117316006 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098836274 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.130973163 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02555387 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.030891347 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.093215686 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.044351754 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.050315928 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.043296942 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024712617 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020350928 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.020089665 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.03325187 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019525179 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020267783 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033511711 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026975869 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036098029 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.250189005 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030338607 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024545532 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.26119765 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032842544 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.094501018 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.040891427 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020701601 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.102164278 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.022093311 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040615468 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085532876 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020562766 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.09752757 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020992437 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.02036347 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026376044 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021941363 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029797505 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033811054 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020816764 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033405147 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027834026 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.02022117 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.101122931 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022092725 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.189240479 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.099709197 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.096780021 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.02054486 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.039051571 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020174974 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133358747 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020504002 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070899769 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.112098835 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035986202 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.041550312 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021914087 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.099916546 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.035503267 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025835867 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100831611 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.133368436 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.09531477 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027196736 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.257765766 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029776167 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.021465526 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026697615 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029670923 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.021174799 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.102105833 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025682066 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.020292459 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.02058166 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022541709 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019917962 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045714719 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.020173027 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028917553 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.02661048 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023929156 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022799615 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.020106618 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.029177195 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.102562907 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.123905317 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.027073465 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040975666 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.034485983 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.032418539 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.070436469 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028872136 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.16233867 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.020276265 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030801188 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.043579429 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020529721 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.02571349 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.026309103 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038900505 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.024255908 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.02224885 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.02986258 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.021105478 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.021085869 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020818428 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.021066838 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029686727 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022347524 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020358946 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.020429897 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036813509 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025704802 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025894912 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.03210205 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.041076342 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.650653468 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.023711067 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022425158 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.033255094 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025878284 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020641258 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022517395 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020062712 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021945577 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020307211 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.0196516 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.048425897 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024407114 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.02085423 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.04035599 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025854683 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029964834 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.117330065 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036240621 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024189204 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019307861 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.260959811 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.093183192 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040420536 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.038825176 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020144045 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030448276 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020104303 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020514171 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019265136 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046710388 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024406604 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020155258 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.01921533 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019463307 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067977198 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028223616 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019457636 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028141777 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019791176 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019783829 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046563546 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020324449 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019754552 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.036990182 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031352082 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.102266368 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.031084473 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022862854 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.071119279 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019203086 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019840775 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020084402 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.117097931 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032979102 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021283528 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019813627 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027113706 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029027049 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073514587 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026021322 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022606151 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027563036 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019178374 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020049258 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.045543893 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.04752915 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021021947 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023626645 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.01989683 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020311533 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.09653235 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027731403 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025055895 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.107142614 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022057269 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028260179 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019487129 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.490194036 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.025090151 seconds)
  done (took 22.56074055 seconds)
done (took 23.35344903 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.169874786 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.034433644 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040081764 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028518872 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.03210705 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032695914 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042225498 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029579059 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032533923 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039572297 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146853404 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020028581 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027507959 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.035070205 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028344956 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.036013069 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032473746 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.035304457 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020488493 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.035575555 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.03113411 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.031140089 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028883251 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.035276419 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020604277 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028536417 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157004796 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.040507967 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.024087046 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.02975934 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027925413 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042290569 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.028486982 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027493991 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029510408 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025584244 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030229897 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026669925 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156251869 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.02585811 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020616246 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.033231267 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027404136 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027864777 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.02863187 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031474545 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025448681 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.034007553 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.020139996 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039689291 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156372865 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.02917746 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.02403726 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028457486 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025472458 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029479501 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.023796618 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.03188445 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025375653 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039171377 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028522419 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027938488 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019960056 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028700003 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.02749389 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027793101 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019225168 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.029099452 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.020024513 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019968937 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019674662 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028780552 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.027143867 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025166788 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019745194 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.020065921 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019773283 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.039346235 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027241294 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028880736 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020468261 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025615217 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.025062239 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020500029 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.029113061 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031488377 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.029009675 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020537927 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019683465 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039303782 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026612388 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019959855 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031364094 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028958718 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028825839 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.020040265 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019715702 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028751479 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027892906 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019987813 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019267334 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028937238 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025219008 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028825266 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020393695 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02894677 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028838378 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019367555 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028685894 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027312862 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.029088478 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030887321 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028755668 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031352443 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020496525 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019226438 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029821346 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020317189 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02908835 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.02801564 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025433554 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027851922 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020548307 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.019594111 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028920212 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025990009 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020356198 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020450052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020365499 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028830936 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027434021 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019281943 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019955716 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028745505 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0286325 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019729533 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019637329 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.02880381 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020514401 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.026080636 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025401611 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028768157 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.020091436 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020344513 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019564084 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.02001719 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028965275 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025427549 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.029030148 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020646112 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.02877406 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027350569 seconds)
done (took 5.665914978 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.077846399 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064570933 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182791895 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146917679 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033641688 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034518099 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025477678 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.041103896 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027299193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.046057449 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045742012 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043358384 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.169889387 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041312032 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020443949 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032615406 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020961824 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.04857546 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151415715 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045547489 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.064406326 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019219107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.03743202 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039407667 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.03368859 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039804523 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044823394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021472261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038706386 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038520296 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047756594 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.02307374 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020934045 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040949976 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037272821 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.029948527 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020228229 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027738286 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032724797 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020405781 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065860737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.03970487 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027872864 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.02819073 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021294208 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.036271015 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021334386 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02930277 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035672438 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027481547 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033925794 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038647776 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022696957 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.039189325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019424342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028595625 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.028339487 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020258687 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021166605 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020401499 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020230167 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023328806 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033795735 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.04067519 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024530469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028512491 seconds)
  done (took 3.600180025 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.047863223 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.067103823 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034946236 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035278773 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019984741 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020502058 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.02045244 seconds)
  done (took 1.132125108 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093577512 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141913537 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150119775 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151849231 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.16217335 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.148818637 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033258196 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050854038 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.055966731 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.164375139 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.160214753 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154723342 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024821483 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033476635 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053690599 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.157584226 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033997432 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028442651 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149637981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.156377777 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026138243 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052978259 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.034081517 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.024121878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.155075589 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146230143 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024914984 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063447776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023482561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021353149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021328474 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.044360404 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145703344 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036951839 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021625494 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.02039495 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.143082343 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021824542 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146055011 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.02867506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.145504699 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023841179 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023987362 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021704271 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022614747 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.149516743 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022650645 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021372547 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020916448 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147867212 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.03254218 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.145828002 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022935177 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026652748 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028429553 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028268765 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028487613 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.02177325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149394042 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031788444 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023251665 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157811583 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.156885323 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.146731312 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.160419078 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.031086911 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150454393 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14979963 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.02188932 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.02985667 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022482034 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.162117985 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025663095 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.024175319 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.020131119 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.029040899 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.16638874 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.166964931 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167652654 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036612651 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023612213 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022833187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.165622845 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168126317 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027879528 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.02215402 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.022301624 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.03840071 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047481682 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024277653 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026748499 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.022008617 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032766419 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024384938 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023862515 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.302608914 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020281865 seconds)
  done (took 8.152776584 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.036395451 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021829756 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021297048 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021635705 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021930229 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021670512 seconds)
  done (took 1.054722996 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049370053 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.02231768 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034835847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.022047577 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044983696 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139908106 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140119177 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023240874 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038797091 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034198328 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140086301 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143419187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144016304 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023420907 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141602817 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.03410562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142200452 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.027217668 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033467386 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023593659 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.033139375 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.023058194 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0232977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.157311921 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.017296706 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033981255 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.032080808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033743767 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.033273873 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.0231346 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.023064923 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.017045339 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028275713 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.02305932 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143509214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028784708 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022613269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.018261928 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026861748 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.017131328 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.146726061 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023999393 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.027472157 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.018320912 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.023261154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.02854933 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.018289696 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.03273998 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14454831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.01851651 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.018261043 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022937913 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.017182228 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.018192925 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028543905 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023279919 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.018176592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144847074 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0235768 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028608998 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022580559 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.017109847 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023136716 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.017018601 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027666922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.018199058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028472074 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023511103 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023523004 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022415739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018264598 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022352775 seconds)
  done (took 4.147717624 seconds)
done (took 18.976276526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.526742812 seconds)
  done (took 1.416760833 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.023374352 seconds)
  done (took 1.950057546 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.051338477 seconds)
  done (took 0.970751682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.307787665 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.516025243 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743291502 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.094560478 seconds)
  done (took 2.565097743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.871096211 seconds)
  done (took 1.800845559 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21759272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.179221372 seconds)
  done (took 1.352074642 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.488467136 seconds)
  done (took 1.403458022 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.336516404 seconds)
  done (took 2.259465874 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.205622892 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.135244064 seconds)
  done (took 1.266510281 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.614035552 seconds)
  done (took 1.534198725 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.474641434 seconds)
  done (took 5.397435088 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.195044456 seconds)
  done (took 1.175231383 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.192583678 seconds)
  done (took 1.115897104 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.72154545 seconds)
  done (took 1.641257939 seconds)
done (took 26.785006622 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044186435 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037550669 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037477125 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034898663 seconds)
  done (took 1.064892019 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031208137 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025351901 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027673732 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.028003961 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025294278 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027145283 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027809545 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024124611 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025134083 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024461953 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022979467 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024392444 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027052012 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024135781 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026742821 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028174041 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024562122 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025099101 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.02651118 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024137664 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.02711601 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024412772 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024525421 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025833396 seconds)
  done (took 1.545938374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034719188 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026056713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027824191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024887611 seconds)
  done (took 1.039947878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033459908 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031253226 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039923945 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.04442385 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.031004116 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.03148717 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.037980175 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.038341205 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045187097 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041243355 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022047187 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021795108 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020970539 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.03999737 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.037503614 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016299254 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017683369 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.03170836 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030749035 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033466554 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.024015202 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019587901 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031005867 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031485471 seconds)
  done (took 1.675368318 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038060631 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019796178 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036058632 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044990003 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045219866 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019563014 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033354597 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045785898 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.08372078 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019698935 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025716939 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019659093 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.05822779 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019613269 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034646929 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.065157384 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.067874413 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023770586 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050695823 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019766077 seconds)
  done (took 1.702332213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.029009252 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024040176 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025233258 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019474664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030482254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026970795 seconds)
  done (took 1.088438595 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024529513 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021634363 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021358017 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025727114 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021187303 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021206439 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021184991 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019997833 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019932892 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020814145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020780964 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.02116296 seconds)
  done (took 1.186810958 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167466078 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026727351 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.028059514 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020005523 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021722386 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020799202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.035860345 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022832497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039076793 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020848911 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021132025 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023265183 seconds)
  done (took 1.375386528 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061243727 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066354484 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101699123 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076659437 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081449888 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05112415 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.204330919 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033940703 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.123282119 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094690095 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080614601 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046787351 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040908422 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.024000258 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056372086 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075814407 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09324878 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027399349 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077841281 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.248931534 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091817665 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095497501 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108244922 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082271574 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048938378 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107869115 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051755219 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059837495 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080426624 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085229847 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077543711 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.059070231 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025959536 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025669375 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119800052 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.066078119 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078972676 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.049521033 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062039335 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044658269 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085193937 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024893593 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038235437 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.070623143 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044188351 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096173123 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049278604 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076144799 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037526806 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103112275 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093166158 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.186377821 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043873811 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064986761 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106273121 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.217442002 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089358665 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062098122 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036731583 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.075253894 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.061146452 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054681918 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061601782 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034696409 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134956451 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043416995 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.079505877 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069587517 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049820555 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049114396 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0652404 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092083625 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081552036 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.083356768 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095925931 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.047949936 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089016599 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.057131032 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.082259312 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060657826 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.027123453 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.08183038 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086194341 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056328722 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.056846153 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093645694 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048339001 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030812979 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.057407567 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.077180307 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034969857 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.071323754 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036148881 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.08810245 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098456724 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055127555 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075126361 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.076095573 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03340209 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131869077 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065980604 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028225041 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075462072 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073680162 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119587889 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057397796 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.030642132 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059630867 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06512537 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.11761129 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0718156 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.038073643 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.228419078 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096174152 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049015404 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.253214737 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050336357 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09667302 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067734061 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040472174 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029369348 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.048266182 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067901572 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061943804 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075155442 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048672335 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038232271 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040301683 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071577416 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047504265 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035066699 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072256424 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.057540184 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028931198 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042723159 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031096438 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111181615 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.033757122 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096084933 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092179598 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030336937 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063182566 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05219894 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062237419 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.057813419 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075983729 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09968712 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.143218861 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.046449383 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.0509829 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064829335 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104138784 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084873089 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047169353 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.040655144 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056814607 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06828781 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.056849968 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083466376 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050106775 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071440896 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060524312 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103821726 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110955561 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061250134 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064035044 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069541557 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.086779054 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030886469 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125730995 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065796248 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084810156 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044409574 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.262970793 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.070752863 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060787256 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040889403 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058388465 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.058670065 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0608736 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099110842 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.049738749 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026263888 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047156217 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102260151 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031296973 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072965618 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044588137 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.047157642 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072321051 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047898235 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036356285 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022685502 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081082004 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11282895 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024261053 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.070786217 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.061956984 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057520085 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.078385797 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023947494 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084477036 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096100772 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083152674 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104457066 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15242018 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07792009 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075435317 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.081402222 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07077172 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.034459049 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.084441612 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094514467 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053337807 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048683911 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095438386 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075999447 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.099880417 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.081363136 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085438765 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.067475798 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066276603 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06462486 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.065998613 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111048631 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083588753 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.08821821 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.040939695 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076235135 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.23062107 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091078911 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035407818 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096331423 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.039095044 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09587376 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032231766 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084574729 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.03044724 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.125045274 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033648885 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053868815 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023751197 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.027930776 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097507826 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.078980689 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.060447498 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054196693 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.092797415 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092260768 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031851949 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066254356 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068564431 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059344405 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072721207 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064247374 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.045052548 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051947821 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064245708 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.040592731 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.037069942 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08417831 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051828728 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092954842 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038210048 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029422787 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098900331 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068930415 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052027948 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031181724 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064192996 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082163423 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04776829 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041321839 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07688787 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061160425 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10298521 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.04573036 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.058467057 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084928918 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03680922 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052929483 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024468269 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045224398 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031552258 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090392884 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031626854 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080281357 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.024052246 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093303546 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047332908 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.055371746 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065592236 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07287749 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100668683 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.051916373 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109169032 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049926309 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.231595445 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062365424 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068333697 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.040845663 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057382319 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058575463 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076677042 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.05006019 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076174465 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097403407 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056760796 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097705598 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044686012 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.07713327 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060769799 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.078233367 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065889533 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147894794 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094827602 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067551156 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065111911 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029791299 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05135919 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069705324 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069916388 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138086514 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084248976 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.027041313 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.062336422 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049129342 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066765409 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066833544 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037562094 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104497919 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059473304 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.042234398 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069544789 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.048246901 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060789895 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031397941 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058626622 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.058180498 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.051457374 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053582893 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071817969 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088663134 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070768412 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.104461653 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.059131321 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.04823252 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.079887828 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079264221 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076903285 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042535823 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043164181 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109036759 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082982272 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.088031593 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.057155503 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.221935411 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065888752 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054631418 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085710953 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061332018 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.082331435 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034139875 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.03085818 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022593056 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025967167 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078541151 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066974073 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064007564 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058483666 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026112749 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060183563 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061376174 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026100764 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039828013 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048128757 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.052694957 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.046114753 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060227281 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.071591188 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.050210783 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057720918 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059528087 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104873803 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.053725387 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044506765 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104868929 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111671395 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044268627 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049717803 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025918075 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033776518 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081618797 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105913901 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11639676 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.033896957 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041281916 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.041811318 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043001173 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025868691 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.047782765 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.04540317 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061639549 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0536705 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.071670293 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06138523 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03074056 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.065677789 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056203291 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048558403 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.064336935 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079347128 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.085992739 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.105370791 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072692367 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076759065 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032405214 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.038092639 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032280695 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035647079 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066704671 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.035033602 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032858673 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115462176 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.049259912 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.221920865 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068739641 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042139825 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029699037 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089769444 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023745829 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090559842 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.02512803 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036204152 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.035838029 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032691336 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047899555 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092156514 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062900809 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065438569 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060901863 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065037206 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141402211 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113723892 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035235461 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096831142 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029754672 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030310104 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030167931 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065383047 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044563638 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072921157 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102469692 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044029966 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058136294 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033524008 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104546139 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.05831093 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060856245 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041142349 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.03426946 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104303223 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034515133 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042819391 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.045050044 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06685562 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026953031 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058138167 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038228935 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034358028 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148821527 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.665100813 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052362752 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.030684518 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.052346618 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101529753 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097531942 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053170061 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066051707 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.077665474 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.061893664 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050486631 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.076219378 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.158178399 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029179231 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054683597 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.063048068 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062758781 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071104642 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.058522083 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.049686796 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.055659577 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.194271294 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034103566 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069966294 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040810084 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050952761 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.059930185 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037286574 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041537245 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085526464 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056594364 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.036896756 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042332551 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.058427311 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039897009 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059328791 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023662246 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.065030824 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043076383 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072747473 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.049802813 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.064772276 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080425328 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047919786 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091067003 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.06117024 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076843338 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.04103327 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032554499 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081357517 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.04518511 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032106181 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105183286 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.054250093 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.059797224 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066247297 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050584121 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070275409 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075095442 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068961881 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058358733 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033296465 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058001419 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.068729449 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042696957 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034814051 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029506673 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.03000384 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064703179 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042626179 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041317063 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074022386 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04493513 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.321735871 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.057328365 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081350091 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04447076 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.064647945 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069995087 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05059615 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097553012 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059287777 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091164509 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144110522 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099380859 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093681516 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.243041062 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032233907 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.034003925 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023268041 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068880899 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033798219 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.04295206 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03307121 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089055574 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038166922 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065116427 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.211082628 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034381739 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.048260727 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050384722 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023982802 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037378535 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061325096 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040362596 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034143629 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070246351 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035594596 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082713025 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06445603 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052573764 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048873048 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03464363 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066803215 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058713707 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.085412092 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053310322 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029570786 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078904444 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061750385 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101875517 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029239849 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036148457 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088422885 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059995845 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09077615 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036159475 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119052355 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102594189 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.060893806 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094614397 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025813658 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044431914 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045693285 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.080024378 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040692165 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068354912 seconds)
  done (took 42.556073152 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.142892038 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.127614493 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.075916892 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.089009586 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.245399641 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.25326641 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.111634272 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.07822258 seconds)
  done (took 2.19091701 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024792129 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.054274733 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035574164 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.298855134 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.054705916 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.02118841 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.0286169 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036324416 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0248518 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020795739 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.059864051 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020917365 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.02492217 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.47456227 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020297013 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025717239 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.024994914 seconds)
  done (took 2.307461091 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.308620038 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.596496052 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.349631836 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.382371393 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103656396 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560643366 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029051908 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034286514 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628093631 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.161151191 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.097468898 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.174347013 seconds)
  done (took 17.471169148 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031590742 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.160874363 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159250675 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028146717 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027728016 seconds)
  done (took 1.517521357 seconds)
done (took 77.721558022 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041106578 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.124570684 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021034283 seconds)
  done (took 1.218924093 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.162877282 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.158174549 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.159175266 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.161456572 seconds)
  done (took 1.682338219 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030879983 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.031028956 seconds)
  done (took 1.109074398 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.19680228 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.264839538 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044522679 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040328318 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.035220346 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035263265 seconds)
  done (took 1.160622529 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027372739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025091983 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025183907 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025627653 seconds)
  done (took 1.14282837 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.140856543 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019927301 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022532709 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024058405 seconds)
  done (took 1.247908615 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.041187944 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040306023 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.07070215 seconds)
  done (took 1.196976741 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040174766 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.039329937 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033699128 seconds)
  done (took 1.158574733 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064413328 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050225079 seconds)
  done (took 1.156633527 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0364909 seconds)
  done (took 1.081041602 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048819124 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052384471 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.224951256 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.191322994 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234179823 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.213715165 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034764205 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031911077 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026946714 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.036394947 seconds)
  done (took 2.134861161 seconds)
done (took 15.881449016 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036752021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.144159233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.269362495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040670358 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608831484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267388981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678069951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043261579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053667596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022174829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038910153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586674562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.681612158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.102541792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.667112435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.093311117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.515512138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022296637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021434971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022050991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.660747337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021759454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021977212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02242453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.51351487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410861108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022822923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.102730651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021676991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025699214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392959313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022835827 seconds)
  done (took 12.190404964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026589835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076527148 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026979152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037639489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023867087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024044794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025740728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022320318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.06513097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022104288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039248649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021637384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026376017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023108001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042411429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022017363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024016575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022683618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022172531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022657965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041133549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021832493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022534004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022581216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022367811 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036919119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023201866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.02204036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022410144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025972429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.02707715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023466465 seconds)
  done (took 1.983716907 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079110664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.078257921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027862383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.061920742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073732241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.025008836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105420755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044112568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067778549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022826754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039518012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02215186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.059093901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0234722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043310744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022250838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024652341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022922722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02208985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022702689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041559809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021973308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022410648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02284818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022821432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038645401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023232207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022186546 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022338311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026032099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027704506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02369843 seconds)
  done (took 2.259105869 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.02607804 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026533949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032140158 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035540714 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020659773 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023159279 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024327721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020649371 seconds)
  done (took 1.265312393 seconds)
done (took 18.760065536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.036050143 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022551697 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.02550918 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.04672733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028808122 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.148459067 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024989745 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027592111 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.02614188 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025411806 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027850698 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019944015 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024636598 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.02475596 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026557141 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020510601 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.152259702 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025057815 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150019997 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.15114803 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023224267 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026196662 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029061424 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.150199804 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.150580128 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.150542541 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.02997366 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026632027 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.02616635 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023413701 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.149702578 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.152871299 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023988858 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148161056 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021113865 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020904806 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025254951 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022348765 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.154748725 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030240504 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023168857 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029972464 seconds)
  done (took 3.512516278 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.154920994 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.159123009 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.152424676 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033259252 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0293836 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032428283 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.158544314 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029728397 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.02846936 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.157801492 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024143014 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028236288 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030499657 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021239762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027955134 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024509107 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029990942 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022411851 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027919655 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028212235 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.158293215 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021714074 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029015847 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029492733 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024085502 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030109048 seconds)
  done (took 2.569256813 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030971418 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.044386362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.046032484 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109740669 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063382557 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043718321 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037255506 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047621038 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053559269 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021455137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043940382 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.05060338 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.050140254 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028608211 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060612988 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040527972 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034372916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023040084 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028054182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056109226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044895921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040855005 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054443023 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041427312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020590719 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030547829 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.02594749 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.038160613 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033048799 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.034044183 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025281023 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025096863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022323502 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032460741 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025192917 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.01987493 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.045537386 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034448975 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036474645 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060587812 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031809144 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022741904 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048271013 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081551774 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.02034203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024518446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025689044 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034294069 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022885974 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063883359 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036688284 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020986557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040914881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022950889 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.023115657 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042772489 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023310551 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.02365828 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042033223 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027903067 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043297443 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027235199 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041850043 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020605691 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033406702 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.023085878 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023495441 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020558894 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.056340273 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.029130438 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.069123307 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022955328 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020453732 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.03441945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033630164 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.029121346 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020518082 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040553708 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034534663 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025833281 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.040674899 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024637349 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.025160531 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.066867194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021224578 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.02010567 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020029975 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024801555 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025148662 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022590405 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034670847 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021254079 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.025507042 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.049249935 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021535739 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022673252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024601119 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023480975 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0212336 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.032048182 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025459088 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023909177 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034941962 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022704798 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025577495 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.037073138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.031306302 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020617253 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023286957 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024669561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023499781 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023677391 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025358824 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023809071 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027310284 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029551493 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027895681 seconds)
  done (took 5.027308334 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247733297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.236221138 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022655449 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.233134363 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030362023 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.164697077 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.240088417 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.237242288 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022459504 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023281689 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021562651 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179128471 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174733453 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18708581 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.165724421 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.02445895 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055643708 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.186829833 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243418953 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.239273337 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.055085473 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029745249 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024793997 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023860463 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.023270179 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.031162839 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.039446969 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031270861 seconds)
  done (took 4.280566141 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031307093 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066854105 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025809199 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.047014007 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.03942127 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022661293 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.024073675 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022780654 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039012182 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027965331 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022380582 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026296703 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025653941 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024550599 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.02238156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028574294 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.029075434 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020985954 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025659672 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026830759 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033479203 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046564966 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026202938 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021994557 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025518366 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021989045 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027509545 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.031003904 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021833466 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021890156 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019293017 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030804836 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037298717 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023363122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021888327 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022744979 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022544091 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022484874 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022312289 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020536776 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.02047654 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027629349 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020961359 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027180721 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.03572721 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024572328 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.02392386 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024894555 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.025234133 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019381921 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025555395 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.02572974 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024874852 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030705856 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.025094725 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024943342 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023845211 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037240268 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028328602 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.022335879 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021772644 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.021037358 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024627404 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.029401847 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038690305 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024567836 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020924531 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.02283881 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.024256376 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035844179 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021923355 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.029150293 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019627742 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.023055758 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024993207 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025640643 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.024008309 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.021224808 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022163378 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021839414 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022866475 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022138717 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021784452 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.025064219 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020478849 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020881873 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.023494599 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024281027 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.028080048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021383158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.02610488 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.024010926 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021300325 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.025176753 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.028035279 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025252252 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.041118068 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030798435 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023245797 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020444708 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.039696995 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.025405071 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021879916 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024532342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031208947 seconds)
  done (took 3.877924931 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053272615 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024541097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.04209738 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.058017885 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032629835 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028192334 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.03610033 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023592139 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043892393 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021450432 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031568024 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020673495 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035377753 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031223594 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024315235 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032291098 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025133637 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043142092 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037414839 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021126147 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031065849 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034939133 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.035000827 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040016517 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039368361 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040742751 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034623184 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025129902 seconds)
  done (took 2.037033798 seconds)
done (took 22.356424622 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.108592732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.293203355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.091148245 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.835857846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.157426409 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.179762094 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.27910493 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.066142933 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.186970365 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.166031823 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.712720561 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.776778303 seconds)
done (took 60.005186426 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.145427496 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.242981737 seconds)
    (2/2) benchmarking "String"...
    done (took 1.341872832 seconds)
  done (took 3.670513136 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.516727137 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.079041411 seconds)
    (3/3) benchmarking "different"...
    done (took 1.112001483 seconds)
  done (took 4.772150211 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.471143493 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.891795929 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.419308089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.067174367 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.084161325 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.866313548 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.450425792 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.907316044 seconds)
  done (took 27.760705822 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.084433762 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.335339696 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.438312275 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.526182849 seconds)
  done (took 17.562056483 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.525883117 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.632862064 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.633152346 seconds)
    (4/4) benchmarking "different"...
    done (took 1.818499988 seconds)
  done (took 7.799299563 seconds)
done (took 71.260747674 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.066523027 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.219453675 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.087480973 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.263009216 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.089085886 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.162237963 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.080468481 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.108534535 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.077307963 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.083389355 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.012547834 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.077656312 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.080147217 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.15169443 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.080098925 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.124126213 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.210584111 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.086008882 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.098360845 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.653388936 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.396926145 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.069070426 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.086714906 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.150108957 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.253588431 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.132855963 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.369217388 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.086883657 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.67384734 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.074993711 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.08357598 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.078001349 seconds)
  done (took 180.333235273 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.066967865 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.785919908 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.824408549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.088078863 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.400388354 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.427455142 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.885031455 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.422429491 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.077108027 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.082359165 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.043859235 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.071263897 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.034865647 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.608189704 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.113074703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.087961266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.932305916 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.902027502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.124535404 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.952815506 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.076037147 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.586800874 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.576675241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.862398542 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.080986624 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.12656097 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.086845744 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.088226049 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.551177523 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.877209705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.086573953 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.104971437 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.260787317 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.315680237 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.080585902 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.077343267 seconds)
  done (took 150.845746682 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.311150056 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.075901263 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.110088572 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.185333212 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.85158611 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.737735801 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.078336213 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.066741971 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.066490107 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.073924656 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.068388967 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.13262295 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.077357497 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.342851645 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.105547313 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.068599151 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.067627242 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.328934427 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.086958049 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.067099676 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.067058317 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.164155399 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.418842688 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.178715447 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.076720867 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.075309503 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.17606892 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.083384674 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.068838031 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.066620957 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.176293908 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.07766458 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.19117024 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.185380843 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.081840346 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.122040538 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.084240876 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.152775757 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.079188713 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.066663774 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.068798996 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.111703759 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.077168207 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.890111924 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.174417331 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.080901677 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.085284488 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.523747024 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.668434167 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.079845773 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.067998473 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.0665608 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.070264648 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.068015937 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.410067706 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.081818361 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.100476758 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.140786467 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.083997547 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.067977333 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.066778463 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.066678081 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.067138821 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.073839336 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.102136323 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.605465346 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.683585864 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.429560306 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.701026006 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.077037229 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.067100817 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.066728981 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.255894997 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.138229789 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.069242201 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.066473128 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.231708358 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.076401832 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.067070781 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.918552966 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.923059465 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.077541952 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.175744878 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.076911131 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.067735503 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.081259201 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.352450237 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.08716108 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.085840042 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.122431309 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.070572667 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.066384871 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.073585538 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.919598217 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.078403873 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.079223105 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.228973106 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.077851498 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.067122932 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.130725841 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.419462605 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.077135095 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.148849678 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.45686844 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.838620127 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.077484476 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.066492743 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.085309463 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.067991951 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.079500469 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.078369796 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.068299816 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.066552997 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.071632288 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.066981825 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.066983881 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.066907633 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.085223466 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.068304458 seconds)
  done (took 319.829859557 seconds)
done (took 653.526777866 seconds)
(4/20) benchmarking "parallel"...
done (took 1.066687297 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.324530724 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.107151021 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.207813789 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.322067129 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.277279148 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.25090724 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.278535425 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.367067835 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.304103909 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.244435918 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.304483436 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.24859131 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.358074943 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.330716883 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.367728271 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.331628844 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.270067816 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.774904823 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.289292524 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.24767376 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.276012913 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.247080613 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.231523755 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.301765592 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.371931296 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.248966232 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.47653898 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.311477512 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.280300066 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.323058643 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.343654176 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.359284388 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.289222817 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.356378624 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.319904134 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.387200391 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.262532183 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.338267259 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.259239233 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.286119432 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.299964648 seconds)
  done (took 61.843158594 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.532533114 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.261488094 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.37792772 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.380910675 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.777890033 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.381089322 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.469970581 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.280606521 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.275794654 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.393251723 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.405296384 seconds)
  done (took 17.631081319 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.310400155 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.264152575 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.408569662 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.392638913 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.55001621 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.388847918 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.428295528 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.264768761 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.2689447 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.402585173 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.415978965 seconds)
  done (took 17.181811998 seconds)
done (took 97.723358155 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.6516697 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.147850047 seconds)
  done (took 3.863582436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.100491433 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.089319492 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.079566644 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.083817523 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.081513851 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.079375405 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.131594723 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.092725967 seconds)
  done (took 9.803529947 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.080663187 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.079467947 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.080069745 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.079692101 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.079458693 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.079282016 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.080137338 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.079538347 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.079108619 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.079811942 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.079446604 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.078774609 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.080334117 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.07963399 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.078818376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.079492987 seconds)
  done (took 18.34060448 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.079629982 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.080525701 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.080137031 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.079502085 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.08027008 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.079719422 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.080469301 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.088482188 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.07966891 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.079767935 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.079423501 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.080040354 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.080218768 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.080327398 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.080188072 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.080054198 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.081378364 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.079970284 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.07979322 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.079574454 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.07959102 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.079938998 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.080636431 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.082425361 seconds)
  done (took 26.997059682 seconds)
done (took 60.093446617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.903240939 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.256796811 seconds)
  done (took 7.224689827 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.083563657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.079854886 seconds)
  done (took 3.346766274 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.079499512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.079715021 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.079176374 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.079844416 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.079002629 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.0796888 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.079169336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.079560226 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.079012317 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.078846555 seconds)
  done (took 11.858589446 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.079694529 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.079004636 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.079085684 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.079062675 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.079627988 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.079995853 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.079024048 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.079363728 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.079399132 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.079896361 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.08017031 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.27129732 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.079573329 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.307237459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.079003622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.079568842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.079932589 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.079788417 seconds)
  done (took 20.915907263 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.088732844 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.079443529 seconds)
  done (took 3.238635312 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.079532655 seconds)
    (2/7) benchmarking "second"...
    done (took 1.079864527 seconds)
    (3/7) benchmarking "month"...
    done (took 1.07960921 seconds)
    (4/7) benchmarking "year"...
    done (took 1.07973708 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.079627036 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.079800723 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.079283587 seconds)
  done (took 8.622564565 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.510960601 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.246021173 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.293492502 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.522152099 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.761102172 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.018976237 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.754189883 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.022632741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.899201571 seconds)
  done (took 16.093856483 seconds)
done (took 72.368402648 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.840531355 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.069788609 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.704381258 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.182974643 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.095498427 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.435721422 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.077727361 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.622389562 seconds)
done (took 37.122466933 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.279446586 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.067446369 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.116946229 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.117295358 seconds)
  done (took 19.367215248 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.067118142 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.685135064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.107894847 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.101551351 seconds)
  done (took 19.127387762 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.581264739 seconds)
    (2/2) benchmarking "read"...
    done (took 1.502468153 seconds)
  done (took 4.167729127 seconds)
done (took 50.010643912 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.07945626 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.079846862 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.079970945 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.080019771 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.079739737 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.07999517 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.0807855 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.079918391 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.079365636 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.079243602 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.07979179 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.079528657 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.079746545 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.079496089 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.080263316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.079641024 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.079581207 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.079933792 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.07999745 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.079796072 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.079191984 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.079474268 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.080068678 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.080008883 seconds)
  done (took 26.98067469 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.151174931 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.139960706 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.157031535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.157686816 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.177677779 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.157199094 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.149081389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.119311318 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.15967007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.126968469 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.113013924 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.172243304 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.117938144 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.17562127 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.121281613 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.175647715 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.156662844 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.119080325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118893909 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.178338638 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.149599146 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11963881 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.172056608 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.112570867 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.169125007 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.113567382 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.128501374 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.13986838 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.118416991 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.169925217 seconds)
  done (took 35.403657411 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.113749396 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.079654134 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.079106703 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.16903339 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.079910707 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.079923369 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.079279146 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.079201665 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.079574879 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.079867656 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.079085919 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.079579245 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.079522053 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.079108304 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.079260843 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.079911799 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.115617959 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.256037925 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.0798358 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.079351804 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.125082436 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.079270457 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.079784585 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.079751183 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.079923136 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.079845893 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.079482112 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.079377391 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.079742512 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.079622541 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.08013351 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.132793086 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.112694323 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.079644129 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.204030393 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.13933255 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.07934203 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.112306723 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.079388906 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.079026836 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.079478229 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.079270566 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.079698694 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.079989443 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.138828553 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.07977139 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.079801475 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.079226444 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.079480322 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.079551838 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.079905603 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.079984442 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.095382945 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.080214922 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.079724627 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.080115283 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.079918215 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.079781864 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.079667402 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.07998404 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.080041564 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.151509598 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.079973389 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.079558646 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.455323807 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.079547707 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.142324363 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.079999854 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.07970295 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.306281625 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.080032242 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.286362484 seconds)
  done (took 80.504903727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.079902843 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.080268345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.161498209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.163675314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.079987164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.079589414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.080307209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.079628069 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750374611 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.080112934 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.079532557 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.080673216 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739018947 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.080000115 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.080210642 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.164070476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.080107836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.08022041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.080141351 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.079761466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.07924299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.080619291 seconds)
  done (took 26.405091024 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116340913 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.094652471 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.116404464 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.094853122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.095705198 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.095071517 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.116671987 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.095332457 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.117419694 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.125108047 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.117241858 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1166773 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.095890555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12137859 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.122296091 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.154926789 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.116227933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.155001158 seconds)
  done (took 21.133179001 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.257904514 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245773185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.161218948 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.124808673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.342121177 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314439379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.184985754 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255032031 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.122314581 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245884429 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.254372518 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122172047 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.313853282 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122761978 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.122096173 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341875183 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.158775021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.122613554 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192243147 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.184473074 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25794915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19229761 seconds)
  done (took 27.70599342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116506465 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.1250871 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.157801647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.153926222 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.080657444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.080432599 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.139049176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.117250116 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.094411562 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.121702195 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12002272 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.080185089 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.170199606 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.133347925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.168955924 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.120214215 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.131152816 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.133406203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.118242039 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.080696048 seconds)
  done (took 23.509232816 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.080038019 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.079972335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.080447788 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.079884448 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.08020979 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.080165196 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.080347503 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.080335906 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.080203902 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348439592 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.080618261 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.080422826 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.081117052 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.080674874 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.080728086 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.080227914 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.080383808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.080474725 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.07984127 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.080106674 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348491217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.080337848 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.080090258 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.079854336 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.080072219 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.080222839 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.08031505 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.080571159 seconds)
  done (took 31.851332399 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143173129 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.079672759 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.080360914 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.080368105 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.080716533 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.14800302 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.080333385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.080635932 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.079484295 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.080406595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.079946874 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.080184383 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.079741277 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.140689922 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.08022222 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.079965125 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.210989358 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.080998569 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147969394 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.06891214 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.080926677 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.219964812 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.07999945 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.080166788 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.068952158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.080124625 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.080986784 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.080280634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.080245198 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.080470718 seconds)
  done (took 51.981453636 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.101714079 seconds)
    (2/2) benchmarking "in"...
    done (took 1.102342105 seconds)
  done (took 3.269920144 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.080499545 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.180326823 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.080480879 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.279518323 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246517508 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255474428 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245748722 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176492106 seconds)
  done (took 10.611231023 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.080122477 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.335438555 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.217923325 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.080862066 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.080638938 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.445851168 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.151400072 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.953972001 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.831578033 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.959077454 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.180625999 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.753326377 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.102732931 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.392015536 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.191284112 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.909137521 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.290200878 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.543421927 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.0979565 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.189312159 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.771391695 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.159179089 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.081205145 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.081501236 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.080235027 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.997823471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.895730751 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.5620531 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.201929845 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.189300561 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.790247397 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.13921958 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.08087608 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.330494589 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.182473574 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.080459575 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.227646788 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.174475941 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.081479878 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.081362316 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.803246975 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.687321534 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.314099638 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.293899909 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.156554113 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.080723711 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.081112452 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.081168555 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.350092274 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.708436813 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.107152677 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.046642338 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.212064862 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.081215662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.58626876 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.206846602 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.081780285 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.000844819 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.511475871 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.328001165 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.451619341 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.22774936 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.07186185 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.193397608 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.081982789 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.274222158 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.952789775 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.833315398 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.772113634 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.179687281 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.46853904 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233846756 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.081971168 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.080425492 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.01989224 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.392943957 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.087819772 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.080831063 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.080682009 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.082313788 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.303765569 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.184351111 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.92324027 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.213409753 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.265669378 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.568562524 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.193525888 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.081863294 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.712567098 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.914331011 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.099173015 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.721466609 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.297665475 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.212357655 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.056586723 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.334944809 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.120673014 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.081175468 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.919724698 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.543531441 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220369674 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.082015429 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.420642162 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.168427911 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.09056455 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.081639991 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.767008494 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.192546061 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.191476214 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.117065741 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.081765041 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.081046056 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.690896973 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.104381945 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.088461171 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.572137116 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.114385772 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.473104843 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.46187745 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.266974062 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.390946681 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.99675585 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.315608096 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.953128631 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.090169872 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.42448494 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.07883371 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.728105794 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.302993866 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.19135664 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.878163328 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.114718502 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.080778561 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.185702837 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.136265443 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.08205663 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.080673669 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.081692582 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.080487496 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.08154911 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.210934174 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.434863817 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.687433101 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.206293961 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.319746533 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.197566238 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.873354593 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.25604106 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.759937302 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.214905361 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.081380083 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.591845907 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.443287152 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.751771001 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.194732514 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.081230308 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.081164118 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.918825057 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.030461281 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.168433276 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.081103558 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.702315026 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.104022023 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.088926525 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.08188565 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.600898436 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214278471 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.082168032 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.175281154 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.829287386 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.740397075 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21321174 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.393349362 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.194810348 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.081403615 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.082112331 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.081798004 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.871239211 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.715762289 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.212070764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.674490941 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.86159693 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.148628974 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.221699344 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.16222426 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.327134186 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.290340309 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.216834963 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.083094663 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.08240204 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.080792749 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.569016589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.998404777 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.915059058 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.03627941 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.082657138 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.984043075 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.093413647 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.897698425 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.095417755 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.798730355 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.991095248 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.173397157 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.08253808 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.08150438 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.229714879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.255536428 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.216567505 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.468917088 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.222973469 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.083681463 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.714562823 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.194588384 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.713475705 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.175731451 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.925818773 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.152505039 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.193220761 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.217731103 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.660282436 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.174914065 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.081648449 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.720020951 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.190679121 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.08190686 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.131572647 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.584372802 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.012593821 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.813249152 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.587828436 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.16883283 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.685558528 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.318501832 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.21607197 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.863587214 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.170193045 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.344883678 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.187972232 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.419217183 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.22713754 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.84378111 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.095964446 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.605285643 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.20862343 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.042142648 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.191780052 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.486994558 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.18677345 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.082703269 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.246723994 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168773803 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.725624554 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.196045468 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.208229839 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.39943649 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.92592233 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.171634443 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.345468818 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.189063119 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.033474106 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.078318442 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.416565176 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.963980761 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.072270738 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.093850208 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.83228697 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.218945888 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.370158497 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.212155579 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.081948865 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.081402755 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.216553766 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.157356018 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.083066016 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.393988278 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.02570271 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.120632631 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.094024008 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.089471808 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.082781777 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.290638496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.177187823 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.298636934 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.524319551 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.706860004 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.857758454 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.194918606 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.671743076 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.176766956 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.774159365 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.101950384 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.088551925 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.727572786 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.193754682 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.339228411 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.209734358 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.194922864 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.603277504 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.306734921 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.380080696 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.181795122 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.190682624 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.82140449 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.672643909 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.31820902 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.435911167 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.101420275 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.611101095 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.116975659 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.628891215 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.133656214 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.788476331 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.071749801 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.12958748 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.082206643 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.082776941 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.608403122 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.106152038 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.091902353 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.867074239 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.622993191 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.167371745 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.823937661 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.108455979 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.089317964 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.08160876 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.082553342 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.988624541 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.067505949 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.347657573 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.190973797 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.08355721 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.08176856 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.053388021 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.343585447 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.827856122 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.920982957 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.023943352 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.214453307 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.083207459 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.082713075 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.082819127 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.082672208 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.082304528 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.081946813 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.438631964 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.229753546 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.704298562 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.104778958 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.08829764 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.281324809 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.136494793 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.082396024 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.244110181 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.14094503 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.198996035 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.149720403 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.082371559 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.536241555 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.215551191 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.053151383 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.278863509 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.344882175 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.309053522 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.580540749 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.100814471 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.567329357 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.384147525 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.909175794 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.091467168 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.001980382 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.094340256 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.81675213 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.054892198 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.450286074 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.686643344 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.127087521 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.337859596 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.965907274 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.469972071 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.265846929 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.138679383 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.081853543 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.082103981 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.118810623 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.319538238 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.129405585 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.34363684 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.261757434 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.063519247 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.284248227 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.165998669 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.265350017 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.098160438 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.097705504 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.08272193 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.081717474 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.513139299 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.912941052 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.14747906 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.083791124 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.995037964 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.84479671 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.96912426 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.715758128 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.063649298 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213217049 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.083469582 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.28928422 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.135314376 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.684880172 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232456913 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.864892128 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.405679468 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.13033019 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.231775179 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.452838061 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.830208307 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.431873368 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.185512942 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.083618482 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.408850896 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.061692115 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.218637337 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.016854207 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.406346742 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.632472999 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.581368427 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.371458955 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.185878279 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.982465073 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.584505923 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.128649798 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.092360026 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.919523662 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.21815271 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.35930038 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.004851532 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.343004054 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.216281815 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.726789302 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.700536041 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.214488595 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.679343288 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.216503625 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.082254275 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.661803536 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.124009706 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.143950925 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.189271372 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.083686424 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.100499878 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.735204143 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.717881604 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.243528748 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.146686837 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.082609241 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.683739863 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.921188123 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.103964574 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.08992997 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.083213336 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.477269492 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.100182364 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.082779744 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.539373155 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.741457461 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.21521446 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.574040686 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.244922166 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.218155405 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.332888739 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.466130775 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.265798711 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.144410838 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.08366879 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.08274363 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.083061589 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.478166265 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224852705 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.084331611 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.672512282 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.216339038 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.857794152 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.033555138 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.282146332 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.141311471 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.550387913 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.217469357 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.588026785 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.011815703 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.093878856 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.361088204 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.191166503 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.169188232 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.779270248 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.174308766 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.084255958 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.018261946 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.342866746 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.378178521 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.478255492 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.323035675 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.158038905 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.713780196 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.181220912 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.690550152 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.228981207 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.083274881 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.565449786 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.251553063 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.483154138 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.216350565 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.496603167 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.18626107 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.407698478 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.375477693 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.174326973 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.083931715 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.082719454 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.059156146 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.096339418 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.575164805 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.062084698 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.506101788 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.199574264 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.933445884 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.663233558 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.696867361 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.38216139 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.290729666 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.484317536 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.099554462 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.043392051 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.39169299 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.141006849 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.256330847 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.176475316 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.829211867 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.131518965 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.083180651 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.479258294 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.224095633 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.083162623 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.083988945 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.990446845 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.742140256 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.175378037 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.27265795 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.167413724 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.083397303 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.669237763 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.359059577 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.122936452 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.083299196 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.083087626 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.917150961 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.179497388 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.083666007 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.40402735 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.218612435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.358599149 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.892189332 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.529876623 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.17355364 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.083584105 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.08313318 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.811748254 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.498133013 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24516814 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.412465434 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.172156579 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.589240645 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.115915665 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.525109749 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.652479041 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.030540165 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.192597305 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.083682289 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.111939133 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.817770937 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.158075741 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.833339922 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.402301757 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.161431057 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.815871842 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.051280507 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.134184427 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.205977849 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.130597621 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.083787739 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.083519076 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.082730889 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.567929447 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.123700167 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.093034788 seconds)
  done (took 1409.362009398 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.372810566 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.083796742 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.083658992 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.083656201 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.0836314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.083444455 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.08370526 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.083073458 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.083229804 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.083444929 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.083449738 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.083585871 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.083683834 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.384305229 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.083884177 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.084799106 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.083230394 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.083449258 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.083309207 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.083361316 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.083132296 seconds)
  done (took 24.413456839 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.082371918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.083363021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.083315603 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.083092906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.083521228 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.083055363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.083425462 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.082871168 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.082969254 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.083652113 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.082879329 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.083320815 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.083643881 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.083742468 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.083400228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.083579337 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.083300508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.083105959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.083085133 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.083998818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.082657566 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.083418717 seconds)
  done (took 24.900425464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.08283793 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.083289833 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.803568926 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.192805081 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.083780985 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.083630127 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.082997944 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.289122749 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.095801645 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.957802795 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.418708274 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.174009183 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.093100481 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.271749985 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.176751613 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.084055099 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.209192414 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.084416059 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.083495356 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.083610158 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.083918187 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.29662281 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.202976271 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.083888641 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.919443179 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.219824486 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.083695218 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.082899586 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.082886679 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.051980213 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.090485699 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.090845931 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.903872007 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.792627805 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.399014091 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.965195755 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.103222795 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.090238824 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.083557183 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.08325495 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.278181642 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.91045828 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.093398976 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.083558417 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.370901749 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.18677502 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.083192294 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.421211917 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.173572158 seconds)
  done (took 86.816165886 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.090421388 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.217893387 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.143631975 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.08339193 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.212335643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.083222727 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.144222845 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.083354689 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.083873003 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.083315445 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.224317339 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.23981816 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.08350945 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.083142714 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.175455576 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.08322762 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.083448398 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.08336598 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.083493174 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.083190554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.083303263 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.133857519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.208521337 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.241001403 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.083133935 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.08374127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.083401893 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.082607205 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.233836795 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.083474074 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.083443223 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.083087778 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.219803802 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.193560768 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.083239572 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.083033009 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.216843184 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.083337703 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.082767771 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.083392266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.083111404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.082566976 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.136201298 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222860338 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.083351022 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.184957259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.083587301 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.08344637 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.230553219 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.083358762 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.083266699 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.251080295 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.083184222 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.083596012 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.083596854 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214496529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.084348953 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.083643198 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.083073018 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.227406905 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.083765896 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.083107805 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.239731158 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.082777157 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.083594129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.251273649 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.184652156 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.083251063 seconds)
  done (took 77.694571069 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.083124966 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.219862708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258116513 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259905856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220746544 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.200750778 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222911302 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.219490682 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.22004545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222464682 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220325716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.181411757 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.190734783 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.180234487 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.223225151 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.200940618 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215756402 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227672439 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236119069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253567578 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259342011 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.3074979 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.266895178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310897534 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.478934169 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.190244067 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220275105 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.224777681 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262122988 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.219740615 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.454925265 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.222497054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220620216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262486394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.452191846 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216846164 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.08403105 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219902494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.228159974 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219851522 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.190017619 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26178939 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22130259 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.190563776 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211136461 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.221126453 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260019237 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.454295334 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.179966242 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223925693 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.21999536 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26096955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216701898 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200670124 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260536731 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.185017607 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258252888 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261960476 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223803097 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258781423 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259732247 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.181870929 seconds)
  done (took 77.85279512 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.083702993 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.083202099 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.168165569 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.083487144 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.083261631 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.169651995 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.08353555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.082679784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.083051904 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.084267034 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.083829059 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168504083 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.444114313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.084128543 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.168850633 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.441676648 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168511219 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.169179116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.083564327 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.168861939 seconds)
  done (took 26.055817783 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.083235225 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.083498265 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.08452511 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240572457 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.083903761 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219344861 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.083558176 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.083340065 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.084042318 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.083364065 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.083232434 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.083474057 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.084434615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239612369 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.083506762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219440488 seconds)
  done (took 18.992664727 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.084043917 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.083695747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.083737684 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.08334252 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.084290843 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.084549133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.084274308 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.083754591 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.084330147 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.541226582 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.084185384 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.083303571 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.083318941 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.083585735 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.083902846 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.083980505 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.084325469 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.084432729 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.083724007 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.083732381 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.655938274 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.084221601 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.08342468 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.083906056 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.084139122 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.660978016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.084253357 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.084163363 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.084449822 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.084102886 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.084257492 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.557340649 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.084322713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.084616835 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.084006128 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.084430565 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.083898816 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.083420893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.083278575 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.083725063 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.084097414 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.084377531 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.083750202 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.083679159 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.084270955 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.083426021 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.084300528 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.538598914 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.084370593 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.083887075 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.083944045 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.083493745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.084036671 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.560283258 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.084439946 seconds)
  done (took 63.700477892 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.122565485 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.143061594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.084591292 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.083903396 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.137537505 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.126567278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.125945568 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.099011664 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.126561755 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.08380141 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.146912046 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.098565157 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.126591929 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.137848602 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.147976084 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.128435032 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.084436831 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.161478293 seconds)
  done (took 21.23559639 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.084588887 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.084132082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.083698357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.084198532 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.084466667 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.084174447 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.084498361 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.083526794 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.083722742 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.084058164 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.084669486 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.083968957 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.083972887 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.083551005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.08442406 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.084632536 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.083943825 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.083418428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.084426203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.084570883 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.08489807 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.084021666 seconds)
  done (took 24.921405533 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.115216646 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.132391387 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.084772581 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.084455789 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.084302983 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.106628024 seconds)
  done (took 7.676968923 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1364322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.14945912 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.12022543 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.137492674 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.149173147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16824742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163558155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171704025 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.149897297 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391855905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167977642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16122033 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.153330576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21636531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.146483203 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.154701837 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176537914 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173182217 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130217848 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166853361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173959929 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.152514862 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180503212 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167904675 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17598086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215364993 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.152670503 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40214049 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163196298 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.15295032 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.149089478 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185859453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156728615 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399403778 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.134085294 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.153943686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169879042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169531616 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.148314023 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209951756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.129945544 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1497395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.155549401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178871091 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.153255391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174124821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179600222 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180022509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.183929334 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399870678 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.153083698 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20931104 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.149490353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.158879508 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.152824428 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390764694 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406062967 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207645803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.152881609 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390371482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211810627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.149266941 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20962643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400882529 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147740268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211602462 seconds)
  done (took 79.878466563 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210426198 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.124048535 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174038476 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401065966 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210229037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174574429 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171353573 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17584769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.174408767 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.146965959 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17061175 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170216615 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210432459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215535987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174227026 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167617052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170207736 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209737827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.15274448 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392142206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170173299 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210676986 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212645101 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21087767 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386995767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.151840751 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.174196492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168722593 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166402242 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167706086 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177396744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174133383 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212438181 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.123477938 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210084662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174369661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168437405 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176808385 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169278443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.155790367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215043789 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170066404 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16780691 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.167910134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399938378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176091627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174860785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.153228485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172168478 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.152408605 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399769038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387456808 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403297225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210540195 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17258112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.169046461 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17075373 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.173459902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174305359 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.158711461 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209589824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168499143 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395719469 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170286476 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173966469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209849851 seconds)
  done (took 80.528212224 seconds)
done (took 2364.454488507 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.09499246 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.23256968 seconds)
  done (took 13.396387945 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.084319466 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.086263464 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.236527938 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.085915906 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.080848993 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.200690815 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.16194434 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.094726546 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.084745351 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.169400455 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.085947811 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.217684259 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.186919232 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.085072717 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.099668327 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.09598554 seconds)
  done (took 39.14413793 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.142684796 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.620032471 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.003873769 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.828056657 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.111435996 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.792990688 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.366525642 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.722820497 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.385693021 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.534749961 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.342032523 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.874122441 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.811880393 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.174435457 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.509256422 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.550182518 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.636215141 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.699854688 seconds)
  done (took 59.177276081 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.072223644 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.228026606 seconds)
  done (took 8.386814997 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.105378476 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.108781739 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.111399523 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.083833428 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.115129996 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.114464499 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.120669438 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.119182224 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.089176724 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.091053397 seconds)
  done (took 62.14826388 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.243205668 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.683680985 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.529357879 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.693693573 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.723077955 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.566969441 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.260038414 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423019533 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.176677271 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.07340204 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.313160187 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.571300586 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.935824751 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.371761691 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.701677928 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.546971758 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.735406173 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444092103 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.405632546 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.607356572 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.295279835 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.17935152 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.503191755 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.897880999 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.084859347 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.721975779 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.201150513 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.20368746 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.156524152 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.249602641 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.411200407 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.100741976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.361504823 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.090871298 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.264438267 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.607328418 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.800554322 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.279924764 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.453935475 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.414835733 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.477388931 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.766619714 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.149669066 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.74374013 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.241964251 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.484272759 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.064768373 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.30303757 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.168690006 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.196581074 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.667785482 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.25618521 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.222031214 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.198274256 seconds)
  done (took 153.309041135 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.073003617 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.47345643 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.252423091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.075810675 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.471480346 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.290103466 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.591503376 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.539942055 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.088084872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.283733685 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.253360893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.209006305 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.075850521 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.077710993 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.073577801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.075495061 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.265291102 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.557791469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.090365971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.073768645 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.280815817 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.316385987 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.208613243 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.076187857 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.242449731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.326537237 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.483956663 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.210010847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.487988372 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.073946208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.515495892 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.089691905 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.075375911 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.966520082 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.471030302 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.425508679 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.506396878 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.082485757 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.809724812 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.075662676 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.761225003 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.281997037 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.413116362 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.226273522 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.23439521 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.313562571 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.692493917 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.073504432 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.859429152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.250161601 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.299492867 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.294160514 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.357313245 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.080837607 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.705960583 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.075915802 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.074305498 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.367060635 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.227193187 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.224900799 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.077299462 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.075504022 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.074982579 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.323823488 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.076092575 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.19453904 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.075677614 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.07835123 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.197854411 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.209075697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.22696195 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.323558399 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.3297099 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.009555835 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.413000515 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.312371646 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.491035109 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.343236707 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.076276017 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.074610771 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.535905271 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.547228287 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.240957798 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.323534282 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.391287311 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.368806213 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.612118521 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.074441512 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.294405261 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.238782973 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.311345385 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.233028733 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.443562149 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.985934131 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.074283165 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.075754477 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.14798087 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.21390461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.076954121 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584606603 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.346143333 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.702104529 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.251186504 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.539285917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.18681105 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.077149548 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.647123666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.074406096 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.299613745 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.370101063 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.083387449 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.07613462 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.23258446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.847316183 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.074644563 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.091634506 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.491983233 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.088027697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.235427805 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.076598146 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.335963012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.91571889 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.312608773 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.076287664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353146457 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.263525576 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.233220155 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.076732798 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.463087528 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.348639515 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.48424256 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.308961719 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 5.651777509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.077114629 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.385340908 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.076300112 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.074343593 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.256056427 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.757043996 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.25280871 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.077672802 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.347018354 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.243412813 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.456882241 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.076815427 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.316346002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.330244634 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.445671522 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.076543371 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.218110475 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.074772036 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.02578836 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.245949826 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.075383313 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.07484265 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.943742177 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.077473501 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.226842341 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.311836183 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780596199 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.451946058 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.412634356 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.073220018 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.492314554 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.277847001 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.529289018 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.615916486 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.252475543 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.077344805 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.074402566 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.074609674 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.321926402 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.262089334 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.075268938 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.076229234 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.792132688 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 3.999634471 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.075130921 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.268427335 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.868341805 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.291169786 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.293469118 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.075536057 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.440377467 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.077067769 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.287051713 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.578967792 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.2186789 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.075112357 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.074567918 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.075365371 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.07580755 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.290405453 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.328617633 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.632628862 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.230182546 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.381431115 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.299825966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.397573611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.548815714 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.08572266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.340983765 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.076224048 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.471107329 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.082670371 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.273247353 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.333520211 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.080077037 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.390557286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.434915984 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.157571972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.470735339 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.077988258 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.075593861 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.075243901 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.252987554 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.53974091 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.075344828 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.184684025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.441329534 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.205018291 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.276801159 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.109642314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.080705049 seconds)
  done (took 719.523214223 seconds)
done (took 1056.15772764 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.073476203 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.076641537 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.081837109 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.081294142 seconds)
  done (took 25.383542447 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.064737139 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.158980695 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.257285425 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.086692235 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.44703107 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.141447999 seconds)
  done (took 11.234521052 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.579360812 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.078937032 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.081492239 seconds)
  done (took 17.810955588 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.352531354 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.518666299 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.252565389 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.175497293 seconds)
  done (took 6.378815641 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.086870296 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.088131357 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.087795262 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.085920988 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.086132651 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.088057766 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.086093173 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.086072442 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.08579621 seconds)
  done (took 10.856448839 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.834872229 seconds)
done (took 77.573891669 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.492027762 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.385265497 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.087320671 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.369589156 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.213935948 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.394181157 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.203066692 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.105647137 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.425240944 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.509209352 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.59444155 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.235455824 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.427408982 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.547736278 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.319267014 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.112018784 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.102313794 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.14740623 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.59941903 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.296893022 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.089651086 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.220798501 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.8423076 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.116404983 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.960192846 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.204405698 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.334414971 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.18110479 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.199581484 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.109771767 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.177250344 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.653544284 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.295881297 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.381165819 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.181616534 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.937910694 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.598336571 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.087617393 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.36392485 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.634793828 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.347223228 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.164184029 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.073791724 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.438347726 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.494457393 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.104172496 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 1.987098659 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.248866404 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.594395665 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.277229191 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.460258059 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.088946337 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.770117005 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.1617406 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.168611599 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.216829732 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.034341813 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.60390518 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.298332128 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.397994659 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.102742771 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.073926612 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.112977376 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.114507494 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.517112436 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.369571362 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.498451645 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.173209063 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.694704744 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.112632511 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.102299673 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.117304066 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.77431262 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.215740639 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.07418911 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.195838766 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.377228927 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.259677069 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.086597861 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.624283827 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.312403145 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.076859198 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.353126028 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.435656575 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.249194541 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.411593922 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.589605373 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.465132036 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.609874173 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.311705516 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.863823185 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.213479777 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.167593187 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.088503075 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.209932794 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.780056194 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.166754259 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.597568586 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.220706208 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.793511108 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.116962596 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.102545147 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.491782211 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.443312653 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.865889551 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.123964366 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.222161328 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.075153505 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.346998942 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.187068475 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.181964047 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.660157779 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.0883794 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.148283218 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.626100602 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.08565792 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.395028277 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.515882115 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.160052457 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.08685272 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.405111628 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.089232809 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.208036812 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.641330233 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.480971243 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.285507326 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.078311551 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.182297245 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.087789138 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.335531478 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.090890295 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.746868973 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.674570627 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.11983123 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.336922859 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.210536507 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.07426802 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.368641944 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.137630579 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.221735052 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.425527731 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.39196224 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.207738001 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.074588037 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.464552744 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.086394995 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.327132251 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.408679881 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.248369511 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.397370099 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.168728319 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.09860517 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.113059075 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.531999183 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.744908785 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.830004349 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.353181457 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.218323731 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.627592589 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.403831791 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.876163691 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.190589686 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.137154905 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.087422295 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.10247988 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.147668595 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.074248025 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.085623476 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.401915604 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.298826014 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.73603527 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.877273185 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.813535284 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.377790649 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.238890468 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.031884782 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.751251701 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.149175663 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.44008967 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.577155707 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.201629669 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.115611409 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.078312914 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.163451841 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.791106418 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.126242171 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.420577859 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.627282845 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.384720214 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.522882838 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.321338737 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.126047374 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.461846967 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.341425673 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.366512628 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.346029121 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.633794805 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.206480024 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.422920935 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.164009254 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.367743798 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.086295769 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.967302563 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.28845935 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.565430894 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.455417993 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.312266063 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.311896993 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.421243518 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.087216756 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.604377611 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.178829344 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.427862156 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.116131505 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.583277728 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.177594417 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.387367261 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.038873422 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.215057967 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.359388354 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.189519855 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.251117012 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.630138047 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.099485869 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.389126552 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.307640313 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.294274561 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.285382497 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.11955679 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.228279821 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.270790164 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.22520353 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.338999224 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.08956069 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.476556557 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.927709442 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.209697941 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.07471616 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.458118917 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.119515305 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.096465318 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.419746855 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.259415111 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.401622809 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.228784467 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.249073841 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.075066675 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.237734881 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.649995226 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.979365893 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.672700497 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.146012017 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.116731096 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.191919335 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.504211867 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.505003128 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.151505729 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.223198765 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.746932538 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.125331818 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.257033278 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.090182143 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.089942076 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.751989903 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.216164309 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.330764719 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.716880923 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.088817484 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.086656632 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.090904372 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.660506527 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.609200467 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.138011336 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.207942865 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.611172136 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.181494996 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.468601798 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.115646033 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.230567029 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.462294918 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.205066432 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.202090283 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.077547878 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.127710264 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.655019422 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.360253642 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.606706594 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.123594854 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.457950359 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.384562814 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.302515875 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.101616232 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.169779243 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.503122278 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.212541523 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.51367627 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.091092591 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.211532428 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.338131299 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.113431276 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.074855794 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.340067496 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.95293974 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.78210572 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.375799467 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.245172033 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.000082462 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.322416504 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.084779091 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.326562675 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.217038205 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.169169576 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.715561876 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.651213411 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.087946945 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.354453671 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.077472769 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.585911691 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.112506398 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.103132817 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.212288539 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.176779282 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.07495054 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.314270717 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.251485059 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.612003683 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.213248569 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.94696878 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.092720064 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.963446562 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.203932039 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.394902144 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.088027625 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.10199185 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.285521091 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.700116399 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.196890838 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.117205078 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.326289848 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.086384557 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.772043073 seconds)
  done (took 865.499811112 seconds)
done (took 866.739818795 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.122599715 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.457784098 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.282133162 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.958502149 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.915891685 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.725263299 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.301582034 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.313942928 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.158560663 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.301879473 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.01841967 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.880909064 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.174388118 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.196872305 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.17035415 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.181837949 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.292555756 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.321618471 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.198743438 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.024380917 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.446136588 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.02654065 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.498907908 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376533577 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.456317702 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.178162901 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.147178492 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.435474257 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.435523126 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.269797947 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.294467583 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.280676497 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.924007243 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.32132306 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.170855515 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.163762742 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.896220338 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.175045784 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.108470914 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.165174476 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.456056807 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.205643119 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.797433925 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.023278468 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.859907578 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.498597261 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.957320468 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.184476277 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.186734996 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.258998437 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.1111097 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.106686301 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.435363008 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.291379518 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.915267614 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.009728226 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.434603513 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.89877161 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.815838193 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.258650394 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.452681249 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.185891281 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.259436244 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.312807987 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.202957656 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.37852949 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.498947995 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.109100842 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.281349999 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.308100493 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.327695951 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.307384778 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.196459836 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.227255561 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.201975768 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.301804069 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.95043785 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.282205408 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.871743273 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.178321366 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.046782357 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.953834733 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.03430234 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.158127252 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.122977844 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876914847 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.173683555 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.044958393 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.201273907 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.281819914 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.008689032 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.282081169 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.53868408 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.14775882 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.122970366 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.282980926 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.185702359 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.105660095 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.247694327 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.281417664 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.865874652 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.146524879 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.074360017 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.159945512 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.185306244 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.107544035 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.147552634 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.499448251 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.307314369 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.252070664 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.454709247 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.201021978 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.306153293 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.196880139 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.157227358 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.859617807 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367353353 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.896918708 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.105281288 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.761225053 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.34451352 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.160530495 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.457628077 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376832838 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.122774704 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.179876395 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.185504746 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.033431139 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.184232192 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.186122122 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.264737762 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.565451595 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.259439639 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.963969011 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.308647831 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.767457307 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.320105034 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.307092966 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.15803085 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.927992626 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.179871253 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.231754424 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379125235 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.457069652 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.32118433 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.379158184 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.200785833 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.376209836 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.104622169 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.19902777 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.306986974 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.200737198 seconds)
done (took 237.966534643 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.452268573 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.270333325 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.374791586 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.302476589 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455431002 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.412123195 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.155060149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.527777403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.135752358 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.499655067 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.299848323 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.980720408 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.241337002 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.292644899 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442065652 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.314936624 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.135541162 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.328869064 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.541126294 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.454023467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.857584952 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.302900537 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.225937311 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.51493442 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.075718805 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.856475546 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.390547884 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.197643149 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.349007513 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.849026219 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.83833332 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.370669267 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.39349512 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.764063301 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.531530273 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.791845402 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.426133135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.903214685 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.334392353 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451624035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.279004487 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.050190813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.855172539 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.877774554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.186510612 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36396671 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.150474002 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.971535515 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.075675522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.801535208 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.345485375 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.888532379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.979052524 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356354124 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.291184863 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.801896498 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.479296431 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.473791921 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456794393 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.384357413 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3343711 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.499566481 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.455953214 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.212569132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.836207171 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.363770008 seconds)
  done (took 144.887455873 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.513443803 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.375075641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.487528123 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.48452793 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.647229017 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505382324 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.594248314 seconds)
  done (took 13.680416573 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.148297801 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.133161811 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375733056 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375764689 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.138196648 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.264045681 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.221901402 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.865834257 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.354611481 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.175003314 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.447835584 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377140504 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.747484326 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.874213705 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.221106275 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.372469745 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.113550617 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.199578759 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.193218242 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.390618323 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.870993503 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.809431928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.282491706 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.115272171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.137282797 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.175849112 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.130409931 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.105658991 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.130682881 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.116294875 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.145104526 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.246354426 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.129939368 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.832083179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.119324885 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.452340036 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.139659618 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.135235531 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.267116085 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.077503686 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.113332655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.13774213 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27230542 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.14254687 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.113352206 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.32231749 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.119686151 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.141973504 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.120389071 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.132584507 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.325845086 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.126502019 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.117791198 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.752302624 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.341202264 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.809408113 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.199805458 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.130316715 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.129449498 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.190992045 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.130513357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.393524171 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374768994 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.113134122 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375281086 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.415544286 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.127041658 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.117149161 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.119681067 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.352265486 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.127141327 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375401163 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.135221938 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.180161159 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.137962296 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.257862915 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.322695013 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.940858106 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.89974055 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.779739224 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.453933602 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.114422705 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.439297637 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.066683868 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.756730639 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.11388422 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.135718641 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.895388865 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.039330449 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.132116589 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.443234678 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.116585139 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.187912507 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.18035828 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.11318014 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.192452392 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.321981403 seconds)
  done (took 148.778617911 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.271420632 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.70452152 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356044037 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.146013294 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.253894971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.391129616 seconds)
  done (took 15.195776892 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.457142329 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.900991028 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.151579697 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.15139162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.186389924 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.088123353 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.087873101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.327645288 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.329519292 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.144130238 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.087779684 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.08786775 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.087228614 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.266776281 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.087592216 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.134405771 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.087965036 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.156349856 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.137248014 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.198605398 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.440287422 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.188111614 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.196079259 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.994374342 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.195878218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.14589712 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.844234177 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.135783019 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.132365872 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.450474852 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.323094788 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.088149535 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.933354054 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.529793676 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.823014272 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.994842099 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.327895521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.090889002 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.138255842 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.087734196 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.088731882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.197459467 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.146412038 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.088250097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.486482056 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.96599121 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.197141429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400193478 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.088839023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.088096085 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.088285367 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.153440594 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.088241344 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.087985117 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.595625089 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.566400588 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.089680308 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.091222125 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.186897376 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.004639436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.259815902 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.091204014 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.507573168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.083739196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.793633428 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.088158526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.998923842 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.314886971 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.199670752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.152271043 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.087758079 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.147359443 seconds)
  done (took 114.777671465 seconds)
done (took 438.395109391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.132489498 seconds)
  done (took 7.205050161 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.110550629 seconds)
  done (took 7.327014042 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.078326749 seconds)
  done (took 7.16424886 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.078654996 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.117606836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.093056772 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.110077967 seconds)
  done (took 25.506941941 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.277943028 seconds)
  done (took 7.354085109 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.076275477 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.096976877 seconds)
  done (took 13.353759458 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.191180341 seconds)
  done (took 7.28704862 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.494150754 seconds)
  done (took 7.592886471 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.097269735 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.089509277 seconds)
  done (took 13.30930472 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.07957892 seconds)
  done (took 7.152991037 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.370806239 seconds)
  done (took 8.538730015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.091177844 seconds)
  done (took 7.195604489 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.076044552 seconds)
  done (took 7.150161896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.280574901 seconds)
  done (took 7.354295679 seconds)
done (took 134.567727501 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.075775368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.081386261 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.080009354 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.080060762 seconds)
  done (took 25.39050468 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.412050674 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.413287906 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.389912055 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.463607718 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.355207649 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.355365572 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.411910757 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.411529482 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.35522775 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.459060575 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.412067671 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.562935885 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.463609317 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.389321826 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.389360325 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.457499675 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.464629082 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.412319013 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.355325066 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.389407056 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.455806006 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.463572129 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.82982471 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.822951826 seconds)
  done (took 35.973368189 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.296690016 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.532885777 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.243131752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416634615 seconds)
  done (took 6.562843711 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.122511125 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.466592474 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.444242041 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.503269915 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.444534102 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.259357826 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.444876563 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.296863625 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.236021128 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.227030644 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.712266713 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.238690818 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.251562562 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.50362476 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.259001771 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.088104031 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.087740456 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.226217136 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.46146572 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.334462261 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.349153265 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.445497165 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.444214974 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.445079402 seconds)
  done (took 33.367073711 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.846776133 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.015046529 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.447894871 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.092498456 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.79443429 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.879998423 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.367746128 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.596213079 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.354047413 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.330305773 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.827249298 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.787368696 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.232530207 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.975470508 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.848404166 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.265311419 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.265387377 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.937920832 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.504292714 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.387202626 seconds)
  done (took 37.830350898 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.075421667 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.334009265 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.324804109 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.253051738 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.076422352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.080234189 seconds)
  done (took 26.217945896 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.376270102 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.220633745 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37010268 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.340026064 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.243218061 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.208420344 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.630875267 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.300631096 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.841980801 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.778380971 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.520836695 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.505129658 seconds)
  done (took 21.414663045 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.076323652 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.116058745 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.083686885 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.30913697 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.110104733 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.745522595 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.092427387 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.076825249 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.587526587 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.337323747 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.224058971 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.313632292 seconds)
  done (took 43.164916859 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.288339982 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.242503238 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.433848121 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.134454693 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.623341807 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.173347859 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.440116387 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.044243135 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.904230334 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.961627966 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.623138416 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.142200968 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.612473597 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.051604019 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.819997394 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.371207568 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.89880891 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.112659654 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.528896831 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.16139386 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041266556 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.233900775 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.077376525 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.635737423 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409931637 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.077943776 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.31232031 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.326596052 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.076548046 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.330145818 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.077108387 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.569854646 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.276580894 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.388619858 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.630481416 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.180924418 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.178479422 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.72833019 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.677692717 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.375687108 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.227499776 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.242277444 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.076413413 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.083062841 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336504196 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.861957409 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.088665561 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.711027943 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.060366181 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.21939438 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.970373502 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.95971513 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.531763139 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.047932676 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.22263612 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.370520329 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.244612472 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.077340492 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.342861216 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.127944808 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.272775989 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.166586013 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.288707548 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.04927064 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.31537369 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.419201166 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.356494983 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.405013077 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.391154498 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.36669006 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.440405072 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.21962275 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.903252337 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.217520641 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.633642521 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.990560039 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.438201869 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.079209282 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.785897075 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.613343927 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.059588318 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.194986302 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.813284923 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04331264 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.077037304 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.252731256 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.950214569 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.049138698 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.173525123 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.149309388 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.498836221 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.217297431 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.233975167 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.272977321 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.784344439 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.090624626 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.079546734 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.374089691 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.047568484 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.63868117 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.077013285 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.067367574 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.078067687 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.638787067 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.510400713 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.88758742 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.849652554 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.710222656 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.385749039 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.675809731 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.243521881 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.076883433 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.439005588 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.407957735 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.07726239 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.833711233 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.07843866 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.155400148 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.43293339 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.077426453 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.049965585 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.487793717 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.278689489 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.077971504 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.316604728 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.079955961 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.229103702 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.077263427 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.676318709 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.505025062 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.323232716 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.612362664 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.192070705 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.16586026 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.046920887 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.225621227 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.606370383 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.172244203 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.423063757 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.52628358 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.317252428 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.530968446 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.072062392 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.927668644 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.563224838 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.352247433 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.416895093 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.78820293 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.26491292 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.172818654 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.076754142 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.259767305 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.092534077 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.636942208 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.077055145 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.838772745 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.063046708 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.377889512 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.077188824 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.238389052 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.078290752 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.284429085 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.765175172 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.136440826 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.24945797 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.356667783 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.244222361 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.078044704 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.048937265 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.468252694 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.375190997 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.618269965 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.341609516 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.760583961 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.426779021 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.574331199 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.311433844 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.444474583 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.85288205 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.32044192 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.444220292 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.823534636 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.103516112 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.109660752 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.16014687 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500584584 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.307120671 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.846658054 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.719314631 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.129686122 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.125196041 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.65690944 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.050330746 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.226003294 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.568281278 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.120383626 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.650398803 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.174951258 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.327145539 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363746498 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.110692977 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.417459134 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.94275673 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.507226251 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433503181 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.409583042 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.057643596 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.642577889 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.533080763 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.532063242 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.219713347 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.423586783 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.080599563 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.139581679 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.078068855 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.425206662 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.972435482 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.807287075 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.391417727 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.633883651 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.043586433 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.242841633 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.464249138 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.094464299 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.044254317 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.251673468 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.138750904 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.931733146 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.638084692 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.347362991 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.40725595 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.077211712 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.078920002 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.349531661 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.387266755 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.34738241 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.6093096 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.330436238 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.797358887 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.190586098 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.719599584 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.247619136 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.119361913 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.689542887 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.347798792 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.025756461 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.266862372 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.810274383 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.251221805 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.774506698 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.349778988 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.077685129 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.562230628 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.705426372 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.080276611 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.144672165 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.228674177 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.078735328 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.293029861 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838025267 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273352284 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.252654621 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.372410612 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.327591659 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.266102316 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.53344289 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.627408259 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.448252052 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.049895837 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.23890539 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.163335345 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.381435964 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.078423368 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.371733828 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.74979639 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.768253732 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.902785026 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.639317522 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.325372401 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.837928221 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.561728585 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.337326954 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.368782309 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.080103551 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756094434 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.063245383 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.219896944 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.049436124 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.908743795 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405516606 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.465017106 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.573016478 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.151669912 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.623760154 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.474466287 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.148157446 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.227875178 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.340083706 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.077702608 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.351932807 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.077759797 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.028319321 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.495761705 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.079931731 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.938058647 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.277191169 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411375901 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.23436095 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.689342924 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.121487595 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.207449947 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.524756646 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.257762596 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.218796719 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.423517593 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.954629725 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.122135866 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.149480013 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.271945425 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.717645443 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.564692255 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.708713393 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.69671486 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.464947355 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.849549976 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.079322851 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.313588904 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.243364362 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.07793956 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.269045208 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.508872469 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.121410242 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.291466502 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.433258449 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.28680809 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.637265421 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.05896105 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.767064516 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.238704669 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.598241582 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.628646858 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.859731536 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.560557658 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.122703706 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.642635321 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.059964081 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.249443207 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.42451872 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.81176705 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.1622312 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936696668 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.874072258 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.230829635 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.510355496 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.168446159 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.82789905 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.238088041 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.316318701 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.311066085 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.219053907 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.047004125 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.685166551 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.861229208 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.357599424 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.244115576 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.265788605 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.225659798 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.246124093 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.632653281 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.392236723 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.848187338 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.570243673 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.327521655 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.051724769 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.078585897 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.782962644 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.434772986 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.175454565 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.36811793 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.541030788 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.173260258 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.166431036 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.084628062 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.379697296 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.839268481 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.807651846 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.438039343 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.63581359 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.689935278 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.079132542 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.849968738 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.313256275 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.442242729 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.52986967 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.008985239 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.464268516 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.381999461 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.23600209 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.050379495 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.268598188 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.095434093 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.127020478 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.90981389 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.381497942 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.158148967 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.916671983 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.701478774 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.078951819 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.107745631 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.898210909 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.357072704 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.277181755 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.077386781 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.683565097 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.450846708 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.22568743 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.063561986 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.842535075 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.049226741 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.31271353 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.078513888 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.311398297 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.914197557 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.167862904 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.744854619 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.725793367 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.14006471 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.287803788 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.049952776 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.899283244 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.101842673 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.772050335 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.903644412 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.330553935 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.598986398 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.265900441 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.085690225 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.409431991 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.215964244 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.430384291 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.553676559 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.568312564 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.518725985 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.466169914 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382770684 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.582671406 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.223771816 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323867793 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.0483536 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.078390557 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.107412992 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.450808628 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.442906047 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.077508941 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.619397272 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329931342 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.221381467 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.246755034 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.165869424 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.649961885 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.289989329 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.216580216 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.241986498 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.313947031 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.441394498 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.079217027 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.291321585 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.101055354 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.093857326 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.314931026 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.328200008 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.436231823 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.388540386 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.97565462 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.23991016 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.830809919 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.780414226 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.611572848 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.080512185 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.962312772 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.423850656 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.079261208 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.567682624 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.721979184 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.26727168 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.355781531 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.151979648 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.097275199 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.259297563 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.599929888 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.082867798 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.722716841 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.473104992 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.078870379 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.571281848 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.161413444 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.245204941 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.85230731 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.578097178 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.0790851 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.911531114 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.200792383 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.636273427 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.354446851 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.085556431 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.092427879 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.673629112 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.058917571 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.123742249 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.154906194 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.615381245 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.085091629 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.652338885 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.244075556 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.240226399 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.0859703 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.220744957 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.079357917 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.312387342 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.271449177 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.325501251 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.356102939 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.265842391 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.087355718 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.660373022 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.809406628 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.190415787 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.272441003 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.10369946 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.441678246 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.93366605 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.08239168 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.640569918 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.249865812 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.248491924 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511187381 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341206342 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.11422696 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.288504214 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.078785112 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387746732 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.240994045 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.652818106 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.339212797 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.69486476 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.195734339 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.105818842 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.615614376 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.566468071 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.965526167 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.078224943 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.38924411 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.078434325 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.915063279 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.746364861 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.285059544 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.233824772 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.085434962 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.674416353 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.345573878 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.210927578 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.081048623 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.295117235 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.590102482 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.05163848 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913577156 seconds)
    (567/608) benchmarking "2d"...
    done (took 1.968195924 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.288479425 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.409181172 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.050666897 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.267300171 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.097396637 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.060976467 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.579117063 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.078695977 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.433601927 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.052039994 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.635935318 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.08917333 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.187822565 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.240073952 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.405684905 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.078715187 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.062255127 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.25486547 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.07830447 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.078215228 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.452996442 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.165992279 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.332553517 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.566836351 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.323220421 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.416624128 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.982374512 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.912608791 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.095519106 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.389913271 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.914480626 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.634364388 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.154311423 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.588809671 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.909761373 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.099122976 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.61741625 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.327663916 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.818374423 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.227180369 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.582439317 seconds)
  done (took 1937.328400143 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.148629253 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.183198034 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.138141193 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.131516372 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.138921038 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.154993608 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.128150335 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.121408236 seconds)
  done (took 50.220957386 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.079385758 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.121922 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.620728273 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.256599246 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.107280898 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.320170795 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.239190743 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.598256816 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.276431533 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.123840337 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.145205825 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.166788558 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.091900527 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.116868268 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.979260556 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.171254384 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.084505814 seconds)
  done (took 92.626589849 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.089417741 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.005664194 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.091913503 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.00044019 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.137826114 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.506046213 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.098957622 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.078742276 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.44065656 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.370990683 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.088468417 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.164537174 seconds)
  done (took 85.186187885 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.118873802 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.117273997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.118262872 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.118205338 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.117681312 seconds)
  done (took 6.666311316 seconds)
done (took 2403.053276431 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.30810322 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.614325831 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.649148361 seconds)
  done (took 4.338917111 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.154768704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.221595171 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.280988651 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.22788205 seconds)
  done (took 5.987609871 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.390514155 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.552916612 seconds)
  done (took 4.018563464 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.575744984 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.104368681 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.623255967 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.081735549 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.089312819 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.088792976 seconds)
  done (took 19.35332729 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.111175456 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.111613844 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.114595774 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.105762346 seconds)
  done (took 5.527233167 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.077988643 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.101651215 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.089323362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.06690906 seconds)
  done (took 18.411181436 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.36117228 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.347284393 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.840463413 seconds)
  done (took 5.638652609 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.902567372 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.215553048 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.8820887 seconds)
  done (took 6.076365208 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.034942009 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.015520503 seconds)
  done (took 5.125656926 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.264731425 seconds)
  done (took 2.340098199 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.572617211 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.570229966 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.956818703 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.977691153 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.108275945 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.393338435 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.444588852 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.362460345 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.796372546 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.674122494 seconds)
  done (took 17.933046759 seconds)
done (took 106.440477872 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.972181688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.495075903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.229402868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.271203341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.180349933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.229004817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.691017743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.057181038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389574907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394779065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.154476816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.180878089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.101451577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.48077254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.104454434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.44773866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.485890038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.98440197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.367315117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.970798304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.707092657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.671123585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.876680688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.685995302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.501038189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.240833802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.033431897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.462432367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.599375765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.049113968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.255049999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.209181067 seconds)
  done (took 152.555690055 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.078047805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.094058232 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.093846351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.090038894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.074792566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.09607541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.089000385 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.089198525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.796409055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.791793895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.094368142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.069954321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.094221513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.088839681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.096643998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.089912329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 4.926161463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.095417542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.095424931 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.094452537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.094970954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.942497739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.094761028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.950611946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 4.921252471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.094938912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.089903302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.09378817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.094058449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.09368578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.094075013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.089778407 seconds)
  done (took 186.785915353 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.077656527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.09439493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.093931346 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.089775702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.094567864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.094176884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.090741594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.08921492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.094002404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.09234419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.090071699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.093919098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.096110563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.089385569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.09826936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.090187002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.093832913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.09444555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.0931956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.092947367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.095166505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.089513215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.093528018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.093814626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.093940206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.094259737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.089589825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.094137953 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.092575243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.093511537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.09455475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.089765532 seconds)
  done (took 196.050485472 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.387221185 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.120697451 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.016320503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.65301921 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.979563897 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.111880801 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.651096871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.389673011 seconds)
  done (took 13.400519855 seconds)
done (took 549.886229349 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.762182 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.003191926 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.275290367 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.310500745 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.704515804 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388646509 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.305200097 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.51233143 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.841808902 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.501357843 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.555854132 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.305209187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.890034465 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.30508492 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.276735735 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542226392 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.515260701 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.803146593 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.300647012 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.974325151 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.313638449 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.943257833 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.555516921 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.894372541 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.561138576 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.989273972 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.261380914 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.518275954 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.290729205 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.301558319 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.144140889 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.523880141 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.341705451 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.336446546 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.590453099 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.555311203 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.480323753 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.526503405 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.269865325 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.745055759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.968256694 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.715669135 seconds)
  done (took 73.97749094 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.109028839 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.126835783 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.280276414 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.186474045 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.759850103 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.186983799 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.35611316 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.330942996 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.199815744 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.325679219 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.369040951 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.785767344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.372241393 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.767915164 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.346996695 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.375106174 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.193696785 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.735856215 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.351841034 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.330037036 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.154496943 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.282151197 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.152376021 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.314820558 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.145718518 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.160201502 seconds)
  done (took 35.805993259 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.159742135 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.30516699 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.355033241 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.201392535 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.350768705 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.138099499 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.456094099 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.235294851 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.841424491 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.253265398 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.218243025 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.262406648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.301210697 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.393230493 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.370332039 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.227883517 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.277513343 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.280082507 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.315208246 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.333129994 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.274340816 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.198499637 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.460687666 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.276689042 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.794159652 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.590963578 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.249785238 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.699397783 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.348806932 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.235443896 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.254023969 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.436890444 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.509743814 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.358390722 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.255116658 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.129822909 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.133346254 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.220877327 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.179814258 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.277087233 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.453777169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.504326695 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.405519013 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.662188706 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.383679218 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.280532848 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.586023427 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.233172872 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.256083821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.89302086 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.413778032 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.830718229 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.229781596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.304685658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.247392148 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.442955346 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.308864439 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.443351515 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.225011478 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.671378105 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.199793057 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.511454387 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.317604578 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.390016172 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.370420389 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.316311203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.292227602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.678911837 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.404592552 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.114564971 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.793999262 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.206512745 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.151067332 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.218898266 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.310370626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.618784956 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.113928107 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.362040702 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.526775029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.444786709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.35825404 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.709485132 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.150113117 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.66156835 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.147780148 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.121764952 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.208679321 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457730765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.437222109 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.611676767 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.675930984 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.465162915 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.424119666 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.336950225 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.748399616 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.486841766 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.119669412 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.134599487 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.343723555 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.677951177 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.202910617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.359208107 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.783449696 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.581925614 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.482943533 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.247378996 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.466887467 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.389742659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.476852688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.109276888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.352033997 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.199077462 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.455717332 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.394394874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.109602446 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.652235327 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.243466213 seconds)
  done (took 234.144021895 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.079613712 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.095211775 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.082222059 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.095619809 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.080057748 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.699204154 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.152823469 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.080030816 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.696402599 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.152429315 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.079795745 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.080082672 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.082473802 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.081326502 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.668606583 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.633556852 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.907487604 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.080811646 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.080413018 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.09073557 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.910114589 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.081881217 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.079289008 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.090607243 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.082957985 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.080410483 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.086817019 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.134560926 seconds)
  done (took 151.629556271 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.147198182 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.517581241 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.170164261 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.235873315 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.182966702 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.168037881 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.649794711 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.274345883 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.218267386 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.154694528 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.150685099 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.391575822 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.465650831 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.737361657 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.274878238 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.386354522 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.78799086 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.288359034 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.151498784 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.14471717 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.305711959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.508743117 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.414241054 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.404536336 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.289165957 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.438468669 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.267087611 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.14113094 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.257701373 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.624273159 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.162487779 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.510206489 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.29199309 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.149221605 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.64019392 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.49474788 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.722127641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.800648713 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.333043872 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.106485414 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.107426762 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.387269414 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.439089191 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.203111025 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.141161387 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.797464737 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.166493697 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.41147269 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.166589119 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.106716133 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.256910305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.262752429 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.39754176 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.113045603 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.327775942 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.321882983 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.742778309 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.127766609 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.207958691 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.446543333 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.123069469 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.621288068 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.631259516 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.197309996 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.15683847 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.29891973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.236340952 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.68006928 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.767890735 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.190176804 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.507774987 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.345411316 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.123134622 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.415301868 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.330553883 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.573922014 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.727782859 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.283986106 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.254013245 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.219015835 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.434956247 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.136228876 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.708099475 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.250479647 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.121991039 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.631772445 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.557497369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.121240565 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.140417512 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.257008351 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.307263776 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.365651549 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.410642491 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.220580705 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.071276698 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.397610188 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.425314227 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.157246347 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.27178744 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.137152913 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.542576967 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.333238128 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.128688594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.468303278 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.536181105 seconds)
  done (took 154.393706029 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.899219696 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.196122371 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.322045684 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.694611773 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.494539923 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.579357935 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.416896746 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.217410027 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.427137653 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.351445253 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.350223575 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.224064672 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.853603473 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.866131237 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.195778827 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.32933501 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.217889818 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.022622324 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.466590866 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.132876211 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.448447309 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.02383758 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.457727577 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.551656636 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.560700487 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.640845084 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.793429734 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.252100287 seconds)
  done (took 48.077452091 seconds)
done (took 699.107134894 seconds)
SAVING RESULT...
DONE!
