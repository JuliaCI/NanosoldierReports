cset: moving following pidspec: 3720112
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.861973342 seconds)
loading group "string"... done (took 0.30038476 seconds)
loading group "linalg"... done (took 4.322416292 seconds)
loading group "parallel"... done (took 0.023322032 seconds)
loading group "find"... done (took 1.412100947 seconds)
loading group "tuple"... done (took 0.960971345 seconds)
loading group "dates"... done (took 0.261591827 seconds)
loading group "micro"... done (took 0.065229863 seconds)
loading group "io"... done (took 1.433447072 seconds)
loading group "frontend"... done (took 0.011647808 seconds)
loading group "scalar"... done (took 5.202663106 seconds)
loading group "sparse"... done (took 3.855780069 seconds)
loading group "alloc"... done (took 0.0174562 seconds)
loading group "broadcast"... done (took 0.398467061 seconds)
loading group "union"... done (took 3.791801473 seconds)
loading group "simd"... done (took 3.115065914 seconds)
loading group "random"... done (took 3.997916674 seconds)
loading group "inference"... done (took 1.993615826 seconds)
loading group "problem"... done (took 1.091860978 seconds)
loading group "array"... done (took 4.882181141 seconds)
loading group "misc"... done (took 1.051799419 seconds)
loading group "sort"... done (took 0.761173873 seconds)
loading group "collection"... done (took 6.345597247 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/17) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.447645074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.102048736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.078797256 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.073337244 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.13776063 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.077570874 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.092860608 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.051190867 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.569022229 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.066186507 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.172540729 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417633389 seconds)
done (took 4.055983308 seconds)
(2/17) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.189362714 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.025248933 seconds)
    (2/2) benchmarking "String"...
    done (took 0.025092039 seconds)
  done (took 0.762262851 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.022634437 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021830678 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022122755 seconds)
  done (took 0.764640442 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021324837 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162017686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023967425 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024165628 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024128981 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023797718 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023752779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023639219 seconds)
  done (took 1.003438321 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.041498444 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0240503 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020763659 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020968698 seconds)
  done (took 0.80606761 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021549948 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.051652439 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.02003692 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019893963 seconds)
  done (took 0.810853006 seconds)
done (took 5.138546872 seconds)
(3/17) benchmarking "parallel"...
done (took 0.6965137 seconds)
(4/17) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.092182323 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049574257 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019846195 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079108765 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.020146782 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.078991498 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.084193345 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.080262071 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.020088192 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.020146629 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.020192949 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.080895736 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.080896271 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.020121337 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078813772 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.082435118 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.020032671 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019624333 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.019846112 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.019921649 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.019954336 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.027372407 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.019894629 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.020115858 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077962444 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.020039749 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019667676 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078126325 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.019861971 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.07840655 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.020018139 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.020065659 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.019985291 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078144331 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.019773428 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078262669 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.027336988 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.019851848 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.019894011 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.019858259 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.01993903 seconds)
  done (took 2.443369186 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.039121021 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.04003465 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.059447617 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018781999 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029588351 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039862527 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018675856 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.067502921 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.060427905 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039559655 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039547814 seconds)
  done (took 1.161840933 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.037841515 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039758622 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.068103707 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018701741 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030037989 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039678995 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018562174 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039524035 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.06863478 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039518493 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039779751 seconds)
  done (took 1.146931438 seconds)
done (took 5.447515817 seconds)
(5/17) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.046556447 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.021131241 seconds)
  done (took 0.771645021 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.364062817 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.124048964 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.028196769 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.083300565 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.022710758 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.038118083 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.607367955 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.037628019 seconds)
  done (took 6.051251301 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.07332756 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.022803362 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023371774 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.020792805 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.020857059 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.02099282 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.021900067 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.021053258 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.020508363 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.022239581 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.022070456 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.020195025 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.02267235 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.021813757 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.020420301 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.020470268 seconds)
  done (took 1.156452723 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.022428828 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.024052333 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.022026523 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.020332966 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.022838887 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.022168339 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.023661403 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.023662817 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.022520466 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.022930482 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.021631143 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.025664105 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.023229285 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.02195368 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.025672569 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.020492249 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.023268061 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.022142212 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.023240387 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.022930593 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.022145986 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.021722991 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.026182737 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.023132498 seconds)
  done (took 1.26977243 seconds)
done (took 9.954878694 seconds)
(6/17) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.141405867 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.019804665 seconds)
  done (took 0.873457494 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.034742016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.03215716 seconds)
  done (took 0.782588311 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.033879955 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.020315287 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.036352257 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.031027294 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.020715858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.020562144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.033669278 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.020785385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.020715114 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.020834311 seconds)
  done (took 0.974523306 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.021897859 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022032712 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.022192191 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.020416835 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.022815367 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.021507135 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.022536872 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.021616249 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.026780372 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.020561513 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.023743346 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.030979446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.020128712 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.030476423 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.022387946 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.021230073 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.025142814 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.020157458 seconds)
  done (took 1.133648268 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.019925809 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.020780824 seconds)
  done (took 0.757469831 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.019143775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.021015383 seconds)
    (3/7) benchmarking "month"...
    done (took 0.019156475 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018918273 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.020956119 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.020181111 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.020991615 seconds)
  done (took 0.857322885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.508080648 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.103481094 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317154026 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.019945399 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.020465509 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.280933566 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020024257 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0198479 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.019811319 seconds)
  done (took 2.026489785 seconds)
done (took 8.11958786 seconds)
(7/17) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.042381081 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.154619962 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.038180648 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.491024206 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.041933608 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.023458514 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.089475824 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.13825998 seconds)
done (took 1.744503477 seconds)
(8/17) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.164651283 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317459007 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.047185451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.030122322 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.024514195 seconds)
  done (took 1.146069872 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02044132 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028371257 seconds)
  done (took 0.772850512 seconds)
done (took 2.809971708 seconds)
(9/17) benchmarking "frontend"...
  (1/1) benchmarking "nestedscopes"...
  done (took 0.022510969 seconds)
done (took 0.74562504 seconds)
(10/17) benchmarking "alloc"...
  (1/4) benchmarking "strings"...
  done (took 0.088830699 seconds)
  (2/4) benchmarking "arrays"...
  done (took 0.054558701 seconds)
  (3/4) benchmarking "structs"...
  done (took 0.05992522 seconds)
  (4/4) benchmarking "grow_array"...
  done (took 0.029413593 seconds)
done (took 0.958221998 seconds)
(11/17) benchmarking "broadcast"...
  (1/3) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.068875686 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019531049 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.041492537 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.04853304 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019632871 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.032487671 seconds)
  done (took 0.995263655 seconds)
  (2/3) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.040330296 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.032324207 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.024465554 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.036206858 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.026297433 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.020716429 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.098159568 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.021099152 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.030099023 seconds)
  done (took 1.101145351 seconds)
  (3/3) benchmarking "26942"...
  done (took 0.065955615 seconds)
done (took 2.88999697 seconds)
(12/17) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090757068 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.05016413 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.047719038 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.03028985 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.03344921 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033476913 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.023603746 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.032197542 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.024108605 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.034936143 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.04798749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.040049603 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.037097896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040012486 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020045491 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.029294116 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.021756437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.036066398 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.032188951 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045695337 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.049483521 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.022978693 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.022873072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.035230302 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.025676688 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.033970645 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.045504181 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021476373 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.034589379 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.028926973 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.045868346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.02314503 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.02025026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.031483378 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.029696926 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.023863615 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.019979649 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.021111514 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.02768728 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.024691266 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.048104328 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.032028231 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.025021654 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.020289799 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021115466 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.031946634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021617823 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.018841542 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.025643491 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.021585039 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.022927989 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.023747342 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022733983 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.030839052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.022827006 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.019798608 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.018771157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019680795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020517068 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020086218 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.024444236 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022906697 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.022777894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.023672345 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.020870957 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.019006637 seconds)
  done (took 2.691026034 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.047947952 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.074582862 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033721215 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.033452639 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019930131 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020980902 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.02098349 seconds)
  done (took 0.990901645 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.078527466 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.024161001 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.032949708 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.033169244 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.035326149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.025092313 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.031097926 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.042690999 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.053912379 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.037831162 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.043180599 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.033466184 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.03028265 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.023651172 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.044712711 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.034855785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.031057893 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.025444555 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0340037 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.033867963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.018916249 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.046159388 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.032612369 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021870435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.031187809 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.024017405 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.023481316 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.060778654 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022654281 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021048325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020786179 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.047678547 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.023377976 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.022870654 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.020600473 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019822074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.022053425 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.020499013 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.021551702 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.023897611 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.021101529 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023606418 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023283579 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021535644 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021674293 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.020872434 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.02168181 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020750471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.02093262 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.023556307 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.031512704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.023203525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.024971416 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.02954678 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.029614939 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.023274792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.025294401 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021744743 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.023939125 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030694548 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022662227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.032964096 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.031940761 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.020938071 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.032097039 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029207272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.023027456 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.021076211 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020820777 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028344131 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021670969 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.034605686 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.023475587 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.022658759 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.018916256 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028955849 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.031399148 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.031545093 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.031344072 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.028688817 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.021289503 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.020804467 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.029669136 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.030048275 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.021331563 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020619527 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.020490715 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.038854395 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.043586362 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023137991 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.02394019 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.020871108 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.030455334 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.022823184 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.024938541 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.033613272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.019182901 seconds)
  done (took 3.478836489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.045183526 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021518127 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021293943 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.019565532 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.01982154 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.033948496 seconds)
  done (took 0.992473993 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.063980988 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.019751642 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.01961523 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.019295877 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.036993385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.02181521 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.021776015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.020378071 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.033438859 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.029619093 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.02170936 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.023152856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.022295671 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.01991593 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.021820086 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.029259913 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.021982288 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.022167816 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.029206384 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.019866646 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.02568284 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.019854789 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.01982349 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.025975637 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.021452444 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.029263015 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025396337 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.029297567 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.029050243 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.020354382 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.02000112 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.021454358 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.025386015 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.020231813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.021627207 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.02541956 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.019134731 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.022771368 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.021459649 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.021449316 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.023126043 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.02007436 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.021026702 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.022465526 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.02025326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.025369405 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.022714949 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.025676234 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.021733144 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.022773367 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.022875245 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.019063307 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.021328943 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.022631965 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.025290885 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02031995 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.022741638 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.021736642 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.019837104 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.025320042 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.019219478 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.021218464 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.020194251 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.021270437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.021543391 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.022531411 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.025029193 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.01982533 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.019745697 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.019166386 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.022579744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.019017373 seconds)
  done (took 2.467520763 seconds)
done (took 11.351545583 seconds)
(13/17) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 5.691465518 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.07081737 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.233987143 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.049810663 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 0.412581953 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 1.036751733 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.031246321 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.075759829 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.088454601 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.037987717 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.037371012 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.136661374 seconds)
  done (took 8.649488537 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 6.187083125 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.119714084 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.324119312 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.170315792 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.553169007 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.180249906 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.063011111 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.321196602 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.363593325 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.062229566 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.060921362 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.473873881 seconds)
  done (took 10.695228124 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 0.467938584 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.121483132 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.363316981 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.171270287 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.530538749 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.06526255 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.061183315 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.297221602 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.187011264 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.055312368 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.054262776 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.543893591 seconds)
  done (took 4.707209876 seconds)
done (took 24.801199279 seconds)
(14/17) benchmarking "problem"...
  (1/13) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.597367708 seconds)
  done (took 1.376608483 seconds)
  (2/13) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.177095595 seconds)
  done (took 1.969272808 seconds)
  (3/13) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.060425519 seconds)
  done (took 0.862434283 seconds)
  (4/13) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.685219615 seconds)
  done (took 1.468429653 seconds)
  (5/13) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249193189 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20894397 seconds)
  done (took 1.261176616 seconds)
  (6/13) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.665860213 seconds)
  done (took 1.454912155 seconds)
  (7/13) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.213795716 seconds)
  done (took 2.014287306 seconds)
  (8/13) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.187250541 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.12299785 seconds)
  done (took 1.108684179 seconds)
  (9/13) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458213918 seconds)
  done (took 1.255502776 seconds)
  (10/13) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.540232276 seconds)
  done (took 4.3401315 seconds)
  (11/13) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.177935734 seconds)
  done (took 0.992225114 seconds)
  (12/13) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268812554 seconds)
  done (took 1.071999041 seconds)
  (13/13) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.792962852 seconds)
  done (took 1.59688156 seconds)
done (took 21.558810489 seconds)
(15/17) benchmarking "misc"...
  (1/13) benchmarking "fastmath many args"...
  done (took 0.051681909 seconds)
  (2/13) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.027710564 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.030492342 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.030363636 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.030598334 seconds)
  done (took 0.923085017 seconds)
  (3/13) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.033012925 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029003607 seconds)
  done (took 0.866393111 seconds)
  (4/13) benchmarking "perf highdim generator"...
  done (took 0.17563975 seconds)
  (5/13) benchmarking "18129"...
  done (took 0.185678557 seconds)
  (6/13) benchmarking "20517"...
  done (took 0.054038838 seconds)
  (7/13) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.095446767 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034987413 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.037602784 seconds)
  done (took 0.975650875 seconds)
  (8/13) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.02245442 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.022294467 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.022396264 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.022109539 seconds)
  done (took 0.896505828 seconds)
  (9/13) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.021736413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.021028038 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021919763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.043345498 seconds)
  done (took 0.915492776 seconds)
  (10/13) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.051800708 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.056482303 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.124778328 seconds)
  done (took 1.041147235 seconds)
  (11/13) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039941254 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03239483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033776339 seconds)
  done (took 0.915045346 seconds)
  (12/13) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.046268876 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.040428319 seconds)
  done (took 0.896134965 seconds)
  (13/13) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.040709014 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052356317 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.085425709 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.046676239 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.105604821 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.075806775 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.019932537 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031237706 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.02866404 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.019915021 seconds)
  done (took 1.316833154 seconds)
done (took 10.068554604 seconds)
(16/17) benchmarking "sort"...
  (1/11) benchmarking "insertionsort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.117917437 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.118545529 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.068841808 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.04266641 seconds)
  done (took 1.158674082 seconds)
  (2/11) benchmarking "mergesort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.202367398 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.191046583 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.039599751 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.047820438 seconds)
  done (took 1.296035489 seconds)
  (3/11) benchmarking "length = 3"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.02356343 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 6.882670598 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.030735691 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.114714255 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.983744099 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.025329822 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.636049022 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.02273494 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.027182784 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022873872 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.552104486 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031713362 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.023219496 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.037188343 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.991287857 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022921445 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.02762599 seconds)
  done (took 11.27334363 seconds)
  (4/11) benchmarking "length = 10"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.027949163 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.02322483 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.029145962 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.024316022 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.023063569 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.025127134 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.587923892 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022864392 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.027576401 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.023003953 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030751904 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031571509 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.023178291 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.036432969 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.030568902 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022766476 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027639381 seconds)
  done (took 1.931361474 seconds)
  (5/11) benchmarking "length = 1000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.025264973 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022762415 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028709871 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023616224 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022647687 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024627359 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.583759975 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022676066 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.028754833 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022552759 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030197538 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031129952 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022518565 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.035943284 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.030104742 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022575497 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027202578 seconds)
  done (took 1.876270242 seconds)
  (6/11) benchmarking "issues"...
    (1/13) benchmarking "sortperm on a view (Float64)"...
    done (took 0.36730308 seconds)
    (2/13) benchmarking "sort(rand(10^8))"...
    done (took 4.253352384 seconds)
    (3/13) benchmarking "sortperm(rand(10^5))"...
    done (took 0.031247092 seconds)
    (4/13) benchmarking "small Int view"...
    done (took 0.038641773 seconds)
    (5/13) benchmarking "sortperm(rand(10^7))"...
    done (took 3.796602556 seconds)
    (6/13) benchmarking "small Float64 view"...
    done (took 0.030380823 seconds)
    (7/13) benchmarking "inplace sorting of a view"...
    done (took 0.079342304 seconds)
    (8/13) benchmarking "sortperm on a view (Int)"...
    done (took 0.175971653 seconds)
    (9/13) benchmarking "partialsort!(rand(10_000), 1:3, rev=true)"...
    done (took 0.355474223 seconds)
    (10/13) benchmarking "sortslices sorting very short slices"...
    done (took 0.988210894 seconds)
    (11/13) benchmarking "sortperm(collect(1000000:-1:1))"...
    done (took 0.035419526 seconds)
    (12/13) benchmarking "Float16"...
    done (took 0.911825817 seconds)
    (13/13) benchmarking "partialsort(rand(10_000), 10_000)"...
    done (took 0.180155973 seconds)
  done (took 12.113607348 seconds)
  (7/11) benchmarking "length = 30"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.026175206 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022647501 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.029071904 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023972577 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.02281195 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024649149 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.588357444 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022661804 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.028220287 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.02238307 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030160308 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031332586 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022545231 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.035850884 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.03011839 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022444086 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027095166 seconds)
  done (took 2.0514827 seconds)
  (8/11) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.024704333 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.027439146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.027493132 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.043239206 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020612273 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.024344565 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.025730408 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020668347 seconds)
  done (took 1.100690755 seconds)
  (9/11) benchmarking "quicksort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.144375724 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.108701786 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.039948874 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.04764251 seconds)
  done (took 1.225397923 seconds)
  (10/11) benchmarking "length = 10000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.025052795 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022508779 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028628977 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023430485 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022577301 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024175562 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.595514414 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.02272011 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.029083426 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022451112 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030311655 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.030972551 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022628293 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.036268953 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.030193127 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022560478 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027181407 seconds)
  done (took 1.905123147 seconds)
  (11/11) benchmarking "length = 100"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.024492014 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022311399 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028378751 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023283232 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022207181 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024141394 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.583973695 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022405228 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.027888164 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022462213 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.029710696 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.030747381 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022250186 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.035489364 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.029471328 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.02215979 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.02693464 seconds)
  done (took 1.886720959 seconds)
done (took 38.634048045 seconds)
(17/17) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.044122816 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.026747418 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.032076171 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085631478 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.034912132 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.022109581 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.021338119 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0320475 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.036169728 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.029013319 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.032721618 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.022138515 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.028990528 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.021306775 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.031035014 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.030672509 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.027977671 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.029564496 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.023731909 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.028101892 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.027451723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.035247705 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.030793771 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.023114338 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.023667289 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.024151043 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.043350175 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.032277924 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.021969403 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.028068718 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.024196882 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.023378432 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.03094056 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.031257429 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.030548301 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.028549062 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.021868715 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.031494004 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.028365423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.026462959 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.028093252 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.025259442 seconds)
  done (took 2.187719452 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.026252804 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.032556136 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.024287768 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.030353029 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028257485 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.033321942 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.02904986 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.028563661 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.030643455 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.027339184 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.02695608 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027885919 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.031192635 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.023276993 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.031056796 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.028147345 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029431544 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.023859858 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.031146997 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028184094 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.027669143 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.02355944 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029096562 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.031497121 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.025120876 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.031276045 seconds)
  done (took 1.633519983 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.034345809 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.051119058 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.061508757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121900709 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.090190659 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.040231374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.035522637 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.042922211 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.055716778 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.025792871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.047259723 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.044670136 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092440293 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.035769825 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093462566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.042274528 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034535176 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.033052426 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.039316762 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122426652 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044752175 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.045307495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.058144162 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.073396534 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.025957361 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075848695 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.031662605 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.031321625 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.036566624 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.032323925 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.027790444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.023050558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.02872196 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.038891498 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.027779515 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.020166724 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.042274109 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033987506 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.039620461 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091091354 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.030341479 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.03055674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.054709387 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.093343288 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.026379009 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.020917529 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.02843948 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033736317 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.02783924 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07099044 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.041380196 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.027273659 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.038235597 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.031199483 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.027543653 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036956709 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.029252214 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.028382175 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.037709954 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.026726866 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.045277583 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.03175086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.038320912 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.026800628 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.031661805 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.031026032 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.021024458 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020303942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.058141539 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.040813046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.091276364 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.023834723 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020274009 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.032323165 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.031888888 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.030081064 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.022769599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.038332999 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030281031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.023043861 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039582738 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.028754339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.023228727 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09894312 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021156998 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.02022467 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020008627 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.021018339 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.022867358 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0291502 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.037483227 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021042918 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.023556685 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.038533149 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.034270777 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.02870402 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.020686874 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.019902008 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.022291254 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03338474 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.023929025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.02083969 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.035901481 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.02682873 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.023481428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.057538602 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.035345372 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.02614007 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.020031332 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.020773685 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.02464501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.031617072 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.023356428 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.028862439 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027997659 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.033893369 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.030086051 seconds)
  done (took 5.39764217 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.104618119 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.098322999 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.051267126 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.124501618 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.028236538 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.034042114 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.09723222 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105224112 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.027154537 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.03959217 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.05500572 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.044105558 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.039539393 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.047998926 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.051866447 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024840378 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.045680898 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.043773363 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.09805253 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.125986393 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.045323848 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.030933408 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.040809536 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.040155241 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.025840617 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.029649011 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.034415612 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.028425918 seconds)
  done (took 2.468413547 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.028027098 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065060446 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.027413943 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046682584 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.034994391 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022515944 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.026602632 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.027989252 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.037460389 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.020043841 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.025787283 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.024566222 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.024357473 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.027533054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.026328128 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.031512083 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.03120389 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.02105871 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.026725907 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.025290369 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.035256007 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.042088633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.028145723 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021121354 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.022669703 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.020863883 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.021434628 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030292968 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.022530231 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021378917 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019822504 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.033733612 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037916445 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.024566498 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021295068 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.026006875 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.026309751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.026136443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.023312947 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.021108008 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.02113707 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027467451 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020969459 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.020322698 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.038543028 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.032695614 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.022887299 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.022951538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024895997 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019702552 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.030699086 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.02976287 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.023175498 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.035452232 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.023402903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024786176 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.026342062 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.038358423 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.029061665 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0260258 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.022775537 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.021320417 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024205272 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.023727519 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.041818573 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023829707 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020804021 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.026306717 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.026774659 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.038721054 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.025846069 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.035960772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019830314 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022606461 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.022269447 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.031226129 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.026344516 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020784425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.020859738 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.024960705 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.023336338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022032374 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021503903 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.022971437 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020515419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.021228374 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.025828947 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.022158532 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027115176 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020321862 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024604523 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.026494676 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021057131 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.023055472 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.030974483 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.023182863 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.038937931 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.028230804 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.024931767 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019661582 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.043531888 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023402503 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.022907142 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024543121 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.032713906 seconds)
  done (took 3.736077044 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.054565234 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02994027 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.043833289 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.054405932 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.040474729 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028285764 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.033314921 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.028859468 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.041766264 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021700806 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.038115485 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021393167 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034275648 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.037607772 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.02966941 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.043936836 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024530438 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.044793854 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.045981667 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.02161897 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.034684929 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.042116243 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.043962787 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.049131003 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039908545 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.04139435 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.050915254 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024735197 seconds)
  done (took 1.95786807 seconds)
done (took 18.271200482 seconds)
RUNNING BENCHMARKS...
(1/17) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.939861003 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.056475896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.918010016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.189671348 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.995287153 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.914462007 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.961060524 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.911736829 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.309914499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.920941825 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.314706465 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.192541036 seconds)
done (took 55.586357452 seconds)
(2/17) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.915912454 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.046160397 seconds)
    (2/2) benchmarking "String"...
    done (took 1.12414769 seconds)
  done (took 3.081973005 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.222113366 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.957438171 seconds)
    (3/3) benchmarking "different"...
    done (took 0.975765405 seconds)
  done (took 4.066800161 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.962185025 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.557542471 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.127208135 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.634322395 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.260627165 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.965677153 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.083536496 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.057584459 seconds)
  done (took 22.599478235 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.037958726 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.026647574 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 2.132665567 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 2.131996902 seconds)
  done (took 9.245916713 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.215928842 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.100827641 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.100342492 seconds)
    (4/4) benchmarking "different"...
    done (took 0.992563587 seconds)
  done (took 5.330025969 seconds)
done (took 53.160591172 seconds)
(3/17) benchmarking "parallel"...
done (took 0.906384728 seconds)
(4/17) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.988305253 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.305325607 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 3.200594626 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.028267824 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.993178854 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.954293725 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.082540298 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.039587446 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.030414502 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.966751324 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.019359406 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.98265313 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.9751067 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.035739611 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.049176346 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.009458306 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.979969918 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.831727867 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.040894573 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.986319062 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.955132411 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.019806099 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.988513656 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.034185307 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.086799975 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.974660346 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.465625817 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.053057225 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.001852238 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.020982024 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.121741489 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.98309164 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.092031893 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.057185014 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.048568425 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.072507738 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.069854678 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.101927061 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.973530918 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.103525879 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.052611217 seconds)
  done (took 47.687501562 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.124202785 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.076940674 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.168674413 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.214334367 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.694013801 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.17476935 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.316693872 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.085758027 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.08582591 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.17115953 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.177385319 seconds)
  done (took 15.220264705 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.483751305 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.078822946 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.167215393 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.072393076 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.301972528 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.164084095 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.088444846 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.079372215 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.084343528 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.175484453 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.177718996 seconds)
  done (took 13.797758647 seconds)
done (took 77.612642125 seconds)
(5/17) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.308392815 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.977910258 seconds)
  done (took 3.201599845 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.925834432 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.924192751 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.924069119 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.924207873 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.924066715 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.92670847 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 0.940409328 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.932005985 seconds)
  done (took 8.333213139 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.922816943 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.923419759 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.923652299 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.922057113 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.923046695 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.92265519 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.92297832 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.922289315 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.922493504 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.924174827 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.92351085 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.924375434 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.923636473 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.923860332 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.923679209 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.923903918 seconds)
  done (took 15.685660226 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.923338362 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.924012742 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.922537204 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.928234014 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.922738575 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.92294314 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.924439812 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.927360417 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.923178012 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.922967945 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.923389215 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.923184357 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.923400415 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.923299418 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.92428309 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.923563086 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.924535544 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.922726012 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.923101018 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.923085337 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.92321244 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.922593993 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.924217369 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.924933552 seconds)
  done (took 23.085751252 seconds)
done (took 51.236325983 seconds)
(6/17) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.191018236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.761317443 seconds)
  done (took 7.867484029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.934953959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.936935528 seconds)
  done (took 2.804396046 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.264447474 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.950650681 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.436757647 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.201223194 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.952563487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.950866609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.358761153 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.953113023 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.95213475 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.952297578 seconds)
  done (took 11.886058336 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.962194605 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.122792194 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.097259885 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.047527651 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.103518456 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.96912372 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.979684869 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.960302128 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.141765615 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.958304666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.084399668 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.122050476 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.088363891 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.196927875 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.978392035 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.112746459 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.132640373 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.08482525 seconds)
  done (took 20.056701216 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.946697515 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.952755175 seconds)
  done (took 2.811884633 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.07128822 seconds)
    (2/7) benchmarking "second"...
    done (took 0.964842313 seconds)
    (3/7) benchmarking "month"...
    done (took 1.051710684 seconds)
    (4/7) benchmarking "year"...
    done (took 1.044334009 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.967642122 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.956331606 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.966746192 seconds)
  done (took 7.934878498 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.300042033 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.948823709 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.973424938 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.290601614 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.436733146 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.71248019 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.440315184 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.719062874 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.680596825 seconds)
  done (took 13.414207825 seconds)
done (took 67.685548958 seconds)
(7/17) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.020365094 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.91420575 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.020268208 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.982981965 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.930770268 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.311810205 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.951172548 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.275857417 seconds)
done (took 34.341388161 seconds)
(8/17) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 5.975693776 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.915951301 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.098627803 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.923040885 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.458350818 seconds)
  done (took 17.312260222 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.222100114 seconds)
    (2/2) benchmarking "read"...
    done (took 1.239626879 seconds)
  done (took 3.396289541 seconds)
done (took 27.598062363 seconds)
(9/17) benchmarking "frontend"...
  (1/1) benchmarking "nestedscopes"...
  done (took 5.910549665 seconds)
done (took 6.821327355 seconds)
(10/17) benchmarking "alloc"...
  (1/4) benchmarking "strings"...
  done (took 5.932389252 seconds)
  (2/4) benchmarking "arrays"...
  done (took 5.917872945 seconds)
  (3/4) benchmarking "structs"...
  done (took 5.919212734 seconds)
  (4/4) benchmarking "grow_array"...
  done (took 5.910910075 seconds)
done (took 24.591010299 seconds)
(11/17) benchmarking "broadcast"...
  (1/3) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.305684182 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.312723323 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.114858582 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.148828713 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 1.463623685 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.142681268 seconds)
  done (took 8.403675904 seconds)
  (2/3) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.9625064 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.960157187 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.954686868 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.964516312 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.958811498 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.955294243 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 5.918611626 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.970971676 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.958914275 seconds)
  done (took 14.51970601 seconds)
  (3/3) benchmarking "26942"...
  done (took 3.030905813 seconds)
done (took 26.867233725 seconds)
(12/17) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.295833546 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.914927278 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.242047777 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.106585276 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.287893173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.197617985 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.006515184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.40809018 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.993160074 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.366595653 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.08701692 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 5.913509576 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.914060144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.103832774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.307900088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.149085306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.985225032 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.110431718 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.415193075 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.324253873 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.913185561 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.087626202 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.140844784 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.250209352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.916229359 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.913541107 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.206409739 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.043948026 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.187367826 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.913870515 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.915484371 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.126529301 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.205466711 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.914216242 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 5.914013218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 5.913122032 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.195705041 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 5.923722309 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.178769301 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.311303953 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.172663077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.91466421 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.914803467 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.915078689 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.025491233 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.17647747 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.009535624 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.914698554 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.917141879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 5.914390823 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.180550338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 5.914360193 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 5.914701385 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.15557416 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.104705492 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 5.915531599 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.2720841 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.287184951 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.323809471 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.237594448 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.178366316 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.39079541 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.233732096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.12397259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.915834187 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.224676971 seconds)
  done (took 183.465909889 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.232815125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.06585494 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.271394916 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.569821855 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.244788892 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.260964259 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.656173629 seconds)
  done (took 10.217025662 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.84017621 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.973681943 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.210785479 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.210582011 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.978880493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.085242902 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.04326337 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 5.914689922 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.136600739 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.010266047 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.249099042 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.21528401 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 5.914861463 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.914620269 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.043436829 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.256230524 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.856856328 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.99505501 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.970695416 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.254562612 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 5.91484087 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 5.917691291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.093694933 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.964805741 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.992103578 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.011557055 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.976149706 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825061579 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.967021613 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.961505368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.988097666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.972864198 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.975212636 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.913047977 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.960191151 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.262705939 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.981904532 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.978098007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.107185005 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.916814971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.966279746 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.973048731 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.101586608 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.986373926 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.961232396 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.135273114 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.964753948 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.986526104 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.965639656 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.975795688 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.115884704 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.97798922 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.959755706 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 5.916134833 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.166750845 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 5.915428388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.996370742 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.977671835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.977529239 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.033860153 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.9736121 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.250760257 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.210324928 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.962350015 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.208614355 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.271747524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.977914483 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.966590863 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.96163294 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.246201621 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.97566184 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.210525257 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.980231543 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.019542329 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.982181686 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.084151931 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.137233775 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.691068701 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.661090473 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.915630162 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.156531093 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.963757441 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.160260792 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.796519544 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 5.916159969 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.963621615 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.98137799 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.367477417 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.817861808 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.974922708 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.221274428 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.963733238 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.034097172 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.020376786 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.955282096 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.972754195 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.10937783 seconds)
  done (took 164.853166645 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.115458791 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.313114349 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.179004309 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.491396539 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.498340059 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.076939184 seconds)
  done (took 11.599735569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.321690099 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.578403198 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.994385232 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.001268253 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.023229127 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.960632639 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.960529908 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.116432188 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89681642 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.987232423 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.960902289 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.984120216 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.963451633 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.090905962 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.960438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.984010936 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.962090537 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.01411276 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.983838195 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.0402797 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.792511229 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.024450264 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.039953461 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.531272532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.802257483 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.985937415 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.5246691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.983329357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.983308619 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.16010316 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.128764343 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.972110391 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.518158162 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.80189916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.528791839 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.530303102 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907446098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.986587951 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.993657155 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.962790974 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.986165135 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.041305734 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.004995033 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.985694853 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.208377354 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.288735468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.834310832 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.195519908 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.962899847 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.985744964 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.985747849 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.015173313 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.962961942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.986394624 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.972623989 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.28528668 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.753478861 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.961510362 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.025663581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.528552154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.850924196 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.961799788 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.264201401 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.72057392 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 5.921287081 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.014732437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.546034303 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906154731 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.043625936 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.000159265 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.985463378 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.02372002 seconds)
  done (took 101.092111983 seconds)
done (took 472.141203792 seconds)
(13/17) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.272751435 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.615323996 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.022355299 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.699530078 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.415058392 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 32.591011577 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.412758062 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 30.926594628 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.729523546 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.495191883 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.4438731 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.876135323 seconds)
  done (took 379.453150139 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 32.145455194 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.688826724 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.852541561 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.912134979 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.818213371 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.392733165 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.444325068 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 30.989834509 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.260314262 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.169631105 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.057752686 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.103687052 seconds)
  done (took 378.757433694 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.148967377 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 30.995855171 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.981914768 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.797237245 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 32.828151739 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.441029832 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.875854038 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.983188939 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.541725523 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.249752506 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.133235416 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.506254783 seconds)
  done (took 380.403564727 seconds)
done (took 1139.556810156 seconds)
(14/17) benchmarking "problem"...
  (1/13) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.105898298 seconds)
  done (took 7.023952756 seconds)
  (2/13) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.092787083 seconds)
  done (took 7.013044941 seconds)
  (3/13) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 5.923634715 seconds)
  done (took 6.843537371 seconds)
  (4/13) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.987268267 seconds)
  done (took 6.906842092 seconds)
  (5/13) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.919527693 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.91995635 seconds)
  done (took 12.761646977 seconds)
  (6/13) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.995620741 seconds)
  done (took 6.914042651 seconds)
  (7/13) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.348205263 seconds)
  done (took 7.270619597 seconds)
  (8/13) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.936346104 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.959271064 seconds)
  done (took 12.840272496 seconds)
  (9/13) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.811839187 seconds)
  done (took 6.731556426 seconds)
  (10/13) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.266472315 seconds)
  done (took 8.199537174 seconds)
  (11/13) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.924136306 seconds)
  done (took 6.846933983 seconds)
  (12/13) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.951859322 seconds)
  done (took 6.873898542 seconds)
  (13/13) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.020794302 seconds)
  done (took 6.942922883 seconds)
done (took 104.095560404 seconds)
(15/17) benchmarking "misc"...
  (1/13) benchmarking "fastmath many args"...
  done (took 1.181753242 seconds)
  (2/13) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.073708615 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.123633341 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.263173527 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.164934421 seconds)
  done (took 5.547824356 seconds)
  (3/13) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.162811286 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.335500588 seconds)
  done (took 3.419769958 seconds)
  (4/13) benchmarking "perf highdim generator"...
  done (took 1.3852747 seconds)
  (5/13) benchmarking "18129"...
  done (took 5.941636607 seconds)
  (6/13) benchmarking "20517"...
  done (took 1.328403048 seconds)
  (7/13) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.921583139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.921313384 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.924508069 seconds)
  done (took 18.690764994 seconds)
  (8/13) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.963077006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.965763302 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.9659187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.956258521 seconds)
  done (took 4.770267284 seconds)
  (9/13) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 3.156743052 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.37652206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.527983711 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 5.9232495 seconds)
  done (took 16.903489621 seconds)
  (10/13) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.12208401 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.00809912 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.656796831 seconds)
  done (took 4.73746879 seconds)
  (11/13) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.556928165 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.991776692 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.533426728 seconds)
  done (took 5.00378264 seconds)
  (12/13) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.728088875 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.70935173 seconds)
  done (took 4.360046937 seconds)
  (13/13) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.770354948 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.245208628 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.2339644 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.264046157 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.356671592 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.109402419 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.243226689 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.178305027 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.196216269 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.351013442 seconds)
  done (took 13.871027076 seconds)
done (took 88.063200456 seconds)
(16/17) benchmarking "sort"...
  (1/11) benchmarking "insertionsort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.964606468 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.950570588 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.951349027 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.956777032 seconds)
  done (took 4.746998032 seconds)
  (2/11) benchmarking "mergesort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 5.923307056 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 5.9239654 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 5.922810992 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 5.922673773 seconds)
  done (took 24.615679934 seconds)
  (3/11) benchmarking "length = 3"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.931388602 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.932580392 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.931624515 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.931377474 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.937608059 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.93040386 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.951840892 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.934926784 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.932455542 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.932570704 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.933429921 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.931911776 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.938884995 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.933174688 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.933949777 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.933395693 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.933129482 seconds)
  done (took 16.807234282 seconds)
  (4/11) benchmarking "length = 10"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.937757106 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.938525505 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.937134813 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.934143595 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.945751201 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.935612357 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.979935416 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.940604956 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.936357847 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.946746352 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.943160921 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.94069572 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.950331313 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.941152427 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.942248172 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.942353577 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.938366259 seconds)
  done (took 16.954026816 seconds)
  (5/11) benchmarking "length = 1000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 1.333558165 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 1.134057915 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 1.180756641 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.951604588 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 1.132804576 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.945618527 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 5.926516505 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 1.184634851 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.964744043 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 1.162607748 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 1.304995703 seconds)
    (12/17) benchmarking "ascending"...
    done (took 1.148696188 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 1.197073758 seconds)
    (14/17) benchmarking "descending"...
    done (took 1.153636741 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 1.333826371 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 1.166821423 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 1.110592642 seconds)
  done (took 25.259243061 seconds)
  (6/11) benchmarking "issues"...
    (1/13) benchmarking "sortperm on a view (Float64)"...
    done (took 1.238121463 seconds)
    (2/13) benchmarking "sort(rand(10^8))"...
    done (took 9.436747787 seconds)
    (3/13) benchmarking "sortperm(rand(10^5))"...
    done (took 6.080983866 seconds)
    (4/13) benchmarking "small Int view"...
    done (took 0.931114353 seconds)
    (5/13) benchmarking "sortperm(rand(10^7))"...
    done (took 8.40356355 seconds)
    (6/13) benchmarking "small Float64 view"...
    done (took 0.930813666 seconds)
    (7/13) benchmarking "inplace sorting of a view"...
    done (took 1.096074641 seconds)
    (8/13) benchmarking "sortperm on a view (Int)"...
    done (took 5.092384526 seconds)
    (9/13) benchmarking "partialsort!(rand(10_000), 1:3, rev=true)"...
    done (took 1.382031549 seconds)
    (10/13) benchmarking "sortslices sorting very short slices"...
    done (took 6.051278864 seconds)
    (11/13) benchmarking "sortperm(collect(1000000:-1:1))"...
    done (took 5.934918209 seconds)
    (12/13) benchmarking "Float16"...
    done (took 5.921012576 seconds)
    (13/13) benchmarking "partialsort(rand(10_000), 10_000)"...
    done (took 1.497371951 seconds)
  done (took 54.928701676 seconds)
  (7/11) benchmarking "length = 30"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.946841192 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.942049027 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.943388691 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.936251312 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.948883936 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.93622789 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 1.202428712 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.940919619 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.935950121 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.93972597 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.944597057 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.943946591 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.946392698 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.943907131 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.948401737 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.94172567 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.939789573 seconds)
  done (took 17.209045425 seconds)
  (8/11) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.167633166 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.97013543 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.123642343 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.581677355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.152982116 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.962737162 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.581726081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.168793071 seconds)
  done (took 10.633812589 seconds)
  (9/11) benchmarking "quicksort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 5.925387574 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 5.927443837 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 5.927755533 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 5.927130393 seconds)
  done (took 24.632095603 seconds)
  (10/11) benchmarking "length = 10000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 5.925271377 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 2.827413886 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 3.516961643 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.957262475 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 2.871196944 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.956884865 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 5.925973505 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 2.740742359 seconds)
    (9/17) benchmarking "all same"...
    done (took 1.139837445 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 2.713892378 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 5.213670253 seconds)
    (12/17) benchmarking "ascending"...
    done (took 3.630632573 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 2.861265165 seconds)
    (14/17) benchmarking "descending"...
    done (took 3.695922435 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 5.35467629 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 2.690732833 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 3.519497188 seconds)
  done (took 57.467383938 seconds)
  (11/11) benchmarking "length = 100"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.971722429 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.954996706 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.962580273 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.9398369 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.960062962 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.94089907 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 1.940041159 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.961677324 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.944720516 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.956439735 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.981805215 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.977789466 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.96711319 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.978899341 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.990946073 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.95831411 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.964368255 seconds)
  done (took 18.280513732 seconds)
done (took 272.456707418 seconds)
(17/17) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.127925597 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.609751605 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.08335127 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.145383033 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.07572949 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.188871093 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.147912078 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.115593116 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.49376941 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.106389587 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.329648103 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.143023806 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.56253966 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.153966562 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.107248932 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.090769212 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.293943538 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.509034624 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.106448174 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.544927376 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.109981409 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.608739874 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.134054547 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.49497129 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.332612634 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.607004095 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.893575791 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.294547222 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.129286744 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.118056522 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.749739074 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.102282218 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.104290972 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.093439388 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.103630667 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.078480495 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.104099912 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.241993429 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.074673937 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.437819062 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.540622535 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.368559456 seconds)
  done (took 61.590348649 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.972084042 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.04046048 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.041301092 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.02774491 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.478301587 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.057714126 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.110576892 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.076522764 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.042614034 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.073410649 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.097677435 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.475863813 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.106262515 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.445618591 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.092221099 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.108604668 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.037579732 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.459954274 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.161334746 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.102892273 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.998096764 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.04143443 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.993650611 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.08645738 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.991710464 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.035580799 seconds)
  done (took 30.09816848 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.019858394 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.108131941 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.151255727 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.283617469 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.081191024 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.022882319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.194546934 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.10689329 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.330708603 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945932283 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.0428351 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.090407286 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.047444654 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.157572076 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 3.375534253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.011975497 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.14285626 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.108464847 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.117982995 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.286458185 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.243658345 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.04717894 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.202636793 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.026605647 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.607573244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.561153378 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.967173505 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.287719934 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 3.351072578 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.058744933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.090001677 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.177941663 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.212749955 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.153224602 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.090963601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.998350067 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.986033946 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.043213615 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.708836919 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.113177034 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.192774466 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.071042637 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.145342981 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.518648371 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.950322124 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.001586552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.248392356 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.052206099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.093415695 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038125324 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.189614395 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.116775825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.060872299 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.150122397 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.090504183 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.531782921 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.064865143 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.236475725 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.138510062 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.356276164 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.04560387 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.227516815 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.139902781 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.941484711 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.17279756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.207360381 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.200402249 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.108795724 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.157806984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 3.348173893 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.556774538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.081308394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.00339752 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.039938242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.115233762 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.281826868 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.638049228 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.12478034 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.228205499 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.175991157 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.257042978 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.261678706 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.114577446 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.767021792 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.996916832 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.988057892 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.042943807 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.195871582 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.176064622 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.484520829 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.556524871 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.252135573 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.300125537 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.391598316 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.164261233 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.242520349 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.979867162 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.990767125 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.140966048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.539194509 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.06540184 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.144021937 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.519443047 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.281951629 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.190276082 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.438931604 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.1666362 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.937016522 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.160673227 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.966961529 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.133487112 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.668087886 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.448570215 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.251991897 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.970455241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.515536286 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.061785783 seconds)
  done (took 181.296041745 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.927192612 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.933681379 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.930848882 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.929560817 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.92577787 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.384094586 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.967928452 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.927224152 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.251637713 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.967634544 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.926331924 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.92726132 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.927688427 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.925966803 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.09572055 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.81235625 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.521629971 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.927708719 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.926233804 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.928166947 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.65633277 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.930097021 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.93740355 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.928058996 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.926612941 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.927924105 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.932612427 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.93551565 seconds)
  done (took 145.168630875 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.998822652 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.314249799 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.014050188 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.065324911 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.028532507 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.000466071 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.305639445 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.018026646 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.015362719 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.005765273 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.964399694 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.211913237 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.234273478 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.353261082 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.04210932 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.993272346 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.488336853 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.120917373 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.008275779 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.005195801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.144849913 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.274009932 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.179427625 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.214194831 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.111152316 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.223567151 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.065665086 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.995293702 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.102542887 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.30563587 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.993806769 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.320119945 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.1555876 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.990684016 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.309806989 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.208986349 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.335750217 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.423759755 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.141592407 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.964495842 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.9615609 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.165101083 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.263291818 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.041548904 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.980854463 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.471949386 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.001010741 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.266594708 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.030485005 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.96335265 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.999356831 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.001395961 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.166146693 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.727646122 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.160439958 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.244960077 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.394447973 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 5.971696562 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.031806182 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.198326543 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.974572069 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.314918374 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.403817362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.049012098 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.003353846 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.789565519 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.076838391 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.319785546 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.373389938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.020521371 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.229097156 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.180918219 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.973045774 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.196591036 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.141400231 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.446219909 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.344418318 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.102471616 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.077591061 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.016445341 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.198706635 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.983756008 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.424457076 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.090687288 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.970316283 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.316035471 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.244867166 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.974096847 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.998520248 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.096812105 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.140451955 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.092758108 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.240846841 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.070163962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.587348363 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.224017608 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.288537251 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.009030878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.069109503 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.976865695 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.71572355 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.157087654 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.979798464 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.238470487 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.404681901 seconds)
  done (took 132.147838155 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.424584902 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.002646771 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.158695495 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.404699931 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.249552271 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.220430734 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.236976017 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.044374465 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.1665122 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.141035649 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.135910184 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.060552165 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.431733786 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.599312506 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.006777109 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.0877441 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.041772287 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.431646466 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.218012863 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.166006661 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 3.722388019 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.539845513 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.226782526 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.272199972 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.316381046 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.356421668 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.481307637 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.08216757 seconds)
  done (took 43.161047344 seconds)
done (took 594.392458032 seconds)
SAVING RESULT...
DONE!
