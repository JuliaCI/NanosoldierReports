cset: moving following pidspec: 3697585
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.852301437 seconds)
loading group "string"... done (took 0.314945211 seconds)
loading group "linalg"... done (took 4.317818082 seconds)
loading group "parallel"... done (took 0.023360478 seconds)
loading group "find"... done (took 1.410223835 seconds)
loading group "tuple"... done (took 0.954499394 seconds)
loading group "dates"... done (took 0.254739652 seconds)
loading group "micro"... done (took 0.062954323 seconds)
loading group "io"... done (took 1.420730227 seconds)
loading group "frontend"... done (took 0.011613883 seconds)
loading group "scalar"... done (took 5.176269057 seconds)
loading group "sparse"... done (took 3.851062498 seconds)
loading group "alloc"... done (took 0.0174804 seconds)
loading group "broadcast"... done (took 0.401889839 seconds)
loading group "union"... done (took 3.78788081 seconds)
loading group "simd"... done (took 3.112443215 seconds)
loading group "random"... done (took 3.922297314 seconds)
loading group "inference"... done (took 1.971869846 seconds)
loading group "problem"... done (took 1.114420437 seconds)
loading group "array"... done (took 4.76687597 seconds)
loading group "misc"... done (took 1.026688749 seconds)
loading group "sort"... done (took 0.74373197 seconds)
loading group "collection"... done (took 6.223521342 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/17) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.450596343 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.101635252 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.078691143 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072801221 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.136432996 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.077531285 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.092467625 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.051319956 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.636441612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.066059403 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146586597 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41757842 seconds)
done (took 4.113222531 seconds)
(2/17) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.189599834 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.025281486 seconds)
    (2/2) benchmarking "String"...
    done (took 0.025064936 seconds)
  done (took 0.761464504 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.022623571 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.021793596 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021869705 seconds)
  done (took 0.764101283 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021427207 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160478515 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023892392 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024334966 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024167064 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023922255 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023715717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023723126 seconds)
  done (took 1.004765746 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.041697708 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.024259378 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020795913 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020937033 seconds)
  done (took 0.812697923 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021533802 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.051910342 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.01999611 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019886597 seconds)
  done (took 0.815991768 seconds)
done (took 5.154302294 seconds)
(3/17) benchmarking "parallel"...
done (took 0.699383145 seconds)
(4/17) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.091944569 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049602768 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.0199949 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079305031 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.020054491 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.079246389 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.084201209 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.079994703 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.020176022 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.020044851 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.020147833 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.080651788 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.081093337 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.020246827 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.106485604 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.08193767 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.020203405 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.01994551 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.020004429 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.02004696 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.019983504 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.027458883 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.019967644 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.019971658 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077454371 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.019949727 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019692454 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077829174 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.019843077 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.078293845 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.020002379 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.019813878 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.019877448 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078614621 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.019809657 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077793966 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.027368868 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.019928631 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.019784027 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.022325044 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.019997806 seconds)
  done (took 2.47212622 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.038941901 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.040127766 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.0595575 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018729612 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029450353 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039806572 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018750634 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039784113 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.060859621 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039982307 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039897819 seconds)
  done (took 1.139312555 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.037956768 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.03988798 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.06864152 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018560095 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030042898 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039848316 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018665493 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039834993 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.068802592 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039855017 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039648837 seconds)
  done (took 1.149533659 seconds)
done (took 5.457816419 seconds)
(5/17) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.046385106 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.021103085 seconds)
  done (took 0.772725613 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.362025331 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.124315625 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.028176956 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.083569557 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.022711358 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.038177349 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.651116591 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.037578421 seconds)
  done (took 6.093852326 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.078081727 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.022933931 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023449309 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.020848637 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.020894615 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.020885003 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.021717892 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.021240333 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.0202701 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.022360285 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.021980139 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.020653911 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023021736 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.021953706 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.020347536 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.020935067 seconds)
  done (took 1.170219489 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.022465899 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.024024055 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.021938234 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.020291102 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.023063736 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.022061603 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.023430256 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.023783372 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.022645323 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.022952217 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.02190542 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.025762791 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.023238399 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.022032873 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.025434391 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.020302799 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.023236925 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.022223335 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.023069983 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.022771531 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.022063782 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.021523601 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.026311746 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.023058305 seconds)
  done (took 1.268786233 seconds)
done (took 10.015836493 seconds)
(6/17) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142576982 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.019746748 seconds)
  done (took 0.878690246 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.035200149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.032287801 seconds)
  done (took 0.786272065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.034253322 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.020407324 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.036604219 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.031049951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.02080983 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.020749797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.033981452 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.02067315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.020689947 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.020770956 seconds)
  done (took 0.980502832 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.021852683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022149392 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.022086784 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.020753242 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.022860442 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.02146796 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.022390522 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.02177193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.02678131 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.020798117 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.023783684 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.030689192 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.020049138 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.030634245 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.022697037 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.021366274 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.025559406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.02033247 seconds)
  done (took 1.13714103 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.020139379 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.020856362 seconds)
  done (took 0.759955844 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.019292732 seconds)
    (2/7) benchmarking "second"...
    done (took 0.021087941 seconds)
    (3/7) benchmarking "month"...
    done (took 0.019240922 seconds)
    (4/7) benchmarking "year"...
    done (took 0.019211528 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.020891313 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.020223829 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.021138482 seconds)
  done (took 0.859935066 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.507103921 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10347235 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316415686 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.020107155 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.02031081 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.280781624 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020166822 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.019855907 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.020088776 seconds)
  done (took 2.028286549 seconds)
done (took 8.150820711 seconds)
(7/17) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.042163772 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.155864802 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.038349422 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.491200765 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.0420395 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.023528015 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.089612967 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.137368211 seconds)
done (took 1.755678754 seconds)
(8/17) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.163942152 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323270894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.053405945 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.036552355 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.030588091 seconds)
  done (took 1.176222123 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020471993 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028355107 seconds)
  done (took 0.778993401 seconds)
done (took 2.854516131 seconds)
(9/17) benchmarking "frontend"...
  (1/1) benchmarking "nestedscopes"...
  done (took 0.022648086 seconds)
done (took 0.756495252 seconds)
(10/17) benchmarking "alloc"...
  (1/4) benchmarking "strings"...
  done (took 0.087612709 seconds)
  (2/4) benchmarking "arrays"...
  done (took 0.053592514 seconds)
  (3/4) benchmarking "structs"...
  done (took 0.059676174 seconds)
  (4/4) benchmarking "grow_array"...
  done (took 0.029529731 seconds)
done (took 0.959984649 seconds)
(11/17) benchmarking "broadcast"...
  (1/3) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.068134167 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019828933 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.041457975 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.048438399 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019827315 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.032807481 seconds)
  done (took 0.997491663 seconds)
  (2/3) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.040164962 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.03202485 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.024079487 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.03569847 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.026109911 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.02094337 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.097965162 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.021075285 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.029793297 seconds)
  done (took 1.101197272 seconds)
  (3/3) benchmarking "26942"...
  done (took 0.065801611 seconds)
done (took 2.896558029 seconds)
(12/17) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090294028 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.049523434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.04829162 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.030447664 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033286762 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033484211 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.023875136 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.032478814 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.024171512 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.035187218 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.047869334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.040292653 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.03714119 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040439993 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.02005865 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.029205803 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.021845859 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.035881685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.032217705 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.046224595 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.049328281 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.022974974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.023006934 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.035253288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.025910121 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.034147625 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.045834118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021587138 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.034734452 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.029018355 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046558323 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.023125403 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.02057132 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.031122041 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.030172715 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.02408661 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.019995352 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.021409313 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.027895536 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.025076827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.048733111 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.032130962 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.025334924 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.020472459 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021063114 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.032115664 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021772536 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.018775021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.025799247 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.021566163 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.023215039 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.023677137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.02282422 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.03102009 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.023080158 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.019820491 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.018971489 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019677881 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020370196 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019874224 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.024699858 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023083591 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.02284321 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.023862189 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.020851745 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.019088937 seconds)
  done (took 2.705012467 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.048221439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.074624119 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033791212 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.033594634 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019994606 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.021088293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020992729 seconds)
  done (took 0.994738658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.079335506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.024296282 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.032928188 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.033457825 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.035376039 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.025077009 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.031171173 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.042594825 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.054269579 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.038182186 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.043590647 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.033287076 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.030234949 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.023454267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.044808455 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.035134681 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.03105364 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.025564185 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.034038877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.033536752 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.018853852 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.046359887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.032668378 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021816241 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.031647934 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.024030942 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.023862977 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065377127 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022807618 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021196164 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020964883 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.047777101 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.023293715 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.022951987 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.020779978 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020004597 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.022007642 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.020568807 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0215933 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.023926081 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.02120493 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023722388 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023606676 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02171792 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021766446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.021146986 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.021759923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.02103343 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020969492 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.023811261 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.031622915 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.023256377 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.024831599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.02968917 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.029546815 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.023276612 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.025426854 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.022128699 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.02415412 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030852281 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022918628 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.033090303 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.032455716 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.021272661 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.032241707 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029404306 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.02311887 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.021187187 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020995577 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028846543 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021860698 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.032008212 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.023321874 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.022761999 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.018850742 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028850933 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.031442054 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.031282418 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.031252342 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.028765134 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.021333884 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.020860285 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.029864765 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.030137588 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.021331799 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020681665 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.020385067 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.038717674 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.043716579 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023157719 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.024080262 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.020856968 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.030677386 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.022730767 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.025430608 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.033503658 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.019369579 seconds)
  done (took 3.496004679 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.045249985 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021759826 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021499542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.01959514 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.01995684 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.033853865 seconds)
  done (took 0.994844894 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.064308043 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.019587232 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.019815628 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.019190411 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.036963144 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.021901445 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.021916328 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.020422659 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.033531751 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.029978869 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.021758542 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.023098252 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.022397924 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.019981167 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.021798588 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.029559958 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.021975146 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.022019683 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.029033175 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.020037938 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.025849831 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.020049307 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.019835799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.025576283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.021401029 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.029245008 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025403274 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.029323229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.029263362 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.020678079 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.019987935 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.021667188 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.02560565 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.020565298 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.021965851 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.025382286 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.019203978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.023065255 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.021551305 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.021335345 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.022966441 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.019843106 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.020834346 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.022732204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.020623743 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.025320837 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.022869629 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.025657522 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.02175179 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.022731972 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.022907802 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.019110033 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.021212269 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.022681269 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.025359149 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02035013 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.022743694 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.021786617 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.019939524 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.025209763 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.019127279 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.021285981 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.020298313 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.021658709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.023842024 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.022866669 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.025515316 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.019927595 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.019906691 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.019255182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.022709497 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.019020325 seconds)
  done (took 2.476926943 seconds)
done (took 11.404025925 seconds)
(13/17) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 5.687964166 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.069182852 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.234277723 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.049823824 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 0.407675135 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 1.032744794 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.031130503 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.076151925 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.088349328 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.038575865 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.037452652 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.133799591 seconds)
  done (took 8.63546768 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 6.188625963 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.117053987 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.324769974 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.169724409 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.514643371 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.179462914 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.062936059 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.319973209 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.359683859 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.119878098 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.061375682 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.465554961 seconds)
  done (took 10.706834223 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 0.459514139 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.120064516 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.364130138 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.168270871 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.493440787 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.064568977 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.059664573 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.294318593 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.183277112 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.054576668 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.05409481 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.532479316 seconds)
  done (took 4.632263746 seconds)
done (took 24.728880956 seconds)
(14/17) benchmarking "problem"...
  (1/13) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.586372885 seconds)
  done (took 1.363250007 seconds)
  (2/13) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.179274547 seconds)
  done (took 1.96716951 seconds)
  (3/13) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.06044156 seconds)
  done (took 0.861826038 seconds)
  (4/13) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.694493119 seconds)
  done (took 1.475748299 seconds)
  (5/13) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247804547 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.210068047 seconds)
  done (took 1.258463139 seconds)
  (6/13) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.608243542 seconds)
  done (took 1.39401962 seconds)
  (7/13) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.218555453 seconds)
  done (took 2.018876656 seconds)
  (8/13) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.182992914 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184401553 seconds)
  done (took 1.165157465 seconds)
  (9/13) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466290464 seconds)
  done (took 1.262403071 seconds)
  (10/13) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.527501153 seconds)
  done (took 4.322411626 seconds)
  (11/13) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.177413684 seconds)
  done (took 0.997586847 seconds)
  (12/13) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268164393 seconds)
  done (took 1.077889373 seconds)
  (13/13) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.810572437 seconds)
  done (took 1.617890496 seconds)
done (took 21.57266198 seconds)
(15/17) benchmarking "misc"...
  (1/13) benchmarking "fastmath many args"...
  done (took 0.049194663 seconds)
  (2/13) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.02744117 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.030188907 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.030094517 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.030600436 seconds)
  done (took 0.927803504 seconds)
  (3/13) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.032452353 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.028729414 seconds)
  done (took 0.869217478 seconds)
  (4/13) benchmarking "perf highdim generator"...
  done (took 0.174109556 seconds)
  (5/13) benchmarking "18129"...
  done (took 0.186101853 seconds)
  (6/13) benchmarking "20517"...
  done (took 0.053956664 seconds)
  (7/13) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.037379821 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034902983 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.037883061 seconds)
  done (took 0.924983774 seconds)
  (8/13) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.022645985 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.022304397 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.022151679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.022318727 seconds)
  done (took 0.903453832 seconds)
  (9/13) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.021527641 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.021182899 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021618329 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.043494712 seconds)
  done (took 0.920731311 seconds)
  (10/13) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.051801929 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.056239107 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.124875243 seconds)
  done (took 1.046387423 seconds)
  (11/13) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040528735 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.032347732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033611546 seconds)
  done (took 0.925913072 seconds)
  (12/13) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.046216828 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.039674131 seconds)
  done (took 0.901362889 seconds)
  (13/13) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.04089306 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052572112 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.085834207 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.04651387 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.109450939 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.076077931 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.019727478 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031573264 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.028949679 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.019721339 seconds)
  done (took 1.324254281 seconds)
done (took 10.069372645 seconds)
(16/17) benchmarking "sort"...
  (1/11) benchmarking "insertionsort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.117147033 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.118223165 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.068427305 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.043267253 seconds)
  done (took 1.167518173 seconds)
  (2/11) benchmarking "mergesort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.201751666 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.191478902 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.039391757 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.046763132 seconds)
  done (took 1.299558534 seconds)
  (3/11) benchmarking "length = 3"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.023516989 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 6.907153057 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.031858125 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.113660706 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.988695041 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.025700617 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.637900679 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022618176 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.02708892 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.023093334 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.551133797 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031491669 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022964393 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.036754849 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.991996219 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.023066104 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027666431 seconds)
  done (took 11.307737489 seconds)
  (4/11) benchmarking "length = 10"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.027626811 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022857165 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.029333484 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.024423781 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.023077076 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.025029223 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.590717991 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022878135 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.027502979 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022850126 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030617406 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031599999 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022870688 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.036373599 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.030391024 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022672625 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027598394 seconds)
  done (took 1.939384986 seconds)
  (5/11) benchmarking "length = 1000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.024957494 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022491902 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028787508 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023734093 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022487731 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024415566 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.583596442 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022711427 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.028786923 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022627849 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030074126 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.030768684 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022721106 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.03592289 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.030163457 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022591925 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027199857 seconds)
  done (took 1.884733911 seconds)
  (6/11) benchmarking "issues"...
    (1/13) benchmarking "sortperm on a view (Float64)"...
    done (took 0.366922951 seconds)
    (2/13) benchmarking "sort(rand(10^8))"...
    done (took 4.254055664 seconds)
    (3/13) benchmarking "sortperm(rand(10^5))"...
    done (took 0.030986315 seconds)
    (4/13) benchmarking "small Int view"...
    done (took 0.03841104 seconds)
    (5/13) benchmarking "sortperm(rand(10^7))"...
    done (took 3.80683606 seconds)
    (6/13) benchmarking "small Float64 view"...
    done (took 0.030164611 seconds)
    (7/13) benchmarking "inplace sorting of a view"...
    done (took 0.07875104 seconds)
    (8/13) benchmarking "sortperm on a view (Int)"...
    done (took 0.175902178 seconds)
    (9/13) benchmarking "partialsort!(rand(10_000), 1:3, rev=true)"...
    done (took 0.354458666 seconds)
    (10/13) benchmarking "sortslices sorting very short slices"...
    done (took 0.983735219 seconds)
    (11/13) benchmarking "sortperm(collect(1000000:-1:1))"...
    done (took 0.032119443 seconds)
    (12/13) benchmarking "Float16"...
    done (took 0.912215955 seconds)
    (13/13) benchmarking "partialsort(rand(10_000), 10_000)"...
    done (took 0.177965625 seconds)
  done (took 12.122105717 seconds)
  (7/11) benchmarking "length = 30"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.026041959 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022818999 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028940357 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023712747 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022583963 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024347303 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.587017092 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022620812 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.028033393 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022368626 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.029954421 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.030962473 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022449979 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.035777149 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.029768871 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022380943 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.026956166 seconds)
  done (took 2.042839107 seconds)
  (8/11) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.024746349 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.027123738 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.027578299 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.043201805 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020543586 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.024050722 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.025599757 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020437322 seconds)
  done (took 1.107051369 seconds)
  (9/11) benchmarking "quicksort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.143037683 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.107962605 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.039707135 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.047402948 seconds)
  done (took 1.225291017 seconds)
  (10/11) benchmarking "length = 10000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.025109417 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022387137 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028610645 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023266734 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022609198 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.024142137 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.595361307 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022570031 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.029048103 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022666574 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.030179254 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.031037132 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022804881 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.035972961 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.030275746 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022534538 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.027352834 seconds)
  done (took 1.914658394 seconds)
  (11/11) benchmarking "length = 100"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.024407517 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.022098653 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.028401402 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.023428746 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.022498764 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.023962774 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.584677161 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.022282141 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.028299592 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.022286345 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.029820578 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.030775956 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.022433507 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.035599161 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.029891597 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.022488366 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.026931854 seconds)
  done (took 1.894486496 seconds)
done (took 38.732184505 seconds)
(17/17) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.044537621 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.027014697 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.032771159 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087072232 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.03675496 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.022368789 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.02157274 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.032306272 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.035971855 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.029096846 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.033229563 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.022066972 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.029501807 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.021463881 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.031514147 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.030799754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.028711155 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.030085736 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.023730653 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.02870239 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.028049913 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.035664709 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.030737461 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.023189709 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.023578809 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.023067869 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.042003231 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.032758944 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.022093069 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.028383037 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.024041397 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.02332691 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.031203557 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.031320018 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.030394647 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.028779772 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.021618466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.030262628 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.028038731 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.025487222 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.028269009 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.025100925 seconds)
  done (took 2.198347686 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.026362723 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.032500225 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.02430348 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.03032593 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028668573 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.033507424 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.028770891 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.028779386 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.031206504 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.027525543 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.028877413 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028529346 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.031497433 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.023435719 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.031545033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.028213517 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029384928 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.023849444 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.031220594 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028269066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.028171254 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.023555394 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029332985 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.031748097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.025231902 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.031349284 seconds)
  done (took 1.63489574 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.034257198 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.049064873 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.062304932 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121913916 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.090393357 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.039999394 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.035279982 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.042784271 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.055712929 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.025903841 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.045022087 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.044555821 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088398699 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.036883458 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.094053766 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.0421127 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.035448666 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.033021466 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028560252 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123585239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044871634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.04516373 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.058377308 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.06810837 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0257557 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075394817 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.031619849 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.031951497 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.043707225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.03344689 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.027830908 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.023086718 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.026573137 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.039558322 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.027693718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.020071102 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.043102944 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034581207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.039828731 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092306448 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.030193845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.030638124 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.051985268 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.118911083 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.026348504 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.021169328 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.031491619 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034714253 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.027619134 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071192011 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036964875 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.027096233 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.03840749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.030999381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.027455279 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036903908 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.029269475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.026134484 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.037617941 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.02657375 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.046205451 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.031591775 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.039693203 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.02691903 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032516904 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.031168534 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.020809746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020390558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055326054 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.040226789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.054565468 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.023919678 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020005043 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033082277 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.037895056 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.03533059 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.022385279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039177425 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.031423972 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.022936789 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039423827 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.026445455 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.023783304 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098844012 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021009908 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.020071309 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019962086 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.020881038 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.022720228 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.031802111 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.038915532 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021030236 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.023633816 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.038474466 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.034361863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.026011586 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.020729866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.020183541 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.022195563 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.029150542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.023859941 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.029032355 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.029089924 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.026816197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.02342888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.057871195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.03135598 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.02597958 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.020014068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.020540208 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.025541201 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.031581414 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.023649643 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.02896116 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.02797266 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.039796254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.028009211 seconds)
  done (took 5.375691946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.106401064 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.100795409 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.051913358 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.127596958 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.02813663 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.03400999 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.100502029 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10611723 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.027138755 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.040384332 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.055471084 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.043963574 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.039830096 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.047490232 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.052849569 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.025831294 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.044984113 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.043647784 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.101484996 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.129499532 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.045297044 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.031228498 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.042062332 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.041118189 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.026177671 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.02944068 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.034708142 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.028217323 seconds)
  done (took 2.491532185 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.02776376 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065378129 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.027174194 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046627376 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.034711346 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022532624 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.026613465 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.027907167 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.037262644 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.020126743 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.025749825 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.024229298 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.024185654 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.027486747 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.026370265 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.031585678 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.031206455 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020818617 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.02696288 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.025120597 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.035897182 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.042063652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0281496 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021117053 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.022750493 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.02090148 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.02130709 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030476129 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.022553023 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021219044 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019638331 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.033990223 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.038146953 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.024560606 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021394907 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.025917576 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.026316051 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.026202748 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.023389374 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020933059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020965034 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027337655 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020995675 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.020178244 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.038389765 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.032820665 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.022604219 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.023149802 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024844641 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019687805 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.030574999 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.029983611 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.022876478 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.035627512 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.023429087 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024758294 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.026035371 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.038381908 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028842201 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.025980087 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.022813806 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.021487557 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024468333 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.023673989 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.042144337 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023979527 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020835896 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.026027278 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.026546101 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.038813656 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.026057605 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.036051908 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019832105 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022454197 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.022422318 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.031113608 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.026274678 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020647605 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.020811911 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.024880009 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02341775 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021834955 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021395771 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.022981928 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020586748 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.021415461 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.025929469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.02221695 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027143329 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020310849 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024590628 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.026659233 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020993453 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0229537 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.030829224 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.02337049 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.039031661 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.028316778 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.024709746 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019749328 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.04338759 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023211345 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.022772114 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024794844 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.033038144 seconds)
  done (took 3.734578785 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.054467734 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.029798057 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.044196299 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057221285 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.040726112 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028550473 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.033358291 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.02911891 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.041952871 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.022112503 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.038598785 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021589986 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.03414569 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.037863144 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.029922681 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.04422258 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024777059 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.044960094 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.04620135 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021512425 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.034593326 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.042102205 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.04380895 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.049654922 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.040761234 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.042485717 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.050747 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024480023 seconds)
  done (took 1.968068706 seconds)
done (took 18.299629242 seconds)
RUNNING BENCHMARKS...
(1/17) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.946292206 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.062888258 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.930080466 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.189575143 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.01818269 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.92146606 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.947278432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.910273798 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.749157019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.928483406 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.291151922 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.194456399 seconds)
done (took 56.0586136 seconds)
(2/17) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.921806077 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.047424741 seconds)
    (2/2) benchmarking "String"...
    done (took 1.211787943 seconds)
  done (took 3.174414543 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.224793478 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.954066468 seconds)
    (3/3) benchmarking "different"...
    done (took 0.979548614 seconds)
  done (took 4.069247201 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.919380803 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.656470121 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.124106717 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.609231892 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.24135009 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.950720248 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.07285074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.026695074 seconds)
  done (took 22.594424659 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.031635244 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.03719497 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 2.138628876 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 2.118906374 seconds)
  done (took 9.25214921 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.335603668 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.119614016 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.120535894 seconds)
    (4/4) benchmarking "different"...
    done (took 0.999348343 seconds)
  done (took 5.496600414 seconds)
done (took 53.391140777 seconds)
(3/17) benchmarking "parallel"...
done (took 0.910840053 seconds)
(4/17) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.991110204 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.288451243 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 3.232284354 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.034870203 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.995755565 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.958297992 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.088509298 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.045254739 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.035503435 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.972750435 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.02770038 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.990699854 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.980839968 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.042445167 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.05944687 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.012344844 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.986541994 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.730374936 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.047353433 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.985505246 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.961323845 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.028438176 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.986984974 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.043239683 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.095945877 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.974104772 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.458998099 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.055455589 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.996338532 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.031402636 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.120984979 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.986484009 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.096334952 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.056537265 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.054055892 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.067487385 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.051334091 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.104045725 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.978057767 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.111817707 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.059402966 seconds)
  done (took 47.736560938 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.125965633 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.082732342 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.181559146 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.217029048 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.76906481 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.196585787 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.316217925 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.080151803 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.091794672 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.372185775 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.17669926 seconds)
  done (took 15.545862916 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.488793747 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.086436207 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.179992968 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.07495581 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.301095619 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.169407281 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.092927651 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.085889849 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.093818717 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.178583307 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.186243263 seconds)
  done (took 13.864966042 seconds)
done (took 78.062501588 seconds)
(5/17) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.312057086 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.98404858 seconds)
  done (took 3.211008612 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.928126348 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.926024735 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.927159662 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.928085643 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.926955555 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.926434519 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 0.946998597 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.931833513 seconds)
  done (took 8.360432723 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.925192009 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.929593967 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.925059802 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.925493744 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.92445799 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.925448646 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.928065881 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.924682653 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.92539229 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.926498674 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.924178097 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.925828032 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.925891227 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.925300183 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.923649712 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.923351107 seconds)
  done (took 15.72503038 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.925907534 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.924403054 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.924338208 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.921686851 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.923176057 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.924367286 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.928983245 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.9287853 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.926873275 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.925168059 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.925199829 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.926032579 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.925487129 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.925081408 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.926367281 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.926976211 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.926886689 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.92928392 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.925737415 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.925628403 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.92524922 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.925885758 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.932720263 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.928882904 seconds)
  done (took 23.143420737 seconds)
done (took 51.366324144 seconds)
(6/17) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.15577899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.739082078 seconds)
  done (took 7.810710069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.938422074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.940144906 seconds)
  done (took 2.814638006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.267896266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.9568428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.439447157 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.203527628 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.955121984 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.954059191 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.361243292 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.954928663 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.955113691 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.954282063 seconds)
  done (took 11.919122216 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.965238531 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.126237137 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.098321231 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.051088554 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.123267905 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.972815725 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.982581935 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.962346902 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.143907635 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.962481025 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.101322678 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.124874509 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.092243045 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.156217797 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.986116225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.116394247 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.136102483 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.087950975 seconds)
  done (took 20.10633591 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.955072782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.960578435 seconds)
  done (took 2.833112401 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.075548414 seconds)
    (2/7) benchmarking "second"...
    done (took 0.969051446 seconds)
    (3/7) benchmarking "month"...
    done (took 1.058443187 seconds)
    (4/7) benchmarking "year"...
    done (took 1.048048218 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.971906584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.960501087 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.970087629 seconds)
  done (took 7.970983247 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.299190894 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.954141286 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.977964564 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.292016992 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.480646755 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74593865 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.473071042 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.752540142 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.69254938 seconds)
  done (took 13.585514365 seconds)
done (took 67.95459592 seconds)
(7/17) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.004212404 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.919679684 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.085344677 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.989581708 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.931766768 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.314706621 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.940593362 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.283837345 seconds)
done (took 34.408298194 seconds)
(8/17) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 5.968370609 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.916033057 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.068357446 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.923680541 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.443901855 seconds)
  done (took 17.270594488 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.194414179 seconds)
    (2/2) benchmarking "read"...
    done (took 1.280344078 seconds)
  done (took 3.412926562 seconds)
done (took 27.572041302 seconds)
(9/17) benchmarking "frontend"...
  (1/1) benchmarking "nestedscopes"...
  done (took 5.915016347 seconds)
done (took 6.827430287 seconds)
(10/17) benchmarking "alloc"...
  (1/4) benchmarking "strings"...
  done (took 5.917820767 seconds)
  (2/4) benchmarking "arrays"...
  done (took 5.919867835 seconds)
  (3/4) benchmarking "structs"...
  done (took 5.922479145 seconds)
  (4/4) benchmarking "grow_array"...
  done (took 5.917871479 seconds)
done (took 24.595767581 seconds)
(11/17) benchmarking "broadcast"...
  (1/3) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.320439554 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.316640784 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.11605518 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.153770595 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 1.479128626 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.141314321 seconds)
  done (took 8.447343561 seconds)
  (2/3) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.96410232 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.966300524 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.957505654 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.967104113 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.968711922 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.959901472 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 5.922111427 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.97015586 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.960736734 seconds)
  done (took 14.553821238 seconds)
  (3/3) benchmarking "26942"...
  done (took 2.997703956 seconds)
done (took 26.913583296 seconds)
(12/17) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.298377284 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.919531659 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.247894811 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.114816834 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.2955298 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.203268891 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.011498459 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.412374634 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.993173447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.369064337 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.09368872 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 5.922812126 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.919838527 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.109862656 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.313428611 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.155246644 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.997180243 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.121859164 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.426729866 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.33141426 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.919823756 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.104205438 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.146388189 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.254024988 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.920064877 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.91946964 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.213356936 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.049496387 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.18899129 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.919270358 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.919825996 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.138067477 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.212407154 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.919496503 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 5.919298171 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 5.919449349 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.206119038 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 5.930272524 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.18310461 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.310894492 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.17646012 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.92286666 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.918721077 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.919034039 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.030731695 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.195511238 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.013629549 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.920211999 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.921213846 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 5.92030796 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.209430152 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 5.978159937 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 5.924442141 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.161153414 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.115574976 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 5.919299896 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.282126148 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304439404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.328251062 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.26209596 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.183898763 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.370205228 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.250161192 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.128238142 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.92058528 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.234484275 seconds)
  done (took 183.984036114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.239057337 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.072167457 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.277470294 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.606370567 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.2526903 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.266713148 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.689760362 seconds)
  done (took 10.32429639 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.859719919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.979013068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.214820589 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.216578732 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.984295981 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.101536452 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.049019974 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 5.922474229 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.141467743 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.015419216 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.255767968 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.218388607 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 5.918624779 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.918742139 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.050108729 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.260274726 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889159867 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.002701827 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.975064869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.253699209 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 5.919667797 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 5.919966026 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.096715834 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.969115903 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.996610479 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.072431225 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.051366722 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.898603303 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.015674326 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.986199242 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.997721552 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.979273807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.980515984 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.929666064 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.987416673 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.273032765 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.986425209 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.985459839 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.121989739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.925516419 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.972441934 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.979538903 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.10854159 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.993857566 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.967621846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.142821294 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.971951149 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.991599813 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.971423414 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.980433263 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.117416243 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.981280118 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.964017668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 5.921233261 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.170380443 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 5.919980355 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.000861205 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.978951645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.980875293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.037316398 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.977734372 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.254091252 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.215275797 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.964295242 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.211507314 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.280869839 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.981622997 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.971702834 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.966095592 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.246795567 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.980318882 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.21515662 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.983310315 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.025034154 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.982633824 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.09013143 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.140378435 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.698731955 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.679249614 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.924442083 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.161508553 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.968245658 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.210673363 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.800944768 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 5.920985232 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.968103472 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.987792814 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.39423556 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.823399416 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.978495966 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.268034629 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.969661537 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.040262724 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.026871815 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.964566646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.978019577 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.11314454 seconds)
  done (took 165.822249984 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.071034531 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.347471101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.181369364 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.493261518 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.500184042 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.081509908 seconds)
  done (took 11.597618882 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.314344276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.570506449 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.998803118 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.003592686 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.030244034 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.964777923 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.966063825 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.118444806 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.878983502 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.991683025 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.964699809 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.989590212 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.967316432 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.096048876 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.965189557 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.98770903 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.966506854 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.013897637 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.987755311 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.044220447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.796330029 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.028494535 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.047954419 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.523708127 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.801759801 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.986791471 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.529536332 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.986570292 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.987484879 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.148674327 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.125035261 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.972757075 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.512899258 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.778988781 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.508252709 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.494161644 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893421071 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.984704843 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.989148912 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.960589895 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.984766171 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.041011539 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.00199127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.98208876 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.195464707 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.262070309 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.815541323 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.19585282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.960933927 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.985592997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.983351922 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.013251916 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.963562776 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.982875777 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.885936372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.312675471 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.737742412 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.965533609 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.031944289 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.518448095 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.844457971 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.964449561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.258498125 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.705718735 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 5.922271596 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.988422863 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.514657369 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890805672 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.044332546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.006196637 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.98909967 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.004321604 seconds)
  done (took 100.775442812 seconds)
done (took 473.426984154 seconds)
(13/17) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.209586842 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.683005274 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.170220448 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 30.949334275 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.396561585 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 32.67562198 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.606065805 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.130092866 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 30.944116758 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.664243067 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.634429201 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 30.942397458 seconds)
  done (took 377.926940125 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 32.083757047 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.815388542 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 32.007942712 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 30.950691489 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.345684421 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.52817653 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.623665293 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.122558067 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.382677251 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.384951748 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.299600386 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.066035458 seconds)
  done (took 378.539287978 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.086678115 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.12210761 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 32.16524401 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.9476613 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 32.439546057 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 31.697109335 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.13982771 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 32.133215098 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.696994174 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 31.467002168 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.357195689 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.513666994 seconds)
  done (took 380.695292866 seconds)
done (took 1138.082451241 seconds)
(14/17) benchmarking "problem"...
  (1/13) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.110898465 seconds)
  done (took 7.03764582 seconds)
  (2/13) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.104202042 seconds)
  done (took 7.02920846 seconds)
  (3/13) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 5.930695921 seconds)
  done (took 6.856234715 seconds)
  (4/13) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.002088642 seconds)
  done (took 6.92836434 seconds)
  (5/13) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.925387606 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.93202211 seconds)
  done (took 12.786400775 seconds)
  (6/13) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.980400214 seconds)
  done (took 6.909977847 seconds)
  (7/13) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.248346632 seconds)
  done (took 7.177923444 seconds)
  (8/13) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.933216656 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.92750813 seconds)
  done (took 12.813642345 seconds)
  (9/13) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.885592525 seconds)
  done (took 6.812369343 seconds)
  (10/13) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.205107315 seconds)
  done (took 8.140905367 seconds)
  (11/13) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.934308567 seconds)
  done (took 6.871105644 seconds)
  (12/13) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.972225769 seconds)
  done (took 6.89858555 seconds)
  (13/13) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.143406502 seconds)
  done (took 7.070562598 seconds)
done (took 104.270182019 seconds)
(15/17) benchmarking "misc"...
  (1/13) benchmarking "fastmath many args"...
  done (took 1.188320318 seconds)
  (2/13) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.077260863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.126309108 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.251851212 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.163199254 seconds)
  done (took 5.543482363 seconds)
  (3/13) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.179954383 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.343055686 seconds)
  done (took 3.447719964 seconds)
  (4/13) benchmarking "perf highdim generator"...
  done (took 1.386279211 seconds)
  (5/13) benchmarking "18129"...
  done (took 5.94577939 seconds)
  (6/13) benchmarking "20517"...
  done (took 1.33593317 seconds)
  (7/13) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.927054077 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.927596318 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.928053363 seconds)
  done (took 18.716673505 seconds)
  (8/13) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.970998188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.974229641 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.974236153 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.9621847 seconds)
  done (took 4.80765472 seconds)
  (9/13) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 3.169819235 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.374261905 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.569691265 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 5.928336871 seconds)
  done (took 16.967875867 seconds)
  (10/13) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.178514077 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.009387492 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.687157534 seconds)
  done (took 4.825957864 seconds)
  (11/13) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.560974717 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.993506248 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.534546387 seconds)
  done (took 5.014428924 seconds)
  (12/13) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.148520026 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.114438449 seconds)
  done (took 5.187082123 seconds)
  (13/13) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.764678281 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.245526955 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.231906463 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.266081234 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.369474772 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.113066894 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.243693502 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.182757557 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.193339704 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.357574348 seconds)
  done (took 13.892277585 seconds)
done (took 89.190164209 seconds)
(16/17) benchmarking "sort"...
  (1/11) benchmarking "insertionsort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 0.968564595 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 0.950183066 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 0.956024862 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 0.960589927 seconds)
  done (took 4.759790217 seconds)
  (2/11) benchmarking "mergesort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 5.927173148 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 5.929944131 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 5.927433227 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 5.928392789 seconds)
  done (took 24.639045141 seconds)
  (3/11) benchmarking "length = 3"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.935537167 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.935210704 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.938762332 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.935009921 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.941034653 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.93537462 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.954732137 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.938011429 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.934766052 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.934822521 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.937985163 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.935666001 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.942692017 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.936959656 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.936607257 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.936266239 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.936337115 seconds)
  done (took 16.870635687 seconds)
  (4/11) benchmarking "length = 10"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.942412258 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.941422321 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.937679273 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.935769877 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.94832618 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.935271682 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 0.979745663 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.94057018 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.934712411 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.940814833 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.942045488 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.939324652 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.948311354 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.939952533 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.941150835 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.940472936 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.941899407 seconds)
  done (took 16.955993115 seconds)
  (5/11) benchmarking "length = 1000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 1.333334381 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 1.12278177 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 1.175808274 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.952542193 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 1.133707687 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.945943162 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 5.926013331 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 1.17744461 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.962161649 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 1.162569799 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 1.306529635 seconds)
    (12/17) benchmarking "ascending"...
    done (took 1.145088272 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 1.193727403 seconds)
    (14/17) benchmarking "descending"...
    done (took 1.149402672 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 1.333749842 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 1.163681129 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 1.10590386 seconds)
  done (took 25.217005117 seconds)
  (6/11) benchmarking "issues"...
    (1/13) benchmarking "sortperm on a view (Float64)"...
    done (took 1.219362355 seconds)
    (2/13) benchmarking "sort(rand(10^8))"...
    done (took 9.429707529 seconds)
    (3/13) benchmarking "sortperm(rand(10^5))"...
    done (took 6.085972857 seconds)
    (4/13) benchmarking "small Int view"...
    done (took 0.936382903 seconds)
    (5/13) benchmarking "sortperm(rand(10^7))"...
    done (took 8.420851512 seconds)
    (6/13) benchmarking "small Float64 view"...
    done (took 0.935998968 seconds)
    (7/13) benchmarking "inplace sorting of a view"...
    done (took 1.098087613 seconds)
    (8/13) benchmarking "sortperm on a view (Int)"...
    done (took 4.956935553 seconds)
    (9/13) benchmarking "partialsort!(rand(10_000), 1:3, rev=true)"...
    done (took 1.378586683 seconds)
    (10/13) benchmarking "sortslices sorting very short slices"...
    done (took 6.050396403 seconds)
    (11/13) benchmarking "sortperm(collect(1000000:-1:1))"...
    done (took 5.943882965 seconds)
    (12/13) benchmarking "Float16"...
    done (took 5.927314073 seconds)
    (13/13) benchmarking "partialsort(rand(10_000), 10_000)"...
    done (took 1.557113062 seconds)
  done (took 54.875141136 seconds)
  (7/11) benchmarking "length = 30"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.950281874 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.942479745 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 0.942393375 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.935415201 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 0.947423255 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.935252277 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 1.201848733 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.941734134 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.93828583 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.945764183 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.947932152 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.945967569 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.949788021 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.945316769 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.951122493 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.942634445 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.942016048 seconds)
  done (took 17.23208421 seconds)
  (8/11) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.170865049 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.972249152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.132749722 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.589196298 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.158699938 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.970517963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.583585446 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.199627199 seconds)
  done (took 10.70452355 seconds)
  (9/11) benchmarking "quicksort"...
    (1/4) benchmarking "sortperm! reverse"...
    done (took 5.927384791 seconds)
    (2/4) benchmarking "sort forwards"...
    done (took 5.926089796 seconds)
    (3/4) benchmarking "sort! reverse"...
    done (took 5.927048761 seconds)
    (4/4) benchmarking "sortperm forwards"...
    done (took 5.927903269 seconds)
  done (took 24.635543191 seconds)
  (10/11) benchmarking "length = 10000"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 5.926452398 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 2.759770248 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 3.511113215 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.961832992 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 2.874087938 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.960469057 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 5.92508504 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 2.765020769 seconds)
    (9/17) benchmarking "all same"...
    done (took 1.122916118 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 2.708689364 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 5.224554954 seconds)
    (12/17) benchmarking "ascending"...
    done (took 3.644279768 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 2.87063131 seconds)
    (14/17) benchmarking "descending"...
    done (took 3.711161173 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 5.361411605 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 2.761736681 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 3.612308843 seconds)
  done (took 57.631500222 seconds)
  (11/11) benchmarking "length = 100"...
    (1/17) benchmarking "sortperm(rand(length))"...
    done (took 0.969954652 seconds)
    (2/17) benchmarking "sort!(rand(2n, 2n, n); dims=3)"...
    done (took 0.995157241 seconds)
    (3/17) benchmarking "sort(randn(length))"...
    done (took 1.011465628 seconds)
    (4/17) benchmarking "sort!(fill(missing, length), rev=true)"...
    done (took 0.957463759 seconds)
    (5/17) benchmarking "sort(rand(2n, 2n, n); dims=3)"...
    done (took 1.00012039 seconds)
    (6/17) benchmarking "sort!(fill(missing, length))"...
    done (took 0.946633986 seconds)
    (7/17) benchmarking "mixed eltype with by order"...
    done (took 1.93492827 seconds)
    (8/17) benchmarking "sort!(rand(2n, 2n, n); dims=2)"...
    done (took 0.964173553 seconds)
    (9/17) benchmarking "all same"...
    done (took 0.941739653 seconds)
    (10/17) benchmarking "sort!(rand(2n, 2n, n); dims=1)"...
    done (took 0.954457025 seconds)
    (11/17) benchmarking "Int unions with missing"...
    done (took 0.987262236 seconds)
    (12/17) benchmarking "ascending"...
    done (took 0.973292477 seconds)
    (13/17) benchmarking "sort(rand(2n, 2n, n); dims=2)"...
    done (took 0.974266688 seconds)
    (14/17) benchmarking "descending"...
    done (took 0.975481253 seconds)
    (15/17) benchmarking "Float64 unions with missing"...
    done (took 0.990530091 seconds)
    (16/17) benchmarking "sort(rand(2n, 2n, n); dims=1)"...
    done (took 0.957373623 seconds)
    (17/17) benchmarking "sort!(rand(Int, length))"...
    done (took 0.963400175 seconds)
  done (took 18.423647657 seconds)
done (took 272.871588683 seconds)
(17/17) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.11523182 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.57263505 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.081825278 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.143762763 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.091663692 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.17841865 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.15079886 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.11492195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.478576442 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.105943058 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.330940374 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.135078286 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.569490263 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.153690891 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.109686657 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.105541563 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.285087808 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.484255772 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.103183293 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.57646091 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.100169121 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.595112 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.118210582 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.474574134 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.3201788 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.599749853 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.895517054 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.277089727 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.118466853 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.113365222 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.810049344 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.084594503 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.083872627 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.081892451 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.098970317 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.074146736 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.097108168 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.248928421 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.073763128 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.434615048 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.564807147 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.36110961 seconds)
  done (took 61.449308148 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.975558403 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.039538943 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.043854899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.025729403 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.480512088 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.04510588 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.092217336 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.080436969 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.037148097 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.072394738 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.093086255 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.523763855 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.110766943 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.499984517 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.081459419 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.095334698 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.038928021 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.49492472 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.103410145 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.070909102 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.000793181 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.043303382 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.997110361 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.077865639 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.994508532 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.024285556 seconds)
  done (took 30.084997226 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.021796104 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.105256634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.144477762 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.289328968 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.079506338 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.015600818 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.190776114 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.085413215 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.335644317 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.910796103 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.048168998 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.099065557 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.043994352 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.154479725 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 3.394943178 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.005940654 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.151284314 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.10923168 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.111340702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.299512972 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.247023717 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.04994931 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.195443878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.013625464 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.636031494 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.632674746 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.94817768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.284696902 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 3.397359149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.043921802 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.091651339 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.162949423 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.218718748 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.151810326 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.105477425 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.001539282 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.989563218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.048058103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.656339472 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.118589996 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.18864574 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.091204301 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.140830671 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.515876807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.954028216 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.999459698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.247930043 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.052874291 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.097794942 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.0164023 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.188164437 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.13004863 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.06382119 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.156866973 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.095773878 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.539122523 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.064122791 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.231993869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.153542138 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.377009324 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.05452761 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.255087439 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.122115739 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.945829626 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.111091882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.163253053 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.172118878 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.07592916 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.156926141 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 3.327985994 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.53901285 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.063495611 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.007921829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.047803209 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.115233362 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.275835028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.681446308 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.122825417 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.23684973 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.173824371 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.226999254 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.251949116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.112683923 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.812447001 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.997567375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.989639668 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.044310804 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.181541705 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.167904059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.492327758 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.556613939 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.256365395 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.292173009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.418347218 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.262927183 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.242130465 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.98192805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.987555018 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.141051191 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.526516846 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.063856564 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.155081767 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.520386503 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.262065076 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.175492073 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.423980724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.16086326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.989995698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.166595377 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.973510464 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.164286236 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.6657951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.451353043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.263303169 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.977861516 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.514645529 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.069254159 seconds)
  done (took 181.423677076 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.932666747 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.934234979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.930694818 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.934337808 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.933234655 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.416268369 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.972678842 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.935422579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.277093651 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.973299124 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.931210187 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.930844155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.933662912 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.93599106 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.085753732 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.870591904 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.525256194 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.930897125 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.929576933 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.934087913 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.582568032 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.934337551 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.928969155 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.930982864 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.929487996 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.931134774 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.933794862 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.939665209 seconds)
  done (took 145.293146822 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.004363824 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.316090881 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.018352592 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.071526528 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.035008015 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.007069203 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.316646541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.022499215 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.020820169 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.015876104 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.970332729 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.219860067 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.238441318 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.354350413 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.048413835 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.017069738 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.491503813 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.12598778 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.014448708 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.00913795 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.150700797 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.272857927 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.183104745 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.222680322 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.115420545 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.23683497 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.069458074 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.001017213 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.107842419 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.308906033 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.998983309 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.310300718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.158853449 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.997079688 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.313515575 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.216613024 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.349372292 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.428260137 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.14502746 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.966903374 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.966361959 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.172964605 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.273520291 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.049333554 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.991527778 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.479296229 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.007696664 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.274774122 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.036197026 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.971149823 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.005942679 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.008965857 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.172757032 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.765485993 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.16422575 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.250962901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.400610246 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 5.959902878 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.036875005 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.196331734 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.970134722 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.314879543 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.403407337 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.04631286 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.007467613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.790013021 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.074992954 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.320504196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.36535979 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.019689618 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.227343797 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.175615007 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.970509888 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.195978433 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.138207665 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.442891297 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.345290806 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.104377168 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.077928991 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.017368516 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.201788998 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.980518526 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.440755034 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.090731789 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.97064973 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.316206567 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.246187445 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.976781658 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.001076117 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.099915423 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.145713115 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.092524156 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.24719957 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.070932123 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.58500359 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.227076117 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.313027085 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.011752425 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.069267275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.979882085 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.589647613 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.152399113 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.982270094 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.229165858 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.40776327 seconds)
  done (took 132.428334172 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.447396624 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.004401554 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.160880795 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.352725621 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.244111216 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.120089485 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.238585717 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.039211935 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.167906312 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.133847753 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.136309794 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.064703183 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.4156967 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.603985669 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.007062056 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.089439146 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.046627611 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.447999318 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.230397145 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.086291864 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 3.702817762 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.54428198 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.229896961 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.247555713 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.312401814 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.339683347 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.488270431 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.085217318 seconds)
  done (took 42.92463507 seconds)
done (took 594.534573788 seconds)
SAVING RESULT...
DONE!
