cset: moving following pidspec: 2574546
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.291612408 seconds)
loading group "shootout"... done (took 0.783235443 seconds)
loading group "string"... done (took 0.218522528 seconds)
loading group "linalg"... done (took 3.154386261 seconds)
loading group "parallel"... done (took 0.021592611 seconds)
loading group "find"... done (took 1.165738651 seconds)
loading group "tuple"... done (took 0.707750293 seconds)
loading group "union"... done (took 3.059199592 seconds)
loading group "dates"... done (took 0.157440457 seconds)
loading group "micro"... done (took 0.058293815 seconds)
loading group "simd"... done (took 0.372031602 seconds)
loading group "io"... done (took 1.410363429 seconds)
loading group "random"... done (took 2.301316812 seconds)
loading group "problem"... done (took 1.154692587 seconds)
loading group "array"... done (took 4.324948412 seconds)
loading group "misc"... done (took 1.110880131 seconds)
loading group "scalar"... done (took 3.567307112 seconds)
loading group "sort"... done (took 0.310624931 seconds)
loading group "sparse"... done (took 3.517457616 seconds)
loading group "collection"... done (took 5.974299849 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474428826 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.072169036 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.266608229 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072205678 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.270528123 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.08260152 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.09119462 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.072444237 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.110429036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157389288 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.238478288 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.361504555 seconds)
done (took 4.997105179 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.31732858 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032619482 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122389715 seconds)
  done (took 0.745446274 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.135531215 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015622469 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022624861 seconds)
  done (took 0.758538405 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020442381 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.098895606 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021390439 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022103515 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021941615 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021416474 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021249218 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021221297 seconds)
  done (took 0.814450284 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.02874457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022367224 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020681751 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022088863 seconds)
  done (took 0.679007316 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022741427 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.090650259 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.026338226 seconds)
    (4/4) benchmarking "different"...
    done (took 0.026272023 seconds)
  done (took 0.747453666 seconds)
done (took 4.680699673 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.191029495 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.758081129 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.867549338 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.17341486 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.340346925 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.316677632 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.074600326 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.225435977 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.144649746 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.033868639 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.177779418 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.03597104 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.502770046 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.559788534 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026349669 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.145102426 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.563744947 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038373046 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.068029753 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.148426241 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.035051972 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.03834741 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.042298307 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027233897 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.067016249 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13579924 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.569520671 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.065057005 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.023978672 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.047124535 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.026700424 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.027991928 seconds)
  done (took 9.121577886 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156081234 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139329229 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023430972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.057254949 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.051999213 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024635906 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029916261 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022794674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.041865672 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.085050238 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.044901877 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151946542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.020997138 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024568953 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138085081 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.111233127 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037200349 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036554755 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022231054 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.035996068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.047400408 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034185606 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.031959824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031461408 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.066193417 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.08603543 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.040464248 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.065132018 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022408152 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.033532597 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.052946241 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.060832331 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022627138 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021210451 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.063060447 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.042539243 seconds)
  done (took 2.630781463 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.751242815 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112956589 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.13746105 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.177079206 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066053418 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.048891069 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.171397881 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0725061 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.053328358 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0238079 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.190123585 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.649064172 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.160664291 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.278225003 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02834665 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.277080053 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.877940522 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.94758043 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.022476539 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022782305 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.128024172 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025784845 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.285881711 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.021097166 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139388664 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.510812914 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.081167871 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024605996 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.050331036 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.135422418 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020703837 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.092386522 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.04571449 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.024895108 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.359684712 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021485975 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019633357 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.040523908 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.050737038 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021807303 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.022818646 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.030411002 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.020875802 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068775825 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032337032 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.4881223 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024891824 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.666114427 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.619958984 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.028987335 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026275888 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058768243 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019919191 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023254749 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.539688667 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.092449901 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.02263794 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.280808803 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025389949 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024100724 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.046433452 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.054513213 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023111272 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.02437566 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026248592 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.040177284 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.041941902 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032933477 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.041758728 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021704489 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022740678 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021229505 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.386752244 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029324502 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.122922325 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020419353 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026160946 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022534959 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022168453 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.060503977 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.047725005 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.044778912 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026212287 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023070869 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.0221889 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.540508649 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.939421142 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024857492 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024490951 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.327149189 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020442303 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022482503 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024115083 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043547123 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023309831 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019980798 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060577654 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.025218942 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.126467463 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.346305501 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.024530428 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.021257913 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.554962538 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.023890979 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.052479171 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070895515 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022263639 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.05540458 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022148275 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.01976186 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025699354 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.01962524 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.044248689 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.020908862 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021300874 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.020775882 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.021649729 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023247936 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022118068 seconds)
  done (took 23.232297283 seconds)
done (took 37.322281316 seconds)
(4/20) benchmarking "parallel"...
done (took 0.763111759 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.20301379 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.050068915 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019688221 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.153370757 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043195431 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.129571811 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.165282164 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.120863374 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.044050353 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.0438849 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.043852177 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.171171842 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.178687644 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.044936499 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.112725299 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.179295895 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.044978056 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019813061 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.043957846 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.044756605 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.044490693 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019686448 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.043883318 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.044612523 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.111746384 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.043393154 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019608331 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.11285444 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.045335653 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.114044368 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.045823454 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.045574392 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.046395522 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.11436031 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.047211879 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.115258141 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.019895118 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.047071598 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.04762575 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.048892913 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.048586957 seconds)
  done (took 3.798611717 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046411093 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038355062 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.053891284 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018093486 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028044571 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038456662 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018118677 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037951674 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.055452181 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038513205 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038405856 seconds)
  done (took 1.156181783 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041534001 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039160196 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.046871024 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.01805317 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029741423 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038916085 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018009802 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038653237 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.054712635 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039065253 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039114576 seconds)
  done (took 1.096929383 seconds)
done (took 6.723897541 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.146615481 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.116965595 seconds)
  done (took 0.945820576 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.571002871 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.199990147 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.124035532 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.242100304 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.117435286 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.14937031 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.654279965 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.151616255 seconds)
  done (took 6.946792331 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.075079271 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.138597074 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024154895 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022567245 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022821266 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022690429 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024209773 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022973702 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022214868 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024630993 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024272286 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022427601 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023267128 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024346634 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022542657 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022655098 seconds)
  done (took 1.360267474 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.027866483 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025309844 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026064288 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016804285 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.026750824 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025353355 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026464829 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027742924 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026013636 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026489502 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024509528 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027126302 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025786962 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024617172 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.026983867 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016892435 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.02720665 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026423012 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028506998 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.026814356 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.025787194 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024191912 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027551677 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025589132 seconds)
  done (took 1.319171157 seconds)
done (took 11.264816955 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133350944 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.028741248 seconds)
  done (took 0.853415668 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.121921236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120829076 seconds)
  done (took 0.94424765 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027700784 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015973703 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.031001332 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023694097 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016147939 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015883081 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.029785302 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016115911 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015911907 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016029254 seconds)
  done (took 0.913682822 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019209026 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022391682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020535211 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019009162 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020496998 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016895894 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019116622 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017168021 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022356504 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016256891 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019713328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037427806 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.01915463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037891254 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019146499 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019682025 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021008309 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.018926923 seconds)
  done (took 1.090799826 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017869331 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016737788 seconds)
  done (took 0.741473419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020271973 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016848192 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018351384 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018303492 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016487232 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016049328 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.01647744 seconds)
  done (took 0.822051642 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386526409 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.089860905 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31672091 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024615514 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036150218 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.233473631 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019689659 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023738217 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023511994 seconds)
  done (took 1.856530539 seconds)
done (took 7.927051034 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.044984319 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144713278 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145186295 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437929904 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.033790347 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022553368 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.055358844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219128755 seconds)
done (took 1.81836882 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.273533574 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.262620612 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.182215753 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.020761883 seconds)
  done (took 2.174160916 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308020947 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.136060195 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.030798723 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022912436 seconds)
  done (took 1.220765635 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022097937 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027405699 seconds)
  done (took 0.7684358 seconds)
done (took 5.156738965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03023608 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.01667294 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.026021241 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018138499 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.01780594 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017419159 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017419394 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.01815309 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016328385 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018159061 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018141566 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018076802 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017856058 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017846774 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017382612 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018133499 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016330489 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017855278 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017808692 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.01785834 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016257473 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.01812167 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017393279 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017881354 seconds)
  done (took 1.148610203 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.039204197 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.02209619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022025216 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021970778 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023196965 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022046517 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022078649 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022011191 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022180658 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.02113775 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023134831 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023185526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020997137 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.023261922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021127791 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.02358214 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022205042 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022098711 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02108401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.023289112 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022092279 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022038177 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023168088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02206982 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023156275 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023118157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021153905 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022079263 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022108935 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023126867 seconds)
  done (took 1.405914596 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023113866 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015021479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015246097 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025375937 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.014966499 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015144581 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015508151 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014813647 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015182887 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.01594915 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.01548458 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.014927863 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015685387 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014899865 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.01500932 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015499978 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020277505 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035652453 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015227453 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015000506 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019772335 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.01534023 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014946438 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.014982821 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015449879 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014980184 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014818873 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015333334 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014979465 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015564946 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015005917 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019651189 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021153567 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.01541764 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025360452 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020200733 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015444518 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019614586 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.01579851 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014873768 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014844236 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014861164 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015044242 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015023541 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025515179 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015192452 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016019413 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015478905 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0151386 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014879759 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015030226 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016373175 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020729141 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016058028 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014900243 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016026086 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014852141 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015505567 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015007425 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014872558 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014923638 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019064317 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016201052 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015593448 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.036532905 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016116227 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025491852 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015062279 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015416009 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019212259 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015486567 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.034795663 seconds)
  done (took 1.973258252 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028348826 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.024687292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034137208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024649555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018334627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015933038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018745859 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015861626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024793289 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019171279 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015905889 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018715103 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02476879 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019135255 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016871099 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024723168 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019119174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018417095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015918752 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019107644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016888662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018731802 seconds)
  done (took 1.177112254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105840451 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022396572 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.067579709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.021865398 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020614323 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0216774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022386525 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022243655 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022511746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02352481 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023511584 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022483802 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020576463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023409218 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023479015 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023305692 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02253748 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.02337487 seconds)
  done (took 1.253416012 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.03988622 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.023840315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.049877082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.023702878 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.023809302 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020394145 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.027278403 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.02598826 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020296064 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.023960066 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025977819 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020361626 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020303306 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023949082 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020347541 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.023992653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020315868 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0240412 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.026052618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.027294242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027254825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025946859 seconds)
  done (took 1.28794584 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036843634 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021103373 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039345123 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023034784 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015417356 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015499811 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023073746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.021871492 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.022931189 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020899693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022010357 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015515021 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.023839804 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021972253 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024004823 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021932007 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020962101 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.02191863 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020966304 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015484779 seconds)
  done (took 1.170650805 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124951321 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017482187 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017283383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021393492 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01722547 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.01722842 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021545391 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017236302 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.01723966 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041392958 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017248738 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017242073 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021609616 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.019956347 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017343683 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021589675 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021775522 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021565793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017419546 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017296666 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.041529259 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017303121 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021552388 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.01730599 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017256852 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017319894 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017267232 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.01997601 seconds)
  done (took 1.396806294 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03849721 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.014885794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.01500998 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.018692395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0187545 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024391244 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.018744209 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018727025 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014743804 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015078651 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.016958373 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014765081 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014726819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.02392802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.014725886 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.016989721 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023871858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.018773893 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.026697239 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024518246 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.01699307 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023845579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017017868 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015164039 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024636361 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017002394 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018762166 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.019514392 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.016874307 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015122855 seconds)
  done (took 1.30480533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029284641 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026133473 seconds)
  done (took 0.779622349 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.020830992 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.034857452 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014936027 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.029657225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.026599735 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019274946 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025159595 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026718724 seconds)
  done (took 0.915443656 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.123337692 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.145055847 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017025232 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017183506 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.12089198 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08311633 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.130644279 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028576846 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030357038 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019809158 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016833776 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.130701313 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016396584 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.02999213 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017883459 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026229046 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023744307 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034498273 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.02938528 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015444725 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029126586 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017038974 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016263677 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017064293 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017303365 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023180979 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.031948276 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.02942559 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024684234 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014883104 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.034931269 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015634106 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016260493 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024666693 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.12256291 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015888556 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.05287662 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015812597 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019710928 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015535731 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027431076 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036314035 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.029808541 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033012331 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.016910578 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017292566 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015583945 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017110419 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019780459 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024710599 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.01579065 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023105336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015505784 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017007943 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026229439 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0159463 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020045698 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024954327 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029404217 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026140501 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028173904 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031071819 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024479189 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023573698 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016407931 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035682452 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017253137 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.02903 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030523617 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016865369 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028180972 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.01564602 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014966099 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015775376 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049185152 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.016956898 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016560618 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015890532 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.015942622 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.016968119 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025106798 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020086662 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023073519 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018511932 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031365124 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024724916 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015599077 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022239195 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.033686359 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019865501 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015826746 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032479739 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019846623 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015622031 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.03335016 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026194104 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017179977 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016442715 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019804868 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.028763295 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.01696638 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.014927038 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024194468 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017575754 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.123877838 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.02061266 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024295659 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.015960636 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026243965 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022104076 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017551939 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015338596 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020981091 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016904893 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015311213 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025512131 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016242672 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030640749 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023173655 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030785542 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031175661 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026759042 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032092515 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016083727 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015359121 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.03447563 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.02549881 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017410006 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034159742 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.01610087 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026642886 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016258773 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017578967 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025436297 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015638097 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017748977 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016333268 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022184658 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017624455 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017915161 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022302082 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024775305 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028413498 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017315075 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025073928 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016566621 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032195274 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.025971456 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021255385 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019425852 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017006541 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028316941 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023247136 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025307767 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016173724 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017012344 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016385618 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027487173 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025659692 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.017910339 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.025007416 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021283622 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.016970319 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016370734 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017239951 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020299959 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019583905 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016830242 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024073982 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.02492473 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.030270067 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.023231876 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025315505 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.015707135 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016080387 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.017863538 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016074225 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021097638 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025358934 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031775977 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.027819664 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.037663168 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016368784 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.025852643 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.017745336 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033131046 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029519517 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017168523 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020584821 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015420115 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017833503 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025391781 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027304481 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.029913462 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031185047 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021307277 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021204854 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016194146 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031429031 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016701101 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024735813 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025552503 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.02225975 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016261171 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018066436 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025386183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021313691 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017441154 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032168446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023721104 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016286152 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030772928 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016675813 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.026956038 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.01626738 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020293201 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021896872 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.01828208 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025843132 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031628309 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015618714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016706142 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032029988 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018216674 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018022769 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024365213 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.031721493 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021320245 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024197688 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026972028 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027005921 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021258831 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026614878 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017418592 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025564655 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.01964573 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.02822718 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016485587 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034825241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015614909 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.031739302 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017127788 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027530639 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016786303 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025801168 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017289728 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.033652678 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018008617 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017247773 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.02812355 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015622517 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025437925 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.01634453 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021735514 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023383549 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.025572363 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018205821 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.02585256 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018004923 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025294877 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021361497 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.025274724 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.02540188 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021276894 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016230886 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024578716 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027260895 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.177416266 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017153556 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.01685871 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016003422 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024846629 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016878976 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016434459 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023722112 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020720995 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021810342 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.01674514 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016886045 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016707261 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023802318 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024677579 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033015826 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024039618 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022935528 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024455427 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015304318 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030678475 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.01538454 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022903019 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014781731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021041918 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024341829 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015591917 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03366357 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016640349 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023104413 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026588383 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023874926 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019601426 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032639057 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.017923501 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023609958 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023108708 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020273143 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022302091 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016628306 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023703811 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024533507 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025420002 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.015938718 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022799677 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024074612 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016639387 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022342401 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016551558 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023583004 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016704094 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014778134 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.02036585 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026085026 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020490101 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020651493 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015524617 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014644124 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015548775 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.021153824 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02034669 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.023707837 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030450412 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014630251 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.015925608 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015161487 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019518408 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.149136353 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.02513312 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023378012 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.02045165 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014800758 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016436095 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016547813 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015291322 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.017718928 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.01474554 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015116345 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025393916 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.016463895 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020011655 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015344974 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016281405 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025039137 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019019265 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.01569787 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022343226 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015251164 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.020922651 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.014868272 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.016659671 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020298662 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015218553 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019525318 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025362827 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.031391267 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022425235 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.02417543 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016300247 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023158968 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030487508 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.022592281 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016209608 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024639676 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015153495 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.03384258 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.024680022 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023968198 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025075095 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016445813 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032313442 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020623132 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.02539361 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030833579 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016557563 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.022830037 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015605804 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031118818 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.020673488 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015608482 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024118959 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02354431 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.021986619 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0269866 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.01643454 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024082479 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020029164 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020068717 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017157 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017042564 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.02425342 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.031622618 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016463905 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.020436555 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.023590914 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.023967118 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.020633953 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027704113 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024046391 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016966744 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017577354 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020068649 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016806599 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.02797347 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01633872 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.020988778 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.02089659 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.015928843 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023083882 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032463008 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025158503 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025346391 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.015989038 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015485068 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.03386874 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020093786 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019120527 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.023990555 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025668864 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028164602 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.02519769 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.032812867 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016501504 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.02228583 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028107417 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.016892705 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.015927094 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020176666 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017529339 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025076256 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025641246 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.02337466 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017825993 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02316693 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029551007 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017364424 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021053965 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.021764195 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.016848886 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026481642 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024022481 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024638651 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017449211 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.015924304 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019779895 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.024746964 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023562624 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.024978906 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017067372 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024317201 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030055859 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023633668 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019369388 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016123076 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019325172 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025194443 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.022172686 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016091995 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021179731 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020139453 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.024380462 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025461139 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.02107985 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.01600889 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033209111 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024627221 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025096768 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.017726301 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017887818 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01647947 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016065575 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027140096 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016068067 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017658165 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021263261 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018093602 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.033994077 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024197283 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032099334 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017090685 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021017629 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016125476 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025652306 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021196661 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016158322 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026525602 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015617033 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031465261 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.027856695 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.023150776 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016077543 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021648694 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024693526 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031249236 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025678933 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024898644 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019458957 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025644818 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017844747 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027024289 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.01616672 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015321842 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026122105 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024674051 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028297226 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016091532 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026114939 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017967585 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024333339 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.024726428 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017750946 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017757428 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.01768996 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025552347 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021190957 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.02528945 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021261173 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033306534 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017249179 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027338625 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025174454 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027317375 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030182447 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028524876 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024880665 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016748304 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02369634 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.024862182 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017390216 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021569713 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.019596174 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038685633 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018048457 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017972336 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030781513 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024574681 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016490743 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024211976 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021464626 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026554083 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017307132 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026650659 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.021890632 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017198564 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021337303 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021353064 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015504303 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016175212 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016574877 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025948723 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021413275 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016415873 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035761537 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017814496 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.025169189 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.027186456 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023324061 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017831631 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015531339 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.01715162 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029595763 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031887469 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020539543 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024888136 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.018111943 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.179117171 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.01511888 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024247286 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023390666 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024037521 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015426231 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015654016 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030354725 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030797882 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020619958 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032416123 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0243178 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.016712786 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036537219 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024365306 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016263644 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.025939079 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017100397 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015046366 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014950515 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.016667778 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026492531 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015302448 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017114785 seconds)
  done (took 15.153048692 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.060515287 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016599355 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015362297 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015395809 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02197136 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016465204 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015325232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016468886 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016465394 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017472704 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015489837 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015436727 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020484256 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029634412 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022562991 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018778957 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015411171 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016451451 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015395498 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01642755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020884136 seconds)
  done (took 1.191750259 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019871016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019440655 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018782505 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.018950501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018382423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015616366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018721912 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015526787 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019170558 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0159583 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019152686 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015601426 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.015931652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.015894286 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015882411 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016919662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019154217 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018440974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015561543 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018729943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016897475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018699167 seconds)
  done (took 1.148723282 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018271761 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016063979 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023894602 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.014979964 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014856202 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017413539 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.01494846 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019694586 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019731669 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019710882 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023741325 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015782372 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014925257 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020998722 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014898215 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015654952 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.068599928 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015802613 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015832379 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015181895 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017084911 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.02394996 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015176531 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015254691 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019686198 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017620854 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015138067 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017195135 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015592486 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019789695 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015785535 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.014871752 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023852998 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023051334 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019776805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019751865 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016240901 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015708083 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015102451 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015086452 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023267179 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.01626166 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015300125 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016024415 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023680957 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015182424 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014943943 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023866797 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.01498977 seconds)
  done (took 1.682026778 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027111565 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.06805574 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.022794672 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050482614 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.02754421 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020046139 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021994165 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.052871511 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016229173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016590943 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028232972 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.028935641 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017545446 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018648725 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022885242 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017469516 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018049432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016877294 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019518423 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017190181 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.01966789 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022948518 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027436621 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028497902 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018308213 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.01693299 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017112608 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018431592 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028184976 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.019993229 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.018634832 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019047454 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027881807 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024021039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017201042 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017238278 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028292051 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.017662682 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.01750479 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016116746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017228621 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018454967 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023002272 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028462381 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017620614 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.02392717 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017489656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015750564 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028437022 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017306924 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020426466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029323602 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018477395 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017755269 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018760581 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028108484 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017746587 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016604473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.017716461 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028496649 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016214182 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018312334 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029155229 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017185631 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020246273 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029322035 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024087371 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018475863 seconds)
  done (took 2.427994292 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026511077 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.021914701 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02584686 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02595573 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022022565 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022058386 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.021941089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.021964124 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.021813801 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024383791 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022073607 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131019862 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.019378734 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.02265352 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.022061078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022056385 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022033259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021996406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022044608 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022006179 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022102531 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026123727 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022080761 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026228294 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.055189559 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.01924105 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.021900362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.021983413 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026327198 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.022019313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028638105 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.02209329 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.022065874 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.026416474 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028584248 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0219408 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015697485 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022013724 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.022167489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.022286611 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019354943 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.026737926 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.022226428 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019420721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022358772 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022204726 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.02681009 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029018613 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.022996092 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024936736 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.022335608 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.026782934 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022140588 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.02331985 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028684114 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.064768641 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028911248 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028987826 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02375558 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028624544 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028749028 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.037637759 seconds)
  done (took 2.43393137 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029624724 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020542526 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025616282 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015154356 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015019159 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020595736 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015060738 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015129391 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020506327 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020431064 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02176232 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020673461 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02222377 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021770886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020551756 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022256325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020515052 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020553704 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020436834 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.02060183 seconds)
  done (took 1.196749842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018772469 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.019994332 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015715437 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019351473 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015773809 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.018940013 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015735412 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015714478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01580566 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015790774 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020030508 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019932849 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015766894 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021614734 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019014738 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019054433 seconds)
  done (took 1.054102201 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020044876 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024896942 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120500075 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016389722 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018145697 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015735026 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016519617 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015086977 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017629081 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.031178096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016077545 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018394651 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016554465 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015309306 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015850844 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018319134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017594755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016148424 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016502028 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120793809 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.028131194 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.016969285 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018403875 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017042665 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018049341 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.027769267 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017312323 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018070826 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.015442504 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018363902 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018075559 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.025922425 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018042186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.016545436 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015291143 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.01610179 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016462177 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018338321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018329715 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016482005 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.01506674 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018013885 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016569255 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016872546 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017550321 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018345709 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.01754423 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.025287812 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016338867 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0180721 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016466593 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017518924 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016497571 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.022835 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.017990134 seconds)
  done (took 1.979981712 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03552118 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021630923 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014921069 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014864315 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021078979 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022375606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021349457 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.021848489 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022390632 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014930884 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.02248924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020842851 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022538209 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021547048 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022491127 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021545677 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014964716 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022308783 seconds)
  done (took 1.156720097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023664933 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020270477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.02031799 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016838043 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016834644 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020404155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015300004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016475353 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016449386 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016849608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016817989 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016468773 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016436642 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016438366 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020030724 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016791412 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016427908 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015486265 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016809336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015404072 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.02051842 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015509508 seconds)
  done (took 1.155639007 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.179911039 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.141237468 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038225447 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033488574 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025147225 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051042915 seconds)
  done (took 1.238195325 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053647489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024176578 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021578826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047883495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020640118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019497275 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019528109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019726807 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022809153 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027950232 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019907865 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022274746 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022557662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024252942 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021234491 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020741491 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019775318 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019798458 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021716312 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032238109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019919047 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022235785 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019962556 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019636428 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019821174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02421661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02260485 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028164752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019674944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022166805 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020737452 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019856153 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022202034 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028040535 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021440977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022542785 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019840331 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032385516 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020748038 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024156163 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021308055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021318253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022611917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022336507 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022210667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020139953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022523908 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02007192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020181602 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034950296 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021090796 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024355367 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021584423 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022571973 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022885237 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034876103 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028396427 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024522841 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022590133 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029936124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026180662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02226742 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026155783 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030292894 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022908383 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026216488 seconds)
  done (took 2.361174429 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029757524 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049394588 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0195494 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027795662 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023802622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019793713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.01971392 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019731365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019686215 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022118818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06131447 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020022098 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023979916 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024092486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019910498 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019749137 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019667499 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023869946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022071407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034287034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019863438 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024084141 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024021284 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023998782 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028077321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020839544 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.01977361 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019782506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019850702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019780901 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022445746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.01989548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023994685 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022009839 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023996438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019884845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019751071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022408879 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019752841 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020814345 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024182908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031853621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019848542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019928564 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028422265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020029731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020016431 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022289944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019957251 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022308643 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028402931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028345296 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028371596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024595211 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020238406 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020235359 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020000014 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020063463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020342335 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022176511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026051449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021067954 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037348487 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021314527 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021218309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026183317 seconds)
  done (took 2.359259497 seconds)
done (took 51.06576124 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215170215 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176301771 seconds)
  done (took 1.150414649 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.131316764 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.128911865 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.157596948 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023541008 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.080970674 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174444164 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.126101777 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026111928 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.02382678 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.02502574 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023467369 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.024790673 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.024873304 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023348171 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086005299 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026143532 seconds)
  done (took 1.88620824 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090470559 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.272507382 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.066732834 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022871981 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.076399351 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.032293911 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.023800329 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028934277 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.031996384 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023034711 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086592006 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.043765777 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.026846385 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.031611107 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.02363187 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026800534 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028752839 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.032123935 seconds)
  done (took 1.747939974 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.089545604 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.031477375 seconds)
  done (took 0.900972523 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.136585898 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.061942112 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.104347782 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.335091858 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.09430368 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.289008524 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.100342251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.096545421 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.067868721 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.09371818 seconds)
  done (took 2.152550862 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.059607732 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.054386582 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.274568575 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.053704304 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.033706963 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.028633835 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.02965028 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.028893397 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030232837 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.028930402 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.071319115 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027681555 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024167979 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.067066516 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046244652 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.058161971 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023444758 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028378062 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032399296 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023335603 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027411656 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.028736897 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132662486 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.028613658 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.04751438 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026486884 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028069928 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029016785 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028952559 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.029685169 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.029895074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.049378 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.028545987 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037105564 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027520474 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.046726143 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024239778 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.046584589 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026785215 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024195063 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.026389439 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.029953808 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024740186 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029616564 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030328737 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.028856375 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.028965139 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023358106 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030389292 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.026890228 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024373785 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.027623431 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.027677231 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.028305677 seconds)
  done (took 2.952810759 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.075788879 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.06592566 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023896897 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073196518 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065240382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024082679 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079418696 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060097272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076649434 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023527696 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023229791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023270481 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030015821 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.034333441 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075489973 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.06838504 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025084481 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023830782 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.067698357 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.067512395 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022683819 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077884617 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068281398 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.066172117 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022349889 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023696291 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02255469 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023211007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029441203 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030274879 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.022936497 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.031853707 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034123123 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.029547758 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022349248 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022641508 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022610627 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.030447425 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.030886915 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030808696 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.028928686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022323223 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022635034 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023222705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023562806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022153485 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.030761782 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030145253 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.030604776 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023099115 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023141852 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022479222 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023400735 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.02935059 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028324069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.029770323 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031597825 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022838509 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022871642 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024029634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032277847 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.030455018 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030346805 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023821319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030414663 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022784366 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031307839 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.035383541 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022704301 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023282942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.022931619 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02289033 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023246536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.028703138 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.028852172 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023449798 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023270368 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022674761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.030287114 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.029093665 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022745016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.029941609 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022404645 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.02303866 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023327713 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023578966 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.030867455 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.030340659 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023467933 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022944735 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023108353 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023001122 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022286582 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031185903 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.030927868 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.031303587 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.032282035 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023944603 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.03291813 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031568564 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024046818 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.030563831 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023533647 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023841061 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023810696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.030473346 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030113117 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.031897021 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02355517 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023152681 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.031319649 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033636024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023297727 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.030107902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032105671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.030594993 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.022861993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033386897 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023527561 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032614417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023773653 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032054268 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023793184 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.030984373 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023754832 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.022971876 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023599748 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.033207766 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024311313 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023574594 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023903661 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023590801 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.031052523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.034196658 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024245105 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031418583 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.031393364 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024120509 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032323389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02374224 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.032379315 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023801773 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023948161 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022890061 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034812075 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023538962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023935724 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023581674 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.03266609 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023449872 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.032782192 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030132507 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.022964819 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032841028 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032397934 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030114947 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.033087723 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024164428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023664945 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023261337 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023583603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.031968352 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033474431 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024325519 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023634502 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.029905975 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.032541441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023024049 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.03032854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030120156 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.030577609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023834334 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023670408 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033701603 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034776583 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.030987012 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.032706058 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031852322 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023598109 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.030528828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032840681 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023626683 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037777432 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023551719 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.03428651 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.033277199 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.030047242 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032972314 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.034209346 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.032585962 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033095455 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.035095244 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023228118 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023486942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.030930784 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023553189 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.17117404 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028588691 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023503936 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023404613 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.034718053 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023169133 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.030474479 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022469492 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029202827 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022343666 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023294968 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03340007 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022819249 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023280194 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.028299793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.022892679 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028153019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.030816004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.02815471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02264862 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023212242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030553428 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.029463034 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022640453 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022538847 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023132731 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.029620146 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029079968 seconds)
  done (took 7.652136928 seconds)
done (took 19.231968558 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.13165115 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.070046399 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.124105352 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.076495351 seconds)
  done (took 1.174226209 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.055358018 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019524467 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.135411251 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.145765495 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019685374 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.128796857 seconds)
  done (took 1.298331669 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.24112277 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.144363769 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.146135419 seconds)
  done (took 1.327711237 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.148382501 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.275333641 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.544875864 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.14151217 seconds)
  done (took 1.913431736 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.162417102 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15493309 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030061617 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171359505 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.036776951 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.015997688 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.098638294 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.016933111 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.048859715 seconds)
  done (took 1.592618519 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.090445736 seconds)
done (took 8.189659631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.196192136 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.131593761 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033333315 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.027661354 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.121505895 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.125233477 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.142103875 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030017895 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.132928131 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.296785014 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.177201917 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048149334 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.14670247 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.040813743 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.258463519 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030503326 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029296191 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024338376 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.138504925 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.12963325 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.233258859 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.027829782 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.095216081 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030219372 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.098967129 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.07716283 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.181750645 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.301173696 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.26252284 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030584521 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.117082697 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.040340585 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.11330175 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.120243217 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.127561254 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.047975904 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020078562 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.234892463 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.098855261 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.311597517 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.161791489 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.02719875 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.136683528 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025183882 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.01957174 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.139452102 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.031812542 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026140076 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042446562 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027160357 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.038571174 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028075451 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.128697088 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023844785 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.092226036 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.132596898 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.178546725 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.100949454 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025875398 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.037099222 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029884906 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.155248836 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.037059481 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025501779 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031487263 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020016102 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.130438759 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039844276 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020493177 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030785217 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028970581 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.096230017 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.147111314 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064024167 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031785064 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.105930908 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.096453383 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.045761483 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047372537 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029271573 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019722246 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.18730402 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025521758 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.037872774 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027019301 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052562715 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.019941136 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.034227664 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.165940663 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.144765792 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.085152283 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021176873 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.231882443 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021942016 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.044678782 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021261787 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.02059527 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.182579343 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020308567 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020518939 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.030568844 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029259385 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022501404 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.165427978 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.101006423 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028553958 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027380764 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.021239873 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026406359 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021567341 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021283494 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020418534 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.095092606 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037195249 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019830003 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.102030385 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.119396666 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.030868849 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.037253641 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.248671367 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023969807 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030142789 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027477437 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.135078108 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026684015 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.131122135 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021784064 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.040671641 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.114739487 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.09582819 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.100214836 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019682906 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.136759882 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.02947711 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019257693 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.02697476 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046526785 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029182437 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036367269 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027942148 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.136643535 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.02949691 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025469654 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.114368376 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019003582 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.104279946 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.097299815 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.126910546 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024580147 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029089191 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091456627 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.041486764 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.048373008 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.04006739 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024180038 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.019769611 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019450034 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032445919 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018903753 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.0196503 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032222071 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026326862 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035488694 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.232085586 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029144451 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023800427 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.24294733 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.03177836 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.089370513 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.038872078 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019978485 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.098822721 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021425066 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039732915 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.081581174 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.019938691 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.095451717 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020461021 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.01990932 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.025723916 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021580814 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.02928728 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033375901 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020338389 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032669852 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027471407 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019868143 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.098927491 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021976933 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.182321475 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.097720311 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.093236256 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020180444 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038493352 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019893929 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.130830066 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020116537 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.068013234 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.109835788 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034462743 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040222928 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021253693 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.097759931 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.033928649 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025012114 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.098509797 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.128909602 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.089966057 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026271164 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.23825327 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028926999 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020622792 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.025842125 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028827197 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.02044908 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.099048131 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024815577 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019447493 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.01965144 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.02191796 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019100755 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043501522 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019348237 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027919954 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025648212 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.02292053 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022031482 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019138881 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028218371 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.099132158 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.117426149 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026052827 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.03939155 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.03241428 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030184713 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.066259803 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027779572 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.156537964 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019192538 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029473926 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.039779475 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019436144 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024662002 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025142739 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.036187202 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023221349 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.020917633 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.028711872 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020001521 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020021821 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019913105 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.02026113 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028834132 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021412032 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019589604 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019544211 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.035987252 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.02498901 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025488224 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030734971 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039987112 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.466601128 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021748638 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022386403 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032663223 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025539041 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.02040072 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021416357 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.019877556 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.02212575 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020168636 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019600341 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.04717953 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.0251838 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020572564 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.039956249 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025876196 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029820326 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.117114402 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036415082 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025036912 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019425715 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.251443012 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.092606321 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040769599 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039126344 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020457486 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030871646 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020383357 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020911331 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019499251 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046168002 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.025735981 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.02046692 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019537149 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019773121 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067237883 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028465906 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019744266 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028442215 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020072979 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020084688 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046559521 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.02094087 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020310826 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037489245 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032125523 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.104540067 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032092374 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.02344122 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.070122978 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019681991 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020226553 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.02051849 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.106316696 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032507954 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021814252 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020267543 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.02763375 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029388293 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.072707963 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026501738 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.023748353 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028031702 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019606066 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020534777 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.04669973 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.048471188 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021569186 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023903406 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020102648 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020466462 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.096771235 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027897021 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025309275 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.108336801 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022661804 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.02839506 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019641779 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.478955697 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.207701224 seconds)
  done (took 21.917229486 seconds)
done (took 22.729947772 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148565119 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.032786925 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040052347 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028518765 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031819036 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031367977 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.041911319 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029308317 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032275389 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.040167102 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.141394988 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020038051 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027351623 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.033610383 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028344355 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.032213716 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031054935 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.03175848 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020435655 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.032128663 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030855041 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.03083051 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028712794 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031395471 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020383874 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028296256 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144060515 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034439234 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030045213 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029201589 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027458774 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041765016 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027574766 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027098831 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.028967219 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025289243 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0296326 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026354655 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.143525265 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025542791 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020333228 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031371839 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027010529 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.02747868 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028392521 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030628946 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025140758 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.032083618 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.027928088 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039215133 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142850331 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028481166 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.029979198 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.02795091 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.02519197 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028826399 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029748263 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030058185 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025013047 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.038640298 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028251443 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027476587 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019591687 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.027996218 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026959094 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027172951 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018877301 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028364382 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019643407 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.024983473 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.028001371 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.027892266 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026306653 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024704338 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.027842639 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019510893 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027476275 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.038431357 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026541978 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028057648 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019886975 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.024983522 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024593587 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020087506 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028257607 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030498502 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028629236 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020161519 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.027891199 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.038855731 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026166815 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019540402 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030430643 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028186657 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028087144 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019625322 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.028097177 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028196367 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027458063 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019546896 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.01881668 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028206504 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024837826 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028001999 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019911697 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027962724 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02800048 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018896462 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027965874 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026754951 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028396925 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030268024 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.027980333 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030636334 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020066398 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018804588 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029243044 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019960102 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028289992 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027608209 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025005529 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027257198 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020051007 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027344071 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028088561 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025608056 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019956524 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020045903 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019880118 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028186994 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026729748 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018896708 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019576465 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028048598 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.02793198 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027469908 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.02787841 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.027970052 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020079486 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025552478 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025018104 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.027983837 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.027651669 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019882944 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.02761887 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.02755994 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028377236 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025022024 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028224965 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020139283 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.027995801 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026639423 seconds)
done (took 5.613744066 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074765768 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.062190297 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.170144421 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.13834728 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.032944157 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033458794 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.02479057 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.03947416 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026504457 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.044584252 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.044955378 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.042688395 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155218332 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040577153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020099359 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.031771318 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020551718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.046309643 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139788708 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.04470829 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.06158991 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.018847045 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.035172428 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.0381954 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.031744888 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.038081849 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044192581 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021117497 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.037637261 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.036732811 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046751946 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022611945 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020484545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.038976249 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.035977688 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028560404 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0198178 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.02657175 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.031446966 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019961904 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062399169 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.037805854 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026338375 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.026533665 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020857152 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.03443686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020794288 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.027334316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.033163904 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026338325 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032089785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.036092322 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021931901 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.037315967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019001453 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027069615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.026749883 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019811501 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020762209 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019940803 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.019908883 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022951257 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.032224127 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.037953321 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.023797924 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.02698559 seconds)
  done (took 3.498615958 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.044912673 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.065903191 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034067491 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034578983 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019782645 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020238583 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020291771 seconds)
  done (took 1.148951728 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09164334 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135117782 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138348629 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139382632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.151932025 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136720582 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.032856066 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.049924709 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.054671312 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155051809 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.146562463 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140805648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.02424066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032595433 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052062273 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.143278786 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033140161 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.02766073 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13539318 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141928848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025292411 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051755135 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033136979 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023396928 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.144065271 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136540371 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024058376 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061711094 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022949098 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020799048 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020852486 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.042937324 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137259735 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035680383 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021244152 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019931544 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135139753 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021517124 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.137309089 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.027695206 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.134442013 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023259629 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023476418 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021192731 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022046911 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.134373252 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022133841 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020816322 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020412631 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138760551 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.031804023 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137251667 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022412077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.02567911 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027795115 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027321792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.02767792 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021279079 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140552453 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.03101849 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.02282199 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143544074 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142464696 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138137555 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143365021 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030017513 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13943885 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13528158 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020996745 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028664509 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.02175975 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14464031 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.02471534 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023481569 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019685557 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028244292 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.150239433 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.150191735 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.150497312 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035080615 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.022943824 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021948165 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.150284992 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.151348783 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026650204 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021398297 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021701792 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.036732389 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.045491897 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023519173 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.02598744 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.02123303 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031577336 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023686146 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023058926 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.144692035 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020615437 seconds)
  done (took 7.55568291 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038719483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021379914 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.020941705 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021277983 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021465797 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021317929 seconds)
  done (took 1.130240167 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.060067709 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021748486 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.021535905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021479063 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.043436469 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128755182 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128624148 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022838725 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.037909093 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033408676 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128353036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.131617578 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.130858592 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.022755132 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.128744954 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033094385 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129304132 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026168876 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032441456 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022852428 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.03190344 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022356541 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022670099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.147883309 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016792571 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.03270043 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030716898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032661066 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032142528 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022402281 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022345019 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016529977 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.03135784 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022412017 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130637598 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.031676562 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02175096 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017531511 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025681994 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016504911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.132543912 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022928339 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.025956466 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017523906 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022313084 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031428929 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017590135 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031238976 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130552893 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.017819844 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017566718 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022169826 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016567057 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017488524 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.031597511 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022562347 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017514189 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131054123 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022691713 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.031646783 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021832787 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016581196 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022468626 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016447068 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026328891 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017530997 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.031495316 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022691977 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022703708 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021674936 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.017562643 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021634175 seconds)
  done (took 3.986295385 seconds)
done (took 18.226462185 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.449579561 seconds)
  done (took 1.356448497 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.957199815 seconds)
  done (took 1.876417768 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.050053548 seconds)
  done (took 0.986128893 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.28769409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469117387 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730055072 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.091090918 seconds)
  done (took 2.497918373 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.839647196 seconds)
  done (took 1.786242302 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.204094487 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.16912152 seconds)
  done (took 1.336377064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.486574396 seconds)
  done (took 1.419111899 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.309868355 seconds)
  done (took 2.250142791 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.192522003 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.134184892 seconds)
  done (took 1.266155786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.59391645 seconds)
  done (took 1.529692355 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.392260893 seconds)
  done (took 7.330214675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.194713431 seconds)
  done (took 1.185615396 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240240622 seconds)
  done (took 1.181278837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.692306192 seconds)
  done (took 1.630752322 seconds)
done (took 28.57795174 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043874542 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.036865214 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.036922064 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.03426228 seconds)
  done (took 1.07989716 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030493383 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024932403 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027004779 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027250201 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024679138 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026530852 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027350651 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.02388565 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024858538 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024187307 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022931235 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024088992 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026486802 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023895918 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026227397 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027578622 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.02417053 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024824728 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025887943 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023832434 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026593559 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024153717 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024194772 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025461333 seconds)
  done (took 1.552414342 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.039304202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.033600986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.031703809 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.031215213 seconds)
  done (took 1.079674435 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032647361 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030047713 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038064128 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.037697924 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029909785 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030648295 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036645796 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036772418 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043514474 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039315833 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021645478 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021421011 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020688728 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.033788861 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.03608234 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015805077 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.016913413 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030712372 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029655943 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032322979 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023553433 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019318317 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.030081887 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030461663 seconds)
  done (took 1.657295334 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.036729183 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019576422 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.034756751 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.043560833 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.04373959 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019438619 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032554557 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.044302981 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.184105298 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019654376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025537966 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019484271 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.056213724 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019426517 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.03375312 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.163916487 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.166827647 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023895876 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.04986559 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019512011 seconds)
  done (took 2.005108781 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028822458 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.027320898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.024886284 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019147711 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030292256 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.033298009 seconds)
  done (took 1.114315455 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024148463 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.02125939 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021055484 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025295665 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021019246 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.020894987 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020850788 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019793337 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019755666 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020564088 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020523129 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020921539 seconds)
  done (took 1.200273571 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157442842 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026420303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.023992498 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019805618 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021461956 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020597048 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.033650531 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022302141 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.036451889 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.02050641 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020826343 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022910808 seconds)
  done (took 1.370896128 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058707448 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062582569 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094631947 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071497009 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077386396 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04866351 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.194789452 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033033145 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.111159736 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086761742 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07435935 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04516142 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039145699 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023851876 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05343026 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069913473 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087848287 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026732181 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071799134 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.229310322 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082848468 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.082738164 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099220566 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07581885 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045082612 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098795606 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.049708139 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055413104 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075364567 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079165485 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074050244 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.056600002 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025426749 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024877275 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112466355 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.05719849 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073646139 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047074096 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059064578 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043468953 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07860315 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024421746 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037555005 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.064704411 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041414986 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089255469 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049736158 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071683846 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035964369 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094780321 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084057282 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.180816639 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041384435 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059596984 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097506242 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069087978 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087833927 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063205871 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036302872 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.076505998 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.066518115 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.057897103 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065731579 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035677633 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132932219 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.044876598 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.234213794 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066435949 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.043563878 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.047723213 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.06320126 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087063586 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0764308 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.068923245 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081197328 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045253074 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07935755 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.052653741 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.076147833 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054711162 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026151983 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.072272863 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078923745 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.049625012 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052141112 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078118364 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.055774871 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029329842 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.04233246 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.070863325 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033577904 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.060873772 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038595322 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.081068167 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08630808 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050988886 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067596675 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074242959 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032055121 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115884335 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.061990052 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027045754 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070874232 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065868085 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104151466 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049943444 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029280888 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053418295 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056271311 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.114072119 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057355265 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034931575 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070718354 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094721642 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049076073 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.270492929 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050349159 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097523129 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070413996 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040983193 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029859189 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.049154495 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068173868 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066216106 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079462059 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050483384 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038068967 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041270274 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076247398 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061656826 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034058473 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075507307 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.059292691 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029593936 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045145955 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031944549 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107964741 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.041557854 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097091696 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.244749097 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029795368 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05897942 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049272253 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057893601 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.053361871 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072218053 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090163702 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.143662026 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042954488 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.036065347 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060321188 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093279418 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076473708 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043666883 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.037852804 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051965727 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06239265 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052709368 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073866646 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046271216 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062360333 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055005213 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089932568 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09306143 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053618279 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058199042 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058377406 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.065564604 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.028981972 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108891037 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056525226 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075950219 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041028933 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093168992 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.068841666 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059346045 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040314054 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057309635 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.055764619 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059681584 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095484835 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.04722426 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026109812 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047011938 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100074365 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03114606 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072532748 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.04442442 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.046256594 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070920753 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047628003 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036035317 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022523332 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077406321 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112128657 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024942349 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071933196 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.070673072 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058792251 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.07831376 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023922635 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083666354 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094106411 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082201625 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105521219 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.399570958 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078749416 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074394977 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.0808844 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228584765 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033232955 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.076740847 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084273732 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.045129607 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044234146 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085112796 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.096517491 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.084757484 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.064265188 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072582885 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.056092001 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060290859 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054918192 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.0527181 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092623723 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.073487857 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.076248147 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037030999 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062223827 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070997743 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086845062 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034506598 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091687511 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.03808489 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094211461 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.03199478 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07841033 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030282295 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.122722136 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033442466 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05313229 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024125043 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026351512 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095130178 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.074838814 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057735303 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051702544 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.08657124 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089242992 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031638908 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065252915 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067763753 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057478805 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068027061 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.062431147 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042340204 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048870707 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061477307 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038905755 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.034914576 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079645024 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050576235 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090126369 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.037512046 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029135061 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093201627 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06564266 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048598148 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031083555 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062810146 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082196605 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047551391 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041002412 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076788022 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060641985 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098131241 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045365487 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.057416649 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08201672 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036401036 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.051635493 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024589922 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.044963434 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031451136 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087750848 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031172951 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.07664045 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.184376168 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081278815 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038228243 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.049877199 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.056040098 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060078853 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085288171 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.046663791 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089533195 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0412737 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.069852366 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059518868 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063573577 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.039274848 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054472337 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055823608 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07211461 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.046026496 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071667732 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09179105 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053844194 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092362166 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042861763 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074485926 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058837208 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.076331933 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065247484 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146520542 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090686563 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066685026 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065515262 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029323069 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049124466 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064177781 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063408421 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126570405 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077087218 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026135899 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057234369 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047328103 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059728274 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061094534 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03334723 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095136485 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053993836 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041293155 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061397951 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.042668536 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057991393 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029969376 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056190894 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.049281166 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.04890853 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051267591 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070347037 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084044619 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064805824 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099748289 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.057954348 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046083264 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.073951174 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073871945 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071139919 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038382688 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038937282 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099978901 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077168961 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.08213396 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.053936988 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06715231 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071036725 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056663282 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.241384963 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0585321 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.074980546 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032539821 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.029824332 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022412553 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025691782 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074065844 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062094954 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060580346 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055974574 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.025974976 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057244967 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058922997 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025605355 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038156183 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045601127 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.050957018 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.03492665 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056406892 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066402974 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.046319805 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052975172 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055469839 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089809645 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.050190104 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04044812 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092644369 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099343978 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040806531 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046183929 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025333871 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03281146 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07541515 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096402659 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099662772 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.032678009 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040058537 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.037576717 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040303132 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025368165 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042433346 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042358107 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058103839 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052547719 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067138672 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057565082 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.02965339 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060712026 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052798239 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.059171121 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.062296113 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073398055 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079450162 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.090511167 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068673588 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068228071 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029927337 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033065353 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030212985 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033487413 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060608189 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033368134 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030636369 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102247829 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046175429 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066238406 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067997057 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042722622 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029999781 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08867238 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023998988 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090612249 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025475411 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034858749 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036668692 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033520614 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050691223 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098983715 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066458738 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066044692 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06261454 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067471257 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.300114479 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107429343 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03802406 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.091434882 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028832279 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.02954888 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029544219 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059317383 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041434881 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068993156 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092300147 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040453386 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05213412 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031016783 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091361218 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.04963651 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.052913681 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037939552 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032155776 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091284201 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03276068 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.037231136 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041408638 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062492655 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.025967024 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053548442 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036159315 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03260364 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141660163 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.66454822 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04967857 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.028262308 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049568919 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.094001999 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085608189 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049419133 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063496788 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.071325127 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.057681752 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047606252 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067054453 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.154468372 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027869248 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048271127 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.050877371 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055654459 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06176801 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.049694121 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.041447467 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.048754987 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.039908899 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033267673 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066691108 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040029186 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050275729 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061198976 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036882358 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041771254 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083671736 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056337936 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.0381289 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043354381 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.066216917 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04129729 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061615926 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024129086 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.065322151 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043577119 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075387807 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.055823468 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065617769 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080860852 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049046063 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092445952 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064451124 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079303949 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041805865 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032810039 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083198458 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.046224581 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.189615973 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093301784 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.045559132 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.056784374 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058185897 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.048722722 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060315495 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064085956 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063393677 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052036811 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031255398 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049913337 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.056417978 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038074021 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031979821 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.026107247 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.028958296 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059158415 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036858008 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039110515 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067491153 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040980309 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054691315 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.049643161 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071859039 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041668032 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055405157 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061176989 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044406035 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083546182 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053455881 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079529615 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125982707 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084198919 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082376959 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086035312 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.031905845 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.032976825 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023198088 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068193529 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033598368 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.040787595 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03270494 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085804834 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038177758 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064508643 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.211240834 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034258589 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0466987 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.04966597 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023962561 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037209828 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06289058 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040260609 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03360517 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065230412 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035528708 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081586575 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061792075 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052312126 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049240935 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03438726 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061644112 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058712527 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.082978957 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052095125 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028583896 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078017904 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061077632 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09753089 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029154978 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035287887 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083697283 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059807773 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091042256 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.035957738 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117800523 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.10062325 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.061382492 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091705541 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025785067 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044600039 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045261707 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.234220752 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.037529186 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057708864 seconds)
  done (took 40.273781201 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.096702581 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.253617109 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.129296361 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.109379513 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077573805 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.0772242 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.246267689 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.090845724 seconds)
  done (took 2.140324251 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024743259 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.054235264 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035332678 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.301318493 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.052834303 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.020924616 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.027178935 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036117916 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.02091903 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020362834 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.054631165 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020642495 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.021028242 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.435298864 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020015325 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.024775731 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.021163869 seconds)
  done (took 2.264306477 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.300996697 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.575159841 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.207047755 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.455823385 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103246617 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.56043291 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.028754681 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.03384826 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634122516 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.169016694 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.097646332 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.174221979 seconds)
  done (took 17.403681144 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031143306 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.147361228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145746966 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.02778222 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027288384 seconds)
  done (took 1.506782154 seconds)
done (took 75.663020142 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040676408 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.121850275 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020731262 seconds)
  done (took 1.232263168 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.149948416 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145886434 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.146271934 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.147279107 seconds)
  done (took 1.647167754 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030498045 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029793864 seconds)
  done (took 1.126367047 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.173282829 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.282168291 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.051853095 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040053532 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034648273 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035411562 seconds)
  done (took 1.178171802 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.02684702 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024546185 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024652578 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.02501772 seconds)
  done (took 1.158127015 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.129425068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019654103 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022289226 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023704057 seconds)
  done (took 1.252796123 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.039899606 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.038607274 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.068419576 seconds)
  done (took 1.208276542 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039361232 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038578266 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033088857 seconds)
  done (took 1.174057325 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.055849664 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.046932942 seconds)
  done (took 1.162050859 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036017805 seconds)
  done (took 1.097297892 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.044436255 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.050285045 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.205637559 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.17278518 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.209602695 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.192046812 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.032337328 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.029647056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.031948925 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.034034922 seconds)
  done (took 2.060069238 seconds)
done (took 15.907080942 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.03617846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.142443473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.269092433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.038983893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.779592355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267279385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.683729382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.042530441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.052988964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022598273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037121746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.758289108 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.68414632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100224912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.66967438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.091810796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.760536376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.021961737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021139581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021563174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.663386412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021345203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021636556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022556415 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.759049374 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410220571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022653104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.094175164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021456883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025047326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392562395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022567399 seconds)
  done (took 13.03220058 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026231536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.075193159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026543016 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.03602505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023390947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023778687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.039542863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022148623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.063881579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021897074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037663386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021347134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.025990411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022837622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.040626121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021757759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023651111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022427352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021657447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022107842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039591559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021561946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022275457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02229102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022057003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.035890625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022804816 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021828407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022067897 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025368848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026627157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023106004 seconds)
  done (took 1.999036558 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077850102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076416514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027486438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.060256918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072119258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024792693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102587034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043501778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.066038204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02226661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037701498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022052555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.057038708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023181528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.040907917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022120601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.02415407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022716565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021687386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022185265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039562448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021850844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02209882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022611128 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022387393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037594225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022809807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021990987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021954165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025532337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027374322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023157825 seconds)
  done (took 2.250109122 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025771511 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025974061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.031632636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.034647658 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020369105 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022953441 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024064032 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020499415 seconds)
  done (took 1.282394709 seconds)
done (took 19.64480141 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035628965 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022146979 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024927653 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.04611234 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028388341 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136203085 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024654731 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027119525 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025715074 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025046699 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027111326 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019654752 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024230557 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024496893 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.025964359 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020160745 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.139296508 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024668893 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137336957 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138456793 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022836548 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025797337 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028650733 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.137589735 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137454756 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137339712 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029374645 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026192503 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.025852655 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023289224 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13653608 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.13807645 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023074451 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134156043 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020756779 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020394254 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.02493558 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022009158 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141332544 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029602295 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022577872 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029175458 seconds)
  done (took 3.372310741 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.14183493 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146707369 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.140062664 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032536509 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028865135 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032008695 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145322844 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029198064 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028093857 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.144573616 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023832279 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027763026 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030045029 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020946796 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027583125 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024297726 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029634985 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022087285 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027498687 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027754779 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.145295584 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021479513 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028673408 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029148772 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.023822531 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029605849 seconds)
  done (took 2.501751861 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031391506 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.042944226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045190244 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108004271 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.062280891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043385029 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036717581 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047151791 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053047958 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021194067 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043428444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.048999558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.050250961 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.02814918 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060787824 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.03985617 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034359797 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022743916 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027506049 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056519787 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044421681 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040263325 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.053802317 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041286736 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020287344 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030283967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025408338 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037355389 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032446558 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033168931 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.024689278 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024664558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022145146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.031792792 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.02466313 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019654776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044680493 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033581728 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036027526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.059900434 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031380003 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022478194 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.047200931 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.080328198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020070554 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.02392977 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025372904 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033489097 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022603213 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063233649 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.035986914 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020713089 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040215603 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.02244219 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022576794 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0416739 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022724119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023271106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.041370593 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027443804 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043119464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026754517 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.04082482 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.02016649 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032356014 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022416267 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022954575 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.019930225 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.054576792 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028256823 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.066590903 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022114611 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.01959172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033004016 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032365421 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028263785 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.019887866 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039089041 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033487668 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024829255 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.03925185 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024076192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024532606 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.064821123 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020529711 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019565068 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019480036 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023593638 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024348054 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021649205 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033094773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.02055716 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024398204 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.047481325 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020848079 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021785635 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023773201 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022490751 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020531279 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030354282 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024257502 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023014053 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033673871 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.021892159 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024470675 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036298719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030273611 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.019898566 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022320386 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.02359294 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.02290107 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.022618196 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024639851 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023130969 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026832372 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028656588 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.026960282 seconds)
  done (took 4.958658963 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233046019 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221354469 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.02230799 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.218069966 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029679066 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.149948592 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221170102 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.221651505 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022041588 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023181956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021284366 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.165168842 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.15991949 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.171907179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.151790924 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024093408 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.054289672 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.170690952 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.225378352 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.220140314 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.057246421 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029063551 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024798436 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023486562 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022808318 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030783843 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038651852 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030488273 seconds)
  done (took 4.086216945 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030188981 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065702977 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025542163 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046100107 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.037453332 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022431957 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023783939 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022592582 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038719799 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027227566 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.02219281 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.02585456 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025208638 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024121574 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022173619 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028108065 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028582676 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020848781 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025525887 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026364082 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.032978541 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.044418154 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025719986 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021796497 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025058456 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021701468 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026800999 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.029929942 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.02156134 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021582022 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019126462 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030540505 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036789657 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023076981 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021555101 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022547491 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022260554 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022234825 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022050604 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020360384 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020278309 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026994277 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020660822 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026443997 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035395517 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024216351 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023692473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024490866 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024733306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019185123 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025094602 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025415674 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024780792 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030457339 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024224414 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024647487 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023486926 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037109786 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028143135 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021623056 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021637515 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020523383 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024150792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028241451 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.03852762 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.02419114 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020522442 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022321763 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023695285 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035655123 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021902432 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028490919 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019282725 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022409275 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.02437669 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024873632 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023427045 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020511046 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021728114 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021441301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022138597 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021881803 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021329377 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024634707 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020221137 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020490389 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022999752 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.02362456 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027131136 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020943241 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025488496 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023491191 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021088245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024472278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.02725343 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024609927 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.03969052 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029346638 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023041089 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020198215 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.038533654 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024646502 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021452456 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023976943 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.030740507 seconds)
  done (took 3.842610382 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052342127 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024143329 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041402573 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057206562 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.03220489 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027770889 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035790298 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023349696 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043404725 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021211026 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031187775 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020427936 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035143887 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030798482 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023975462 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031818894 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024794719 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042388247 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037082765 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020785308 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030664613 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034412076 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034483913 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039365381 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038923376 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040040671 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034026544 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024675194 seconds)
  done (took 2.04215571 seconds)
done (took 21.873585049 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.14031344 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.315998257 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.121700325 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.731730256 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.176716885 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.2425768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.318367043 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.098356392 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.009463114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204616623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.781949861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.323051725 seconds)
done (took 59.63207687 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.17576996 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.250980344 seconds)
    (2/2) benchmarking "String"...
    done (took 1.348134667 seconds)
  done (took 3.705498746 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.532954994 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.095368182 seconds)
    (3/3) benchmarking "different"...
    done (took 1.134231581 seconds)
  done (took 4.846933698 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.50668961 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.018376511 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.422026123 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.084515355 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.09962594 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.587567202 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.219221606 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.781771031 seconds)
  done (took 27.307062271 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.11235439 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.36430214 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.467149692 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.558901769 seconds)
  done (took 17.677997177 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.551898361 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.627956251 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.626522633 seconds)
    (4/4) benchmarking "different"...
    done (took 1.732346162 seconds)
  done (took 7.750123811 seconds)
done (took 71.149266967 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.083594927 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.228130906 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.125779 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.277729546 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.183917529 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.160492997 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.096841855 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.110449767 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.094385313 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.098288655 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.99235019 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.096992306 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.095571637 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.149074823 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.091488974 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.151647582 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.219263146 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.103461486 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.106728632 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.679723686 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.252062667 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.093651861 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.104156451 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.165674883 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.178420624 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.110965246 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.374446066 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.106058679 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.687976117 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.084588441 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.100606925 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.09410559 seconds)
  done (took 180.58346884 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.083953697 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.899860113 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.868836249 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.094825835 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.419554018 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440990614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.902295669 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.439888475 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.093210972 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.112874213 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.195590959 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.086518618 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.187736475 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.657032997 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.128558483 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.13755276 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.978957953 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.904267774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.138943589 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.982189817 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.094120639 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.63893435 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.623319322 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906071783 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.089089552 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.129233912 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.113211486 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.12702099 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.574041209 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.006904672 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.111786671 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.10866948 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.273646543 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.329673802 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.087004996 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.097507517 seconds)
  done (took 152.159287878 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.274331158 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.09209496 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.129450104 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.20287259 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.899804329 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.74514099 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.094350956 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.084255475 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.08386303 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.090874558 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.085189072 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.150491542 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.094168136 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.343102268 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.123258325 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.085469137 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.085181018 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.338480027 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.104473281 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.084012279 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.084000883 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.183926212 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.43571398 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.195440421 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.093888289 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.092302404 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.193697631 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.10084663 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.085254838 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.084974166 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.194053448 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.094091055 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.211523728 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.203723318 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.100002268 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.139250316 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.101197377 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.173383005 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.096138372 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.084306372 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.085783042 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.130096792 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.093287675 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.940317242 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.193894651 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.097404676 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.103271615 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.667827387 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.6800933 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.096752862 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.084627484 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.083945224 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.087958566 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.085707402 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.582550863 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.099135228 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.118115194 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.146458636 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.09953461 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.084962573 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.084900712 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.083692239 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.084638973 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.09066593 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.119900771 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.649387311 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.388934728 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.44490896 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.73968479 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.094198396 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.084009261 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.084140876 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.530114758 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.15364946 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.086665205 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.083885321 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.252583141 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.093416597 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.085138126 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.92433207 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.933117048 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.094623417 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.193893794 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.094186782 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.084647978 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.532539258 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.355810018 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.104553691 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.103206477 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.138849502 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.087810424 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.084448629 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.091529228 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.924057705 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.0957565 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.096595546 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.277934379 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.09564991 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.084514763 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.160531075 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.438773339 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.094179718 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.16637319 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.470945105 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.897563518 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.094839325 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.084069799 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.102606383 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.085854766 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.097126874 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.096687133 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.085486348 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.084879681 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.089316154 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.084251077 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.084392623 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.084342432 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.102678023 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.086216263 seconds)
  done (took 322.653266107 seconds)
done (took 657.863976163 seconds)
(4/20) benchmarking "parallel"...
done (took 1.083974055 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.342912228 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.09776395 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.235097533 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.348927012 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.295017078 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.266610405 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.295897928 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.385291673 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.322698812 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.260484817 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.317151854 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.264425669 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.371058103 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.349648152 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.347646254 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.379769288 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.293269098 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.794861939 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.302937592 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.264266491 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.288050945 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.257960381 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.248366679 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.320359704 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.347715112 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.290328149 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.491694256 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.32645793 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.302330739 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.339083691 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.360948217 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.375613623 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.307637764 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.340357701 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.35374818 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.356881928 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.282226939 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.354889666 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.272680796 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.302637407 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.315244607 seconds)
  done (took 62.456538028 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.552084865 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.274700919 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.396338306 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.405283148 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.992824391 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.402077032 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.500507651 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.268058137 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.282887434 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.395783337 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.401099919 seconds)
  done (took 17.984443351 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.32789304 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.273031772 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.415851552 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.40851377 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.509633434 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.395451472 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.445821931 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.28813028 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.285575273 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.403803717 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.420844656 seconds)
  done (took 17.281542624 seconds)
done (took 98.805722365 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.679149696 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.165172542 seconds)
  done (took 3.929418117 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.115768264 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.103185557 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.096707694 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.100152719 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.097660973 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.096090368 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.148122757 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.108593168 seconds)
  done (took 9.951836648 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.096438006 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.096944342 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.097118505 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.09579795 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.095781226 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.095711885 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.095844317 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.096458459 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.096237476 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.09706249 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.097667884 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.09554978 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.096596883 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.095757842 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.095712366 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.095507034 seconds)
  done (took 18.627132766 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.095514785 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.096574663 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.096203524 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.095733407 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.096422334 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.095648953 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.095865589 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.104478802 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.096251513 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.095444518 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.09573392 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.095921636 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.096299412 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.095446909 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.096112383 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.095729376 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.098102608 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.09578678 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.096263409 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.096292334 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.095826446 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.095559286 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.09637567 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.098583495 seconds)
  done (took 27.401416642 seconds)
done (took 61.01655992 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.665276768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.861644227 seconds)
  done (took 6.611870634 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.096408051 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.096558625 seconds)
  done (took 3.339358977 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.095615108 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.096127322 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.095982585 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.096219311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.096036048 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.095866879 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.09612812 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.096679095 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.095740463 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.096224993 seconds)
  done (took 12.045667572 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.096663045 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.095752611 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.096042399 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.095622543 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.095435371 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.09580233 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.096343956 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.095761792 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.096243207 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.095477233 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.096122014 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.283571459 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.095649894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.322079225 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.095920415 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.095669936 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.09593089 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.095614017 seconds)
  done (took 21.225132465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.096086483 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.096198714 seconds)
  done (took 3.277413025 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.096039596 seconds)
    (2/7) benchmarking "second"...
    done (took 1.096190793 seconds)
    (3/7) benchmarking "month"...
    done (took 1.095941761 seconds)
    (4/7) benchmarking "year"...
    done (took 1.096089179 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.095816936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.095731756 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.095994717 seconds)
  done (took 8.7568167 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.544434863 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.263728389 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.313295755 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.552773284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.740176079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.015749242 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.746555439 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.026365309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.846532485 seconds)
  done (took 16.134995476 seconds)
done (took 72.475428881 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.790231028 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.104560627 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.570537967 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.284025219 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.117872377 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.438638221 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.105027929 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.643528885 seconds)
done (took 37.145864094 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.160929934 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.085704585 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.122654866 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.123360258 seconds)
  done (took 19.417607237 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.084887796 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.625341611 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.125076951 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.129643446 seconds)
  done (took 19.133606154 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.479320033 seconds)
    (2/2) benchmarking "read"...
    done (took 1.494217826 seconds)
  done (took 4.077845189 seconds)
done (took 49.876833237 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.096287695 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.096713284 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.096256709 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.09664337 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.096328313 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.09643708 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.095978437 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.096481349 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.095918444 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.096362637 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.096144553 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096530015 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.096619466 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.096049131 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.096362647 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.096008397 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.096773678 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.096846461 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.097155679 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.097215392 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.096407306 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.096691675 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.097233035 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.096922572 seconds)
  done (took 27.402545168 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.249732948 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.189513397 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.248429732 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.233719885 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212355937 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240827646 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245325342 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.165265779 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.244187694 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.259999249 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140724779 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.204609938 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.24647956 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208572906 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250057299 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208642764 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.245894225 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1657635 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247384708 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211951021 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239764742 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165215922 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20501636 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194852408 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201139104 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144065157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.259969258 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.189661183 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200932233 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.201605942 seconds)
  done (took 37.507655271 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.129564939 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.096486777 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.096654753 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.186257954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.096480083 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.09664995 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.096375137 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.096764777 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.096285607 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.096302829 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.096353564 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.096649439 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.096609953 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.096569079 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.096623013 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.097076428 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.131544028 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.27325037 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.09657747 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.096382688 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.141627003 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.096607973 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.096840011 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.096852459 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.096698707 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.096651595 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.096301557 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.096781783 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.096666723 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.09698641 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.097089688 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.146677381 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.136189146 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.096122482 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218055887 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.155531901 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.097070165 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.12811801 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.0970771 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.097273422 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.096715215 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.096543513 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.096070325 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.096872247 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.162013454 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.096988654 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.097069056 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.096776232 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.097443626 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.097024831 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.097026051 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.096979047 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.111880327 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.096500664 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.096731113 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.096472748 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.096318051 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.096679461 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.096404818 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.096875737 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.096459577 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.171145916 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.096182475 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.096683302 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.467369747 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.096664194 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.16447249 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.096438856 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.096214626 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.311328976 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.096155622 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.298991167 seconds)
  done (took 81.737894178 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.09646399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.096574292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.173517614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.173114357 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.096329764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.096313579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.096939584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096504803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761672091 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.096996663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09699442 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.096482373 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767134905 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.096434175 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.096203736 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.174076012 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.09609808 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.096328673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.096496833 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.096582576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.096525423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.096419474 seconds)
  done (took 26.776825372 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.135877998 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.111573455 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.138041435 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.09692883 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.096402827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.096270341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.135918655 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.112162678 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135719049 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.135805223 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136192576 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135890181 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.09630949 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137787122 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.133135959 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.111812922 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141111437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.111736352 seconds)
  done (took 21.284439224 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.274145746 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.262516029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233449452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13871991 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.358652353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353577285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201640351 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319307608 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.195256889 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.262865013 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.3190237 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192885051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.354566736 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139912447 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190022765 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.359029088 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232522158 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138715083 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263965916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200754222 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27339045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263360002 seconds)
  done (took 28.615197742 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174813022 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.196200194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.18393186 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.183570801 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.096847353 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.096904906 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.154592319 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.133620686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.111834654 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.182895645 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134919668 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.097013003 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.112179106 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.155930113 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.196853251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.139743463 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198385949 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.15582859 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180463221 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.097129758 seconds)
  done (took 24.069976982 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.096695613 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097075405 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.097304588 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.097141932 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.096909008 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.097504791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.096897231 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.096790687 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.096657481 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351222819 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.096696061 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.097203913 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.097402896 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.097084188 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.096752245 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.096635394 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.096792179 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.096845518 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.097016605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.096386544 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351085862 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.097006254 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.097331021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.096990679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.096658308 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.096760297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.097081914 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.097017312 seconds)
  done (took 32.309706309 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159917818 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.097320097 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.096392272 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.096718568 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.097040585 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.165675575 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.096670055 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.097371942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.097138631 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.096921647 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.097193201 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.097081602 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.097011042 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.159455792 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.096792605 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.097148217 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.220976149 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.097576901 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171788395 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.085896403 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.097228705 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.203029756 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.097202824 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.097107111 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.086186946 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.09777816 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.097351861 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.097013594 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.096953133 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.097129574 seconds)
  done (took 52.47638879 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.118220977 seconds)
    (2/2) benchmarking "in"...
    done (took 1.11862205 seconds)
  done (took 3.3229477 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.097078952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251676555 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.097377391 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.296336621 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.263841674 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.275404701 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.313971508 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192387371 seconds)
  done (took 10.874344462 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.097122123 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.183688982 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.217700479 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.098834322 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.09718511 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.309715394 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.116803225 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.827512821 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.742560591 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.069005275 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.207703195 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.667111521 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.091018408 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.35974127 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.210523024 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.873718829 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.208322957 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.421593055 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.984275604 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.202315166 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.704987407 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154750527 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.097250553 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.097021402 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.097959499 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.021532606 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.809423665 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.671940548 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.129870487 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.198618037 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.75104033 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.136099429 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.098288635 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.221930665 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.192436634 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.098020067 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.150491996 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.1823522 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.098278004 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.097407291 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.560555389 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.708372524 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.274726051 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.223005422 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.160703834 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.097810602 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.09729895 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.097562936 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.311106038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.754785554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.080450583 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.198791484 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234279658 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.098771685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.610508297 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207758393 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.098280101 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.024033474 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.484563397 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.176771723 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.469908777 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.17385159 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.013589294 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.201868362 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.098293262 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.321231423 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.924760677 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.740775386 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.702263573 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.187975862 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.372159071 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.244732624 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.098147021 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.097177053 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.99286565 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.407023096 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.110625553 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.098201294 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.097298583 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.098172079 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.228610119 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.192698665 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860848282 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.234533286 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.305144879 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.469420003 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.201624444 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.097754698 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.657763002 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.950590145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.200435657 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.451799626 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.367889133 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.233762434 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.012712312 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.320191628 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.133219062 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.097829958 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.881275863 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.47436834 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232202424 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.098050092 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.469832912 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.139695553 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.114063348 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.098452349 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.679320437 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.201241489 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.180545304 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.122794375 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.098266451 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.097710163 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.723537234 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.204342888 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.113994367 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.613803739 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.083862871 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.387398656 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.502166588 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.238438402 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.344814037 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.88127826 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.334544404 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.924535854 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.114485595 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.357236919 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.100596571 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.702349487 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.279283385 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.197919704 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.619145506 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26971487 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.098679202 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.100049817 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.127887725 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.098451218 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.097701359 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.097368022 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.098469022 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.09840705 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.185001924 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.367485458 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.706165393 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.203616366 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.283937276 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.217594684 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.64069087 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.324555274 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.724239554 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.234697074 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.099140695 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.653176562 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.217677658 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.839104653 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.201527228 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.098906294 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.098159922 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.865618116 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.005581862 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.170576072 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.099365392 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.73078057 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.207533005 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.11417549 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.098425664 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.562470414 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234343916 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.098285712 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.096843305 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.758803433 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.757310387 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.208496174 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.355027788 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.213276083 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.098454161 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.098172584 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.097970262 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.820908771 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.759465976 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.192972405 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.699375825 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.722903941 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.140842571 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.152033143 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.165425887 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.249857955 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.234198382 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.236100471 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.099104397 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.098130488 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.098606064 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.617948299 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.910546983 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.954001348 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.973593501 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.103349312 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.081604188 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.194816742 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.721142371 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.264664318 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.693809258 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.960622855 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.174852809 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.098588382 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.099262551 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.21878657 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.21121043 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.236521131 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.456742843 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230895426 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.099399571 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.67083736 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.199933601 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.666910463 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.17831695 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.865289868 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.070991903 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.199087722 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.207985537 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.568551939 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.152371516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.09914511 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.641362435 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.170192571 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.099628558 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.048128383 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.497516097 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.954725307 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.811748258 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.484862978 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.105720627 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.632040344 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.302446762 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.238005248 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.840551554 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.172610231 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.378272373 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.16036139 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.332235432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.221092058 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.658681631 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263824724 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.643318859 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.201991884 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.966026405 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.194583143 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.451805905 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.189191785 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.099103559 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.170987188 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.165571126 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.667240776 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.199104297 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.191739477 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.465901443 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.853972191 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.172186756 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.372543505 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.15934335 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.937802173 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.03688805 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.39275776 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.910851036 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.086348276 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.194517521 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.764678475 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.174938719 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.357075414 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.233106325 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.099411019 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.098864993 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.192627805 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.158758261 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.098827879 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.322264484 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.973338014 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.154570201 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.194785266 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.11443886 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.099449956 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.203565066 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.107892336 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.294228656 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.416257511 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.655728382 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.799475185 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.197890463 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.571781359 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.150643631 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.810600834 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.204559944 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.114581048 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.665819687 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.198599682 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.273591186 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.216944792 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.151264439 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.509403332 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.228451352 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.30790267 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.172148982 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.193999676 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.747801645 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.605626728 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.280825577 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.242539759 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267973965 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.658063554 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.096909073 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.658531476 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.104108848 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.828431376 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.090668342 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.126713287 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.099123843 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.099299372 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.655857115 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.078299907 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.115888461 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.820577321 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.537311826 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.149331053 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.858879369 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.20612181 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.115127045 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.100022746 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.099463531 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.024204432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.079271491 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.352545715 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.177096306 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.099330358 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.099738556 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.1835138 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.370565989 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.762930831 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.832056677 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.965522605 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234290351 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.099159548 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.09937241 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.09947627 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.099101468 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.099011067 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.098795309 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.351277235 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.234388528 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.737045592 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.207338404 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.116025685 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.229764451 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.133182203 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.099323024 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.138024112 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.128249699 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.180812198 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.16620821 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.099073399 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.502228382 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23557143 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.084970958 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.29138173 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.274423942 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.265239602 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.322888369 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25067002 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.515580649 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.425392903 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.881476975 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.11442005 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.025481452 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.195710063 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.811909212 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.050038623 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.448101788 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.706388472 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.098768329 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.264862728 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.900434209 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.510938528 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.169697387 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.135987969 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.099469167 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.098938001 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.079741317 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.294993579 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.144130969 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.411256639 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.211200361 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.095560468 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.306603069 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.164709252 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.072601228 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259880463 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.114902877 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.09881115 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.099542817 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.442687766 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.821133536 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.130791252 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.099834402 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.019994765 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.856622688 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.911486302 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.763763244 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.031087783 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232622968 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.099476283 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.272172503 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.149715358 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.606009159 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.221142833 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.818192479 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.40718404 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.144518042 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.142710549 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.467358415 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.732669022 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.341776704 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.184049759 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.099052583 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.360169532 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.00542154 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.238315228 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.031451716 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.352557046 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.653882445 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.58798034 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.284746326 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.184585483 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.015640839 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.68988297 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.099806528 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.115658222 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.877282456 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.237957183 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.275250922 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.937233624 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.283739738 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236481821 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.760078463 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.757287496 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.234472664 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.658528982 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.235857298 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.10004759 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.683448214 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.129034363 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.169340019 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.189097187 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.09949874 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.114549632 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.672079496 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.657852594 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.205993816 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.144251851 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.099784267 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.546086526 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.928239764 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.205543449 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.114562138 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.10006272 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.222574008 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.246875663 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.100280018 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.501637799 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.706398101 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.235682096 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.61789733 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.180461666 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238628911 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.283312043 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.496599886 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.235772392 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.159640256 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.100015806 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.099542097 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.099227172 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.388176465 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.227027347 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.100173321 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.643650676 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.23680777 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.660045811 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.181948047 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.258435164 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.136364008 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.499050589 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.236113559 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.625583231 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.003337658 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.194125897 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.401128636 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.163427686 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.144816463 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.716398482 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.171930697 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.099477721 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.935122737 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.253981227 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.315165665 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.336981008 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.30128188 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.153379454 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.696909912 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.177238857 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.571112852 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.213717726 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.100015811 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.689607456 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.165019171 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.385056117 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.216931093 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.468501558 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.182453318 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.46132064 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.350672469 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.189304649 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.100012672 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.099978999 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.987697129 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.112413038 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.678687422 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.021921224 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.460261725 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.198655251 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.000678168 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.572327565 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.731745121 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.399242832 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.172583322 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.262580452 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263618388 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.189160249 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.299800858 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.124607398 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.220150197 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.191832889 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.824655494 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.11918727 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.10109057 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.403101844 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.225497357 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.1001092 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.099231708 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.023390272 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.809294544 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.169786844 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.228899608 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.161873428 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.100706506 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.655554174 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.360747132 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.136068228 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.099899603 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.099639587 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.892402061 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.175884424 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.100862074 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.34902501 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.217976011 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.317280045 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858241617 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.50709791 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.189302221 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.100060936 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.100669235 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.610671861 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.553828623 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.227065553 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.462375267 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.158334743 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.631164786 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.099672644 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.472400717 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.593081193 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.148689549 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.189198514 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.100772109 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.078124233 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.756757491 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.124403806 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.867144299 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.462933405 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.156944127 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.82941544 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.960817329 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.12739388 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.150947986 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.11847707 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.100668135 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.099805505 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.100666343 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.621668626 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.109203473 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.11618943 seconds)
  done (took 1402.773436293 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.377087172 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.100709055 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.100244164 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.100084699 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.10037716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.100060155 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.100649895 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.100160779 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.09997298 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.100240724 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.099716586 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.099898665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.100002925 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382991357 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.099864571 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.100524689 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.099807172 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.100012937 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.100139722 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.100217549 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.099970641 seconds)
  done (took 24.752648999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.099646498 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.100372905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.100081241 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.100410029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.100205856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.100107863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.099843195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100256902 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.09964377 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.099625077 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.099482413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099878824 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.100033334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.099911436 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099523967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.0998632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.099923528 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.099947325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.099739847 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.099683096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.099691275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.099828043 seconds)
  done (took 25.287352841 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.100085669 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.100129936 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.708330957 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.188595766 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.100337473 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.099973603 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.100401749 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.272194578 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.234935547 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.009258035 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.547238614 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.161571974 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.115485725 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.241607868 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.193502698 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.100666782 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.238309851 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.100361489 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.100704932 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.100194577 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.100450919 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.221619141 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.200881059 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.100871241 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.87364046 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.239502536 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.100868521 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.100277107 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.101139552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.091193914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.207421238 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.11627724 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.010548015 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.770778442 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.333537151 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.014333001 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.219764113 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.116691479 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.100511945 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.099990023 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.333615165 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.896086695 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.116896271 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.10088638 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.301736533 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.180505612 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.100671437 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.481347161 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.156751263 seconds)
  done (took 87.693323963 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.113624662 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30131004 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.183308169 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.100493361 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.29462555 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.100392878 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26795848 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.100000523 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.100262068 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.100346889 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.314898484 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27389524 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.100702121 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.100695238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.261253473 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.100170991 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.100091521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.100537883 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.100136902 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.100440809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.100088916 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.218582562 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28765279 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27325339 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.100267592 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.100260191 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.100120163 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.100201451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.267495984 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.100505068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.100447166 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.100580501 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.306901024 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.239630364 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.100404015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.100509423 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302711478 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.100797437 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.10038101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.100457232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.100979567 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.100854975 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.217148607 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.309628754 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.101426298 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.233945819 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.100712819 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.101458403 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264971728 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.100980886 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.100519108 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284928363 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.100314863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.100719132 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.100665576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292915233 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.101043008 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.100412951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.100871951 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258406918 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.100910359 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.100704672 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273095025 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.100629482 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.100937804 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28337024 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.233284093 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.100569242 seconds)
  done (took 79.976906553 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.101784378 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.101164644 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.101499819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101713074 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.101340849 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.101584371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.101773191 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.101798347 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.101246644 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.101317136 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.101536954 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.100480162 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.101731036 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.10058008 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.101733489 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.101642164 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.101676887 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.101547225 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.101971039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101749506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.101545272 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.101783104 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.101787597 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.101906204 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.468008234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.101484325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.101715059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.102335829 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.101811426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.101917248 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.46549803 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.102096836 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.102051412 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.101425617 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.465429206 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.101287394 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.101667151 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.101606795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.102076683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.101833557 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.102037922 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.101773113 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.101559897 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.101614852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.102100818 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.101828294 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.101829201 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.464465659 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.101242021 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.101564331 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.101534663 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.101750371 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102016373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.101735835 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.102156963 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269013703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.101418245 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.101958623 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.101651341 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.101932432 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.101902842 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.2719767 seconds)
  done (took 71.189688951 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.10042675 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.100544299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.100766909 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.100853479 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.100859691 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.101260027 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.100762652 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.101096398 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.100829845 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.101068966 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.101154707 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.100844128 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101066377 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.100990961 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.100943524 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.101166924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.100903224 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.101146051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.100961167 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.101147172 seconds)
  done (took 23.109751669 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.10112439 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.100709456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.101141555 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.101122846 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.101034658 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.100899604 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.10137134 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100973771 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101283924 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.100870777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.100859623 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.101216682 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.101019608 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.101349706 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.101126748 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.101421634 seconds)
  done (took 18.708488683 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.101004777 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.101118689 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.100655721 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.101099742 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.101065797 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.100785922 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.100753038 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.100533808 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.100765683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.641176715 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.100981774 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.101005063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.100728566 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.100343871 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.100353746 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.100692271 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.100670191 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.100421564 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.100231122 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.100804092 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.677300352 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.100565935 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.100673146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.1010623 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.100571461 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.67231047 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.101201949 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.101257083 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.101049479 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.100680466 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.101153198 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.587237605 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.101062986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.101267535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.100661383 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.100765373 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.10107825 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.100907748 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.101388313 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.10070191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.100883363 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.100884341 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.101184987 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.101075215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.101093415 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.100508893 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.101135645 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.581591677 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.100241947 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.101328697 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.10125422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.101375087 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.100910683 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.6592258 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.100947031 seconds)
  done (took 64.854174934 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193711229 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218481661 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.100940717 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.101062984 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.15515455 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.155050829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201487463 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.115924987 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155255919 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.101117619 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.19548102 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.115955977 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154657089 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213656818 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195354248 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194798339 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.10141929 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.177746142 seconds)
  done (took 21.937593011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.101313105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.101510619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.101336835 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.101005166 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.101223993 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.101149815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.10115388 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.100946908 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100643622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.101202942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101596475 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.100939751 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.101358053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.10113491 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.101390106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.101082293 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.101533282 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.100828451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.100828841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.100957318 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.101373098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.100924911 seconds)
  done (took 25.31682624 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.133659477 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.146560046 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.101966697 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.101998517 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.102119716 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.125201067 seconds)
  done (took 7.801921636 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.153470506 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.100871492 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.137002267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.148635156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101109509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101000893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101020067 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101165209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.100925332 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409596469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101142074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101793898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101060585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100848945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101014249 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101258803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101378791 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101155018 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.146681649 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246167427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100839126 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.100901783 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1010092 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101370659 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.10139176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101482119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.10146881 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409983208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100903276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.100969262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101063423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101791853 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101543442 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40425783 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.149400167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10111581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101983667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247395517 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101365694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101656697 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.143168163 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.100860273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101145242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101689135 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101201527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101194688 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101037498 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101370186 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101338958 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459247299 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.100937756 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101967783 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10175519 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100911974 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101436256 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455068058 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409221883 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101596557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101410664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40966969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101238513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101072594 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101843668 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410512748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101136555 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.100888592 seconds)
  done (took 76.915071611 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101449981 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.137405176 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101525732 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416385547 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101472749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.10164004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1016629 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101750868 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101213989 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.155892386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24873225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101902988 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101313184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101655037 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101103412 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101268696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101389302 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101488876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.156136272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456651245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101186981 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101329684 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101579706 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101637494 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40550389 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.102311752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10137684 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101544994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101671647 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101582031 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101323059 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101601032 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101157965 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.137873141 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101628788 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101350118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101956708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.102382086 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101980305 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101869867 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101465586 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248894988 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.10175915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101330371 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405649717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102102203 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.101646779 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.161271668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.101497129 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.155990995 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405718414 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405806797 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413535794 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.102201821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101549302 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.101874027 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102098539 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.101738485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101696346 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101611625 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101414353 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.101526099 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455919158 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10191161 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101615889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102007711 seconds)
  done (took 76.941119293 seconds)
done (took 2354.722605652 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.110961013 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.234727544 seconds)
  done (took 13.436556785 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.102306873 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.102455403 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.25563505 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.102129359 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.117435859 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.218000063 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.18384748 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.112918339 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.102651347 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.187547943 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.102470382 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.233107986 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.208432209 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.103018838 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.102697158 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.111946125 seconds)
  done (took 39.495162147 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.090293273 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.301667684 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.119145111 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.88608739 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.269434913 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.983931127 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.415401913 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.357932174 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.399047469 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.558649317 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.366605811 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.611237013 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.837799532 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.218361355 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.708864186 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.751173402 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.850645618 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.900672846 seconds)
  done (took 59.718530764 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.093163127 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.24244822 seconds)
  done (took 8.441651026 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.123884234 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.10998445 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.118938952 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.105650808 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.104490731 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.113488428 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.101823013 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.103658203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.102721009 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.106424255 seconds)
  done (took 62.19996237 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.084331316 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.761803875 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.518532502 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.681861631 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.659440651 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.496103386 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.260064603 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458868446 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.189367577 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.090894003 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.962356225 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.606921378 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.833310091 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.074862196 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.602449966 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.424700204 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.695168567 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.639376532 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.414741945 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.428847215 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.344450086 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.822313249 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.557514064 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.958861864 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.112510701 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.207107705 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.204944808 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.201629084 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.18503759 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.013347448 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.951904619 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.12868229 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.062586728 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.110300849 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.033854844 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.739836249 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.750644396 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.308567429 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.427281227 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.393595455 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.486961329 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.386712203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.232984994 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.360537314 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.330329922 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.322931674 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.055636021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.334334152 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.193534261 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.216288223 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.545574565 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.288276796 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.230540108 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.218442453 seconds)
  done (took 149.704878352 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.091014489 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.4696793 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.242077766 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.092735713 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.358040326 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.306632182 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.646843631 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.59186881 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.098147995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.30237699 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.268868325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.225137727 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.094142794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.092005828 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.096483766 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.094662733 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.281233734 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.502149441 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.097451025 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.092173727 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.297158581 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.330348606 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.23378917 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.094877752 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.264293665 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.341319226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.485270251 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.220618987 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.492781974 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.091850554 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.493847374 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.097606507 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.094504861 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.984863033 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.467549222 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.393824479 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.499887726 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.091705991 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.838170676 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.093328459 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.822180195 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.297204229 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.404159863 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.240352637 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.252774498 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.331863417 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.725653159 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.091311209 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.863573746 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.267644628 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.31333449 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.309712567 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.374136365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.099468966 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.609021494 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.094489877 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.092871751 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.354651194 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.246568842 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.214617924 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.094842066 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.09404587 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.093234446 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.336608437 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.095105943 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.211675956 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.094567135 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.09416753 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.213985243 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.215274451 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.246297028 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.341409372 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.345436938 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.004374721 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.44051528 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.330171502 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.488551399 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.33531312 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.095152172 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.092216886 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.457166824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.541771014 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.256604403 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.338571044 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.400560953 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.385262975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.647689231 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.091540087 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.310866903 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.255095696 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.464535195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.250517045 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.43603093 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.002894195 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.091979054 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.09411662 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.090098475 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.226995738 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.095602549 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.605163035 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.360653843 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.661370349 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.270899708 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.395057281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.204785615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.095374434 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.677342131 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.093412405 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.315615338 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.388232522 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.101598533 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.094187466 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.247040444 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.036911858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.091971203 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.383926032 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.480831669 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.10520745 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.252353095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.094351253 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.34523324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.919336989 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.328905199 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.439081458 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371519868 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.286540946 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.250818873 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.095219844 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.445365158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.367194937 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.502478797 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.421021726 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.094579803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.096927097 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.405895785 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.094578922 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.092773322 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.272467196 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.803528124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.273277474 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.096137195 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.503045875 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.259086121 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.448493491 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.108534311 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.343294696 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.346602637 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.482673084 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.109536202 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.232600582 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.095327178 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.069583734 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.262181806 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.093921511 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.09422032 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.901557941 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.094606706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.251889451 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.329200749 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741981974 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.573297501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.439912357 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.091750825 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560909679 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.305534742 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.523588969 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.63132684 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.26673051 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.835126523 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.34683607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.09406868 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.339016612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.401011593 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.096554578 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.093836554 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.795747335 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.006728391 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.093608468 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.261549835 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.004994357 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.315074051 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.303790661 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.096433946 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.432366474 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.108433148 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.24467186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.599619698 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.144630814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.093394373 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.0928522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.093294489 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.09660326 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.305852406 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.362294452 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.635944417 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.242756537 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.394856253 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.320809417 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.405366439 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.547340202 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.107177566 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.42345506 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.094647259 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.534861662 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.107251813 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240417472 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.399712266 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.096632411 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.313259286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.44215474 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.260051494 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.541968683 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.102119536 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.094679233 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.671881119 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.273122535 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.537391779 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.101493976 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.181339409 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.466823618 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.228990176 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.278953897 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.128120392 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.103831863 seconds)
  done (took 720.813504583 seconds)
done (took 1054.900847821 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.092121657 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.095349693 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.100685889 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.098490824 seconds)
  done (took 25.478413157 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.935825974 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.928197792 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.199040887 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.105289582 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.222729676 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.330794814 seconds)
  done (took 10.820799745 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.595733265 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.096101659 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.099381006 seconds)
  done (took 17.884705967 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.413044168 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.577854961 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.278101887 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.192271446 seconds)
  done (took 6.560022141 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.105962674 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.103844353 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.103206623 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.103315576 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.103433581 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.10301939 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.104895806 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.103883509 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.105037644 seconds)
  done (took 11.033261754 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.58304747 seconds)
done (took 77.452540756 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.525228917 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.400076494 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.105969368 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.389799613 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.231940223 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.420932712 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.216607946 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.121824054 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.442104515 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.542478276 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.608027501 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.241004885 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.59620619 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.526873057 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.334084542 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.126314657 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.118618281 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.163039041 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.755373932 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.285107898 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.107490921 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.236776078 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.759136688 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.132528732 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.997656389 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.178629929 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.350604365 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.095255175 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.801382504 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.126983647 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.192500667 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.640636679 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.301810973 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.410437554 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.196935842 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.013799914 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.582783884 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.10508864 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.352864863 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.658879317 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.395776763 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.224416001 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.092983424 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.412567668 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.517149177 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.120890336 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.042784319 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.2632748 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.681686241 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.291467428 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.439150457 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.106116634 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.736810615 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.177810827 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.185458372 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.093870758 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.173650717 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.558408068 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.314710586 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.393221475 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.11825817 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.091834171 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.120044384 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.129729936 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.092005001 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.315334888 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.514839499 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.189758835 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.566119918 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.126105162 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.11933492 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.133185791 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.818161967 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.173052426 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.092591154 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.194937633 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.39626276 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.238239206 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.10366065 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.193086868 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.387772544 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.099737938 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.328584614 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.439527024 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.263066392 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.489630514 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.600503567 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.512405243 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.621720518 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.107142977 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.416038345 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.724693861 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.456727112 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.105286935 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.183844113 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.375067181 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.650583999 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.61317176 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.235255334 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.785898587 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.131169916 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.119085399 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.59752874 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.4303308 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.901829478 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.140272747 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.231961006 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.092213241 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.346255391 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.091869166 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.589827116 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.609866586 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.105214165 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.164383632 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.615624035 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.098958459 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.388828449 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.567359814 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.181774388 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.103804322 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.404979329 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.106251361 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.223859731 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.590341198 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.497718924 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.302505587 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.097070667 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.661936636 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.105612751 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.351509202 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.109184915 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.731185832 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.678520031 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.134611867 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.353245116 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.227308149 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.092274907 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.352113239 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.15340137 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.23796666 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.398951881 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.385779393 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.224565235 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.092625448 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.423710786 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 5.381271127 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.344604068 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.40771644 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.264879753 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.376178473 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.185959288 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.117232521 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.103757132 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.602675057 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.680755767 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.846046527 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.340519683 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.232914668 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.677920425 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.419738662 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.928784239 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.20443715 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.153171667 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.105640252 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.120223531 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.164434505 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.092461101 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.103142948 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.403266762 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.459529171 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.719585386 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.895412355 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.100098825 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.39652019 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.238149495 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.110906437 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.742490485 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.101535912 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.555313593 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.556548124 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.221144424 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.130429065 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.092805314 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.115704828 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.934090255 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.142552802 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.440018133 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.707413959 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.550045455 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.538240026 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.324215419 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.148863468 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.487051584 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.346445135 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.38043841 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.362843086 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.64976105 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.183926618 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.411126533 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.208823858 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.381372635 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.105461197 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.361156028 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.319447082 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.58026943 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.455432281 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.32530343 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.329512057 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.440299346 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.105354054 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.105260367 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 7.841156893 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.407286155 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.133229642 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.092968887 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.84019754 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.555199805 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.106987432 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.229365615 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.567786307 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.205152756 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.197964149 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.642709663 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.117577665 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.428452589 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.325514282 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.279755248 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.315356769 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.136217197 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.245086566 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.276017074 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.240037462 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.328744792 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.142030249 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48234108 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.199330747 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.005509506 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.095336675 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.768705146 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.136234935 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.113657085 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.436679681 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.276512266 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.404729146 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.23194227 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.265187752 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.092939485 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.204009619 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.67823315 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.037150685 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.627754431 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.240288439 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.133529102 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.092817435 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.614966844 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.534117921 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.168571489 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.239609942 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.721709568 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.144749327 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.282792322 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.108954564 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.10532985 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.52803182 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.248327998 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.348365255 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.709264579 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.105288898 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.488645528 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.159392182 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.635295778 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.646047073 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.152474323 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.225517024 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.096496549 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 5.041607129 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.493070564 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.133612402 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.258093731 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.459701258 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.219937048 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.219271332 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.096900149 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.145053188 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.680763666 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.474602034 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.672204571 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.14042703 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.515443297 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.105918868 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.61397247 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.129301683 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.18582423 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.524882855 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.273473242 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.529328889 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.109441028 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.213740575 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.354786596 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.131147893 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.09298035 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.253038598 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.195565878 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.735899913 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.957525878 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.251859524 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.03965974 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.337132384 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.10939822 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.060369822 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.234826772 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.186349777 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.704024166 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.643954614 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.106830887 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.393446066 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.09620374 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.544558371 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.127311052 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.119980863 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.224097249 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.194151376 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.093868276 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.161075981 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.275010452 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.686436412 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.237559399 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.026787244 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.110208954 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.502569925 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.225531687 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.440382729 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.106352873 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.119773461 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.302801544 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.718074961 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.259308578 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.131676851 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.320949372 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.10977549 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.738985889 seconds)
  done (took 866.647474931 seconds)
done (took 867.952260244 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.15538826 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.489020806 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.314023241 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.978941535 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.912212838 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.757046273 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.332971557 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.347624809 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.189615919 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.333355546 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.045783946 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.911835846 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.205961882 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.229937652 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.19677112 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.209937705 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.337778606 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.353755263 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.239200174 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.914579072 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.477997421 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.919978895 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.530029853 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.408704012 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.485626761 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.211202437 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.178922473 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.468058497 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.466438664 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.083003384 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.317875463 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.311953199 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.936580644 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.348962847 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.196825518 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.196768695 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.984232364 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.206255691 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.14097358 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.195443416 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.487833787 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.236088347 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.830771872 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.040895462 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.898478543 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.530246134 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.987470526 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.216743409 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.211322058 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.290099274 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.145031766 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.138599187 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.467631523 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.1006753 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.946241432 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.033830546 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.466108497 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.986933606 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.845695149 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.289886033 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.485341138 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.211111232 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.289666244 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.345361118 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.233503534 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.406978843 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.53041751 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.139873064 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.312035741 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.340366712 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358190919 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.338602515 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.229964117 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.314755286 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.231657478 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.333116306 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.83693428 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.313885972 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.90478782 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.211824225 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.086774637 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.978557856 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.067747612 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.190492391 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.155515072 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.891731386 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.968672825 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.084223692 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.237559405 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.312238357 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.052951436 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.31570264 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.568126563 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.179963086 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.155190006 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.314835864 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.976968312 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.139237826 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.284051184 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.312544536 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.905846216 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.179454283 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.113609267 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.194001314 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.217767144 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.139387529 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.179323751 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.530427403 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.339093634 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.280909708 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.485734295 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.232946584 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.338455628 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.230107467 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.189927597 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892036312 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.396373589 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.993133053 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.139087883 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.776176593 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.392620821 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.194258622 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.48830326 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.409258492 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.155880851 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.206245105 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.2179042 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.081151176 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.216023291 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.210940676 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.303292534 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.565827988 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.29006988 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.983716653 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.339602119 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.813202831 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.351471419 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.339909485 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.18949524 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.99979219 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.206643277 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.261652353 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409526362 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.489488763 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.352787711 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410373236 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.237064268 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.369342635 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.137313278 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.239929739 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.339816572 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.244890718 seconds)
done (took 241.629799174 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.450871468 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 3.457712294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.381683404 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322601319 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.457151238 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.38652619 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.175261797 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.541340149 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.152693718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.518789002 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.320012854 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.225420746 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 3.510192873 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324821109 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46108604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.338503126 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.154399621 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.355565769 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.549554017 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.507559652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.112709828 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.316295357 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.237974863 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.486603733 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.093580775 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.102445764 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404297599 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.216809177 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.365901045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.17460582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.136411944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.360470951 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.404639976 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 3.216038877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.593009614 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.094396472 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.40126464 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.226750129 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.357838719 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447614444 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.295940444 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.868024477 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.175424541 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.123431967 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.20518016 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.374383899 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.1708841 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.349060476 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.094073849 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.094921533 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.361616957 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.143967831 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.223335579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360916827 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.337856482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 3.243404812 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.484220874 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.506658742 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.500462963 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.404171749 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.357799632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.521313806 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.485174102 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.214983242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.13458124 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.392779508 seconds)
  done (took 124.861600823 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.506042743 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.41536451 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.542871642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.420180713 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.659681347 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.562849768 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.494140352 seconds)
  done (took 13.695417424 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.163925925 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.150195502 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350329045 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393597784 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.153984697 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.273354378 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.238821913 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.118578308 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372839044 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.192460906 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.466303698 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.36750305 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.057794585 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.112584438 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.239444696 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.389748613 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.130933475 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.217055328 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.210545429 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.40886533 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.116607978 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.098783411 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.304642238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.133610974 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.154886943 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.193676348 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.149748127 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.121609621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.150219503 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.136590657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.159448112 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.262608474 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.144887279 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.10050166 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.136050831 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.470995341 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.155923332 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.154553665 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.290184432 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.094803303 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.131267623 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.155802537 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.291363473 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.159612698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.130865315 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.340026522 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.136790907 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.159878987 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.136966197 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.149054893 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.339438282 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.148559809 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.136878444 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.064562178 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.362687561 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.102035629 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.217727041 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.14438877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.148028796 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.208199676 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.147885238 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411160629 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367599715 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.132253153 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393521337 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.456191684 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.149900342 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.137310696 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.131181535 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.39353106 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.144828866 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346091715 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.154688148 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.198078026 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.156063262 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.286597362 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.340648957 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.945678188 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.925534833 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.063968639 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.501237955 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.137547678 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.465491378 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.084112968 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.06650781 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.134942939 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.154810602 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.832790346 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.059295342 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.148609402 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.463492799 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.132033352 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.205389032 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.200053168 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.132740001 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.21092335 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.338893074 seconds)
  done (took 142.990661508 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.32861431 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.295119992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.489253298 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.078672406 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.166544973 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.433531844 seconds)
  done (took 14.886234203 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.573581105 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.962228144 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.176640543 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.169464 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.205801332 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.105700312 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.106816236 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.308239666 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.305881117 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.169773811 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.105121616 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.106650412 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.106298417 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.28757149 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.105351675 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.151760998 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.105472129 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.172954163 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.155474314 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.214913827 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.30328585 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.205453037 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.215714673 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.817727908 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.17484721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.168968163 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.865419619 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.15266304 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.150239546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.501941818 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304514312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.105738766 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.825093634 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.250774452 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.878694401 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.821835491 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.308216395 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.114285072 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.155683872 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.105902258 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.106188353 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.215184924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.168247851 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.106054102 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.476254442 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.752610248 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.175681546 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.421987115 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.105734334 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.106482067 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.105853644 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.167174942 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.106054106 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.106006759 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.478172295 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.668674166 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.094117895 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.113787468 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.205503859 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.828585886 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.26060554 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.114089 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.534410293 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.087322715 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.094501543 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.106613436 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.831216804 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.319508041 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.224318438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.165030442 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.1062403 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.1670541 seconds)
  done (took 112.680308783 seconds)
done (took 410.207578776 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.345809449 seconds)
  done (took 7.440212054 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.275599466 seconds)
  done (took 7.472269173 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.095865672 seconds)
  done (took 7.214528028 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.10373303 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.130785587 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.119312903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.129593559 seconds)
  done (took 25.621654548 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.75686011 seconds)
  done (took 7.855724922 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.095190198 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.118211293 seconds)
  done (took 13.321662893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.172790496 seconds)
  done (took 7.293019952 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.378971006 seconds)
  done (took 7.510157969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.107038724 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.112945055 seconds)
  done (took 13.351148629 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.094593109 seconds)
  done (took 7.190029392 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.16907236 seconds)
  done (took 12.320828652 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.095364321 seconds)
  done (took 7.311709914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.110836503 seconds)
  done (took 7.208031926 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.178828227 seconds)
  done (took 7.275001323 seconds)
done (took 139.480699091 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.094953908 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.101632185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.099626623 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.098722553 seconds)
  done (took 25.490323251 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.429806294 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.430216422 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.407657213 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.481362025 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374161287 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.373505722 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.430824416 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429273438 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374181426 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.489040134 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.430644523 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.581409256 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.481416753 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.407327212 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.408002012 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.47547461 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.482448217 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.430461186 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373601477 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.408009592 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.473711519 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.481600972 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.847446151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.840841269 seconds)
  done (took 36.441198613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.302746418 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.274875748 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.256643457 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.227682331 seconds)
  done (took 6.157174793 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.14164971 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.479669764 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.462939771 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.521620931 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.463035888 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.27385057 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.462824266 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.315161936 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.28411194 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.28553211 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.731512652 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.257319327 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.270375885 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.522062243 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.274591161 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.106265123 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.106524882 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.244545055 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.479989164 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.352021291 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366647709 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.462869164 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462535105 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.463046221 seconds)
  done (took 33.886415398 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.867614732 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.031594283 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.465756017 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.020157593 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.80300729 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.901445118 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.387283803 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.604593755 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.372213106 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.346730787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.828230531 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.798601733 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.248779193 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.000384281 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.866271989 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.282373877 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.282094619 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.96552296 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.5224817 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.405716643 seconds)
  done (took 38.096785544 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.094746845 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 1.337672005 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.338306203 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.273468107 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.096408886 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 4.536944933 seconds)
  done (took 21.773002383 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.377317619 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.238110053 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395578411 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.366660021 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.261374026 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.230243472 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.620474739 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.326018984 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.838627641 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.761174203 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.526061726 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.527335195 seconds)
  done (took 21.569142849 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.095266081 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.141847784 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.102072455 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.275418585 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.911926763 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.981828081 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.421534951 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.096024704 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.167878336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.303902362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.968791632 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.270108499 seconds)
  done (took 39.850040335 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.312769486 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.278650595 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.414668822 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.139796007 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.503222366 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.144733368 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.464268626 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.061950408 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.698514599 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.864458074 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.66820064 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.112091128 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.628658856 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.070617983 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09673313 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.392235563 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.915801359 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.119823747 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.418914242 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.141108597 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058391336 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.167938008 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099228304 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.543297302 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380240537 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098954073 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.30716709 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.344265319 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.095261589 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.323025699 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.096921349 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.644043963 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.29950664 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.403935767 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.505187664 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.15833624 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.289890281 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.758500111 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.648881239 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.392304242 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.240111132 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.260296267 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.344162095 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.106944615 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355173823 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.879857021 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.112192532 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.823931455 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077909061 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.37312879 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.859476351 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.553943894 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.549752696 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.065059262 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.241156082 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.3905747 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.257798356 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.095951362 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.407810306 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.283286876 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.135650771 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.284947705 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.312812754 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.069421957 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.484511563 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.304218267 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.234038001 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.308998947 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.412422914 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.39013304 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.43766985 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.358414388 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.790919018 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.154650404 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.659227136 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.011492751 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.451669456 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.0993235 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.816365451 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.631198257 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.077384392 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.210987545 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.854776333 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.062025862 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.096096024 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272903509 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.096211601 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.067030391 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.108028275 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.304169914 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.358893989 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.150622594 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.18907166 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.339734118 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.802228985 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.110138814 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110495065 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.344787559 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.066910533 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.658197969 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.096413999 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.142267599 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.097304937 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.702290895 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.483239024 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.140670369 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.872302 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.727299514 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.398232443 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.705883141 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.265172886 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.096514088 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.447065439 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.426389071 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096029003 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.750583292 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.0983794 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.345685834 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.318832837 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.096394981 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.069361079 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.485805147 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.297808432 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096869212 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.37809748 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098530228 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.247695888 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.095948683 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.656538815 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.096727841 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.34071574 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.573375292 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.189771712 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.244165994 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.064220459 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.243034021 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.549223672 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.171642329 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.459824226 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.418187041 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.288438263 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.551339843 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.091871179 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.949720538 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.471664113 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.324213006 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.436982715 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.765267031 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.264847945 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.106781908 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.136621458 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.230675277 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.105676784 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.623584734 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.095939071 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.897577918 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.818379051 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.396104088 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.09601617 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.259521201 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.097563662 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.3429334 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.545959164 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.260411389 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.278856514 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.367983658 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.277380291 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.097085037 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.066660662 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.372099416 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.329829946 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.567714298 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.33824249 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.537337972 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.568954524 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.601213679 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.308369902 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.432887243 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.906912233 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.764007768 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.348476689 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.937405957 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.16575471 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097168417 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.31872964 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380860324 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.329712106 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.867854354 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.898195836 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.869047645 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.192775729 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.090023193 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.06988029 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.244877742 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.472219802 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.099049856 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.603104751 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.175611284 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.45970214 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.597056976 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.128817052 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.396798945 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.724546338 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.627359432 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.456266324 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.428308801 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.075860551 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.97353666 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.68511189 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.283166992 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.109965134 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.593581763 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.73622006 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.283248178 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.098191364 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445453211 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.970393148 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.904411134 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.625011425 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.656193191 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.103537338 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.266116621 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.489859806 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.1089763 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.916808183 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.377236373 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.297079454 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.812970923 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.557188421 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.320993019 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.426510068 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.096207044 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.101231442 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.368516734 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.404146299 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.353220882 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.550350317 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.325423622 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.777559637 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.205799829 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.732004565 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.26590154 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.125639653 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.620351228 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.240516719 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963502489 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.294313445 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.89472788 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.398500936 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.651822381 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.376923127 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.097403848 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.468938527 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.675195389 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.098651726 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.056065257 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.220229624 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.097559274 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.323118628 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.994120736 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158534577 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.652361583 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.766453014 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.343260635 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.291385945 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.482237998 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.524814395 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.417852709 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.068264581 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.261300223 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.194819879 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.393914294 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.097214452 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.386764891 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.789027847 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.552180866 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.051164402 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.599896446 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.467034549 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.131861025 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.478345334 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.307814714 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.408714695 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.085848715 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663322794 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.10427936 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.238608277 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.069085624 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.69249931 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55062652 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.473569365 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.479633287 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.123692181 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.507827348 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.440743839 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.336107626 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.138660403 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.360696586 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.09648469 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.39593537 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.096883387 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.09425799 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.527763775 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.102792049 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.015944349 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.331131392 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433259125 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.25797372 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.621388326 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.253104892 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.228323009 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.656730873 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.277515414 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.236518451 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.442663731 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.73582183 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.253619733 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.107231749 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.692479937 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.737670135 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.475624473 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.675799839 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.583181069 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.454785006 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.869227126 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.099031504 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.308910202 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.266952764 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.096993367 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.323365765 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.481128184 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.124175502 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.315715038 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.415105169 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.395790733 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.641785404 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.078012652 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.787506891 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.341406281 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.628658713 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.62658623 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.88120154 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.364945841 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.254812737 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.394801364 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.209643364 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.26074891 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.394739561 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.8370409 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.142880472 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993821143 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.887404022 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.179416528 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.630580885 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.109403549 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.95646326 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.2613481 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.335200125 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.30671434 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.234487695 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.065327423 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.839343587 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.8896746 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.370129039 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.261953976 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.290889383 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.15703186 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.378522102 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.606629999 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.40842533 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.871184989 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.475502214 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.293172456 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.070408787 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098207117 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.375446902 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.453711924 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.109757784 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.39214924 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.432849322 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.127910751 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.164350179 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.104200218 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.300859854 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.97618114 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.825104209 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.342423103 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.495670715 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.670421696 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098167344 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.871196659 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.306710826 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.453244302 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.487630087 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.903503186 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.530349074 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.394531941 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.259464049 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.067496058 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.2938066 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.112689872 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.272429677 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.97945555 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.402191324 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.094595532 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.037480812 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.69948143 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.098675961 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.183589072 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.098339213 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.371754352 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.296756792 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.096823919 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.84856132 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.484363014 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.250200438 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.082336198 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.85993513 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.067031667 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.30809254 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.099054586 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.377965909 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.939934336 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.125201422 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.864835706 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.541452231 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.142121134 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.282366043 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.069397697 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.702620713 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.245316109 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.560533425 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.048958077 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.350448186 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.619012575 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.291438084 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.099946515 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427305662 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.236300805 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.413591722 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.374466727 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.476207117 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.494674931 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.370914384 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363827296 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.783901099 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.342890573 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344189508 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.067120617 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.097927216 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.121876321 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.473033093 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.460841875 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097234826 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.640564843 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346651205 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.171868801 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.360357232 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.253448683 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.733048786 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.308132645 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.164477176 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.344104227 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.160769146 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.414858964 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.146128743 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.298924624 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.098661957 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.179109611 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.30803229 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.347474245 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.480710812 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.405813804 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.699018558 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.258204684 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.795001515 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.896464754 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.632646627 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09969706 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.777206825 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.57205974 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.09915595 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.476278602 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.698877142 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.291799891 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.804750327 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.30189964 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.204228209 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.250536961 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.618972215 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.113109877 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.769129069 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.476200689 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.09914014 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.480615224 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.143809815 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.270088042 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.877203019 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.598972172 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.099068076 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.708256041 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.47789619 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.66289269 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.801461989 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.108279959 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.258218166 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.671743997 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.076446011 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.098661971 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.217702189 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.632689571 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.108542099 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.637883979 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.149197883 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.340865132 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099865919 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.169960255 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.098402989 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.307776589 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.700849945 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.344361594 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.370976386 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.291620721 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.104994727 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.885630189 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.806405371 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.206271746 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.326644086 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.097548145 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.502505679 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.042695399 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.101981764 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.733746013 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.28070592 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.082801229 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489763558 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35783618 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.126785837 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.312024734 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098909905 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487589782 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.259620952 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.606899414 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.337578051 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.097756073 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.229160701 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.122450241 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.637580166 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.479601032 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939357823 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.097546329 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.406134514 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.098106644 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.697933061 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.753933384 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.26207187 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.147391468 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.954974142 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.807957756 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.903750799 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.351891027 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.101236904 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.311915219 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.611297758 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.068737464 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.694160866 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.105784273 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.31009254 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.427402084 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.070173745 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.29301407 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.115373467 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.079568474 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.599409615 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.0991764 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.406853314 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.072136502 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.663339338 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.109895808 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.108470069 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.333671639 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.460155609 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.098654854 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.817724274 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.266746544 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.097861661 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.097931068 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.448670697 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.247231067 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350943495 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.476677257 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.219031247 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.528001253 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.001705744 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.698394569 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.234056966 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.41009563 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.938825186 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.653014666 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.115001064 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.709605991 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.691415263 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.237818101 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.640185641 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346447977 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.837998442 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.193629174 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.603650331 seconds)
  done (took 1952.95426759 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.099624672 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.244772883 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.160973858 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.187761854 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.192049884 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.133357805 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.236868032 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.14855632 seconds)
  done (took 50.502554648 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.098012213 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.136139975 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.591049424 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.351695194 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.126477436 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.1582455 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.349581214 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.69945936 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.12071378 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.042937492 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.245261916 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.25151546 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.126745325 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.135801178 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.874517053 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.239699595 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.103148437 seconds)
  done (took 92.797626151 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.103587989 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.262094343 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.114862995 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.77873969 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.185501009 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.5295345 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.119967604 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.098664061 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.477035839 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.399051017 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.15523048 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.192680979 seconds)
  done (took 80.553493404 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.138264583 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.136461717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.136259027 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.137405096 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.13665748 seconds)
  done (took 6.783666274 seconds)
done (took 2408.07460523 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.342462296 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.641207116 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.672145159 seconds)
  done (took 4.410689914 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.167079185 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.240875247 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.314038583 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.250140721 seconds)
  done (took 6.094928536 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.381453445 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.578675371 seconds)
  done (took 4.058762719 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.46608549 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.134765568 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.688260744 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.101083232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.106595731 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.105097234 seconds)
  done (took 19.427189117 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.132894891 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.126839293 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.129895796 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.126038106 seconds)
  done (took 5.621668484 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.097545924 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.147455878 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.109043441 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.116033542 seconds)
  done (took 18.567936436 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.415689482 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.187828956 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.846120477 seconds)
  done (took 5.559918192 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.917758432 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.231871344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.901474747 seconds)
  done (took 6.149226858 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.351265812 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.026449236 seconds)
  done (took 5.475406839 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.275206943 seconds)
  done (took 2.373156767 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.585910986 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.58811793 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.765685216 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.833520212 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.011951381 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.392528315 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.503695732 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.345592655 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.629788636 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.663314033 seconds)
  done (took 17.419042166 seconds)
done (took 106.887457718 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.056725398 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.509998812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.253003224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.395325913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.282585484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.247829924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.124096182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208213236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523589573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.524218532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.928936618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.282828541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.158914479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.486226266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.159644784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.46567125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.257709137 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.058354876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.99949289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.483717739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.147674682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.501934044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.677201604 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.527143274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.282826591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.259604448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.156931041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.490255585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.196474444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.1820847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.285131116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.682945148 seconds)
  done (took 151.895915407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.097655399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.124072507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.125382217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.108372659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.054503883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.124821624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.108386844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.107634318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.920662956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.925402043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.124233623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.056306498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.126759828 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.107653835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.127938033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.109277818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.14017959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.123832074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.125464666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.123616119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.126289921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.831024998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.124546911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.848225207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.140335264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.125196687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.108169863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.125723362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.123779693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.124193527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.126299542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.108510051 seconds)
  done (took 187.900001261 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.097432687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.125511849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.127047943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.10876644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.125636781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.125113012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.110667282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.108904109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.124902123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.123372064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.125517125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.124364485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.126964804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.108146395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.127317542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.109125556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.124866557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.123482552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.124209894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.123887385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.124787092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.108635179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.124406989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.124188583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.124464362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.125222776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.108946978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.126051371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.125039831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.125080873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.12653726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.108720539 seconds)
  done (took 196.973030625 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.406841086 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.139341504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.071985266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.671735889 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.034844139 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.130188217 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.669469455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.408440326 seconds)
  done (took 13.658619493 seconds)
done (took 551.54892919 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.780162104 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.02972052 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.286002067 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.342197645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.640682275 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.424446379 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.341991663 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.550098565 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.845239198 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.531766362 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.591802626 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.33680057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.970596728 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.336146605 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.303308109 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.576256998 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.52912129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.820899218 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.320032698 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.933735052 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.324576651 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.998801489 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.586829034 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.893235093 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.597299981 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.045558126 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.281167876 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.532206577 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321946055 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.324252625 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.139587463 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.566631264 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.337079032 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.332961781 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621859071 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585910526 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.520390885 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.585508648 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.290610883 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.796634487 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.925459856 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.719357174 seconds)
  done (took 74.918352263 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.128028144 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.145654789 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.29649503 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.20729296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.816204948 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.208202603 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.360830155 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.349665752 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.218416117 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.328504397 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.38224524 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.83762994 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.380267071 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.79234185 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.370638469 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.389140689 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.211657111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.782238296 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.371893651 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.349613862 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.174926389 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.306285511 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.173242618 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.322548411 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.166022754 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.177574535 seconds)
  done (took 36.375921362 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.177642815 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.307375079 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.378120358 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.196643455 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.353960841 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.130509584 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.435940505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.317545686 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.798790969 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.66122163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.236324069 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.288216462 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.316372189 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.411835212 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.359306316 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.312103884 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.341235526 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.297214219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.316954462 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.323720269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.201216517 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.215269346 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.437952153 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.08013487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.976519046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.64846539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.418668208 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.673812343 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.269617336 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.316530283 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.262271494 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.418987353 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.512367641 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.385100187 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.284021797 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.151594882 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.160446034 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.240939552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.19657534 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.295964329 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.430082737 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.523179765 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.48524799 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.698581274 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.397554156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.357289019 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.557792684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.250520756 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.270298945 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.013828115 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41492565 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.771126552 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.357287945 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.326112195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.25681868 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.51463288 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.320708221 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.497870636 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.23947781 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.834205647 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.215979743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.527181829 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.318652412 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.402100195 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.436341273 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.334195648 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.286453044 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.664078164 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.485614242 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.307968839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.746356944 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.220041677 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.173131083 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.237533187 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.318229074 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.58697075 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.031640155 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.470582855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.505971694 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.421410344 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.37973614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.682385136 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.117122215 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.432888048 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.317748526 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.141111656 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.219032629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.466123651 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.415670704 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.660803312 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.711018076 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.51991475 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.601551236 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.30207626 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.724173882 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.596202817 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.143275014 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.152752359 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.368051387 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710824526 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.220233563 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.396129887 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.747719764 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.741463548 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.39895958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.240550852 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.499219213 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.406944108 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.536104414 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.127530536 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.313722991 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.226449017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.341956847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.424943776 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.128212545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.681143153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.256063605 seconds)
  done (took 236.768167539 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.098840043 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.118170294 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.102748296 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.118355345 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.099810118 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.667792884 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.156195251 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.099389006 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.656207047 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.155931342 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.099365818 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.10122821 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.101555391 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.108369886 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.260773826 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.286071836 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.948955531 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.100043442 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.100881398 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.110494223 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.928612556 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.101484635 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.100556767 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.110948049 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.103334076 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.098845576 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.100333422 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.11577663 seconds)
  done (took 151.256162724 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.159319742 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.526853552 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.1868047 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.254941696 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.195555586 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.185192439 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.666613013 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.297039247 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.236146276 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.170546137 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.173025461 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.387078726 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.466829648 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.752528945 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.301720247 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.355985542 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.805600104 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309570083 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.169173246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.162878755 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.326502649 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.489183699 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.42486899 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.425096741 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.315153207 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.426853792 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.23081922 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.158745357 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.27717144 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.634430643 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.183241979 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.507309553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.307689635 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.168259683 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.645244626 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.515618924 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.7354288 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.801808197 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.354297801 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.125202354 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.125344461 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.391762842 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.466080203 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.205031251 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.160496083 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.784009161 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.183383413 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.416700342 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.186521216 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.125370182 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.261567002 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.274631112 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.408553908 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.16989695 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.341666088 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.314885435 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.749959973 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.148613688 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.16866296 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.467838913 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.145374455 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.634031165 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.117344836 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.214781394 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.170462125 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.016451505 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.252773044 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.68538839 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.782593385 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.213556842 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.505087625 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.360629521 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.141204046 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420914113 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.341601268 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.591317238 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.742148372 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.308664457 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.269951291 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.248665849 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.436563985 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.158272481 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.711700173 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.266392448 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.14032704 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.640619075 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.558898996 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.14151108 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.158390016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.260513158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.325508557 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.37923661 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.433840568 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.23656361 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.066412035 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.423797691 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.442658769 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.176470569 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.291370435 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.15631198 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.592515186 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.352414149 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.146616461 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.479963557 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.557883249 seconds)
  done (took 155.971306595 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.828597447 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.214911221 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.357013703 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.700068643 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.495971363 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.675154006 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.434881477 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.229924238 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.462089513 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.375672922 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.427395142 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.252415671 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.844221454 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.917256432 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.21264913 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.386077783 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.27294469 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.740456617 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.438252397 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.172338311 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.59144415 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.838656129 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.485152524 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.560815304 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.540463951 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.642717349 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.824840928 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.279085328 seconds)
  done (took 48.314425953 seconds)
done (took 704.702317582 seconds)
SAVING RESULT...
DONE!
