cset: moving following pidspec: 1050136
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.237589231 seconds)
loading group "shootout"... done (took 0.821012677 seconds)
loading group "string"... done (took 0.219472306 seconds)
loading group "linalg"... done (took 3.17900659 seconds)
loading group "parallel"... done (took 0.021683748 seconds)
loading group "find"... done (took 1.184438734 seconds)
loading group "tuple"... done (took 0.68384888 seconds)
loading group "union"... done (took 3.028844482 seconds)
loading group "dates"... done (took 0.156623928 seconds)
loading group "micro"... done (took 0.058210017 seconds)
loading group "simd"... done (took 0.389823398 seconds)
loading group "io"... done (took 1.394544723 seconds)
loading group "random"... done (took 2.287032492 seconds)
loading group "problem"... done (took 1.155096123 seconds)
loading group "array"... done (took 4.414060284 seconds)
loading group "misc"... done (took 1.115987876 seconds)
loading group "scalar"... done (took 3.458646343 seconds)
loading group "sort"... done (took 0.31194765 seconds)
loading group "sparse"... done (took 3.520298788 seconds)
loading group "collection"... done (took 5.946906113 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.475126798 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.072345899 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.252038745 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072226794 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.268063735 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.083835106 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087019514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.073268737 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.121572899 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158529704 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.213648451 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.366048761 seconds)
done (took 4.972252572 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.29901839 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032633554 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122381222 seconds)
  done (took 0.744852829 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.134740059 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015717461 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02257159 seconds)
  done (took 0.757532772 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020432588 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.09878673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021763477 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022229745 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022068517 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.02150205 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021424194 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021399431 seconds)
  done (took 0.815989918 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028887034 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022462572 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020604538 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022028648 seconds)
  done (took 0.684563106 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022598552 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.091982686 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.026548795 seconds)
    (4/4) benchmarking "different"...
    done (took 0.026486865 seconds)
  done (took 0.748205327 seconds)
done (took 4.668991618 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.193992275 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.775193307 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.86786418 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.177714685 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.341905924 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.28481992 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076789897 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232383422 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149321033 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031232613 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.18408862 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.037436075 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.509901924 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.454328863 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026606459 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.14350722 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.576298419 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038659769 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070163269 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.21367356 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.034823421 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.038768297 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043039102 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027273763 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.089505251 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13458617 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.586360999 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.063824768 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.023954233 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.048154075 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027326654 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.031870668 seconds)
  done (took 9.16112698 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161158862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141929944 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023652118 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.058980192 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.052633054 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024915614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030033642 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022845343 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042262721 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088756844 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045349372 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151371254 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021008965 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024358489 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.133679986 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.115811119 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038446739 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037383006 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022606594 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036419327 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.048337607 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034253568 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.031999414 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031751 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067676015 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089214653 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041101059 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.067480418 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.02243804 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.033784408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054529969 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063163839 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022839258 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021228249 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064039945 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.043492849 seconds)
  done (took 2.662552949 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.632690406 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.050976874 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.139978061 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.127551706 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067517314 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050988366 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.173725369 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.07404589 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.053733795 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024000238 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.195909509 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.634610021 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.163649661 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.032515381 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.027668391 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.168154202 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.893523513 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.970603004 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.024132488 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023493706 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.130549034 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026199255 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.170071894 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024845805 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.133441482 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.69734565 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029598815 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024988148 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.050575566 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.257466637 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021328403 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.094173776 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.046408632 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025386492 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.561011374 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.022140498 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.020176331 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042372555 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051828066 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022056866 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023141956 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.030906616 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021217751 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071571791 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032823139 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.487624185 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025502086 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.671188692 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.704157599 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.028956248 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026286155 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.05590341 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019786345 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023177672 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.549689687 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.090488375 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022520856 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.285850622 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025542954 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.02472071 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.02496239 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.055469667 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023775552 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024572906 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026217242 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.040413165 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.044457926 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033059533 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042315214 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021987771 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022863055 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021375956 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.391803946 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029169762 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024905783 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020375086 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026351453 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022585454 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022106501 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.059984325 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.048334866 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.045658563 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.02651199 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023943853 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022555208 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.539173035 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.952735609 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024925362 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02437158 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.512166443 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.02066703 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022631363 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024275959 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.0444956 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023143529 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.020229575 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.057915658 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.025237931 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.127795968 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.26012129 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.025750535 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020740741 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.341746348 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024577707 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.05835466 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076072424 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022785587 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.063882738 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023216219 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020398036 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026828658 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020405457 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024588925 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021373626 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022080581 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021443212 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023186744 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024116134 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023034838 seconds)
  done (took 23.071042458 seconds)
done (took 37.120241412 seconds)
(4/20) benchmarking "parallel"...
done (took 0.800180089 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.205490084 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049495977 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019778243 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.15428844 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043307726 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.129068194 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.166326607 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.12198105 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.044354436 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.043796491 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.043737041 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.174436332 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.180500609 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.045570189 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.112727329 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.180277682 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.045232935 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019804486 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.044158917 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.044660354 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.044872095 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019730875 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.043840185 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.045645737 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.113000606 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.044228019 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019561218 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.112797508 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.045316969 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.114827615 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.046788711 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.045722656 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047143367 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.115413422 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.047914138 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.115602817 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020249065 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.047389338 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.047701176 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.048540319 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.047893731 seconds)
  done (took 3.808584975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.04614092 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038386104 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.054031333 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.01836775 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02848141 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038831453 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018147537 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038033041 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.056386619 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039914363 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039984197 seconds)
  done (took 1.154979034 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.04122302 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039295747 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.047206114 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018121207 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.029779894 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038958076 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018046793 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038750225 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.055467372 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039728731 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039350951 seconds)
  done (took 1.090196711 seconds)
done (took 6.713081093 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.148374222 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.119801533 seconds)
  done (took 0.934729653 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.568376822 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.202137597 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.126677106 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.242840618 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.120765666 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.151643136 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.664886729 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.155827123 seconds)
  done (took 6.955801427 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.076876599 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.138757613 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024388472 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.02264496 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022880024 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022774645 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.0244019 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022974135 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022327269 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024723054 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024401694 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022486952 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023300191 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024472634 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022681942 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022929444 seconds)
  done (took 1.360480194 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.027777982 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025416852 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.026517599 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016882846 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.026845614 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025350809 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026714255 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028014454 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.025914341 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026265001 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024236702 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027308893 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025941144 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024699505 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027367861 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016933085 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027541211 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026685556 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028864907 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.026891533 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026143683 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.02463794 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027616725 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025606607 seconds)
  done (took 1.312102454 seconds)
done (took 11.243071073 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13179762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029141414 seconds)
  done (took 0.844007325 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.124176808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123850388 seconds)
  done (took 0.938661729 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027688228 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015888118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.031247279 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023667179 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016211567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.01592058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.029968448 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016092473 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015922565 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.015987126 seconds)
  done (took 0.907763457 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019187968 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022445485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020533988 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019074879 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.02066867 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016958258 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019170792 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017100859 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.02233758 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.01627641 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019713473 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037609053 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019266077 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037990026 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019172861 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.019652337 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.02127925 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019187315 seconds)
  done (took 1.081851526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0177479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.01689267 seconds)
  done (took 0.733901429 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020275892 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016816669 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018405126 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018258336 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016481008 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.015994077 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016500085 seconds)
  done (took 0.812225067 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392315861 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.092742127 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323982224 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.024673566 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.037241247 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.238317223 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019956315 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023832913 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.023608768 seconds)
  done (took 1.865963528 seconds)
done (took 7.876231134 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.044779902 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.143910995 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.146511948 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437981527 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034272481 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.02275043 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.057062526 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221217054 seconds)
done (took 1.821844412 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.481732877 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.254910859 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.188591039 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024591802 seconds)
  done (took 2.166971808 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.309784427 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1382936 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031256479 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023032912 seconds)
  done (took 1.211953323 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02180453 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027412628 seconds)
  done (took 0.763913298 seconds)
done (took 5.340733011 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.028964248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016624456 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022483831 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018066968 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.017850226 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017282325 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017353898 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018128433 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016334235 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018192207 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018329413 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018193031 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017901334 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017799097 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017394773 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018168684 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016405599 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018369576 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017990421 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.017894213 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016280706 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018097748 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017438956 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.017830547 seconds)
  done (took 1.131145811 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.037267965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.023113676 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022994507 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.023615201 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023586632 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.02226198 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.02219316 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022104759 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022424063 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021314413 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023320811 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024016575 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.022024871 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.024248856 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021782768 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.023601907 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022425328 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022157243 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021516815 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.023351543 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022166466 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022182167 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023174398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022136159 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023327474 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023413958 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021314381 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022158697 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022358438 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023986348 seconds)
  done (took 1.40770736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023056704 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015133066 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015292063 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025541465 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015191492 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015177462 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015608351 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014811323 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015190456 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.01597498 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015813553 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.01502256 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015754342 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014926596 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.014966652 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015578243 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020353128 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035783549 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015253886 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014988841 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019759346 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.01520678 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014960717 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015000685 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015409005 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014998269 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014819578 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015283764 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014975834 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015531127 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.014907915 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019629221 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021164659 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015396623 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025364677 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020294422 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015752103 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019777801 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015936267 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.014908165 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015093591 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014968254 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015056015 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.014955644 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025556259 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015204122 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016056715 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015543234 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015306978 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014957867 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015141694 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016483154 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021028042 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016167147 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014888305 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.015991778 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014851222 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015524175 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.01500294 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.014876804 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014878011 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.01912142 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016383446 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015611601 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.036867408 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016348937 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025694279 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015056722 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015356867 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019202264 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015505677 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.034943246 seconds)
  done (took 1.965419116 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.026860631 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.024634344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033939451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024671607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018444068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015920775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018892564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016039316 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025012923 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019499796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016020976 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018915945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024921212 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019178831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017125662 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025409982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019756415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018990369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016380623 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019697486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017388469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.01937957 seconds)
  done (took 1.16811068 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103628857 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022600582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.068201842 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.022135074 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020615705 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.021635717 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022326935 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022229535 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022437703 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023454311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023357785 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022369946 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020550528 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023378771 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023429681 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023416426 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02253718 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023248923 seconds)
  done (took 1.240380944 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033646988 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021035993 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048064536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020824921 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020899191 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020393158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024490025 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024170214 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020430422 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020919406 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024178727 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02070196 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020669126 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021117956 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020865843 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021064579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020590382 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0209358 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02427421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024776817 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.02481593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024255278 seconds)
  done (took 1.239714165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036179539 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020848018 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039554775 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023171654 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015432747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015401147 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023131701 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022429917 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023271434 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.021034193 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022065853 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015527931 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.023886017 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021901745 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.023927576 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021895964 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020862059 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021847638 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020802818 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015527364 seconds)
  done (took 1.162208803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126613955 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017812099 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017384357 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021495411 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017220074 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017387925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021589898 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017326346 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.01734011 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041413111 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017280977 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017323524 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021480589 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020054564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017355487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021844995 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021568727 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021651254 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017430086 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017313463 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.041569886 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017498441 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021653819 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017462882 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017351379 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017363253 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017270445 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.019978796 seconds)
  done (took 1.399723317 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.038597195 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015381202 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015184493 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019075924 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.018920358 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024557862 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.018771847 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018772448 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014858388 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015063503 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.016957287 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014846719 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014983582 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024043851 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.01470699 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.01694348 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023919552 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.018784987 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025251475 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026686495 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.01734054 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024321829 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017576199 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015700283 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025691756 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.018091607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.01928713 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.019704845 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017152812 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015223212 seconds)
  done (took 1.301954074 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029133118 seconds)
    (2/2) benchmarking "in"...
    done (took 0.025936104 seconds)
  done (took 0.769372082 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.01814033 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032723045 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014841805 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028348617 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0240776 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019200417 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0235702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02422933 seconds)
  done (took 0.890816281 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.124140204 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.146766532 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017097005 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017272122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120023866 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083444604 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.130704782 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028519744 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031121413 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019948916 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016938274 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.13089257 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016530729 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030078156 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017768739 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026426754 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023939558 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034506587 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029487158 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015412907 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029229856 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017352914 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016438028 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.01707955 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017352266 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023241604 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032142968 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028937544 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024753768 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014805546 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03486809 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015672861 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016196039 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024623168 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.12032568 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015837292 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053072971 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015794787 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019798717 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015425069 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027519715 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036744787 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030051407 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033422111 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017064835 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017363551 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015492969 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017051236 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.01976126 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024713145 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015710145 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.022988027 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.01534496 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.016880819 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026097337 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015836209 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.019851581 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.02481412 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0292458 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026082296 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.027971236 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031050104 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024800605 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023613414 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016462449 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.03555555 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017212932 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028889016 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03038876 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016831242 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028451718 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015605308 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014834523 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015680679 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049027674 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.016978231 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.0165734 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015845808 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.015887719 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.016926653 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025185714 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020047016 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023081649 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018498465 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031450929 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024734039 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016027965 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022819507 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034178697 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019938668 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015871968 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032609155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.01986068 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.01561921 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033842472 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.02680845 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017569046 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016722976 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.02054382 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029921343 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017693854 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015266733 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024561398 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.017733807 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.123677245 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020655839 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024274134 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.015959041 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026113031 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.02211723 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017489693 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015221678 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020877023 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016812954 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015189663 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025342412 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016347867 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030766229 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.022986429 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030696052 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031138481 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026700475 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032158531 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016115056 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015379693 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034709003 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025727204 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017541801 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034324246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016013566 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026547515 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016128072 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017437094 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025398887 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015529118 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.01759679 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016255713 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.022203694 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017983196 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018021636 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022309249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024673014 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028439124 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017288566 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.024998456 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016513655 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032171801 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.025963491 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021118177 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019677425 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017035424 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028253657 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023125863 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025224113 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016033185 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017157869 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016397467 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.02786258 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02644312 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018695499 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.025764849 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021916483 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017181823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016355567 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.01721412 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020201578 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01951699 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.016895235 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024018377 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.024920718 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.030346791 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.023257522 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025360237 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016241282 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016286582 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018184975 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016354527 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021324222 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025726275 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.033206072 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.029234172 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038278769 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016520184 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026171827 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018138832 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033588058 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029782921 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017259975 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020809331 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015568316 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018417156 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.02582209 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027657976 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030591504 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03144293 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021413202 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021222452 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016199777 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031454664 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016740592 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024733412 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025504447 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.022220033 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016165567 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018136724 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025452958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.02129617 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017346306 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.031981627 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023742107 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016262239 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030722829 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016869144 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027053549 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016295911 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020382495 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022039138 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018319095 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025982023 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031882523 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015725346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016767898 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032060245 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018178681 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017994822 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024315456 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.031525571 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021356065 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024098221 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02689359 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026922069 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021230066 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026524036 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.01738944 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025553003 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019764838 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028212785 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016582271 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034812343 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015569828 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.031708887 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017097828 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027481111 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016775418 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02568207 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017216256 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.033667249 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.017909184 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017452798 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028257479 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015632923 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025633233 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016463095 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021870859 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.02340713 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.025663226 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018245393 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025770666 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018012809 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025347892 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021664397 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.02574678 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025634129 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021362721 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016382821 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024683519 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027510523 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.175743225 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.018008242 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017470014 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.01659482 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025775367 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.01718092 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016809444 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024270697 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020976628 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021968488 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016895923 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016886617 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016716468 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023887953 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024666973 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0330362 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024025171 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022926001 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024497967 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015368665 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031666715 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.016032857 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023908099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015519715 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022133143 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025757573 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016256246 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034553702 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017063934 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023576561 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027062827 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.02445844 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.020257867 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.035814242 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.019180101 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024647093 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023567999 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020502959 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022451164 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016775265 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023753722 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.02460247 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025583656 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.01599104 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022711213 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024207232 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.01680833 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022573373 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016612645 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023775624 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.016749673 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014783796 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020372807 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026242432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020776642 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.020754394 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015595485 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014673983 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015893442 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.021782761 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.021107654 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024279448 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030708217 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014701898 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.01595609 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015122028 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019472015 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033074047 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.024753507 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023309747 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.02054196 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014786519 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016512732 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016632256 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015364817 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.017779527 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.01476414 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015064639 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025393114 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.016530296 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020096095 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015959692 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016416183 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025239273 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.018981016 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.015680548 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.02240426 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015222653 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.020945497 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.014842273 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.01668601 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020321701 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015213086 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019625937 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025670647 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.031583436 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022427514 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024199002 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016256354 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023150612 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030553438 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.022643982 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016333032 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024714926 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015113724 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034000981 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025499306 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024857589 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025788402 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016875099 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033038776 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020949899 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025775625 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031683998 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016749547 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.022836154 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015597063 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031260939 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.020768531 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01575389 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.02456562 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024438155 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022366935 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027524258 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016534495 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024281301 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020147932 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.02004942 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017110813 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017042923 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024259914 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.031796881 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.016476146 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.021211929 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024006729 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024342482 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021059773 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028304654 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024076296 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016987006 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.017684176 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020086174 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016742266 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028026458 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016401507 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.020895406 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.020959124 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016044399 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023245012 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032682634 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.02532028 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025412495 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.015985522 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015398613 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.03386039 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020102278 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019165023 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.023947101 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025834402 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028275865 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025307546 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.03316741 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016976661 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022953087 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029626477 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017876053 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016552355 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020968078 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.01834529 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.026006469 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.027194222 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.024571101 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.01818795 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023366939 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029792865 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017501741 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021081809 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.021749827 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.016823085 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026464115 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.023877921 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024711593 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017496491 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016096719 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019821485 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.024787115 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023570052 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025033176 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017087948 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.024444921 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030189329 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.02369585 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019524944 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016058892 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019409273 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025139583 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.0222332 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016028132 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021059391 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020027611 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.024350619 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025303197 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.020989463 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016025035 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033143464 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024525719 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.024979037 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.0177261 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017843001 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016383216 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016040433 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027197945 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016110265 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017718149 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021567922 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018000074 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.034177803 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024449008 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032138467 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017164911 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021028769 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016199527 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025889606 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021126543 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016138219 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026422768 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015621791 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031570449 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.027821994 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.023035272 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016151304 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021733244 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024868061 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031290711 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025885185 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025295518 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019586614 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025968149 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017931706 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027172446 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016377806 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015398156 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026301944 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024751078 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028603281 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016270834 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026571626 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018158316 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024554168 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.025050733 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.018089579 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018071344 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017944705 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025765967 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021386494 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025611171 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021473721 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.03348827 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017471863 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027587568 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025366648 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027936399 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030318084 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028723216 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024913381 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016907309 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024026094 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.025523589 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017738198 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.022127137 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.020561726 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039282815 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018244641 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018101665 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031050069 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024710972 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.01646201 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024277114 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021465181 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026341756 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017319907 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026612856 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.021904482 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017414769 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021291197 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021287503 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015418378 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016147715 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016491249 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025909273 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.02131649 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016399487 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035758412 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017737143 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024835078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02719564 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.023286629 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017931058 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015457009 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.017162542 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.02957415 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031984871 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020895136 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024937116 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.01844419 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.025947957 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015706201 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.025023801 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.024197724 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024664703 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.016212729 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016511619 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.031196617 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031918659 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021464706 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.033382524 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.025336831 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.018074881 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.038977446 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.025267839 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017337723 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.027330703 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018702771 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015956378 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015782741 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.018177645 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.02794937 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016258195 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018660641 seconds)
  done (took 14.985069339 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.06633118 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016791257 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015509065 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015542134 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022151052 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016656692 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015588989 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.01660687 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016672319 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017672911 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.016000531 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015538827 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020594489 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029903192 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022708624 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018870334 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015533531 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016628177 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015737388 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016693799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020986263 seconds)
  done (took 1.293155117 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020080385 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.01977556 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019116477 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019389976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018648325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015780912 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0188635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015753037 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019322371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016109444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019641823 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015974707 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016142037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016087137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016074542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01706508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019290379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018568374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015745196 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018930459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016996748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018806768 seconds)
  done (took 1.143225252 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018389075 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016780136 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.025075561 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015888924 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015707082 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.018034621 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015280559 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.020048826 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019902989 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019897781 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024025347 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.016006864 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015018743 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021242776 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015158272 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015961093 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.060958626 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015997826 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015932741 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015185158 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017186341 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024150854 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015222655 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015351074 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019922055 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017617144 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015194764 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017222895 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015695514 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019971469 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.01586649 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015015888 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024056772 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023153777 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.01989232 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019806907 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016423289 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015852453 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015209632 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015075699 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023411216 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016262023 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015472803 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016093061 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023796329 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015591706 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015338204 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024486248 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015404614 seconds)
  done (took 1.683351427 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027396247 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068372492 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023101128 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050533051 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027647044 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.019993081 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021820656 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.052896108 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016168626 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016583374 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028186309 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.028893733 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017527551 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.018605909 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.023109729 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017557618 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018162187 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017268426 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.019845569 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017269721 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.019639776 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023091519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027357025 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.028388511 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.01826069 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016890163 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017050532 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018504677 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028186419 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.019913507 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.018716378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.01903483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028000743 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024209478 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017528496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017442123 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028523532 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.017747206 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017506033 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016094519 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017259344 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.018416608 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022973692 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028647205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017589915 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023834095 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.01745242 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.015723464 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.028295204 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017235994 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020329449 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029108156 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018331995 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017657861 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018671974 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028003876 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017621476 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.01656945 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.017699038 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028379932 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016122251 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018184309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029158625 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.01713531 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020217764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029971968 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024242562 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019067823 seconds)
  done (took 2.420571995 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026595641 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.021883793 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025675552 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025772647 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021908894 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022343656 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.021985644 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022020529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.021955658 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024421275 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022015487 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133096785 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.137711412 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023596482 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.022579654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022452727 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022348466 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022134764 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0219667 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021914225 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.02210388 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026274852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.021957176 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026204026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.054970587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019180837 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.021860677 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.021977891 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026258189 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.021937149 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.02862427 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.021970101 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.021945344 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02622012 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028474618 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.021836277 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015644518 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021705986 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.02207612 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.02278545 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019582676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.026764449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.02214178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.01933615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022991639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022408804 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.027180271 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029894068 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023224772 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024991648 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.022821872 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.027202283 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023386234 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.023754017 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028862219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.062093374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028903043 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028982157 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.023861135 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.028886232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.028814741 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.035739573 seconds)
  done (took 2.551365255 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029443878 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020691772 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025708149 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015171231 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014971796 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020403336 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015009418 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015041102 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0208963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020653761 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022161601 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021336051 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023196796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022490882 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021258149 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022702621 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020680391 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020513052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020523542 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.020526372 seconds)
  done (took 1.19125563 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018627281 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.019961044 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.01557904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019317087 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015780146 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.018914319 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015718786 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015658986 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015615412 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015729777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019860166 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019813531 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015641714 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.01947058 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.018957044 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019206559 seconds)
  done (took 1.040638305 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.019909382 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.025558436 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122532723 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016733767 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018262983 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015819484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016473097 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015415818 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017527024 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029023762 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.01637307 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018350622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.01647159 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.01527558 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015778747 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018324997 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018156941 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.01670146 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016658968 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123092821 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025478729 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017439096 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019097467 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017710949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018832054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024905014 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018328146 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018331652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.01649873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.01842099 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018191517 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027773381 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018120928 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.016935923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015285053 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016006472 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016409147 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018266268 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018248904 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016485428 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015410348 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.017935927 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.01639966 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.01669926 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017554929 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018457799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017594182 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026960018 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016699379 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018611086 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017075335 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018070497 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017442289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028100271 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018442647 seconds)
  done (took 1.996822837 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034946007 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022295711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015431551 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.01520364 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021401252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022462848 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021382296 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022050795 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022498367 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.01505205 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022620973 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020878084 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022595657 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021484663 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022463852 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021445344 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014922615 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022232948 seconds)
  done (took 1.151680524 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023605003 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020256885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020509849 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016865973 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016793407 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020477489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015221721 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016403834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016383912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016812343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016885673 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016483827 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016426072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016423421 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020133197 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016796813 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016420251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015445539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017343527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015508598 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020757339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015520508 seconds)
  done (took 1.143815619 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.182961261 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.143924765 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038572904 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033663218 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025429553 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051323632 seconds)
  done (took 1.23408576 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053397227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024379761 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021463899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047237955 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020976704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019475302 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019370227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019751081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022546468 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028106141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020190744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022387445 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022604654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024170131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021164413 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020667839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019663224 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019747693 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021677359 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030704647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019899118 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022083719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.01986874 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019659841 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019764392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024031643 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022524191 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02810292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019561032 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022067248 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020538623 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019661116 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02205839 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028022458 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02134207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022561017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019758893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030715275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021013966 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024420211 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021680047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021648799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022732079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022925387 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022562714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020103337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022325007 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019951222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020083492 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.033024782 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020966199 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02429577 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021424136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022567269 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022804406 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.033001632 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028376688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024998863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022621193 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029759886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02618713 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022297285 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026008548 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030143983 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022889187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026550956 seconds)
  done (took 2.345556758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029630387 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049164933 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020131475 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028808916 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024879387 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02041076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020352263 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020128827 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.01991806 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022205069 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059463688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019929084 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024095131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024196264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019896013 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019589276 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019642728 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023839973 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022059853 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032975605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019835047 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024563821 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024115461 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023962576 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028018107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020668105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019706055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019753887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019687297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019669062 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022155174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019787504 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023815314 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022020529 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02386713 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019780854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019608168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022166507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019622329 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020699516 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023966534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030181937 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019810337 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019710004 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028050513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019868607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019819362 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022144716 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019814564 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022150762 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028332861 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028223568 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028302549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024352104 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020048664 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020007313 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019791294 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019961143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021139758 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022117316 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025960672 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021099317 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035616113 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021785306 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021306451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026638592 seconds)
  done (took 2.343946934 seconds)
done (took 50.904382923 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214035281 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170330995 seconds)
  done (took 1.143321507 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.133793185 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.13451496 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.162880662 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023935387 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081485893 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.173652824 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.124688322 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.025967072 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023775561 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025165335 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023418548 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.024763108 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.024869507 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023245338 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.085787604 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026036059 seconds)
  done (took 1.892433977 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.072332352 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.267953623 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.067318301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023392643 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1030732 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029131751 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.02440033 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.029238237 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029317627 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023848377 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071570331 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.044567153 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027011753 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.027877943 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023611633 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026659172 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.027739997 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028094131 seconds)
  done (took 1.716721375 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.08910048 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032576212 seconds)
  done (took 0.889817958 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.135901199 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063174303 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.102624171 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.306298687 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.096148547 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284933512 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.099639033 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.095931693 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.066900102 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.093304684 seconds)
  done (took 2.113361876 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.059030948 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.054569225 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.274702181 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.053960167 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.033639366 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.028679811 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029779934 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.029125483 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030185718 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029052809 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.070595475 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027788154 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024397365 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.066769358 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046682194 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.05812242 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023467108 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028738446 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032391041 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023296017 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027653952 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.028915461 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127486892 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.028886037 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.047956816 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026540899 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028167376 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029168741 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029252461 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.029532734 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.029419493 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.051044761 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.028577749 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.036875788 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027505573 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.047546771 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024140423 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.047246144 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026768086 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024042513 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.026490735 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.030310633 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025045656 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.03045542 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.031277874 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029778634 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.029617004 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023555772 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030512572 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027083768 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024487857 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0277864 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.027857797 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.028230991 seconds)
  done (took 2.950228321 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.074903415 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.06596783 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023949044 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.070629302 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064788686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024163004 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077382594 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060157033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077481208 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023823855 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023676474 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023849832 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030914218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.034513158 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075432329 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.068764846 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025347212 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024128525 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.06755636 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.067375374 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022597984 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07790402 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06834842 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.066383044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.023905733 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023741972 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022500383 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023114489 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029468429 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030398774 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023137398 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032126909 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034088513 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.029591788 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022299807 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022552192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022497067 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.030604762 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.031046789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031325385 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029094798 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022286576 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022546891 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023085647 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023605381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022263548 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.030873596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030196208 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.030859563 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023136987 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023106437 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022435236 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023306191 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.029457358 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028524291 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.029960097 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031988634 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022852205 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022857452 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024166982 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032444676 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.030470906 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030448184 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023807244 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03040473 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022690197 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031614227 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036052864 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022814237 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.02337479 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.022944122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022864244 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023244975 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.028777984 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.028965172 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023450198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023272019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022816105 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.030722333 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.029111362 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.02292466 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.030456526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022470776 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022960066 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02334401 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023615156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.030954217 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.030676899 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023556938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023471772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023497284 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023303078 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0228458 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.032246621 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032035519 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032622825 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.03338787 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024482409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.033546687 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032136825 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024283689 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.030620783 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023442412 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0237571 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023730628 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.03058345 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030205984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.031976738 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023478965 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023089048 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.031357705 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033735731 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023471154 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.030477 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032952471 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.030793987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.022797891 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.033692158 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023551318 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0330155 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023736846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032534919 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023834619 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031315719 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023681688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.022879728 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023525848 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.033333893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024303065 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023829593 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024079943 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023586069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.031098481 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.034155588 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024133526 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031491919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.03127279 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024080364 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032442749 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02383374 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.032646379 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02387984 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024053042 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022814807 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034480322 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023493906 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023932618 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023720535 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.033114175 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023478123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.032799061 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030115663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.022956787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033804311 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.033882646 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030940526 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.034598061 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024447925 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02384779 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023688262 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024012667 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.03290945 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034843172 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024619717 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.02370831 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.030125545 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.032808612 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023106045 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.030571013 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030469601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.031054786 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024023633 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.02383211 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034082726 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034622141 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.031214691 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.03293568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032046204 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023630936 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.030635775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033199909 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023664829 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037817808 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023667064 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.034273791 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.033362399 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.030114087 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033383115 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.034391039 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.033877542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033499796 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.035703597 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023311808 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023568945 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.032558681 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024646109 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169429373 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028991263 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023984658 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.02415749 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.0359529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024690161 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.031542959 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.023213594 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029880566 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022637766 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023516614 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033383871 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023465871 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024218957 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029759557 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023596564 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029320287 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032193863 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029078543 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023293423 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023535027 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031003775 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.03090485 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022931064 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022684362 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023940265 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.030680042 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029479005 seconds)
  done (took 7.712086439 seconds)
done (took 19.198822376 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.13541966 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.070644818 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.130552296 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.082324807 seconds)
  done (took 1.195637427 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.055242028 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019327242 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.137672469 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.150080819 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019846894 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.132524188 seconds)
  done (took 1.307135903 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.243978424 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.145427146 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.149457454 seconds)
  done (took 1.32866143 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.147576432 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.274299665 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.542766634 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.141477306 seconds)
  done (took 1.899537162 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.165134876 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.158094175 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030251334 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174882713 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038548865 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016457924 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.099439124 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.016821196 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.048873095 seconds)
  done (took 1.595299554 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.089803287 seconds)
done (took 8.199640476 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.195992724 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.135435459 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033689618 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.02771024 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.122711832 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.127795566 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.141075082 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030026736 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.132392316 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.299647723 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.178336075 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048255607 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.149312874 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.041207378 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.255499222 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030710619 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029418026 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024340461 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.144516421 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.133163332 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.237884918 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028008948 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.096206967 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.031450953 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.101787765 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.079029269 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.188612276 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.306324609 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.268346256 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031114167 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.117612232 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.040975293 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.114166023 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.1227764 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.131369086 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048212793 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020089817 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.235525153 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.098647935 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.31353477 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.16264938 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027028361 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.137831728 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025327064 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019533775 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.140529687 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033011293 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.026727313 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042506914 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027038639 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.038531311 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028168468 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.130069622 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023883157 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.092065927 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.136033102 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.180326787 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.101316873 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025956822 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.037505535 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029880497 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.156674969 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.037377081 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025539743 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032363855 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020657365 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.135654517 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.04089382 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020593635 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030961515 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029013032 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.096905886 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.150131279 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064909172 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031843083 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.117990607 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.097115389 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.045862877 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047631932 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029348351 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019776317 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.187231816 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025003043 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.037864365 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026878572 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052501188 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.019977804 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.034421315 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.168500896 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.146451129 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.085663903 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021220144 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.234115493 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022078527 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.044793064 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021199492 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020615572 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.183923075 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020559065 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020548448 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.030514521 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029180368 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022016252 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.16643663 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.101973364 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028835522 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027544239 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.021206299 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026583339 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021638317 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021035399 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020490023 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.096350962 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.038712201 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.020505618 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.104927197 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.120159581 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031138933 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.196312042 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.085601647 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.024003838 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030344609 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027565444 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.136218053 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027021293 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.132330526 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.022052269 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.041311174 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119530481 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.096038998 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102398137 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.01979759 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.136802879 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029764499 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.01932891 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026921512 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046414304 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029390639 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.037294882 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028272848 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.137840767 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.029849518 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025493344 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.118606794 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019089415 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.116126675 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.097457675 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.128105564 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024709751 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029408086 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.09168621 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.043634064 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.05054522 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042058093 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.0240606 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020115631 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019534391 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.03268437 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018898781 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019647894 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.03275722 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026497803 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035791968 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.237540939 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.03082981 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024133279 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.247841167 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031819908 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.089398249 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.038808902 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019857987 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.099744064 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021790007 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.0397483 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.08353963 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020288024 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.09611947 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020595013 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019906066 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.025750659 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021343268 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029456214 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033192528 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020487916 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032737162 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027841081 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019930105 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.099319486 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022039407 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.186572393 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.098836966 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.093573484 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020213461 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038128182 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019730795 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.131369781 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020276669 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.068795981 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.10978012 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034332591 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.039844768 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021070902 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.09749509 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034225898 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025063912 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.097762588 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.131697821 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.09168482 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026744903 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.242154899 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.028877572 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020345946 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.02577133 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028762125 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020311689 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.098784244 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024756426 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.01927212 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019570144 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021355191 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018884763 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043345544 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019208597 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027862162 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025464085 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022837736 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021450115 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.018997015 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028063355 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.099597269 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.118673066 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026715268 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039812937 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033259525 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.03112383 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.068033129 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028077985 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.156213591 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019150409 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.029498711 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.039823776 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019364731 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024172076 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025557349 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.037123539 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.02349987 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021398582 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029046809 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020224182 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020240921 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019913913 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020173193 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028827292 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021353875 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019460567 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019449222 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.035878639 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025009811 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.024530569 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030764603 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039214411 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.471009053 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021530894 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022145719 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032541986 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025437398 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020257897 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021370876 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020106629 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021802743 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020123262 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019535768 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.047472511 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024794301 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.021143823 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.040792601 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.026783394 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030115233 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.117416822 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036324155 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024573115 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.01944933 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.256608078 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.093027697 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.040862709 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039191644 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020381704 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030993902 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020278076 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020862186 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019500494 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046206867 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.024921414 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020429286 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019531198 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019804404 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067787802 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028649469 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019933258 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028440859 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020412289 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020248396 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.047447589 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021082603 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020328722 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038189192 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032529533 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.105619391 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032506198 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.024131359 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.072049364 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019940094 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020289338 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020509405 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.117710045 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.032558356 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021810053 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020166448 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027770989 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029356184 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.073485055 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.02656237 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.023702465 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027918102 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019540418 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020754768 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.047116202 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.048415282 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021466955 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023866526 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020108745 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020407544 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.096312601 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027927072 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025209221 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.108463269 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022206862 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028353447 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019797313 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.657268703 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.030304942 seconds)
  done (took 22.138844847 seconds)
done (took 22.940206372 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.149572945 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.033400374 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040617191 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.02859776 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.031873805 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.03138137 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042983144 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.030162886 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.033772512 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.04185391 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.141671865 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020220278 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0275544 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034962852 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.029830576 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.033302276 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031565999 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.032053018 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020529818 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.032287508 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030830527 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.030810223 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028711422 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031677358 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020458148 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.029055249 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147160588 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034765612 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030156862 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029250628 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027453643 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041921507 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0277552 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026995019 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029024937 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025291461 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029686477 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026434788 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.151674897 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025752225 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020351498 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031519893 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027526789 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.028700242 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.029032462 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030826511 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.02539409 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.032680415 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.028418453 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039631189 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145109734 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028478509 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.029952295 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028038454 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025122725 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028824756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029749889 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.029966171 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024943826 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.038588828 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028139715 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027474607 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019454594 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028116827 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026821781 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027103513 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.01869104 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028208209 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019615539 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0194942 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.028017962 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028063357 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026327534 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024630371 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.027695613 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019423086 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027367064 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.03862698 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026610285 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.02810099 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019908263 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025063637 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024617776 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020025999 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028554381 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.03061132 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028651141 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020183699 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.028190064 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039376147 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026449655 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019559663 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030336487 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028168113 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027931291 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019565124 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.027935054 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027869128 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027425375 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019721989 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018763755 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028298193 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024840137 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028036419 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019889627 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028013955 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027896858 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018861163 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027916706 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026865109 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028317963 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.03018447 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.027957512 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030682944 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.019987288 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018709279 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029038318 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019936501 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028507562 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.028111521 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025131767 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027512786 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020171108 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027536053 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028295923 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025530172 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019987263 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.019968307 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019854039 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028088937 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026680426 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018760695 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019368595 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028326576 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.027989189 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027408551 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.027788334 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.027995742 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.019935538 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025465663 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024845075 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.027975547 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.027627726 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019853573 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.027799914 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.027697434 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028399416 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.024943308 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028742203 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020902999 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028185282 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.02669336 seconds)
done (took 5.660564459 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075005272 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.063064462 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.173054547 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.138924583 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.03321855 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.033767679 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024882351 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040005082 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.02661981 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045363061 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045385336 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043071665 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.161417378 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041251197 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020079333 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.031756789 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020471183 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.047188221 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143091922 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045125709 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062130396 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.018949228 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.035539392 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.038736577 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.032930976 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.03853629 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044385995 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021115531 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.037733789 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.037133132 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046879628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022558921 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020421208 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.038914367 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036354442 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028577832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.019767092 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026540942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.031495813 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019889672 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062933964 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038019656 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.02663767 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.026607018 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020713597 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.034611255 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020723309 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.027952519 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034152 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026400962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032297472 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.036116393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021964941 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.037476447 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.01886634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027124929 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.026843349 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019765953 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020820159 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.01998065 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020123743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023002717 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.032565332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.038380483 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024135985 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027315043 seconds)
  done (took 3.522941017 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.046016364 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.066354465 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.034758675 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034753648 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019732091 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020316531 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020274244 seconds)
  done (took 1.14791638 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091612678 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133811448 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.14215458 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143287996 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.15419137 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143144979 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.034301501 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.051076608 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.056478325 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155988425 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.152246162 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.144937285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024479604 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032756487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052149226 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.14663894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033270896 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028479222 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141279374 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147157097 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025956121 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052896971 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033401986 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023412721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.142661382 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135688132 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024406394 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062045841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023011506 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020786946 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020770911 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.04317731 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135758871 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036554684 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021186368 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019792707 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133033483 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021375432 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.135621991 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.027951374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135517319 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023554822 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023541531 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021149315 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022035337 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.138413669 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022389687 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021026516 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020970814 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14094541 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.033963376 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137381335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022695095 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0260158 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027997467 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027834509 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028318132 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.02150489 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138915788 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031382944 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022839829 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.146664809 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146051167 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138593944 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149299898 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030294094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137309955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.135595707 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021051051 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028718424 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021315137 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148654757 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025121289 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023467876 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019491761 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028340406 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.152889283 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.152629445 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.153150933 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035286398 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.022744229 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021703118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.152901072 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.156343847 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026941372 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021406906 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021563117 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.03674269 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.045463836 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023590964 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026054145 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021350085 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031895307 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023627881 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023050132 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148200251 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020820277 seconds)
  done (took 7.640291367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038541222 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021325664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.020842599 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021355864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021637981 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021417999 seconds)
  done (took 1.123557887 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.060698577 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021958819 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.021544656 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021452975 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.044064437 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1317228 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13342273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.024241002 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.039569433 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034119656 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.132242055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137519346 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133996476 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.022823561 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.132106221 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.03359688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.132805481 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026608386 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032684835 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023030449 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032371588 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022436635 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022629766 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.150719052 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016917437 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032865178 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030911287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032647791 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032143333 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022310819 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022319859 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016364842 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.031305424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022328823 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134194257 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.033395631 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022055141 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017613456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025832292 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016417853 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135454568 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022961018 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.025850549 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017573589 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022455808 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031632046 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017581801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031463806 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134043884 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.017996887 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017600134 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022079443 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016485339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017371839 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.03173166 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02255098 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017579996 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.133875042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022700207 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.031849149 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022115463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016513185 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022438699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016342701 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026499051 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017496153 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.031532496 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022769215 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022726597 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021686036 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.017469884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021663951 seconds)
  done (took 4.038426076 seconds)
done (took 18.374521211 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.454253678 seconds)
  done (took 1.36337621 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.984998788 seconds)
  done (took 1.905488218 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.049942709 seconds)
  done (took 0.982428008 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.290477592 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.458987852 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711562324 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.090621678 seconds)
  done (took 2.465075899 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.829276994 seconds)
  done (took 1.773061001 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207712839 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.173368884 seconds)
  done (took 1.338360786 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.487011422 seconds)
  done (took 1.412390481 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.303500399 seconds)
  done (took 2.242424937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.19521534 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.131908746 seconds)
  done (took 1.262664607 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.604055874 seconds)
  done (took 1.533676263 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.430845387 seconds)
  done (took 5.375909998 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.194718374 seconds)
  done (took 1.183010018 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.189164375 seconds)
  done (took 1.128598665 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.705227149 seconds)
  done (took 1.63541372 seconds)
done (took 26.543393623 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043338848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.036748315 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.036787953 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034418631 seconds)
  done (took 1.07598597 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030304161 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024733069 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.02692035 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027218231 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024799323 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026633549 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027324355 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023740349 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024746574 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024120801 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022722975 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024032235 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026440775 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023782308 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026145851 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.0276138 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024216325 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.02473884 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025813228 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023750015 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026742876 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024101559 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024064548 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025414643 seconds)
  done (took 1.54783793 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034080699 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025503425 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027193996 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024403451 seconds)
  done (took 1.054986948 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032265611 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.029877017 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038176994 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.038182679 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.03004004 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030709482 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036818971 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.037086451 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043620701 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.03955583 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021730308 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021417223 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020617917 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.033848953 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036436077 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016349692 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.01738466 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031140804 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030584599 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032726612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023674502 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019338142 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.03001912 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.03031562 seconds)
  done (took 1.654112124 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037808196 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.020829008 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.038574267 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.04832635 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.047347252 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.021226293 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.036353651 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.048959895 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.089837354 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.021427708 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.027896205 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.021706865 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.060903225 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.021151689 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.037225768 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.069077435 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.071735337 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.025806957 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.053864579 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.021313291 seconds)
  done (took 1.806612465 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028944128 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.02584167 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.026626207 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.020489032 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.032211019 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.028702266 seconds)
  done (took 1.159678155 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024976554 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.023012829 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.022723796 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.027629382 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.022775436 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.022379095 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.022476127 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.021155453 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.021299177 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.021950003 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.022725011 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.022813509 seconds)
  done (took 1.28479815 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160017252 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026743829 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.028072072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020454292 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021884052 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020762374 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.033762531 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022590281 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.036683807 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020550972 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020809825 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022885984 seconds)
  done (took 1.437008738 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059094201 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062892914 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095040526 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07243146 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077508358 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049015498 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.19303183 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033090477 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.11179217 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087769755 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075959147 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044995291 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03933325 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023626982 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05368292 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07005522 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088013941 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026694999 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072698988 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.232787126 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083155083 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.083003835 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099784396 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076061025 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044992903 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099420023 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.049842054 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.056638079 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074896497 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079237734 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073838638 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.056297169 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025520222 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024783512 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112875925 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.056708636 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072731605 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047000808 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058928531 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043480509 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080277133 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024133427 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037225814 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.064071759 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04169531 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090093017 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.050934086 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072038242 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035977323 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095073527 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084775885 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.16942035 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041401006 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06005456 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09801673 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069191285 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087859307 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062495392 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035785488 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.075653242 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.065852752 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058280158 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065777721 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035741697 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133492437 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.046587019 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.232837553 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06799707 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.044242928 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.048572049 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063784608 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087637291 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078166447 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.070398224 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081976788 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046219434 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081297255 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.053160867 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.076286256 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055153942 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026319175 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.07346847 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079661981 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.050430743 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052523509 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079486901 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045808515 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029276778 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.042154451 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.071055364 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033997382 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.061496259 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038733517 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.082269463 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087060681 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050950696 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068127633 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072373729 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032727125 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116760183 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06220991 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026865945 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071427152 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06644559 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106704654 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051995755 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029764016 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053611405 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057256573 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.114009927 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05792832 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03480509 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072832801 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097547869 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049986566 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.249492227 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.049975577 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097693868 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070746193 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040871331 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029893131 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.049389747 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069057091 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067031481 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079902101 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05098274 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038256061 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041510454 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078316004 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049671973 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034170107 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074760221 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.059611008 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029462358 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045554748 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.032104827 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109254254 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.041537801 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098067985 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.244253655 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030636466 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061232834 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.051041209 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058791295 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.054048447 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071978885 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090825687 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.134476625 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043073291 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.036040558 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060591682 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09375375 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077304252 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043803923 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.037678865 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051902357 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062538358 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052405704 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073817102 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046600836 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063044806 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055444503 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090208873 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093731228 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054477211 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058666056 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058691487 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.076638668 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029140995 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109867745 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056788556 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075659473 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041705936 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093348651 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.069446518 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05992204 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040267788 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057538407 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.055853585 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05944873 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096753855 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.04747632 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026324038 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048004924 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100983815 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031745078 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073414426 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044764497 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.046801714 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070774486 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047431219 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036856695 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022649482 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07875532 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117285246 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.026064841 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073421459 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.070767649 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059064484 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.078614344 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.024568579 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084312489 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093169283 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082794748 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105956907 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15410957 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078656541 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073785759 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.08169477 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225999451 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033356166 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.077273813 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08725729 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.04726813 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045136254 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086249913 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.071152408 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.085846834 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.064817114 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073037844 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.056602727 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05903195 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055772962 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.052140342 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093019597 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074989854 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.076835958 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037247588 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063175397 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068872425 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087827296 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034724524 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092683424 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.038399114 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09538391 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.031939985 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079415171 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030293644 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.12260413 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033561183 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053617609 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023803459 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026307215 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09486997 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.075599559 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058102359 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052489561 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.087243632 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090732349 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032009826 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066111478 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068054643 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.058204027 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070316253 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064493686 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042880681 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049501768 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061681997 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.039291061 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.034867708 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081515477 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051766196 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093068313 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.039050456 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.02952356 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093870886 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068157763 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05049747 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031187394 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063875777 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082409715 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047849231 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041401871 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076971524 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061370232 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099169635 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045760978 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.057816706 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083097402 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037141564 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.052250025 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.02455778 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045384302 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031969604 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088403121 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031404848 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077054717 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023484337 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.241037886 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038509746 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.051380277 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05680826 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061335155 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087968213 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047753997 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091429907 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042079864 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.068740461 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061322204 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064890131 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.039438487 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054513358 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.056295462 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07255525 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.04614915 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072341883 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09256242 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054348939 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.091835349 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042890947 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074270546 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05894676 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.07401325 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.066003917 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147654 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091460636 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067466377 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065612474 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029452046 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050072542 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066626849 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06464209 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127876272 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077612927 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026124314 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057814616 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047580238 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060284702 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061863427 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0336192 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095953809 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054549028 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041290785 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061940582 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.042778493 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058027542 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029880873 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056359515 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.049699909 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049240095 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05159039 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069350795 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084242015 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065257364 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100488197 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.058373001 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046241761 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.075111839 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07508663 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072325853 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039130219 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039593656 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100609403 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075415923 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.082687519 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.053964154 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067548458 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06886143 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057199851 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.244267224 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059352811 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.076081525 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033142203 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.029983158 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022468243 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025745684 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075419996 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063057039 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061843594 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058527891 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026800768 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059144081 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059676004 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025657075 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038290613 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046100664 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.051150629 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.03544528 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057357491 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066931925 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.046883851 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053436887 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055424454 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090932867 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.050288757 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040682964 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093363168 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099574358 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041075847 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.046065331 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025435623 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.032816654 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076670729 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097561501 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101010908 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.032623889 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040056676 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.037552896 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040487026 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025264886 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.041785519 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042914234 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058661302 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051445306 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067324611 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057711512 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029064245 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.061673778 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053008467 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047408844 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.061438284 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071234384 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079225362 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.091554532 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067373288 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068785261 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030677784 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.034266459 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031500931 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034695486 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060274574 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.032798855 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030575577 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103668629 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.04679431 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06716488 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069632432 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044180348 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031317919 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089815483 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024089082 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090909646 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025457694 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034710481 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036520399 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033218872 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050632443 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099976942 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065484007 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067971664 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063955964 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068728306 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148104092 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.263671136 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038631806 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092774589 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029186891 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029715946 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029763696 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.323894152 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043561154 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069580927 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094583122 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041600711 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053013355 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03131252 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093379495 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.048637704 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053253035 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038110075 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032289568 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092144636 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032758778 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0375338 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041835713 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063050217 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.025696718 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053431615 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.03625898 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032996843 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140260457 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.664299469 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051718496 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.028306245 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049748227 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.094432613 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086672335 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.04939578 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063719286 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.071182066 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.05825291 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047511573 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067364275 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.153266877 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027958495 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.04837401 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.050712968 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056045731 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062054301 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.049834397 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.042011355 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.049033068 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.039909793 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033276587 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067021342 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040157458 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050479176 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05958571 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.036923497 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041688819 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083383661 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056871805 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.038864788 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044859635 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.066793068 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04202026 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062028367 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024129394 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064551301 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043771351 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075712297 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.055005333 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065632304 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080469579 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049197906 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09397729 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064671523 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078963728 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042028222 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.032925349 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083136779 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.045681462 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032192741 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.255395934 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.046506601 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.057644775 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060676903 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050159442 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061327065 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.06487341 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063971515 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052673305 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031367207 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050700678 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.057655804 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038429392 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032160212 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.026171667 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.02929303 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059810755 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036995658 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039131279 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066868409 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041124779 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054384609 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.050758703 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073095224 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042146514 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055534582 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061530148 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044054844 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.082847289 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053524338 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079744774 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125984024 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08485472 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082843391 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086207411 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.03188274 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.032992625 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023119686 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06775257 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033353804 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.040792234 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032924955 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086280111 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038212953 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06446839 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.210776071 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.03431018 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.046812976 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050973045 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024581553 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038566591 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064286682 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040636251 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03383678 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065658926 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.03583925 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082507623 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062687145 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053657312 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050688583 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035926798 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062473964 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.059134415 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.086711097 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.053495795 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028889118 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077672262 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059425762 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09708143 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029148105 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03538913 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084280106 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05948182 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089944331 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036485831 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117841676 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.099518023 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.061492461 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091810449 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026269654 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045055406 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.046090042 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.079373132 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041643099 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.213580506 seconds)
  done (took 40.47737236 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.139376802 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.254696412 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.128097637 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.111091645 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077176342 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.076892652 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.246105338 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.09090662 seconds)
  done (took 2.178112726 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024662514 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.05296786 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035313577 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.287028971 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.054969652 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021108216 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028073197 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036239023 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024649251 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.02086479 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.058273318 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020838077 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.024873784 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.445463888 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020286823 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025036688 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.024818812 seconds)
  done (took 2.277587117 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.302648861 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.575939491 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.211514799 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.374059326 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103213034 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560394601 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029558345 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.035338491 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625350002 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.355883916 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099244705 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181076909 seconds)
  done (took 17.518886428 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.03087439 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.152170522 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.151219471 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027880182 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.02759736 seconds)
  done (took 1.513833503 seconds)
done (took 76.012075856 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040550489 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.12270086 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020951589 seconds)
  done (took 1.233906331 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.152434255 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.149261633 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.150404731 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.150858404 seconds)
  done (took 1.655568878 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030259718 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.02951478 seconds)
  done (took 1.133441447 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.175031411 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.254033369 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044370092 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.039595653 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.033912365 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035363215 seconds)
  done (took 1.171886467 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026534085 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024510536 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024504985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025018853 seconds)
  done (took 1.17077467 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.131646216 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019579944 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022000821 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023622724 seconds)
  done (took 1.252874106 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040060069 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039499258 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.069160454 seconds)
  done (took 1.210485295 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039002846 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03835654 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033354002 seconds)
  done (took 1.182802055 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.055978772 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.048417553 seconds)
  done (took 1.163903429 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.035486382 seconds)
  done (took 1.094633182 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.047420633 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.05283228 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.208879422 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.176853603 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.212477804 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.195173444 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.032714662 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.029753878 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.031935043 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.03412713 seconds)
  done (took 2.089600413 seconds)
done (took 15.943936808 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.03607184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.14544434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.272476578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.04033974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.780438568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.270402652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.686273309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.045699355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053504592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022024674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037654718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.758458441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.691304092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.108283477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.673461918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.097999429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.518201919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025044506 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021866582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022194022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.664481984 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024240508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022428151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.023016999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.514291899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.288486418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023467807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.099345293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02423965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026337357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.270469399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023971006 seconds)
  done (took 12.363229639 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.025811821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.07520902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0262538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036338292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023474407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023568143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.039648912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0225061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065054151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022079922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038128979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021429305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.02597558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02269012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.040893923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021759755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023625271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022434352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021821024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022540953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039499258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021335357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021962092 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022181023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021854625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036211504 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022777924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021682272 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022316962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025702661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.02673511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022981217 seconds)
  done (took 1.996313112 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077530008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076765584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027098734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.060633328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073014555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024576838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103998212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043529451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.066748215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022414969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038197135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022112063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058124156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023203447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041439192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021878898 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024212219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022308265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021709522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0222519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.039924763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021688304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022289785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02246542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.02255073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038112914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023042448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021821889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021873525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025651034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027873885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023528822 seconds)
  done (took 2.255496396 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026142772 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0270994 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032705165 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035296802 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020390219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022905231 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024079736 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020382399 seconds)
  done (took 1.28682761 seconds)
done (took 18.980411651 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035587299 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022026617 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024975937 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.04698732 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.029172533 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139560795 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.02476965 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.02713676 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025663723 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025133663 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027106356 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019556291 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024307011 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024359949 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026100405 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020337403 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.14272692 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024905622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140667434 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142765936 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023101126 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025877028 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028637613 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.141400448 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.141805262 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.141506951 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029640788 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026125234 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.025861463 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023163724 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.139288258 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.142635792 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023512596 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138243999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020870623 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020279198 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024700858 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021760289 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.144919353 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.02976978 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022774955 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029370562 seconds)
  done (took 3.413233662 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.14775696 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.152477212 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.14517197 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032917203 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028985701 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.03206499 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.149903971 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029550998 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028168152 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.150182548 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.025382521 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.029053253 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.031303098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.02166569 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.029124946 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.025206202 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030334825 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022546123 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.02869792 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.0289646 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.151576192 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021850212 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028768789 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029154281 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.023729062 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029811402 seconds)
  done (took 2.543705852 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030169235 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.042952704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045421212 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10881737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.062668394 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.04364929 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036988932 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047411738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053265813 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021241854 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043446484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.049603961 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049806493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028117692 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060147551 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040307831 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034171743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.02279158 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027510574 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.05574196 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.04451161 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040357436 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.053947149 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.040889124 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020208154 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030137706 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025944395 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.038251456 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033720921 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.034623831 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025881983 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025054334 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022060158 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.031885326 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024725027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019592439 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044345889 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033925975 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036297758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060011032 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031485519 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022451277 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.049034678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.083794671 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020541923 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.02415559 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025501163 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033719896 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022685079 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063691068 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036680923 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020847538 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040627829 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022567301 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022642736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0420457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022761633 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023103517 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.041549611 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027699436 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043783838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026925062 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041199744 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020221799 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032568751 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022468977 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022846812 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020062023 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.054955849 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028366318 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.067165736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022218633 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019695804 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034306361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032892986 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028499165 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.019941347 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039272173 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033796735 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025006709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039449293 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.023822989 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.02442859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.06484041 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020418261 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019487658 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019400053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023560212 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024513438 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021711737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033334078 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020643948 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024542162 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0477426 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020775117 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021684928 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023545292 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022452608 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020432441 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.030381137 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024311997 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023041486 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034450159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.02193151 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024713394 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036158714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030520469 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.019699276 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022543268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023765892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023314483 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023364421 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025306574 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023317893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027007681 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028822043 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027216499 seconds)
  done (took 4.976999201 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235376466 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.226044764 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.02313267 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.223850479 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029810063 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.155981147 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223854402 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.225043224 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022051929 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022800156 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021221002 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.168956916 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.164757198 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.176446136 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.155956766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024159046 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055294826 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.174515237 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227402005 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.224062354 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.053922119 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.028841269 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.023988036 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023006554 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022521567 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030157899 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038442979 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030265366 seconds)
  done (took 4.133138344 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.02997428 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065766204 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025464582 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046326957 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038793963 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022330818 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023744495 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022533851 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038533141 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027190859 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022004987 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025887273 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025678449 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024085816 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022165306 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028240901 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.02847872 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020690378 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025488311 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.03034851 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033692705 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046011411 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025860966 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021708834 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025048892 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021658141 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026838262 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030091463 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021511424 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021434262 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018987425 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.03050473 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037099488 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023098751 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021572015 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022357491 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022096007 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022034958 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.021956259 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020233513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020085288 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026830424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020545116 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026369688 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035246375 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024077918 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023463325 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024330544 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024381383 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018877559 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025020533 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025480714 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024591079 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030509068 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024358871 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024716696 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023377138 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037040874 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028354888 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021540536 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021550928 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020521236 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024347963 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028227498 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038023697 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023800902 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020510504 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022198222 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023592599 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035730423 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021865736 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028410194 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019116118 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022136059 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024542767 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025283676 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.024418073 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.021133234 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.02243497 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.022219588 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022560748 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022404992 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021413686 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.02459919 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020033981 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020727627 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.02260676 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.02354393 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.026938993 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020789318 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025241421 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023453498 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020716255 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024758926 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027382706 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.02491819 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040447497 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030503231 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.02376848 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020825772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.04064136 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.025521758 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021667681 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024133199 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.030705164 seconds)
  done (took 3.856921177 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052429112 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024214107 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041682015 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057420708 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032398532 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027863257 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035766757 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.02333586 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.04346141 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.02124772 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031179022 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020315868 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035012212 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030740716 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023918534 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032054869 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025876538 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.044797884 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.038316934 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.02157638 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031933216 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.035806279 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.036170755 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040659465 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039384181 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040282205 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.03427374 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024840492 seconds)
  done (took 2.051980394 seconds)
done (took 22.051443896 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.139474299 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.308098093 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.115826026 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.88501392 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.162791723 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21450895 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.300797899 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.089899781 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.057783013 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196891348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.762264771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.290568742 seconds)
done (took 59.686108148 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.231285107 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.240786643 seconds)
    (2/2) benchmarking "String"...
    done (took 1.331563702 seconds)
  done (took 3.673840354 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.531297202 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.095116051 seconds)
    (3/3) benchmarking "different"...
    done (took 1.163369664 seconds)
  done (took 4.868958161 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.446808845 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.656941526 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.362821134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.093490217 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.094242996 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.546856806 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.274142036 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.79462505 seconds)
  done (took 26.910590849 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.135395699 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.345793752 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.462029581 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.563872167 seconds)
  done (took 17.679888619 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.539420637 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.609375009 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.605425206 seconds)
    (4/4) benchmarking "different"...
    done (took 1.715008724 seconds)
  done (took 7.684862925 seconds)
done (took 70.674269702 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.085049546 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.390072932 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.094309311 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.268605983 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.185863529 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.161768601 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.094139628 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.09449831 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.087545771 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.097019946 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.08867746 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.093754429 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.089377611 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.137489372 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.086081342 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.127087376 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.394767576 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.093099126 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.095598951 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.887436853 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.428871099 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.088678099 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.102139079 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.15361731 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.406069881 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.085824088 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.539216465 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.099213197 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.690942667 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.081914808 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.096587448 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.084940334 seconds)
  done (took 181.589791691 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.072813997 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.926503876 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.945010325 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.111528646 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.465281865 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440512783 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.951702038 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.49965627 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.095628579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.112354598 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.07191762 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.102407414 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.085586112 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.636918481 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.130338135 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.110418611 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.974586258 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.909330122 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.130271935 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.020990798 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.092756663 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.680187842 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.665832635 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.9285162 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.103573787 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.128522707 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.093442762 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.120788493 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.584805194 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.936510561 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.105145937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.09299933 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.27411026 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.322809756 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.099527396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.097340367 seconds)
  done (took 152.218565675 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.323809329 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.086095828 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.118170555 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.207939006 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.028752774 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.897838679 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.084791285 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.076347375 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.08348832 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.08974849 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.080191064 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.152544625 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.10107663 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.180349373 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.108786713 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.088030651 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.07579201 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.128529316 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.095122514 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.076873212 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.074840102 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.194191281 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.426560939 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.199702363 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.085299639 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.081323096 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.195304179 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.099724116 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.078551916 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.078803173 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.207782398 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.084201508 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.203516394 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.194233354 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.094397766 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.150827399 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.097958909 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.306048222 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.092395462 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.07544134 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.088412074 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.130043037 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.092381023 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.160626827 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.190320376 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.090773301 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.09589746 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.661816491 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.67971997 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.107350881 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.08829045 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.076110405 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.076043221 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.082790456 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.293076258 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.096941363 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.111015843 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.682525545 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.094069214 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.09149003 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.078466641 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.076287693 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.08550287 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.07899242 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.13133727 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.671486287 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.516065749 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.438219343 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.789351069 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.085325973 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.097508063 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.075239187 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.182253384 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.142796453 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.090321353 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.073651492 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.250736361 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.085792303 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.088228514 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.000452062 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.001192878 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.089559273 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.192666588 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.087213047 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.096244883 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.079400553 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.141392817 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.0963519 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.098240737 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.142878798 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.078181503 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.075460814 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.083418325 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.014898888 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.107181158 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.091258106 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.402045189 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.09198365 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.08936495 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.201050118 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.465764939 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.084893179 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.158900312 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.488997013 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.994079415 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.091410122 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.090262133 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.09485451 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.077379031 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.088436835 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.086644852 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.093380284 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.08459532 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.082868222 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.07764485 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.088665153 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.080244907 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.093947501 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.092656498 seconds)
  done (took 323.592672928 seconds)
done (took 659.915462888 seconds)
(4/20) benchmarking "parallel"...
done (took 1.078019751 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.345308057 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.092229623 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.254779345 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.403705428 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.363518596 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.272908594 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.288082799 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.375318697 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.310715544 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.258137487 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.320247784 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.261137214 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.37826614 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.352044527 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.34125157 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.380275437 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.293364332 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.787098051 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.30497653 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.271566773 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.294396159 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.248216231 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.248129629 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.324735487 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.339305151 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.290316926 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.499625757 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.339092734 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.297547802 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.328222006 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.3534416 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.373489256 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.307787 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.329584146 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.365961574 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.348579493 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.273859674 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.357382593 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.281385316 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.299474518 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.318411707 seconds)
  done (took 62.557347902 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.510084738 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.280535379 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.392504231 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.403150849 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.949377678 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.386291386 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.500206712 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.271860731 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.291338309 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.403675665 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.436485846 seconds)
  done (took 17.939024461 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.334529999 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.285974998 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.405462945 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.40224942 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.551722788 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.392052375 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.440754533 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.274223968 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.289401897 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.402914268 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.404551817 seconds)
  done (took 17.28907264 seconds)
done (took 98.864532203 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.677350057 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.157263102 seconds)
  done (took 3.914557647 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.126613499 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.098351011 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.090312519 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.089802037 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.08960073 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.094408493 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.147892397 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.098661601 seconds)
  done (took 9.92750761 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.094674661 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.092760078 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.087910549 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.085128482 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.090667932 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.105976881 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.095028676 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.090312071 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.100679677 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.114945117 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.113818371 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.103365146 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.097900288 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.088440667 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.092527969 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.094187738 seconds)
  done (took 18.638336649 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.092361012 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.104968453 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.103332102 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.088184043 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.088813123 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.086788686 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.090604098 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.104513838 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.085332653 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.094735816 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.106115122 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.096602345 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.086103984 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.086674228 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.086995645 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.099528197 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.101682019 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.09007586 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.089947617 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.10290056 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.095228591 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.090740236 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.088766492 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.098095132 seconds)
  done (took 27.333985885 seconds)
done (took 60.915971586 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.711909209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.881261744 seconds)
  done (took 6.666791494 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.087170436 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.092994842 seconds)
  done (took 3.316131664 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.103250853 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.089577402 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.102663576 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.091828357 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.088232055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.089226534 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.082792132 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.092630926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.099873415 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.097389593 seconds)
  done (took 12.02320021 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.106078489 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.100614122 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.09052107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.088121529 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.0952918 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.091070938 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.092183681 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.094460803 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.085176131 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.100071449 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.098060903 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.289751515 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.090164842 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.315830183 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.094649447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.09005276 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.096142242 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.088528088 seconds)
  done (took 21.183753094 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.104093728 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.087579089 seconds)
  done (took 3.278366296 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.086865556 seconds)
    (2/7) benchmarking "second"...
    done (took 1.090557433 seconds)
    (3/7) benchmarking "month"...
    done (took 1.092369598 seconds)
    (4/7) benchmarking "year"...
    done (took 1.108935922 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.085239239 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.100880063 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.095832565 seconds)
  done (took 8.73325232 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.542028046 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.266694462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.317840953 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.567274548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739203691 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.051530149 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.756078435 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.033177295 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.859776151 seconds)
  done (took 16.213093262 seconds)
done (took 72.494484333 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.86072875 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.088984257 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.593249405 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.175363297 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.161651359 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.454574754 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.107414961 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.634878532 seconds)
done (took 37.165766633 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.299832018 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.083433697 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.121802752 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.116257073 seconds)
  done (took 19.404170223 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.075611324 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.644748635 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.120476518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.101859272 seconds)
  done (took 19.09435332 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.49625339 seconds)
    (2/2) benchmarking "read"...
    done (took 1.609045045 seconds)
  done (took 4.199252155 seconds)
done (took 50.084299379 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167999618 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.153147303 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.09933174 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.104319806 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.091174808 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.085920926 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.087542951 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.09113612 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.094991539 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.100445056 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.100206312 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.098247408 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.09599415 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.092055925 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.086860691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.094381925 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.086943704 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.096953 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.097275345 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.089104588 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.094060397 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.107892613 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.093496326 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.086036374 seconds)
  done (took 27.518859292 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.156661884 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.154056398 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.172491422 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.16144629 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.200032863 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.164134752 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.155009584 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.12638932 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.15691089 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.143714322 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.131508668 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.189495201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.161888603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.208849902 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.134789952 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.191925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.161116964 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140624148 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139690537 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.195638432 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.152628501 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13287745 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.198675646 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.130951355 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.178272589 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145787665 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.144365021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.154237504 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.130731978 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.180369298 seconds)
  done (took 35.887121068 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.142116383 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.094327113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.086661259 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.178081353 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.091192411 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.091824434 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.096815424 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.09265488 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.104107573 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.101248578 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.091134666 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.09433281 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.107339725 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.088885327 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.094085474 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.097183139 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.119870923 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.276458338 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.108166697 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.091411074 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.137260626 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.091890879 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.108061064 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.094319805 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.097778558 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.092646926 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.095261452 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.100776888 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.095288649 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.09025814 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.088375438 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.135495851 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.125674871 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.097679132 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212949408 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.165902684 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.116847158 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.123979346 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.090997992 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.096804761 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.091296018 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.094122362 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.097938776 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.091095181 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.160329372 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.100264336 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.092899976 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.091470211 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.088891263 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.103544929 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.090711541 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.098259252 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.107150013 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.105522325 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.105858251 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.095404961 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.089862407 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.090707203 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.091593386 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.094374775 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.102291193 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.160940815 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.097559085 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.113694512 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.470445197 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.092315984 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.165296689 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.093526044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.092518035 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.313379122 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.093716558 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.318292346 seconds)
  done (took 81.68919936 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.088820422 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.086911454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.169395781 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.182043257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.098795124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.089141121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.090437935 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.103872482 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757475832 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.092972637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.085751991 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.093328494 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757599092 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.095336415 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.089806662 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.184563106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.111332324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.091735724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.093203342 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.103873428 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.098892652 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.095877148 seconds)
  done (took 26.747173309 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.120468159 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.117743438 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.135025744 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.091882465 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.088853739 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.086552537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.140528415 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.117229189 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.129227299 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.129312732 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151502291 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128258398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.090142444 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124991864 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.12644109 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.106997725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.137623171 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.104717917 seconds)
  done (took 21.203827494 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.274130816 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.270808657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.174759786 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.138928258 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.357393352 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32664776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198117894 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26539921 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.149965328 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.260331141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.265449307 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.131727166 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.325495467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152336803 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14067968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.353077948 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.197529074 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134993201 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208569689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191770894 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.267912391 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204898335 seconds)
  done (took 28.073572626 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.122363162 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.151523578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.184693361 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.194936027 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.092226828 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.101182169 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.154305833 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.126511386 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.109949995 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.132185397 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136950525 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.092315574 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.107804964 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.144817297 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.17662479 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.136001216 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.153569342 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.151709124 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.132789551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.10626599 seconds)
  done (took 23.795293419 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.092712767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.088381649 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.087606714 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.096945821 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.096605642 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.096457976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.089331978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.103213151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.092167037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356581921 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.09432739 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.094425253 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.10296322 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.095862443 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.088922768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.091717033 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.10552479 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.094232734 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.093733198 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.088179976 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342677694 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.094642923 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.097253331 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.102132164 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.094682352 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.099873246 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092987543 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.093963426 seconds)
  done (took 32.248955135 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147006528 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.091849042 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.094534799 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.089629986 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.088977398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.188122952 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.100928802 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.10500393 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.097247944 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.097464235 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.092670648 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.099033539 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.090494893 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.149333043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.103154294 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.089757358 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.192730876 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.106126195 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190613724 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.086882292 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.099210812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.204786487 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.173556031 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.165472145 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.088125401 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.110341749 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.08918239 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.0915039 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.086530997 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.092081203 seconds)
  done (took 52.580951046 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.116454709 seconds)
    (2/2) benchmarking "in"...
    done (took 1.128476817 seconds)
  done (took 3.323726336 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.096050991 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192481853 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.096503838 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.285889104 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260929363 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267507981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262784942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193896865 seconds)
  done (took 10.743515692 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.093290673 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.231845964 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.21911021 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.098439781 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.089927424 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.349346526 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.127403902 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.868396487 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.786340299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.077709018 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.213311417 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.670218944 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.085697171 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.370155282 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.207389145 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.897014552 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.251311806 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.514091986 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.006887534 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.197224511 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.709939268 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154547504 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.087366502 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.096950401 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.089461335 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.029729249 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.744276926 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.686886412 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.144389239 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.191899659 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.740753724 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.126928688 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.097821392 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.264883787 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.183124733 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.089730222 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.171500514 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.181442063 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.088741401 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.096503184 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.588284652 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.713555937 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.276706489 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.230000168 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.158553264 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.089085567 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.098191858 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.090118803 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.325836306 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.738542539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.119055973 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.021695492 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237485568 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.092771255 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.500190487 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207177926 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.090315415 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.013175334 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.447624423 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.196833528 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.476323112 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.199828974 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.017725703 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.207317961 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.09631568 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.316374757 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.972628031 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.767616647 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.741873524 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.183798474 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.390551216 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242673718 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.099827661 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.105551703 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.996140141 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.388947621 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.102269854 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.096699742 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.088440293 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.091262205 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.257147772 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.20198044 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871737209 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.238101238 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.314189887 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.50888316 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.190776963 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.094554922 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.65801408 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.938280864 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.110243776 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.506364952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.384909117 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225317667 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.014684502 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.320176125 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.12491057 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.091701702 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.908917377 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.469808065 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228516668 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.094997286 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.461459916 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.181674868 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.110584733 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.09169817 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.696295972 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.189747574 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.162415076 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.111111762 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.108785318 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.093061041 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.721330626 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.114759322 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.115477126 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.606692632 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.124111139 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.407002905 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.403371987 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.240625864 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.364763483 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.096948861 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.335600312 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.974599956 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.133033629 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.452911655 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.105284218 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.712500659 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.2707882 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.19722267 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.872885364 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.108790708 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.09064262 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.136426618 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.134609344 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.091504674 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.102654991 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.089462917 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.092296712 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.090649489 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.206988032 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.392033373 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.641721613 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.199189489 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.316367024 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.208306919 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.685458224 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.346830095 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.74478401 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.236450433 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.092616407 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.540305759 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.425993355 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.694995368 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.20034898 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.099250686 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.087774066 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.909236621 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.027025304 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.172364451 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.102906587 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.733757628 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.127238508 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.110092267 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.090596824 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.574111029 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232342063 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.095523347 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.139393059 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.762308293 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.668718606 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200677698 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.373577444 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.203000546 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.091119451 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.09916964 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.095105354 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.834792082 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.756059871 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.148228203 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.691938021 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.782807142 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.147269843 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.183484666 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.174808807 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.292544972 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.271695066 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.236121707 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.090592999 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.093099169 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.111965455 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.610748395 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.970132902 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.828594627 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.988279308 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.104412496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.024994957 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.107459559 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.732638515 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.261341228 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.727721619 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.022748996 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.16686406 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.0982603 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.099681389 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.212713791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.240740095 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.22801673 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.427570997 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229952706 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.090300463 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.679836171 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.194110177 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.662649307 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.176280292 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.878065562 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.116681371 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.190816507 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.171999863 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.582320011 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.143030076 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.090652614 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.646515717 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.163508025 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.103110383 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.057780819 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.525439112 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.969025006 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.820105458 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.509294128 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.131179103 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.670970355 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.310893916 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228315129 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.86258856 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.170061733 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.382333199 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.19548354 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.36487732 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.232217727 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.680873062 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255717039 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.551483986 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.21026254 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.015773869 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.187340657 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.481367183 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.183150819 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.106650981 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.1939823 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.158979533 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.676017145 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.193886785 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.204754107 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.370389728 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.903097896 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235881074 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.385700089 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.201659766 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.972463685 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.050387833 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.40211256 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.970016548 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.088386271 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.115027938 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.810941142 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.184631342 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.335975808 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.223030187 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.092956928 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.088835605 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.223037252 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.159204742 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.103306907 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.363289305 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.994068672 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.145468501 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.119406915 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.107356674 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.104628511 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.221747377 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.141513419 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.217815625 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.432798785 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.672561529 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.814294317 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.195176151 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.587006726 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.152445727 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.804057533 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.119459528 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.105281267 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.684050507 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.192122773 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.292436693 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.208672103 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.176513279 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.538728196 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.25397669 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.317046477 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.157599977 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.189643778 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.811492092 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.629217366 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.308830263 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.284082089 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257222646 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.65113532 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.137060037 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.652918572 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.146477726 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.825118356 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.030591042 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.117091789 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.104717818 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.097850329 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.654085891 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.10945976 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.104996161 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.832236258 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.569591695 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.154973278 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.852223904 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.116515562 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.099513131 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.099598839 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.094418293 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.029702214 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.028282758 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.285991756 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.183360173 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.093610724 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.087569406 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.012589749 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.291897801 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.804883437 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.89024391 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.986462242 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234025939 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.094524508 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.095337342 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.094011446 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.091062457 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.101387794 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.094241157 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.394845664 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.236256886 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.7381579 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.112685938 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.110539413 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.238729074 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.14591247 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.099049463 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.183446533 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.118256913 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.193876286 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.172781525 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.096814766 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.50735674 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.226384717 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.103271125 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.228977288 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.266975393 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.275125496 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.39837551 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.242991786 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.546485316 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.426976438 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.92818372 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.106128797 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.022033273 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.107928437 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.811807565 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.063076547 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.385795917 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.708724373 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.143837008 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.302774374 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.92785705 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.504726175 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.213417005 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.134559928 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.103568605 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.099958204 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.100224409 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.314600158 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.198784593 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.325917188 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.227679577 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.106093466 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.24678301 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.165810094 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.124459275 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264871015 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.117399398 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.096977316 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.105970368 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.456374696 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.837527061 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.130709428 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.100803325 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.02057621 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.830878325 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.936233836 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.758474259 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.076061776 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223536079 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.095299104 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.281474213 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.149223607 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.641142943 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212460838 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.829593044 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.398877856 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.147260627 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.205109321 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.464982723 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.769040423 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.361867332 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.177110141 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.093210027 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.390167233 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.012763885 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.227385634 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.022295757 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.367458791 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.664836917 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.612347223 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.314905763 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.175379317 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.023306546 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.662759865 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.129701192 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.109036787 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.898824769 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231278604 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.313029848 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.941303156 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.304307695 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235299534 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.766343159 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.687597969 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.227550293 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.668490611 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.241257876 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.104203996 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.600588952 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.117475096 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.100670854 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.183056911 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.093839613 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.126791938 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.690028379 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.677187647 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.276766899 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.134520748 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.095907505 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.630174537 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.910716233 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.112919542 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.109079682 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.096430925 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.317287753 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.243193939 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.094358638 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.536685917 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.71629358 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.239639229 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.63209336 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.225452324 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.234197194 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.290574713 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.40183987 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.227703833 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.151046679 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.109301951 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.092658699 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.093394953 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.424345248 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.225257149 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.094205944 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.657092551 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.228622695 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.673409771 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.184607171 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.271529755 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.128062518 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.528399128 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.232468094 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.624790296 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.03705794 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.098015133 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.400263411 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.190803972 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.155121386 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.721265676 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.165634432 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.097050556 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.982072425 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.317153601 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.312449776 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.40865499 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.334872576 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.14776874 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.72587928 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.169438836 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.625247846 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.217823503 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.110360681 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.589426506 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.212429765 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.418427125 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.209392145 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.471760177 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.230173247 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.519712337 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.342191042 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.190560828 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.097953644 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.08951457 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.039202967 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.11672022 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.627568958 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.059293428 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.493689791 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.211176222 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.971508819 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.5700209 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.63272507 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.385635719 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.196430785 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.307852572 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256910699 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.018494444 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.357873136 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.129956736 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.236888207 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.180664339 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.819550981 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.118988307 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.107522653 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.435060002 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.21806047 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.096416075 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.098862335 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.012747415 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.812049161 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.162456509 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.224630049 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.156410216 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.11421907 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.670552396 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.351546632 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.125795306 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.096654872 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.094773772 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.902605837 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.169102881 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.092908499 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.351758462 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.214305686 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.330387093 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867963195 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.505836708 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.191571698 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.101182526 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.107951935 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.624496608 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.587075255 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.222651389 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.467349801 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.144904589 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.63827765 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.098078587 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.477660926 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.613106248 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.982760859 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.200029325 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.093458822 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.071331263 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.763681439 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.132348735 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.865066309 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.540516815 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.16365387 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.82716702 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.987328195 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.119855533 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.19944744 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.111288461 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.089577437 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.094027355 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.095237633 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.615259024 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.104412629 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.108266871 seconds)
  done (took 1404.484831457 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.377438324 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102654129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.090502984 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.094096814 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.105824929 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.095898327 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.104264294 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.099296034 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.090782389 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.095171031 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.096736093 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.094015706 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.106003427 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.397146889 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.095312537 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.091587216 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.095883843 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.089465486 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.097340696 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.099592586 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.091086292 seconds)
  done (took 24.699449327 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.102373051 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.094858949 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.095629724 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.092171181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.101061473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.096451053 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.096691525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.092858875 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.091356598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113467574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.094942597 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.098512785 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.102464228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.096883215 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098329754 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.098606465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.093279509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.094118796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.115052359 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.106813003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.093436707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.096429064 seconds)
  done (took 25.254729305 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.099060947 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.094540068 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.749640772 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.192773719 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.09593613 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.09646112 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.09164317 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.290420385 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.06922068 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.002326606 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.545411801 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.155567119 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.109173008 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.249566157 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.18750489 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.092798059 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.218576219 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.092431335 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.096233 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.097804439 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.093102761 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.243597461 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.194085041 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.092878259 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.87782732 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.237094099 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.101950582 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.091297018 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.112343445 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.087211844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.205550775 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.1156895 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.852656244 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.777245213 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.342374519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.031134324 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.261747524 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.126681995 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.101455727 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.092019544 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.316724004 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.891691871 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.110978802 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.100338428 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.333475344 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.180000796 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.092841415 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.469882306 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.148147117 seconds)
  done (took 87.390781473 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.105230275 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220234333 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.158364706 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.093208442 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.235963787 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.11075954 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.168953445 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.10104035 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.092070554 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.094728428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.227070293 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.25779667 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.11283888 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.092990507 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.185013163 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.115496791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.094334644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.09595528 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.102892367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.096181331 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.100119713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.152167618 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.208717624 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.251461487 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.10690224 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.114390974 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.093440123 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.097137583 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.242736031 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.100712015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.093889439 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.093136402 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.232291218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.220941016 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.093955826 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.089013795 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.222186157 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.096323614 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.093070982 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.107362464 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.094454573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.102383662 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.15386627 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.228555916 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.09544577 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.212181578 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.096513475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.094300916 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.248284029 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.09748723 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.111982121 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.263365335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.105740801 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.097043413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.095177025 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.221155491 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.101899202 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.093236884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.099550509 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.249791893 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.096079585 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.092771638 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.250642315 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.094697273 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.094131936 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.278043077 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.201014493 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.100626706 seconds)
  done (took 78.733131511 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.092954642 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.091674617 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.100424006 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.094052416 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.099734839 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.096748762 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.090601797 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.100670493 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.099568094 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.096721244 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.12007196 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.096997428 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.091690591 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.097813476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.100035628 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.093554583 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.10767454 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.109696043 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.092795951 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092515643 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.09419564 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.092922754 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.099927834 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.09698259 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.467158319 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.102829339 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.100307967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.092433614 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.090507716 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.103741119 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.455415541 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.096383282 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.099072786 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.095202731 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.46852865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.100743476 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.090487432 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.105046678 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.095217407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.0969702 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.099567365 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.093448556 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.09421264 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.110159495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.095323163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.091961587 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.093594281 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.457731277 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.105023581 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.097548731 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.102384348 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093457158 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.111376555 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.092524467 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.093129658 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.193241065 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.107543733 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.100117038 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.09701936 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.093292645 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.09178534 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.203234772 seconds)
  done (took 70.822082314 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.105611484 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.103975234 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.093021082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.099216619 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.096902797 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.095556587 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.09274956 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.116389057 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.095183167 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.090699276 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091021697 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.097045338 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.096658266 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.101547983 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.095789386 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.109653904 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.119148117 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.093046168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.094093129 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.095563901 seconds)
  done (took 23.065256516 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.09572087 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.097989973 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.090937341 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.097079817 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.111318133 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.09592982 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.092278617 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091712792 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.109340519 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.097140742 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.091194809 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.098270557 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093551297 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.114485946 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.094080344 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.095375376 seconds)
  done (took 18.658060869 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.095902407 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.099200671 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.093764801 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.098380804 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.094786511 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.113243924 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.099559762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.092820309 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.094223694 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.559160024 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.103694326 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.101413774 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.093532133 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.095473483 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.105962362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.098433008 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.095209234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.108150414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.118453943 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.096030684 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.668666045 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.097057775 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.101492278 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.103822358 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.094808216 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.669084812 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.100815618 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.097205258 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.093655973 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.096407688 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.094708551 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.589984823 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.100578632 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.093763251 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.101040556 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.098872142 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.107031258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.099855477 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.093555434 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.09561236 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.111293468 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.093852593 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.092731944 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.09362564 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.108210223 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.097266963 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.102103648 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.553812843 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.105386351 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.101546697 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.098585017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.094016712 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.093374894 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.573125523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.102503312 seconds)
  done (took 64.566317689 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138565849 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.18167701 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.097226956 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.09554003 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.144057356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.145149304 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.146422715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.115197406 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134361927 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.09580966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.168204376 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.108623443 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.138901541 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157177424 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.156229167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159852268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.100570393 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.169939618 seconds)
  done (took 21.538541596 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.121852143 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.101648724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.15954578 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.16893588 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.135525262 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.097316777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.102546824 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.092713199 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102682388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.116447614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.093059999 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.094484757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099620517 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.096604114 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.098425585 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.101253888 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.093635305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.097708419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.110624083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.092165012 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.093360616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.090017731 seconds)
  done (took 25.449399796 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.142737221 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.146854729 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.093348071 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.096027539 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.106425761 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.132570709 seconds)
  done (took 7.800667052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142725834 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.095082668 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.137835016 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.151484478 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.093451413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.097414159 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.111365127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103047427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.095816233 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408911494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101113069 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.112032842 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.098915212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.092354133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.103167154 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.10150318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.092578399 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.096137534 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.150910995 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180346209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.112001668 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101778525 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.094413624 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.104609809 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.108796428 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092128824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.093653281 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399841101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.107286875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092105338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.098861636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.097625736 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102243943 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406449921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.153744683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.093912319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.102092054 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188284587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100115841 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.090725266 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.132968815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.11215346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.094506306 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.092454367 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.092727642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.095915031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.103731314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.110033825 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.091552186 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410088958 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.108260935 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.107337458 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.095319411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.0923581 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.094830588 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404359702 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414152857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.099397004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102429361 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41622055 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.110061706 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.096176599 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102200709 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412304434 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.101196754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.094066846 seconds)
  done (took 76.601872812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107278468 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.13468021 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.09385152 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407133095 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102194595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.098320355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.112094798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.092854948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.10270262 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164560423 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180633624 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.096024942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09109811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.097478299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.101945141 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.100739435 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.101936874 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.112403281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160007679 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40200214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.104458811 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.10062225 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.098999875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098481521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409376864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.096344253 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114197609 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.098647249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.091382385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.093224288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.092659406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.100035694 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09500969 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.151595644 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.096281247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.107845061 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.096892029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.091391788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.096749135 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.09173967 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098179077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181531558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.102087798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.094080332 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410877035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.102385891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.106010381 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.160979197 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.096897782 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157979441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410081057 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398806099 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416986067 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.100710129 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.09268135 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.095197278 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.102289674 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.099140791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.097932461 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107302199 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.093932679 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.110460136 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420107671 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.111546557 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.094376704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.090445747 seconds)
  done (took 76.624306403 seconds)
done (took 2350.581957299 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.195323384 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.218014853 seconds)
  done (took 13.507393181 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.093863829 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.09352773 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.24966993 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.095984629 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.0927286 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.182999859 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.120467327 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.104032125 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.104693117 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.184001862 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.111183083 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.23242722 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.2145882 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.102511771 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.134580893 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.111678816 seconds)
  done (took 39.380148156 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.094021396 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.279592627 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.061739998 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.834114882 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.267617182 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952565128 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.415172278 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.331606584 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.390508302 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.551471276 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.355456707 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.58227644 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.966693274 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.221897367 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.71304152 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.785394151 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.893379472 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931984674 seconds)
  done (took 59.725743928 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.103516218 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.238503787 seconds)
  done (took 8.451564962 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.117511562 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.194075155 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.118591785 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.121122354 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.108321524 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.100728581 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.148141064 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.133797896 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.098105807 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.108636513 seconds)
  done (took 62.352503142 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.08173101 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.712624616 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.532215817 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.667753936 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.619072408 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.489819061 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.277844137 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47894912 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.182189362 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.080952831 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.8819346 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.601868891 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.820338585 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.027774092 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.616808955 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.388942454 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.655222838 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.623501107 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.422761951 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.414189163 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.331965916 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.756776788 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.54454093 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.954576721 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.106124961 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.147411221 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.245533901 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.224069009 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.175369145 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.979850031 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.863107074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.125978275 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 4.997080187 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.10630897 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.147003227 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.728392026 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.744409861 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.307614557 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.333765143 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.404264372 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.471857256 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.338730943 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.216687852 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.3134951 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.317317077 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.271479547 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.047941975 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.320117993 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.196784951 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.210171033 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.690207365 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.286843872 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.24008504 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.209359028 seconds)
  done (took 149.04326762 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.097062042 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.481835277 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.247491653 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.104249919 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.514833949 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.307222915 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.830945284 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.589830182 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.110543799 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.300698183 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.263474038 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.234469733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.089659639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.092486812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.096439145 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.102216184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.299305746 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.607503363 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.103186915 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.112642632 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.307941459 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.345355537 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.233277721 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.093288015 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.267093797 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.341277223 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.562823586 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.23468135 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.500945493 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.087337851 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.568966693 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.174948554 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.09794311 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.990097331 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.502344012 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.432831684 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613786413 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.092612806 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.816268451 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.088165399 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.742346877 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.294305806 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.423631645 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.254794171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.343622303 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.335367876 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.691340298 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.10564695 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.853973753 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.269320759 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.327908596 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.328435054 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.369616316 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.097865323 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.655248393 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.11130657 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.091576332 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.353224536 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.250464025 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.232903068 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.097562876 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.10504567 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.090692011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.354636998 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.094233362 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.217696257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.086994776 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.091931224 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.225155953 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.215042124 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.247583069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.331032408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.353053415 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.342886288 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.092489434 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.33068678 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.532216593 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341058864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.087577367 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.088953874 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560831227 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.543045746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.255446308 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.331423972 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.409369002 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.396375704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.666916175 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.09642317 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.335458063 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.261252259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.448881836 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.36494057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.445952928 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.013046297 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.09467864 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.092791635 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.34920553 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.22389226 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.088857211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.58966935 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.365950738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.168670167 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.288163137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.581619157 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.212694498 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.110637376 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.652956155 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.10451504 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.324136301 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.385877927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.096223375 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.114320582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.248391303 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.045101306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.097876094 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.505506895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.5314052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.103111856 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.261131913 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.087725862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.360585713 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.925918365 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.332274012 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.977217991 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36909258 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.284997597 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.376534398 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.097673998 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.351887649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.365499562 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.540244948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.489116011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.109198087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.099498072 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.409780369 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.089145187 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.090913061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.27281578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.082009129 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.275043004 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.093593021 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.455823728 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.275108714 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.446899836 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.10507542 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.336400223 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.35891659 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.507623968 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.103523349 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.233386646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.100611189 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.211527371 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.273975951 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.113215697 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.094798058 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.91715005 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.098902479 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.242319365 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.319964854 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723851129 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.607559543 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.458404374 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.110911635 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606092489 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.296703609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.551278606 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.590946416 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.27244428 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.796239161 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.321664745 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.091429956 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.334935791 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.397717729 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.0984438 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.092469964 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.849038978 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.195507666 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.094158856 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.266053041 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.72243861 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.513917104 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.306166343 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.093503249 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.430903171 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.10865106 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.326399004 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.592990601 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.372943347 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.104839737 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.103069866 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.097608789 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.099885723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.309427475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.354330773 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.754701587 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.262023238 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.399335139 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.321249876 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.407519352 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.56595508 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.118013858 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.421811381 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.091374356 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.564823001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.10099783 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.245017887 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.411531266 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.0907484 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.329256115 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.448639253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313314917 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.553178509 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.100470639 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.099868644 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.708547487 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.270357462 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573817221 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.103917029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.288800326 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.553395491 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.289363189 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.379508969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.361590554 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.099208111 seconds)
  done (took 728.062507917 seconds)
done (took 1061.610707213 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.089419866 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.096249439 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.096405136 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.105207476 seconds)
  done (took 25.470684337 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.931317439 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.909855999 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.189006149 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.110920629 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.239785324 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.327602152 seconds)
  done (took 10.814595777 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.652818904 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.101655394 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.09286875 seconds)
  done (took 17.931026383 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.417447298 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.580341381 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.283521327 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.193312636 seconds)
  done (took 6.565877389 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.10694482 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.100110684 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.097514599 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.096700696 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.098081287 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.101696389 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.110603291 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.09840109 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.100558573 seconds)
  done (took 11.003101087 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.508619379 seconds)
done (took 77.399889752 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.524256176 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.395972661 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.112898272 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.331029345 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.231171424 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.411820513 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.224569768 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.121199162 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.402224985 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.518286653 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.5931495 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.184076189 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.429710249 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.516284071 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.312293997 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.12323561 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.116582877 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.161919343 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.609088963 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.317725907 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.108451509 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.22899153 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.837309424 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.125572113 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.963119992 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.20834138 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.345236045 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.117625561 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.642699226 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.124609923 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.191257199 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.569634635 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.30333698 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.394818852 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.187845038 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.964353855 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.517441229 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.095904613 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.347935515 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.615848656 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.359066105 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.182337902 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.083443728 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.401996241 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.519913506 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.112126029 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.005100088 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.264554023 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.559522414 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.294572738 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.478397689 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.10355865 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.728094809 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.172573351 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.183262549 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.085787521 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.065063678 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.609066408 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.321468955 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.416056275 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.114809914 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.096941896 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.111178286 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.125004008 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.08685323 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.318570057 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.548528052 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.189033677 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.689935813 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.126380004 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.122929241 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.130700329 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.79564623 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.271330542 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.088002255 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.13251798 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.389450393 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.169719677 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.109626974 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.175413851 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.263144602 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.101361673 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.323455413 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.398730774 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.254318317 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.406511179 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.584001315 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.474177962 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.7305394 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.098162716 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.466177823 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.606137439 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.367465458 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.105799696 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.176906368 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.300005063 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.718902571 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.607794897 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.227257525 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.789257981 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.124158796 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.122144905 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.467605158 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.435821824 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.87997404 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.13149512 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.240496569 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.094340235 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.276303865 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.093723195 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.571614726 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.536475845 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.102583673 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.158397166 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.615169568 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.094938078 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.390316095 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532543595 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.170370352 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.113720443 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.342232433 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.109511241 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.216806885 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.636805433 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.48787924 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.293664949 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.103364497 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.642286092 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.096419336 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.359907434 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.100494206 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.73594687 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.669812504 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.140253091 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.348072494 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.223691481 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.096980279 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.269332768 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.149981831 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.231042888 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.40216278 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.375504368 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.21732247 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.089921824 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.474547302 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.098300851 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.33569603 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.409954181 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.255299538 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.385340569 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.195082883 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.108250929 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.135093946 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.508563597 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.694458326 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.813145416 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.332468931 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.225554981 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.697331811 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.428685257 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.885858751 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.195218848 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.145372824 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.09833085 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.111806868 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.159339693 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.102835187 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.097934116 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.342394955 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.31921624 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.74379959 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.886385653 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.656635917 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.410405381 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.246049786 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.105815524 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.732106981 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.108851003 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.533207816 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.558519805 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.210932349 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.127947256 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.085843218 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.217627906 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.884229387 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.133898299 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.441446205 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.61677488 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.378521873 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.455386239 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.308514157 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.13826992 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.455083922 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.343189734 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.373562619 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.301361749 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.736527702 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.220960548 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.398882849 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.156435226 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.374541093 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.107425236 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.440984323 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.283275464 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.580671243 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.447499725 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.32256942 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.32166432 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.413596911 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.106014946 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.0960282 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.024983176 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.494212403 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.132184096 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.092302657 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.809079784 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.567221572 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.145570746 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.222317519 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.394600521 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.199285797 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.233273747 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.631451063 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.12729967 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.429759365 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.333908402 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.260379591 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.300847074 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.134213672 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.278420378 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.277689847 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.235220951 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.337652946 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.083989439 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.501031942 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.181574157 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 2.976771281 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.088966926 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.789842278 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.129210069 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.10827648 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.378444299 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.286300345 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.414060934 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.257269808 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.260565017 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.089744661 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.195384026 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.610048177 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.032008673 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.671467491 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.142558854 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.121190784 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.099945986 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.593111866 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.53188057 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.161750979 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.23928014 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.738301686 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.130322091 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.277190908 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.108289083 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.10303236 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.860045195 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.243893114 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.338629538 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.677257347 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.103394691 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.532987216 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.089063844 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.683302931 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.628532493 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.140405028 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.224989776 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.102620146 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 4.763142343 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.495456688 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.123143037 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.247445005 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.455815181 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.21318597 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.215995877 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.100669051 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.150418794 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.564299319 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.324872867 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.586792045 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.140772838 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.471064115 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.102602633 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.545913851 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.13018033 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.181446437 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.517325378 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.220106926 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.443886629 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.10999268 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.141569351 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.351073062 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.129289305 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.100138834 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.242581621 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.17759439 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.714783647 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.836732382 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.211959649 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.018598795 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.337033079 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.110320206 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.107652182 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.242307844 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.198076686 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.708396757 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.579242793 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.106448184 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.474842341 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.098705059 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.529027654 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.117725028 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.11384225 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.265296731 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.185806355 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.092785494 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.092381619 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.272964465 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.592273619 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.182236982 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.974936845 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.101825063 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.493505994 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.227250902 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.422060869 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.789642157 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.146713348 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.260788679 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.787592936 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.310554571 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.139060476 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.327808933 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.1247056 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.741267628 seconds)
  done (took 861.748707205 seconds)
done (took 863.040428782 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.136320658 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.483713983 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.302428869 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.992177141 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.912962253 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.745176569 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.328028923 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.337972584 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.176981286 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.32562417 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.043018554 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.915243064 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.196771446 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.227116619 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.172592831 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.201523843 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.305873119 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.34378671 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.220189263 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.048355073 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.484033642 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.039420943 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.525635016 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.394532726 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.482289305 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.2090833 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.175400553 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.448765084 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.461896471 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.291105784 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.319615696 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.297400903 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.952916373 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.34491938 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.17736485 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.18265319 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.985909156 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.198778909 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.140607227 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.180331305 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.470511599 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.248089853 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.797491526 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.958331162 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.895760849 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.52263065 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.999949409 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.207983649 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.203650201 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.275167103 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.135049401 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.138575021 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.448332307 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.309600663 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.946714508 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.965129955 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.464735177 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.001871665 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.839394248 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.277312729 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.470178178 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.211010166 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.280633799 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.336999747 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.22654654 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393552717 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.527342371 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.13094006 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.293053267 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.329254155 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.343341589 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.344125961 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.213711157 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.248595699 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.222075093 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.327570361 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.717926222 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.310724895 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.888981122 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.204417911 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.065909453 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.006209126 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.055138766 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.186161121 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.137488875 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.873423363 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.922217971 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.066806819 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.21982253 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.306104688 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.05660108 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.300304337 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.551309208 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.165037566 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.143537236 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.29805844 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.951941879 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.126424921 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.257016111 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.303930275 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.889574493 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.170628492 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.102003489 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.191248907 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.201049458 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.128742848 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.176492758 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.516781664 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.325555929 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.277411193 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.475309103 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.222789915 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.323757609 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.223874216 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.169811795 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.876673309 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.38888142 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.987413039 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.124288242 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.771079847 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.406999724 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.201893837 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.481434341 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399464772 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.141558375 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.205323745 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.207730456 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.044850806 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.211365163 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.193420232 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.28084108 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.549328527 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.280263595 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.001006448 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.341800573 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.009677615 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.337291399 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.321895638 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.182196994 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.976279859 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.207485154 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.261792889 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400289041 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.479723965 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.345015616 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.396575022 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.218403019 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.366798248 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.126828663 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.211134938 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.321060508 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.225971811 seconds)
done (took 240.828154316 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.477780791 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.222007515 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.392887651 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321801753 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.48110463 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.389981172 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.16702428 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.545563978 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.159624083 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.525498648 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302955607 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.964746452 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.205287906 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.309995815 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455925705 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34078773 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.157817214 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.339013952 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.548646184 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.461384118 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.837019541 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346162009 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.302401491 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.551898202 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.096238165 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.847236264 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.406115898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.208977075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.373185099 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.880880007 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.901671477 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.358712226 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.397951521 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.86059887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.485705214 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.805402835 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.423284106 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.890211267 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350844388 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.471034491 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.297908387 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.870092882 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.854975245 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.860545644 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.21265364 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.372593533 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.183523243 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.937037752 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.099817853 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.808731651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.363327612 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.916165923 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.993785878 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36360656 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334202606 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.712825267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.493598896 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.486871825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460157545 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.427413419 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358288455 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.517417832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.480778175 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.22791398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.862799134 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.394003676 seconds)
  done (took 145.55462851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.520746924 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.405929185 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.540379725 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.409619694 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.639120656 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.557991139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.49522333 seconds)
  done (took 13.660672917 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.17033823 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.146405671 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351504374 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.350659052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.150135755 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.281073012 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.247865756 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.879583719 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.383507686 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.188896331 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.461433739 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370944593 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.77293662 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.878736216 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.250297292 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.483507851 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.147769224 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.218359107 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.220244321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.409298483 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.871160093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.846112214 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.303935666 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.142018928 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.160415589 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.19700367 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.145588507 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.114181597 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.146070487 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.136209449 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.153160998 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.268787196 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.150451338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.842449377 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.139235215 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.469051874 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.163575425 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.158530245 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.31207909 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.098953184 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.147067413 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.150169076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.301400136 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.164701264 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.125188016 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.340075742 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.132092464 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.161976706 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.129968256 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.144199625 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.330972672 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.156326458 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.13111446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.771242319 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.364223763 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.850794368 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.231286941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.14487427 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.141405586 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.210626 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.145403413 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.410100575 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403322162 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.128520084 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378727072 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.457357005 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.146662661 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.137030916 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.121072341 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.395483461 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.145535282 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362340966 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.170902159 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.199965817 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.151431184 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.282018788 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.339611275 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.960601219 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.926914676 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.817266901 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.473498251 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.141704617 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.478929478 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.085264506 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.795951405 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.142144798 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.154767303 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.818315765 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.057884019 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.15997231 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456399115 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.128747557 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.202542703 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.18952836 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.14005692 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.20818094 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334564603 seconds)
  done (took 150.592999461 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.274415668 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.280351061 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.482046944 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.067045662 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.153112793 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.361754907 seconds)
  done (took 14.716254148 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.564043574 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.95135758 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.166438162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.181517562 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.198701257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.097854208 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.098212568 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.279333625 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.29754623 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.166567355 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.122902533 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.100054456 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.097865487 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.294621213 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.100061097 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.157125444 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.106297396 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.175365024 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.219530248 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292830025 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.478000557 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.206432213 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.210694776 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.816998436 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.14974218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.1717103 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859060311 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.154747678 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.151472847 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.597720667 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.302102734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.098314406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.829684538 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.216830391 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86648917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.825154995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.293485211 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.114177612 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.150832177 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.110753628 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.102461862 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.213057097 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.173708179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.102894275 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.47083901 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.735131217 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.168074926 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.42709029 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.105413062 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.100308708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.11402061 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.181002562 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.099705165 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.105875586 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.495095068 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.688082562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.080708462 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.106345807 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.201023204 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.828480092 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.235477639 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.113527775 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.526947822 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.065283206 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.809202517 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.114347061 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.826348832 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.295519597 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.221445071 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.171002474 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.106318095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.162408872 seconds)
  done (took 113.554376167 seconds)
done (took 439.174349411 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.3246136 seconds)
  done (took 7.411775368 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.277468688 seconds)
  done (took 7.464040764 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.103726322 seconds)
  done (took 7.211218226 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.108180409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.123892286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.128771143 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.12448326 seconds)
  done (took 25.632709513 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.679873663 seconds)
  done (took 7.778041885 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.093644575 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.106599904 seconds)
  done (took 13.304038015 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.113655773 seconds)
  done (took 7.22470982 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.380449637 seconds)
  done (took 7.495174681 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.104336635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.114213423 seconds)
  done (took 13.341672811 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.093745186 seconds)
  done (took 7.194302741 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.350634792 seconds)
  done (took 8.488463827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.096230539 seconds)
  done (took 7.303313194 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.111880177 seconds)
  done (took 7.207160114 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.117782605 seconds)
  done (took 7.218517449 seconds)
done (took 135.368402107 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.092654481 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.100764423 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.098205983 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.100593957 seconds)
  done (took 25.47898892 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.424619586 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.427979492 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.403693727 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.581954998 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381067654 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.369283797 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.435558939 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436310307 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.371843162 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.477334252 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431577544 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.478818903 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.579668511 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.417479783 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.40673938 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.484796767 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.576829186 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.445965661 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377924727 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.406047346 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.590575939 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.584000365 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.857711299 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.841396909 seconds)
  done (took 36.898118718 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.306447142 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468481834 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.288911861 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.422801779 seconds)
  done (took 6.589084305 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.142616192 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.479008244 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.469173417 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.519398941 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.474708955 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.27171398 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.455539568 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.284819251 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.356350238 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.35797323 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.775973185 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.317371152 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.270289895 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.514893923 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.26992591 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.107467658 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.103299639 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.246736376 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.475295322 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.334285995 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367438518 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.459307177 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.463858625 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.467307389 seconds)
  done (took 34.078538861 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.875661986 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.040876645 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.46570089 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.014796491 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.810281722 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.892284664 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.401077056 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.604851051 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.369737694 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.346184242 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.90775654 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.852774317 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.247814724 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.998375546 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.869538154 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.288009639 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.280991498 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.958657082 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.521059642 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.406347374 seconds)
  done (took 38.249947732 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.111065868 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.096588167 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.345865946 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.279809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.099665039 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.095141573 seconds)
  done (took 28.124588052 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.359911502 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.226451677 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.393010874 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355125447 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.245283269 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.220645804 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.609536774 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.315268001 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.851096742 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.757930166 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.516005453 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.527947409 seconds)
  done (took 21.474140292 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.083517834 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.13677906 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.098052164 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.268511802 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.911591352 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.959608968 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.434337711 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.107388674 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.165125971 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.307313055 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.963363863 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.268213618 seconds)
  done (took 39.814084121 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.294807324 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.261139293 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.40511888 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.14776669 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.478908142 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.146843864 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.456139968 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.083910685 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.703578925 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.865247283 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.645803904 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.112697523 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.633737068 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.070519156 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.109242223 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.409156636 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.930111418 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.597402518 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.415877865 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.132904063 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.061505601 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.25065551 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.121926601 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.534389942 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375105941 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.10196362 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.308923716 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.344415379 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.092805157 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.306421933 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.095102489 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.653906841 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.280443544 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.398047411 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495457397 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.347268149 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.110598426 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.749480917 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.646164058 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.406219964 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.256204631 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.260651882 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.338997001 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.110809463 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375526933 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.909216508 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.104067044 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.801387858 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077585441 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.351883213 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.853095119 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.70224489 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.550816364 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.066982318 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.236965093 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.403212944 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.327145538 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.099624196 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.408160597 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.295995109 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.335930025 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.105368064 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.305029856 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.061718423 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.481145497 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.298254078 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.213115092 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.2960325 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.407506104 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.384772227 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.435737659 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.370044364 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.788460093 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.241723236 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.619773222 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.014951372 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.450592338 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.098675234 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.818517196 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.625141734 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.077633557 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.20974407 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.806978085 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05806347 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.095053574 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.261267195 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.96790025 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.073098813 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.107810403 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.301818706 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.362564861 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.224793208 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.236573389 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.293029495 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.798773421 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.078011267 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100430249 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.34544078 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.062186824 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.66669613 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.092801041 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.142724373 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.102160864 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.721532242 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.473324166 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.881617914 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.880776575 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.712484464 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.390988246 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.704247409 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.26839192 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.949926746 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.444256519 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.435315805 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098263781 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.791728024 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.101607374 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.347297875 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.311088212 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.101860062 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.074653541 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.524419109 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.280635227 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090433111 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.395669884 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.099462996 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.249765705 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.103030978 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.695977445 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.525045499 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.341381067 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.543941111 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.178123019 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.259705837 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.058980596 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.244110428 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.546467769 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.165676597 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.457740687 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.408180218 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.281591954 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.684641145 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.087577703 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.952321812 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.452390121 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.323860525 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.440845262 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.752978039 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.273280725 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.101218452 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090807386 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29844013 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.169981138 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.643157334 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.097075177 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.878062923 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.815365217 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.515121564 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.090777051 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.257451299 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.09600434 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.288401224 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.535353711 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.261370349 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.288466145 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.355316794 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.258446837 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.099391535 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.076401705 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.368193154 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.331010797 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.547250494 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.336368946 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.528597508 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.572697446 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.577406863 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.315916212 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.447340824 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.892979997 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.331944513 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.348328454 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.138701299 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.073251531 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109153938 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.336471569 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375111171 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.331632867 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.876968654 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.898110004 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.852638026 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.186510623 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.100163993 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.080544964 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.244224322 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.466956223 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.115371811 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.594059123 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.173630716 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.471726066 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.621805091 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.131634403 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.389984591 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.717206399 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.635122288 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.455707202 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.42808666 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.079580102 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.765371096 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.709305761 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.247149432 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.109248967 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.574077176 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.736572088 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.282798959 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.104870337 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.448877366 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.032176628 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.884438452 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.624449461 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.668234462 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.102617806 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.253047695 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.100745993 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.104830612 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.935826563 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.387824988 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.289242278 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.114404381 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.545682953 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.315671912 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.422405409 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.105862908 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.108597244 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.389698884 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.417501041 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.356806259 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.549935342 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.328195117 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.777442652 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.201679776 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.723744673 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.268511441 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.124398495 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.617577239 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.247761193 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.912830638 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.286370231 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.886334598 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.402548166 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.58551138 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.358858332 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.094266372 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.459160417 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.680374917 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.208070039 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.049872762 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.216544994 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.096586186 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.293614519 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.993094007 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135544765 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.651665883 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.763107131 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.33883211 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.279537617 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.467221739 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.493907615 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.842225615 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.069710986 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.255905407 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.202445652 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.391088049 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.090852819 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.387795187 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.79313978 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.545947256 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.053639232 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.576300873 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.451817025 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.608391969 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.452906239 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.302590127 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.370310896 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.004902282 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655571403 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.107356099 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.239425967 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.064213376 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.692962898 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541167284 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.481152099 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.455429816 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.12261523 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.496724317 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.42326133 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.295985725 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.141626994 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.357188257 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.106922633 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.391659745 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.098925977 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.885651873 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.517468086 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.103815015 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.974189939 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.335872914 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.440556187 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.267067065 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.475841106 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.24547027 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.228810872 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.546453863 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.278807727 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.236089263 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.43758746 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.7326703 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.252138552 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.115861892 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.620301765 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.742428037 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.467403447 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.678041538 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.581413564 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.430910943 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.878440693 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.098886777 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.319070265 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.253304801 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.096493984 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.322162249 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.470008203 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.122006348 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.303593776 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.395793919 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.359345468 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.663451065 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.08327854 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.783896988 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.496704007 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.622597182 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.655826689 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.880497357 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.342716798 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.249753568 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.376401913 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.211081778 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.268901303 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.613426898 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.568922143 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.133522246 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978595287 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.895648581 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.165263735 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.624135668 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.098292618 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.949917387 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.271340647 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.341145284 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.309513595 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.23404131 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.069889641 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.839182916 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.886087495 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.356405246 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.260362683 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.273547684 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.151466641 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.359870312 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.635208765 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.40962278 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.886520226 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.459349694 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.29045731 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.063616399 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.097071428 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.37053558 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.45006031 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.118938445 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.377832246 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.434962924 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.120855484 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.152053752 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.181516258 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.263917632 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.971723152 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.822096077 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.341096124 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.491497555 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.66938837 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.136148358 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.873198518 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.314453564 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.456222139 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.468902312 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.931126135 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.555048105 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.396969563 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.249974466 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.070647882 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.283165467 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.102420543 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.29486221 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.948273163 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.40069534 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.099293087 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.331757416 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.733739736 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.095908883 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.121356585 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.83246696 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.375178563 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.300480624 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.103724342 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.857235512 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.487167222 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.240970629 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.077006818 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.864767446 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.069638338 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.305097661 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.093057742 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.295741947 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.096224791 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.119509599 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.866567568 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.528427814 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.132697129 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.291109781 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.076843826 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.704942854 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.239862777 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.558797473 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.060278526 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.349974192 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.613399141 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.285457433 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.105807852 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427725393 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.232435261 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.40162342 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.788366056 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.479561934 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.484791387 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.370561161 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355912997 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.773264064 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.339864252 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344175897 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.076691059 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.154487895 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.126419912 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.474514869 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.454340422 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096697802 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.651204154 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348353349 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.161376667 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.354394127 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.280017608 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.748551108 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.313773187 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.15919571 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.34118111 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.134861479 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.427672977 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.107634197 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.283017884 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.106750552 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.174782414 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.31694653 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.343066776 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.475278055 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.416515593 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.700766361 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.258656894 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.522802337 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.88997588 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.628358874 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109043993 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.747505319 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.562236948 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.101964556 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.468495707 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.704730519 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.285430287 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.363931886 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.498702201 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.124423391 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.250341171 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.602008317 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.097431127 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.745355844 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.459521957 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.093747128 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.481833561 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.140549335 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.26556001 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.906246579 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.595879587 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.102632041 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.712832296 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.468074629 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.676639985 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.381295247 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.100140072 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.287044802 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.707652695 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.078178935 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.097476733 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.170934137 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.627880542 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.116671689 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.647203768 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.120605725 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.339639569 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100731002 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.241605453 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.096876898 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.314080158 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.296292368 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.347190548 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.381369045 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.290319942 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.101036196 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.856742111 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.792689112 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.196773526 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.363659492 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.098330253 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.487209126 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.87969994 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.102466638 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.734681187 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.256924452 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.079709449 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487917386 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366950043 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.132635795 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.293373949 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.092945428 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479356351 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.264569266 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.588509254 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.340685889 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.105491017 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.200005101 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.101405141 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.639047621 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.453254322 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.929121746 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.100113479 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.410868682 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.099862242 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.709912037 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.750417706 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.256058223 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.158608766 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.967097429 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.797179724 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.889189837 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.359817902 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.0956083 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.32045341 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.609852733 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.068672365 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.694075553 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.106187197 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.300013914 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.440471113 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.077321865 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.278610287 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.113585851 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.096138121 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.602104821 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.106846232 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.398676634 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.065948138 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.634101257 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.111853525 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.121280007 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.341877949 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.453173704 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.092195434 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.817331598 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.265642422 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.099036879 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.105366612 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.453244209 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.262083184 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.359581499 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.470920845 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.21221557 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.528585859 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.99697624 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.712890743 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.233596497 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.410750713 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.928513063 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.650178324 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.110669533 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.714689836 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.710180189 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.232460935 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.64078496 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.359162466 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.849445678 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.246620753 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.599356945 seconds)
  done (took 1943.066323185 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.190351894 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.262058363 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.173786484 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.147382006 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.186109949 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.128799018 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.238280793 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.136172482 seconds)
  done (took 50.560882297 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.104000925 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.130924863 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.492827202 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.366664455 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.119493713 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.264118169 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.357010063 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.783862387 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.157378979 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.067236847 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.241651623 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.272848656 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.11698858 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.13124043 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.965125162 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.230099689 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.102092175 seconds)
  done (took 93.043368469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.130104995 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.1417206 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.121765126 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.75674102 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.156353479 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.521177525 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.111256291 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.123383274 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.450810023 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.764105423 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.15149883 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.243464036 seconds)
  done (took 80.806410017 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.133487332 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.130189411 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.137921125 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.136848889 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.134129718 seconds)
  done (took 6.78110203 seconds)
done (took 2406.178898883 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.337158244 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.623958075 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.65830591 seconds)
  done (took 4.378789329 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.168207326 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.234214898 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.323137196 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.248981672 seconds)
  done (took 6.091854332 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.40066609 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.574947189 seconds)
  done (took 4.070805962 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.389773209 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.127807056 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.641093358 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.094761598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.102844721 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.098947209 seconds)
  done (took 19.404945584 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.125764215 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.131938911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.119956248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.125841085 seconds)
  done (took 5.600568191 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.092070825 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.133981027 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.103933362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.062803519 seconds)
  done (took 18.509476944 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.405656163 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.341354207 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.862057339 seconds)
  done (took 5.712533772 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.910761012 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.244423941 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.895404185 seconds)
  done (took 6.147213979 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.187398453 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.325810623 seconds)
  done (took 6.625507431 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.267486406 seconds)
  done (took 2.36489026 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.591387419 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.588926468 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.752766732 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.829616523 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.98995886 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.40183988 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.527806635 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.341409422 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.604305109 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.670138208 seconds)
  done (took 17.40304722 seconds)
done (took 107.902053523 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.078126468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.537475708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.272600037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.260622769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.272656981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.265793373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.132402137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.076216346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.807166335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.793271083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.397168057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.28033727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.179725674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.531007439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.167661025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.473425286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.510292848 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.086343489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.776579224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.223604976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.147159332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.484828174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.145462746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.506375362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.526139642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.249847345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.036108917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.49065281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.985469536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.057948763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.267112868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.452672939 seconds)
  done (took 154.563370421 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.104447491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.13017559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.114232309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.101429292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 4.909019645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.11755543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.108595965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.101900658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.103685502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.115908521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.114153623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 4.919637653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.113404116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.101535707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.116845606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.100370402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.236153216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.112915614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.114650119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.121102695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.116997361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.781095769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.113777787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.795877919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.233948003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.11247282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.098397917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.11855695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.109603776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.11117541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.118918301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.100141379 seconds)
  done (took 187.883386089 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.09036134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.112690991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.111504085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.110650073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.111311093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.119419805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.138234149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.098598398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.11321468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.118881474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.1165741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.114988442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.124260957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.10160933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.122832498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.107682934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.1265965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.120994153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.115083695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.134419775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.123866325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.105765427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.115237924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.111452927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.13688107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.116204823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.102251055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.118100505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.111609765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.130999457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.127872579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.098957588 seconds)
  done (took 196.82756233 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.398055793 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.159375382 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.041249434 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.848306552 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.012036894 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.137467215 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.846574024 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.428675347 seconds)
  done (took 13.986611372 seconds)
done (took 554.379002659 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.798258809 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.01861124 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.274990378 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.398839413 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.702006462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.412878779 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.392782159 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.546932964 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.825381305 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.522432985 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.585304409 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.325581284 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.968968799 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.374142991 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.295550522 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561505201 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.539549751 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.804623296 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.315912461 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.959732111 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.323833081 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.982900769 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.556971922 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.878471658 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.587268569 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.039828935 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.239855398 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.539133586 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.353909566 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.321436397 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.171821651 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.514906298 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.342845824 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.328523854 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.579118441 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.569566381 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.480439515 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.569206058 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.29086946 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.771881359 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.967335561 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.714144749 seconds)
  done (took 74.843648233 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.122584474 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.157202332 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.299130539 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.195720886 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.825265887 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.205375268 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.364573564 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.341688831 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.21606314 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.347073944 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.379007174 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.854506611 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.380039735 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.806495017 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.360748782 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.394624763 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.210672631 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.813732736 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.360219706 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.34308314 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.184177352 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.294087422 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.16588481 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.333351872 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.157185159 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.171334747 seconds)
  done (took 36.403584184 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.173702919 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.281813028 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.363465232 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.193065137 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.360486967 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.184784177 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.477926704 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.321087575 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.827240734 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.753407962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.218737643 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.288311641 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.321260644 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.390178435 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.371302266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.297772971 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.370742118 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.312458563 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.301447873 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.326853886 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.209009209 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.212823211 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.437481401 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.045944184 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.980030941 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.669576001 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.464874974 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.702962268 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.301727406 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.29053432 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.255546967 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.420348999 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.534329132 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.372874848 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.282707415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.15044838 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.162727422 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.214498497 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.101025911 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.311365282 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.442415905 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.555208639 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.469096694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.678728807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.429386398 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.353823936 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.58238841 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.231735591 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.265903158 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.996999285 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.398008131 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.775269481 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.361602632 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.342665508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.264526658 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.501569696 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.31865217 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.455924453 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.25173673 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.753506369 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.213425973 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.522244247 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.299299989 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.437018984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.414713013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.35157168 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.312739876 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.663843859 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.464509436 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.328512208 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.722252164 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.223993188 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.17497507 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.221974011 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.288250301 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.615797722 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.992624225 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.452037682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548404026 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.423496908 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.381453982 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.716921958 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.122362968 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.492214576 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.328119332 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.135425054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.222105599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.464389815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.417414339 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.649627386 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.690074437 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.468345963 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.622518073 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.326593723 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.767560464 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.565340825 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.141843133 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.151956571 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.348102007 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.691486752 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.218122772 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.355951413 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.71383893 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.691741059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.418998212 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.272186409 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.484167584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.427112123 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.536367343 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.138050339 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.324237415 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.237203996 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.372928885 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.397404321 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.140090087 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.649453881 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.245582094 seconds)
  done (took 236.780371593 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.092073275 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.108216172 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.106026184 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.125781128 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.097768076 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.635104594 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.1471321 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.115466125 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.634810112 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.149160907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.098595268 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.119429085 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.097070566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.106987762 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.225282192 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.252455729 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.016250399 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.101969848 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.109404004 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.118135087 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.948224376 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.111359778 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.106721549 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.114780824 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.106350625 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.107513433 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.125326546 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.11064481 seconds)
  done (took 151.298030685 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.158459979 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.530721104 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.183820924 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.259407753 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.195923714 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.195320097 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.677816092 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.294518641 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.234822349 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.164625294 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.167948172 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.397482507 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.46202991 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.75624846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.285724109 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.355755204 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.807074778 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308559822 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.167554481 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.175278848 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.324132157 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.521617144 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.425016509 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.416766654 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.30678866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.424637909 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.233044957 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.164896107 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.271168875 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.629862069 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.174741312 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.515302326 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.316575436 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.160455863 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.656558312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.502622782 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.728367181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.806387639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.350634351 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.126699609 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.120915563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.411500328 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.45166864 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.22735529 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.164680094 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.795522886 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.188102475 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.417325302 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.189773953 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.130598173 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.264363761 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.27069483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.39715587 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.051257986 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.33815619 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.3178333 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.746713995 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.138962086 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.177646157 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.473522977 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.130577318 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.638804274 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.715708507 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.230720703 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.177661146 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.036679847 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.2517289 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.677305449 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.771900195 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.207949044 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.495392038 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.363604731 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.141200973 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.41521238 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.33442081 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.583665726 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.729446156 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.295980984 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.271690771 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.236379691 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43482618 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.14696495 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.710536589 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.260039602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.14074685 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.630925993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.558710225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.134007251 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.159628295 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.278935254 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.330089534 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.37287078 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.418269941 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.243582839 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.069363536 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.414691442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.434429499 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.174200131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.289550343 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.1466931 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.590223969 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.346884267 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.142143835 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.476065365 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.554326171 seconds)
  done (took 155.390560033 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.898505252 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.218548007 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.350580906 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.683759938 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.495077827 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.598245784 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.374068467 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.248860332 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.415775847 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.37162858 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.379359735 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.265739504 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.117940428 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.919409719 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.209009498 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.327721109 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.228482034 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.746054629 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.461026599 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.263878865 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.614676342 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.883541903 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.451912121 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.556359223 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.561839214 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.643158092 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.802936432 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.25799674 seconds)
  done (took 48.457370455 seconds)
done (took 704.268316548 seconds)
SAVING RESULT...
DONE!
