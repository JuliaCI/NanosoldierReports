cset: moving following pidspec: 31095
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.279223682 seconds)
loading group "string"... done (took 0.768204127 seconds)
loading group "linalg"... done (took 8.299538412 seconds)
loading group "parallel"... done (took 0.152963924 seconds)
loading group "find"... done (took 2.624126389 seconds)
loading group "tuple"... done (took 2.018460729 seconds)
loading group "dates"... done (took 1.305855222 seconds)
loading group "micro"... done (took 0.202294109 seconds)
loading group "io"... done (took 0.940406305 seconds)
loading group "scalar"... done (took 40.018688567 seconds)
loading group "sparse"... done (took 12.208328202 seconds)
loading group "broadcast"... done (took 0.990514524 seconds)
loading group "union"... done (took 15.388579368 seconds)
loading group "simd"... done (took 4.899529415 seconds)
loading group "random"... done (took 9.270022642 seconds)
loading group "problem"... done (took 1.863106277 seconds)
loading group "array"... done (took 26.14538329 seconds)
loading group "misc"... done (took 1.885080216 seconds)
loading group "sort"... done (took 3.445792516 seconds)
loading group "collection"... done (took 18.527067935 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.512313463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12993508 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141144211 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124633328 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154600001 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124172823 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129094238 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088337633 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.930472588 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157286802 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118871967 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439543302 seconds)
done (took 5.295167881 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.177902641 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092397903 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083872154 seconds)
  done (took 1.255774837 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.090034167 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.07796989 seconds)
    (3/3) benchmarking "different"...
    done (took 0.077889108 seconds)
  done (took 1.324972318 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.069865129 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132810709 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070975908 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072870546 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07131356 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071181042 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07114632 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071141601 seconds)
  done (took 1.640293765 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077735945 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073060055 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070732148 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072761039 seconds)
  done (took 1.37469499 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.070864569 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.069409346 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.069062018 seconds)
    (4/4) benchmarking "different"...
    done (took 0.06905158 seconds)
  done (took 1.35734904 seconds)
done (took 8.292120949 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.805200742 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215729903 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194789556 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.421872232 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141382692 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184540249 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66057249 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341020074 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208717744 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098821215 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117367566 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.354361156 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128511719 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.656168209 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082636011 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.101429189 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145559954 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454567634 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076480518 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089164972 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100359256 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136451255 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093508886 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081079788 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155727882 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075415055 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149541914 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.092034867 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.073407857 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224101593 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179613465 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666491659 seconds)
  done (took 10.624513773 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10625719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104805054 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073102377 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129778704 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102602929 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074610573 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079647442 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071879418 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094472014 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133612303 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096085713 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112766538 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070505526 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073912512 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087548176 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202385877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085075028 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086620634 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072798684 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083676014 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11190105 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083089157 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084344781 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084301957 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133746494 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.174498558 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100775212 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102215515 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072611049 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086273955 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119866207 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132301741 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070652758 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070675784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129678292 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099799052 seconds)
  done (took 4.717636464 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.116606966 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15736827 seconds)
    (2/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094172436 seconds)
    (3/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145272306 seconds)
    (4/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069193281 seconds)
    (5/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116220676 seconds)
    (6/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070210704 seconds)
    (7/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087604457 seconds)
    (8/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243644716 seconds)
    (9/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.399455641 seconds)
    (10/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636948955 seconds)
    (11/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124422115 seconds)
    (12/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.127060171 seconds)
    (13/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121668243 seconds)
    (14/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108833899 seconds)
    (15/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074968849 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073887662 seconds)
    (17/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072361652 seconds)
    (18/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548675232 seconds)
    (19/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103002579 seconds)
    (20/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119654801 seconds)
    (21/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087428329 seconds)
    (22/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074916209 seconds)
    (23/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073771977 seconds)
    (24/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069438244 seconds)
    (25/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075594994 seconds)
    (26/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0675543 seconds)
    (27/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072730718 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09096846 seconds)
    (29/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079897873 seconds)
    (30/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07146615 seconds)
    (31/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.338622156 seconds)
    (32/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132229228 seconds)
    (33/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.091819396 seconds)
    (34/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072139847 seconds)
    (35/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.96361144 seconds)
    (36/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.173122681 seconds)
    (37/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072607037 seconds)
    (38/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110215265 seconds)
    (39/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168017506 seconds)
    (40/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098480656 seconds)
    (41/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145585811 seconds)
    (42/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07146956 seconds)
    (43/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068065254 seconds)
    (44/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.307787021 seconds)
    (45/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069514974 seconds)
    (46/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076086195 seconds)
    (47/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.571468912 seconds)
    (48/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071448525 seconds)
    (49/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089557283 seconds)
    (50/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114487821 seconds)
    (51/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12648563 seconds)
    (52/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070033371 seconds)
    (53/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070886693 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176100459 seconds)
    (55/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069528857 seconds)
    (56/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088457852 seconds)
    (57/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.278579433 seconds)
    (58/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.162864829 seconds)
    (59/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06998158 seconds)
    (60/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303156422 seconds)
    (61/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097919994 seconds)
    (62/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075728895 seconds)
    (63/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069576097 seconds)
    (64/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.230938231 seconds)
    (65/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125830845 seconds)
    (66/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072438077 seconds)
    (67/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071689999 seconds)
    (68/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073377155 seconds)
    (69/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072553451 seconds)
    (70/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373563395 seconds)
    (71/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070163049 seconds)
    (72/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.981727992 seconds)
    (73/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075482568 seconds)
    (74/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0804285 seconds)
    (75/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077568253 seconds)
    (76/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07542388 seconds)
    (77/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083011068 seconds)
    (78/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083203396 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097219008 seconds)
    (80/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071090821 seconds)
    (81/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068873743 seconds)
    (82/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07808966 seconds)
    (83/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070741203 seconds)
    (84/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069947398 seconds)
    (85/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073236779 seconds)
    (86/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.068418042 seconds)
    (87/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096876808 seconds)
    (88/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392583216 seconds)
    (89/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070779557 seconds)
    (90/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076309884 seconds)
    (91/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06831673 seconds)
    (92/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09807826 seconds)
    (93/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102257689 seconds)
    (94/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070372964 seconds)
    (95/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069575936 seconds)
    (96/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108771506 seconds)
    (97/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.183493912 seconds)
    (98/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071502156 seconds)
    (99/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073426879 seconds)
    (100/118) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123595975 seconds)
    (101/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069459649 seconds)
    (102/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075220326 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117577779 seconds)
    (104/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073275879 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.097248764 seconds)
    (106/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102168091 seconds)
    (107/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0741152 seconds)
    (108/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108340916 seconds)
    (109/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083280836 seconds)
    (110/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076270071 seconds)
    (111/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.473584643 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070021922 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076810299 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070940226 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07295534 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071444045 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.163777455 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083309609 seconds)
  done (took 23.736550888 seconds)
done (took 41.275954196 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.221894999 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087731721 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087937623 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087834514 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088151686 seconds)
  done (took 1.706679911 seconds)
done (took 2.869923886 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 0.134758 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107984436 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068332053 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103492999 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069420451 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 0.105142002 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 0.073221877 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 0.104605831 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 0.073617505 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102405551 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 0.108198273 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068660874 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 0.112007163 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102674265 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 0.073209056 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101691844 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 0.104280614 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 0.073784163 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 0.073056965 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084592206 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 0.073352945 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104118757 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 0.104565611 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 0.073534158 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 0.073050172 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 0.073524826 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 0.073093379 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069182038 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 0.073233331 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 0.07388284 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 0.073249304 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101366626 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 0.073220614 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 0.073185008 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 0.073541715 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 0.073688502 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069617471 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 0.073382554 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 0.073373289 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 0.073043858 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 0.073245105 seconds)
  done (took 4.642587554 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087261987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087105931 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074135765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086756361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067259679 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085594831 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08562582 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092249753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084922369 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076305171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067123564 seconds)
  done (took 2.055262618 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086878908 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088009583 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073167495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086127122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066439477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088820452 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085386247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089191651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085722999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077190974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067009661 seconds)
  done (took 2.044041721 seconds)
done (took 9.886115441 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.104603324 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.079746958 seconds)
  done (took 1.325445293 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.538138615 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.709449553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082693707 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103758663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197465558 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112325742 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236784005 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086741411 seconds)
  done (took 8.385374549 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099669544 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085750895 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074290597 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074316194 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07346743 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07429849 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075283769 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073742161 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072791986 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073760462 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074798296 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073555164 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073820321 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074082689 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073111461 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074103176 seconds)
  done (took 2.450392303 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.101644258 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.218956283 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077731862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079177646 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077475715 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076497126 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078895973 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078268278 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075313633 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076772022 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079759488 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077994012 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.077013697 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068325385 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078638926 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080350192 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075050615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078979409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078996727 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080663774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079129116 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068510379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077915619 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079404511 seconds)
  done (took 3.274442691 seconds)
done (took 16.586712273 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.120964668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08135004 seconds)
  done (took 1.35256625 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082821112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084231804 seconds)
  done (took 1.326524208 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082979021 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067163689 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088177327 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078519748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067571696 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067079764 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086746973 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068004729 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067587367 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067894155 seconds)
  done (took 1.901963006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06985855 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077392334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073989411 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.071731554 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075139062 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068918143 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073029795 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069427811 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077428291 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067899045 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072522882 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087670734 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072498389 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089377485 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072780389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072377634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074347283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071071317 seconds)
  done (took 2.501736971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067128335 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067955648 seconds)
  done (took 1.300839612 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071073894 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068033968 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07117161 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070530445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067299949 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066611104 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067543038 seconds)
  done (took 1.64613948 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403781107 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122695182 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334205294 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074442865 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083227327 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261731676 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068588628 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073362266 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07371319 seconds)
  done (took 2.702145964 seconds)
done (took 13.90156429 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084791644 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090802485 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101772461 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421111281 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098155071 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07202168 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118344492 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183997772 seconds)
done (took 2.351583168 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215544161 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.838498959 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.488857104 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212874275 seconds)
  done (took 2.707621751 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35143335 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085282786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080902218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070807226 seconds)
  done (took 1.767514901 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071781798 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074318001 seconds)
  done (took 1.319548614 seconds)
done (took 7.185538386 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069547866 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094462233 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068523733 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06912262 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068731553 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.069348088 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069031504 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068676799 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069153465 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068633806 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068435287 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068622755 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068888915 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069274649 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068963279 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069312436 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068844841 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070676268 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069144364 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068765981 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069222101 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068275094 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069077018 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069373114 seconds)
  done (took 2.889099852 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085743418 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071668907 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07309566 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072202414 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073185673 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072440916 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072616128 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071198316 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073284478 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070424532 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073647273 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073317721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071075999 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073371207 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070827578 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07386933 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072430108 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071481984 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071124434 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07329113 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073174159 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071680175 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073137768 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071942559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073153763 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072896493 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070695883 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071571503 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072291787 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073119012 seconds)
  done (took 3.366876326 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072319021 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065541687 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067026855 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074522797 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065218496 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066040177 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064872972 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066372071 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065858817 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065267148 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066084307 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06486391 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065834017 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0659616 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066075849 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0698891 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082986544 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06570821 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06546584 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06546433 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069310503 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064789641 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065160562 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065405377 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065483041 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064940422 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065647287 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064906898 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065964162 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065073422 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069671774 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069341612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06504475 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070707718 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069482278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065235468 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070793231 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06483614 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065963872 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06523192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065321731 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065012541 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065004435 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074595419 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065498505 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066443802 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065381471 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066685658 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066655369 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067515218 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0658375 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065123273 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066915714 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066070931 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070494652 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065140175 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066393729 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065061926 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066132157 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065537927 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064729103 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064846482 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068261859 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065874709 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082832622 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074440879 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065074344 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066887768 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065708359 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068585626 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066867222 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081192257 seconds)
  done (took 6.035203531 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089216567 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092097527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070347772 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070096954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066477779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065821199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074300973 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066077882 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070631842 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085719192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06580233 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070420433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070829645 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07012948 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066019152 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070525754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074440434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065976721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075909888 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069845253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067551875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074122196 seconds)
  done (took 2.790372074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150485354 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07222043 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10971777 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076530753 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074369401 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076704837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071504447 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071713505 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071756784 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072968914 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072326908 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072052292 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074785301 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072119443 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072400685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072832517 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071677503 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072390158 seconds)
  done (took 2.617309813 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082317766 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071302405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090992137 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070902438 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071924733 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07099785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075523629 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075800196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071555102 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071817906 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075897297 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070826023 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071095605 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071166553 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070688965 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071339235 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071237492 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0715046 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076484363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076927498 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076382939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076515826 seconds)
  done (took 2.822455221 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083457507 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07145144 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087107331 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072992037 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066645909 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065860549 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072092385 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070838152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072464729 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070556143 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070893685 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066125701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07454775 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071053665 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073178845 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071025356 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070596551 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070896182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070231742 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065969151 seconds)
  done (took 2.628712122 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08726712 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069167652 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069217157 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075045971 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068801677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069180765 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076134412 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068887255 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069394528 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09016078 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068964509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068804497 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076023074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072960187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068764668 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075707745 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075186255 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075429254 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068922144 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069102191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090109752 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068784222 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075527412 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06917296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068918053 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069237843 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068962818 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074155584 seconds)
  done (took 3.239676087 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069605001 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068769974 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068964231 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068944435 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069015798 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069037347 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068731183 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068755667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068780967 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069662251 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069893362 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068279606 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068539603 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068636204 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068850404 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068646335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068818832 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068692194 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068933842 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06890767 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068604013 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068632123 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068696441 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068573032 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069504844 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068591173 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068994116 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068504874 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068161599 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069849879 seconds)
  done (took 3.264385441 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079736671 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07823259 seconds)
  done (took 1.354647529 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068740795 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083059103 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065166686 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076119239 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074773504 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069944095 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076335695 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074439018 seconds)
  done (took 1.780527805 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089628428 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079442052 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067882303 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079767809 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079241528 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089738053 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131087752 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068040999 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078106941 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06886963 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086495655 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069999261 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078372197 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076142619 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078952631 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081532444 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066077188 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072411063 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068425813 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066107498 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068264973 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08110437 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077821256 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066417849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072778015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095948879 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083495939 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067257906 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074610479 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080154046 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078340341 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064845266 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067293639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067713455 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066550242 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07873573 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085953425 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075036768 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.081084975 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068211992 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076133646 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065728056 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076064686 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079010551 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083281126 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067693738 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068674424 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065446641 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068356749 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073712197 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066208561 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072083668 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064953119 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079558184 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075620763 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082891686 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06620235 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074943779 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074709418 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075367284 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079386575 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07405417 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077434507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067195728 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083276384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077023572 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079671438 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065256989 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064782798 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066617985 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081363429 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095849673 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077857519 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067707377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067952454 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06557244 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074876413 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068148734 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076604687 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079041944 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067013665 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07194773 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080298172 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072683476 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074060235 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074055387 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066164391 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071011084 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068366869 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087254 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066261558 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065664704 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068751803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082858292 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074616394 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067726906 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069160277 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079886277 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064862948 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067832868 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068347585 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074167994 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081173067 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071749878 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071939307 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080546416 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076593746 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072447083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073633223 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065141034 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067188901 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068996055 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077806095 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064212314 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0734552 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071189929 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066646242 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078155679 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065152395 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066036572 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078756256 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077839241 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064794223 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064679238 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073077931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066444102 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068423436 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080203179 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065477991 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066036443 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064566116 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074123172 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065941287 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073922349 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070224499 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073531014 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064647015 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06511634 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070129653 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078511138 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069627343 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072396464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076366552 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072849023 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06588891 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078382221 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.205309054 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071829116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079656088 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072899299 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066585886 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071846913 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077474579 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067209506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076469456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070726626 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075316085 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06852963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067344319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073533965 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068614054 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070315107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073342879 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066893596 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.083210152 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074485009 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066814754 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065636303 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074966111 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070756797 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067237668 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070603253 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074476489 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068895519 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067025888 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0679436 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07430883 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075508955 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070484128 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068591357 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07842403 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084992757 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067387655 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074794055 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06725658 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068618746 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067916309 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082332904 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078767928 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071794523 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076253061 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06521882 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077273424 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079746859 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070322505 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065727715 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070488007 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071774342 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079717542 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071705464 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068702999 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068040145 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073969419 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07082886 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074662922 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067991196 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070233364 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0729099 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066208382 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073840334 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068478857 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083664564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075248075 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065820658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070300625 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066064652 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078710316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065563114 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06920229 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07039172 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06832395 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066836364 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074326197 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065546439 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080066095 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080768971 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073003274 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070039828 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067992024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080304245 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073547958 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076634003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075226663 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077916028 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08326107 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070368079 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074818795 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082822427 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067814409 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065051229 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077267358 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065985824 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066393048 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066734128 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066556329 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074962284 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074633631 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077697656 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06508378 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074685716 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067309403 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070402708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066672162 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076243099 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074634334 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072502857 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08041451 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068184953 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067968486 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075601999 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067329212 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068282556 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06865655 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075504138 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067853637 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073937752 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069763241 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073633916 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069800483 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06514701 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073459155 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066955568 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072390679 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075519193 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066324946 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072402211 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073362587 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067221751 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073165843 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070108815 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069325342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073432899 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072033976 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071065708 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072804437 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064714223 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078013323 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066183664 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078688528 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071626418 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063542606 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071025514 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072837969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070871982 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066441844 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067037598 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071650776 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065607336 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072700962 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.214877931 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070705822 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084698682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080100398 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075310471 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075743936 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073712919 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075523413 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07060223 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072728376 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068701942 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073248516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067436556 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076480497 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.075801459 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.073082156 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074841719 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06801053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074039726 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068673724 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065184317 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070409462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070636352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068108573 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083658178 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067898168 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071541073 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067188019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068915374 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067212418 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065358625 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074699643 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074836865 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067999238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078006728 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070301095 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074363372 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083285348 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065095265 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066184945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066577364 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069887611 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080543639 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068002421 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082426431 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073576448 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070614561 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065894149 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068078201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066532501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065430648 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066255974 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076013857 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070582059 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069071929 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068402677 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074974162 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068856283 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080810315 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067712509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072538999 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068335498 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065759193 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071164218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070618184 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075307867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068569794 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069510352 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065745904 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068139858 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073292509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073953059 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068146876 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074176431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080715405 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067959919 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074956308 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07019805 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065467779 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074752065 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067603469 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067865494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070136932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.076404074 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075483703 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068604094 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082506276 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067763934 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073895682 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069004361 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066006056 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067289123 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067642646 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067516626 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070339923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068677236 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08107584 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06614943 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073844367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073704648 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071683441 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077826047 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06822927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073642797 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073240231 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069557572 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.074762449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080854242 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071406766 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07522802 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068306614 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073509934 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077417077 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070110403 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.079542707 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07345037 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06814549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073724256 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068978247 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067433923 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067963191 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066847118 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077661036 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067992055 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070283259 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069438392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066311038 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071978038 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069222866 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07981784 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073942635 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073957489 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065531427 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06471436 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067149584 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068412876 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072225651 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073544268 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076321328 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072768841 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07059944 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065461972 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080336139 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075795521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074095066 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067582414 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074012872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06696041 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073180764 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071226233 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071022197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067297163 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073742691 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07244714 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069132819 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076124831 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.214137812 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069883172 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075261237 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.075134187 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073783927 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066990758 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068840883 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074712065 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077533382 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075102948 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067794972 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08355934 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069481078 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07343282 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070590814 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06731943 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076879736 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066085817 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07535675 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068965478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06896548 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066034621 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070812934 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06958855 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.075538686 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070627887 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065964257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083958707 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.082865379 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074739125 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068038107 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066526033 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066408885 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066716599 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07039495 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069184251 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074153017 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083219947 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070800558 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070351724 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066270262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069037937 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075344103 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077984383 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066042152 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06636615 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070666881 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074108329 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079628618 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067170169 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06757846 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075359066 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075506365 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066074377 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070843507 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066024488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076286279 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085279271 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068596251 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07414155 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07816047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081045587 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069101435 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066576852 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068989105 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075307732 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073718631 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069138193 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068779282 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087409916 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076515326 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070881172 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067030456 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074878029 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07197795 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081528228 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069643814 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068537489 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076618072 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074588394 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074959962 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078585602 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079161195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074725391 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073870429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067529223 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073215271 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06712506 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070031055 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068556863 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068247471 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071902647 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074412981 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070599406 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083926259 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082136246 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070231826 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065510025 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070420568 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0706222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066016541 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068546139 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066735145 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066460402 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066399956 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066846152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073720937 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076387153 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072628069 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068338143 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067987088 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065184788 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077615125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074355445 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073564229 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065295175 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067986976 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068119269 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076270901 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070377459 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069639035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074595874 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073812272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073379574 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066085797 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080061079 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066984057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0737324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069990782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067607177 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067708719 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074404599 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070610812 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067872032 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073450297 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073814806 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068306225 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064648242 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064448913 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077010628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066014788 seconds)
  done (took 44.659645237 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107162673 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068311535 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066797337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066594618 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076217892 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067214922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066739376 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067772981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068136538 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069472645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066477579 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066061421 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074639138 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081916782 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077026402 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071169042 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067303798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068203268 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066837901 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068114767 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074740753 seconds)
  done (took 2.82433827 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074531608 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081901953 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07879185 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083742401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075181059 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071762154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079229095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071706591 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07985063 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077336587 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080311188 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071703356 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077434914 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077382162 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076948225 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071607093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082852874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07561574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071520993 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079500688 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072207373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079127567 seconds)
  done (took 2.965789395 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068360427 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067494174 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074114757 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065720422 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083090915 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065210266 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07043127 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065730979 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069804055 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069484415 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069289292 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069659042 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073584649 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065771829 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071154588 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065506334 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111110185 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070481259 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067374189 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068402806 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06592507 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074491105 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065546172 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066289463 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069765467 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069968023 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067746338 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066019786 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067166827 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069951175 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067729224 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065755432 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073493061 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072933622 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069549879 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069797589 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066717583 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067038167 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065536969 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065995342 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073335091 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0659506 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067578157 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073863886 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065876591 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065425536 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074003047 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06691022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065302751 seconds)
  done (took 4.695195998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078991772 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114602316 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071715451 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094606491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080849373 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073665292 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071518486 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096200789 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067814739 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068261791 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081702718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081651535 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069332148 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071003441 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072444523 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069532307 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070141364 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068696073 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072408831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068948473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073072088 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073672069 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080194618 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081239228 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070218581 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06833888 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068716839 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072702325 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080333886 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073103315 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070927645 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071473 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080522737 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07449016 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06849622 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069045979 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081779209 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070143899 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069137556 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067246038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068786581 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071313259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073577446 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082118982 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070039462 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075278611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06926863 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067787327 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080869946 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069180572 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073779163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082310395 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070471565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070202463 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071130573 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080832277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069634542 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067912218 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069448346 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080302323 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067283718 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07027538 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08163192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068708805 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072954292 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082103423 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074808534 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070136554 seconds)
  done (took 6.467178552 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077231254 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.098058264 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084107625 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082917583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076812627 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077338468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077607884 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076940512 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077799786 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081707091 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077775785 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11806719 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073165848 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079027851 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076986171 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077799828 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077300023 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077887459 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077355483 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077164215 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077364758 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083533583 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076980436 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083584192 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080285727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073294528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077015569 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077056669 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083907453 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07706627 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080362346 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077364436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077511089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083665234 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080430952 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077537513 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067216221 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076863346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077011325 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076863638 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073356417 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083836597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076930864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073593417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077716346 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077186197 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083725687 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080453644 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079132634 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081306036 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077294714 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08356662 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077138048 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077600717 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083876431 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086377106 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084460865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083465592 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077390054 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083060251 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08353769 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085960494 seconds)
  done (took 6.279241775 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081654248 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074174627 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085539365 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066067803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066144362 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076036634 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065967752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065990005 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074303419 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074232162 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076260028 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076633181 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078458291 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076528125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076384693 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079151503 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076188676 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07607254 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07423012 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075946076 seconds)
  done (took 2.818481649 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080482271 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08507377 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072157243 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076015196 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07184803 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075778242 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07052586 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071557039 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072408962 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090966433 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077652216 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077847639 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071980939 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076332436 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077485043 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076027021 seconds)
  done (took 2.532196377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073405963 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074655243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081528545 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067506058 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071123248 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066589376 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066959634 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065601514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066856378 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081219593 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067706496 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079471497 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067510148 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067130794 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066837885 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073824327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066690765 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067524222 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067513831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080549218 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074425809 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068389716 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071393405 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067760892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072783731 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075335408 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06902551 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07100362 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067140174 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067738912 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073151863 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074348358 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067096014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068061444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066808377 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067561651 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067254235 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067753702 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07348521 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067397889 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065643062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073023284 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067124486 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068535424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066634746 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067472952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066512267 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07298011 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067910788 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073017329 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066856049 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069615235 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067667344 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075040423 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069654703 seconds)
  done (took 5.165259646 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082995088 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071592123 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065665466 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066057189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071459838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071572791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071539071 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071510076 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072266213 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066290163 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072426403 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070881142 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072132157 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071688149 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072280207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071369089 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065749656 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071931875 seconds)
  done (took 2.601609985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076950541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070702888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075541334 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071721897 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070880389 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07037664 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066140508 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0662875 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066213984 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070946735 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071345494 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070401416 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066444879 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073325881 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07104281 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07109483 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070651668 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066838985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072174726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066113396 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07184959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067270228 seconds)
  done (took 2.856696404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099822456 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087552577 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145247428 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083429608 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090952729 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075927158 seconds)
  done (took 1.898127456 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096824081 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102493003 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071083036 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071759965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077167743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07482061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074388116 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074739496 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079117007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079559744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074612141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079611668 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079048667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081296309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077714026 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078110892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074727276 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07475695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071258826 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083887111 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077131127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079534245 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075178513 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074226759 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074244643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08074307 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079123395 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079398722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074230659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079262676 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077028042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074386452 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079463959 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079554042 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071093369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078862431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074547906 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083996194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077378845 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080807965 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071452131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076745701 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079273974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078249785 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079176073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075183125 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078334189 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075008543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074731286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085546097 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077426247 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080877594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076951107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079695001 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078842651 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085490018 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079093756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081539745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0767386 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079817192 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080874227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076706138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081092868 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079787044 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076535119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080693235 seconds)
  done (took 6.490515659 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109051715 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071405265 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074925912 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079257937 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08066063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074704353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074305002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074535734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074584098 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071842876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109549039 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07482995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081094369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081332904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075069611 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076254929 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074976723 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080994653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072298682 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086200364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07488618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081092815 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080939293 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080916457 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079293881 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076853775 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074574 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074343478 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074511835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074405353 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078755542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07461472 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0807794 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071497246 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080467053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074726393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074512646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078567223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075163726 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076950602 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080568863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083831913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074975523 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074497449 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079195424 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07416835 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074155402 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071476436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074110777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07164176 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079109547 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079251118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079323247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080850537 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074562755 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074380155 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074374242 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074724617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074627374 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076946481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080820295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07432505 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086278217 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074889939 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074840466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083896203 seconds)
  done (took 6.477152798 seconds)
done (took 132.693234173 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.232722019 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.21146848 seconds)
  done (took 1.749256354 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.077992865 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.108655416 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.086641937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.141162232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.075658626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11141539 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.111090292 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.087578483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.075555718 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.075117149 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.075179202 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.077734422 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146618208 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.075514614 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074896463 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07793809 seconds)
  done (took 2.804297308 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108157754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172948227 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112653856 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073239943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108214546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080714163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073223706 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.086418522 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079596566 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.074753345 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080869198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079041364 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.074890192 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078921632 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079883054 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080898512 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.074741418 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081727219 seconds)
  done (took 2.92685426 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107775961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.099069853 seconds)
  done (took 1.534345853 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164862647 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.109656561 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151277996 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357197986 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159757248 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14648915 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145927659 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143702844 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117080721 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139948876 seconds)
  done (took 2.960716342 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107938699 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186112141 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300996364 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123748494 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079438852 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110449664 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126227552 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08566582 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087723872 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087501238 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087529795 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082126999 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10680239 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.08046919 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079706519 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082084065 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109626094 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078564068 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079909453 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081935507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.110438617 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073952331 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080743782 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078415621 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084846103 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084425628 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.075218451 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073642037 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082176764 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079448883 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083025666 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108126742 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084708592 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10947696 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077764822 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110692962 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082120494 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.079886623 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080018668 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080269956 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083576049 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.083573722 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08208888 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081607368 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074437166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.082481751 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074670905 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073729213 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08379325 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074566332 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084039665 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082988619 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109539824 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074986297 seconds)
  done (took 6.365693356 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112253385 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112085137 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074916514 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116440007 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107954989 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073951989 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109287145 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103316631 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111310429 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074838274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072937754 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074849463 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082921446 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084875543 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120211092 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112358142 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077006421 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074090433 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111931652 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111418874 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073614409 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105448492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101608939 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111043621 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072798024 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075218709 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073906949 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074699006 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080562643 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080754523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073841871 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083009957 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087833375 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081115617 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072259967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07323782 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072711005 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082410545 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082393381 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082087257 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080558014 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07184742 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072706749 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073577178 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073407105 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071727796 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080913313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081899147 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081162042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073226757 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074186186 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075407299 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074237522 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083520039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079516483 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082944502 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082100239 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073148177 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072590016 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076369404 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083027824 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081701937 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082484411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073787225 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082395797 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072578601 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083008645 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086318633 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07306787 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074051118 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072708134 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072425438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073671525 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079618868 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079788792 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073665347 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072460079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073043473 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082431803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081067981 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072907308 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079976903 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07173117 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07273677 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074414009 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07410017 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079639879 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081555448 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07391188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073462234 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072400811 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07286676 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07182345 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079435525 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082480152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081455738 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081208797 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074184285 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081302411 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080746145 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074037043 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080281362 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072941642 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073915866 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074157582 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080730303 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079644018 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081525027 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072806066 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072199047 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078829793 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081387869 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072142797 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078622089 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081278394 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079211022 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070946642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082060049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072532332 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080449984 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072242952 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08071063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072195661 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079533497 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071712921 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070892121 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071322729 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078955354 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.211468404 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075518296 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075698971 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075193087 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08234102 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086386918 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075785915 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081507836 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081315981 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075975459 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081460517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073528129 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082108196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073562676 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074577721 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073195057 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08382888 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07434152 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072999221 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072943682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082345301 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07362228 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082977146 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080738086 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072485634 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084371611 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084146781 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079888933 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08401753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074897871 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07317461 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073370683 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073922235 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080137546 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082631477 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075309719 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073402052 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080171584 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083480945 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072409194 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080616178 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080685744 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081203122 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073857814 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073649638 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083462882 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083994417 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081561692 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081736136 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081486968 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073430201 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080404071 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08105567 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073486965 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087570457 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07415328 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085375221 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082369771 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079959994 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081895062 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082953606 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0828806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083587449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086354656 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072884581 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073672222 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081768891 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073389786 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073669297 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080618381 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074303757 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074496901 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085645047 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07383102 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083255767 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.303585648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082438901 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072337689 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073899668 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085838943 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073324982 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075029221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08115022 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073061254 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080347428 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083819218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081260322 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07287272 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074020243 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081711885 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08225424 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072908281 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072889559 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074046033 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080730584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079754515 seconds)
  done (took 19.56668413 seconds)
done (took 39.248111307 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213674161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160506428 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192027542 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119848483 seconds)
  done (took 2.115186069 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111356557 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101995012 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091068065 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069633826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097767374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069337541 seconds)
  done (took 1.904816621 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301840291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206762162 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185975965 seconds)
  done (took 2.054084929 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213111599 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194327432 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466387472 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287906079 seconds)
  done (took 2.619120742 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143426887 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085914111 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06815406 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085794717 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126698013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152177945 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095997167 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121182849 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079465606 seconds)
  done (took 2.37234038 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151907366 seconds)
done (took 12.59795768 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121386263 seconds)
    (2/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.201939339 seconds)
    (3/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.130533008 seconds)
    (4/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.206808388 seconds)
    (5/341) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168684628 seconds)
    (6/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101308024 seconds)
    (7/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077998102 seconds)
    (8/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085167293 seconds)
    (9/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178337241 seconds)
    (10/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072628488 seconds)
    (11/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079158785 seconds)
    (12/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080110654 seconds)
    (13/341) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088334328 seconds)
    (14/341) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137960511 seconds)
    (15/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.234769102 seconds)
    (16/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133257712 seconds)
    (17/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.170431446 seconds)
    (18/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079494276 seconds)
    (19/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088585748 seconds)
    (20/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069245191 seconds)
    (21/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.204474008 seconds)
    (22/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078326999 seconds)
    (23/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.152988445 seconds)
    (24/341) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.123048652 seconds)
    (25/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092468573 seconds)
    (26/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118133364 seconds)
    (27/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071266418 seconds)
    (28/341) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079904314 seconds)
    (29/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.15307271 seconds)
    (30/341) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.22769787 seconds)
    (31/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103187878 seconds)
    (32/341) benchmarking ("collect", "filter", Complex{Float64}, true)...
    done (took 0.169267182 seconds)
    (33/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088962344 seconds)
    (34/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.251727106 seconds)
    (35/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079725138 seconds)
    (36/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074838535 seconds)
    (37/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.182123417 seconds)
    (38/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178223152 seconds)
    (39/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099603839 seconds)
    (40/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19748859 seconds)
    (41/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081192833 seconds)
    (42/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.081406892 seconds)
    (43/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.124740098 seconds)
    (44/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.140315782 seconds)
    (45/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078316205 seconds)
    (46/341) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091336106 seconds)
    (47/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125639478 seconds)
    (48/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069372016 seconds)
    (49/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.216979797 seconds)
    (50/341) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078382889 seconds)
    (51/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07773112 seconds)
    (52/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077873272 seconds)
    (53/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.228112381 seconds)
    (54/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073458227 seconds)
    (55/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.241290498 seconds)
    (56/341) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176737831 seconds)
    (57/341) benchmarking ("sort", Bool, false)...
    done (took 0.140199944 seconds)
    (58/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079771052 seconds)
    (59/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174992328 seconds)
    (60/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094482312 seconds)
    (61/341) benchmarking ("sort", Int64, false)...
    done (took 0.070296318 seconds)
    (62/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07086385 seconds)
    (63/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10763615 seconds)
    (64/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094986625 seconds)
    (65/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087081879 seconds)
    (66/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.140035883 seconds)
    (67/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0714186 seconds)
    (68/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.14082612 seconds)
    (69/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069112778 seconds)
    (70/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07775161 seconds)
    (71/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08756653 seconds)
    (72/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.164766046 seconds)
    (73/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068158215 seconds)
    (74/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141478452 seconds)
    (75/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092993804 seconds)
    (76/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085609684 seconds)
    (77/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06985182 seconds)
    (78/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089520194 seconds)
    (79/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.229677832 seconds)
    (80/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219709999 seconds)
    (81/341) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09345362 seconds)
    (82/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074388065 seconds)
    (83/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087331023 seconds)
    (84/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102485848 seconds)
    (85/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.201994207 seconds)
    (86/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069279374 seconds)
    (87/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079876422 seconds)
    (88/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167488176 seconds)
    (89/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.069164196 seconds)
    (90/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076429924 seconds)
    (91/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145897416 seconds)
    (92/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170013968 seconds)
    (93/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070760164 seconds)
    (94/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077220133 seconds)
    (95/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.33526502 seconds)
    (96/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093853107 seconds)
    (97/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180248246 seconds)
    (98/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126930494 seconds)
    (99/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.070505082 seconds)
    (100/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.072005645 seconds)
    (101/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069800377 seconds)
    (102/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080139298 seconds)
    (103/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.129264016 seconds)
    (104/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092455081 seconds)
    (105/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076809472 seconds)
    (106/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095441848 seconds)
    (107/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117157758 seconds)
    (108/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135176719 seconds)
    (109/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096582757 seconds)
    (110/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07920123 seconds)
    (111/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079418778 seconds)
    (112/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07355963 seconds)
    (113/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082251752 seconds)
    (114/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069133103 seconds)
    (115/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.201643322 seconds)
    (116/341) benchmarking ("collect", "filter", Complex{Float64}, false)...
    done (took 0.07272427 seconds)
    (117/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.156610298 seconds)
    (118/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095956426 seconds)
    (119/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077420865 seconds)
    (120/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.072039815 seconds)
    (121/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069389431 seconds)
    (122/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122304249 seconds)
    (123/341) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078156501 seconds)
    (124/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076186354 seconds)
    (125/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077817424 seconds)
    (126/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176731296 seconds)
    (127/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080576247 seconds)
    (128/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080995622 seconds)
    (129/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073811714 seconds)
    (130/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.155009774 seconds)
    (131/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081368287 seconds)
    (132/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173189761 seconds)
    (133/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139246378 seconds)
    (134/341) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078207525 seconds)
    (135/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075925505 seconds)
    (136/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.141643872 seconds)
    (137/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07017068 seconds)
    (138/341) benchmarking ("sort", Int8, false)...
    done (took 0.13173335 seconds)
    (139/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079024488 seconds)
    (140/341) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.186432093 seconds)
    (141/341) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.200407904 seconds)
    (142/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078703482 seconds)
    (143/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069853855 seconds)
    (144/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094272315 seconds)
    (145/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076723653 seconds)
    (146/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078426083 seconds)
    (147/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076131399 seconds)
    (148/341) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069862676 seconds)
    (149/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070341535 seconds)
    (150/341) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14474347 seconds)
    (151/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070117508 seconds)
    (152/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07734765 seconds)
    (153/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.157202649 seconds)
    (154/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078547055 seconds)
    (155/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079536823 seconds)
    (156/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07782212 seconds)
    (157/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068949759 seconds)
    (158/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.071107207 seconds)
    (159/341) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082147581 seconds)
    (160/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08198819 seconds)
    (161/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087251711 seconds)
    (162/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084018876 seconds)
    (163/341) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074004234 seconds)
    (164/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090874013 seconds)
    (165/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069662077 seconds)
    (166/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178500862 seconds)
    (167/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077406894 seconds)
    (168/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082296899 seconds)
    (169/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134269392 seconds)
    (170/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.069991664 seconds)
    (171/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069210631 seconds)
    (172/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083297759 seconds)
    (173/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070164459 seconds)
    (174/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.088160822 seconds)
    (175/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0818807 seconds)
    (176/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096747174 seconds)
    (177/341) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120158391 seconds)
    (178/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069030655 seconds)
    (179/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.232298676 seconds)
    (180/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070628593 seconds)
    (181/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069810121 seconds)
    (182/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176589752 seconds)
    (183/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070282719 seconds)
    (184/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.088456794 seconds)
    (185/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088272614 seconds)
    (186/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069195281 seconds)
    (187/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072792924 seconds)
    (188/341) benchmarking ("sort", Float64, false)...
    done (took 0.133810855 seconds)
    (189/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181276471 seconds)
    (190/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123829302 seconds)
    (191/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.081754711 seconds)
    (192/341) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069747014 seconds)
    (193/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144317863 seconds)
    (194/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.073502358 seconds)
    (195/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068951576 seconds)
    (196/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175566888 seconds)
    (197/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088629318 seconds)
    (198/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092126033 seconds)
    (199/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145124279 seconds)
    (200/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068046965 seconds)
    (201/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068761858 seconds)
    (202/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069179411 seconds)
    (203/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.069443163 seconds)
    (204/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068989466 seconds)
    (205/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06933361 seconds)
    (206/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09074873 seconds)
    (207/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070009722 seconds)
    (208/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139284147 seconds)
    (209/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.149231646 seconds)
    (210/341) benchmarking ("sort", BigInt, false)...
    done (took 0.193228932 seconds)
    (211/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.071003141 seconds)
    (212/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114769841 seconds)
    (213/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068901461 seconds)
    (214/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07261719 seconds)
    (215/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095619296 seconds)
    (216/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087053456 seconds)
    (217/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.07046004 seconds)
    (218/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119530423 seconds)
    (219/341) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082712372 seconds)
    (220/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.240684395 seconds)
    (221/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.204287475 seconds)
    (222/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07105497 seconds)
    (223/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097455989 seconds)
    (224/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070316718 seconds)
    (225/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077566354 seconds)
    (226/341) benchmarking ("collect", "all", Complex{Float64}, false)...
    done (took 0.091003929 seconds)
    (227/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185676605 seconds)
    (228/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069493988 seconds)
    (229/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071230922 seconds)
    (230/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087727592 seconds)
    (231/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069762324 seconds)
    (232/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138812304 seconds)
    (233/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072664711 seconds)
    (234/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183711455 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078070301 seconds)
    (236/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201450257 seconds)
    (237/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080222206 seconds)
    (238/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140805177 seconds)
    (239/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176489861 seconds)
    (240/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.070316915 seconds)
    (241/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073586932 seconds)
    (242/341) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092245372 seconds)
    (243/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071370971 seconds)
    (244/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071246933 seconds)
    (245/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073057891 seconds)
    (246/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077677599 seconds)
    (247/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091408092 seconds)
    (248/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092221224 seconds)
    (249/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081951207 seconds)
    (250/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199142131 seconds)
    (251/341) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069258058 seconds)
    (252/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184856019 seconds)
    (253/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075606673 seconds)
    (254/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.088037367 seconds)
    (255/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.143134483 seconds)
    (256/341) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07489372 seconds)
    (257/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069517454 seconds)
    (258/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.221738166 seconds)
    (259/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.070251525 seconds)
    (260/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.072020246 seconds)
    (261/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095283291 seconds)
    (262/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070686274 seconds)
    (263/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076951315 seconds)
    (264/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070152556 seconds)
    (265/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.0730966 seconds)
    (266/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070261352 seconds)
    (267/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.069957297 seconds)
    (268/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073239314 seconds)
    (269/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068910409 seconds)
    (270/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.139739372 seconds)
    (271/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071791978 seconds)
    (272/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091743122 seconds)
    (273/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071958995 seconds)
    (274/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078910741 seconds)
    (275/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070484729 seconds)
    (276/341) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080678632 seconds)
    (277/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071310781 seconds)
    (278/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070212934 seconds)
    (279/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071777657 seconds)
    (280/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070377132 seconds)
    (281/341) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070325318 seconds)
    (282/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.100194096 seconds)
    (283/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18514921 seconds)
    (284/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.085559758 seconds)
    (285/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.0726219 seconds)
    (286/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071378069 seconds)
    (287/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137470072 seconds)
    (288/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070690747 seconds)
    (289/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070619526 seconds)
    (290/341) benchmarking ("collect", "all", Complex{Float64}, true)...
    done (took 0.074579093 seconds)
    (291/341) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070592517 seconds)
    (292/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.070584663 seconds)
    (293/341) benchmarking ("sort", Float32, false)...
    done (took 0.136390389 seconds)
    (294/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.074039964 seconds)
    (295/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069673703 seconds)
    (296/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.08713509 seconds)
    (297/341) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070042325 seconds)
    (298/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079791412 seconds)
    (299/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.072489943 seconds)
    (300/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076484709 seconds)
    (301/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.087313925 seconds)
    (302/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07000904 seconds)
    (303/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181996351 seconds)
    (304/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094166976 seconds)
    (305/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07617195 seconds)
    (306/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071849919 seconds)
    (307/341) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070542161 seconds)
    (308/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.07191955 seconds)
    (309/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.070107158 seconds)
    (310/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.070045643 seconds)
    (311/341) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097522399 seconds)
    (312/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.070486844 seconds)
    (313/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077841653 seconds)
    (314/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07054921 seconds)
    (315/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068724252 seconds)
    (316/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077110126 seconds)
    (317/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069958763 seconds)
    (318/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126951798 seconds)
    (319/341) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070446329 seconds)
    (320/341) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06986328 seconds)
    (321/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.070145596 seconds)
    (322/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.074388845 seconds)
    (323/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078554769 seconds)
    (324/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.074127601 seconds)
    (325/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069666908 seconds)
    (326/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174471003 seconds)
    (327/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130096319 seconds)
    (328/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070578116 seconds)
    (329/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091353527 seconds)
    (330/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072730254 seconds)
    (331/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076704966 seconds)
    (332/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070943972 seconds)
    (333/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069722409 seconds)
    (334/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.07414604 seconds)
    (335/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069603299 seconds)
    (336/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069576808 seconds)
    (337/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125224248 seconds)
    (338/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070767882 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069336695 seconds)
    (340/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.074059348 seconds)
    (341/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.069563069 seconds)
  done (took 36.984493732 seconds)
done (took 38.359317436 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091692039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103600364 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078416587 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098150871 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086116763 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100427656 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078685052 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083604593 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085959274 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085049714 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083867717 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077189196 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079767708 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079634165 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077722914 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102682856 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084679501 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078702641 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078702724 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070045848 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07901321 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070883412 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069967201 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.077079946 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082026967 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077941398 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07954218 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080405905 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071206456 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070350947 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075029165 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079263955 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070328624 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083092359 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079111527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078625431 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080017 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082746753 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069974147 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070666288 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080612098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070754542 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078432544 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076947603 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075333557 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077199863 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078595721 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083086891 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104355444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07488827 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080937415 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081664027 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082151697 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076235266 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076041192 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078728875 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0763843 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10185333 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079033853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075048958 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080371943 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080380678 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077181369 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078773765 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078573372 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081069248 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082554699 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077209962 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08141679 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078491375 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.07019484 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078887382 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075843342 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070603106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081716145 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083247094 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069449805 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07522049 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078381831 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078692423 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070732629 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074804323 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069859117 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075319497 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075154814 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.076630124 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075356681 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077456497 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070122277 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078933007 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077560933 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078349628 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069870757 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083337789 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071125558 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076607236 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070596435 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070506622 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06983826 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075585908 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070090805 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074975612 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078948419 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069594467 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076111933 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083686638 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070453925 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077642977 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069787474 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069978021 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081697144 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080638932 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070131029 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074824584 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069700004 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075653509 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06962617 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069681838 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070115326 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070125912 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074540536 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070397281 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074668491 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076000246 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08290911 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07047305 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075157527 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075273687 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070774883 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077851382 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070855922 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071008789 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069783502 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084556443 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075102904 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069974329 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075233747 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074552707 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07763091 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068223218 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07760863 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075067535 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073945779 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075986748 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068515364 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079761118 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073476678 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073176881 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068046408 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068720794 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067870765 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068479457 seconds)
done (took 13.238373532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07409259 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.122096841 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097028747 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096879802 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087125671 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07128044 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077914054 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096036197 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072367056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100754692 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09234086 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092414761 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11369283 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070375757 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070809538 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071620725 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072310956 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082333213 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09786637 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093060746 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110011054 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071230464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090175771 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091015759 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087948268 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094484929 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07208507 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071974687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074000757 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091692033 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095812354 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074182769 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072053327 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094528423 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089270311 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084212568 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071665886 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.079945428 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071944147 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070915843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073032987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.092217186 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080152075 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079502459 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072381645 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0787795 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072239894 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086907108 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09190757 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079885937 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08674641 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094637959 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075237892 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087012371 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0699824 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087050356 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080365208 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071908681 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071445596 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076543944 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071676909 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073824473 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082550124 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080031558 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076123912 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085864746 seconds)
  done (took 6.922956931 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089228654 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097928706 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088081644 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087906862 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070507177 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.07111844 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071585491 seconds)
  done (took 2.04710943 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071961557 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091096659 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094293351 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095067672 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085298538 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.0953999 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0788429 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071179802 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100110505 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070433141 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091406312 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101541624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075360566 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08259696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095271523 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071089766 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096536247 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07162073 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072332365 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09539416 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07617026 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099037695 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.0823469 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072007 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084005522 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071596111 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104029906 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078976188 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072580132 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072722886 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073033971 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.098989216 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083972372 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.086382618 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072833424 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085787862 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085236143 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074446639 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082572483 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081182215 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084502326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072565818 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070375115 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072662867 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073750707 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082987463 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070820279 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072465835 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072217183 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0903365 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070397337 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083798315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075677734 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077654502 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077098391 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076535647 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080473435 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07333638 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090504664 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073522924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088655474 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087815054 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084280702 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087907344 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071190287 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083733448 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084229156 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072092214 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073418767 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073317329 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087620663 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.074293047 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072813274 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082854052 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07163227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095572977 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095387774 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07131275 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084556541 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072065068 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072455579 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.083689729 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094619009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078095086 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07243199 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075983808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073462948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074178472 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070397023 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07551576 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072444712 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076297862 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072577288 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075058728 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073990122 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088169137 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070674886 seconds)
  done (took 9.259761968 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073940162 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073050148 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073874685 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073532145 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072431945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072512908 seconds)
  done (took 1.93989927 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09584899 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072224158 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085556797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072101535 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107019744 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088226849 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087776282 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081562644 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085632406 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083404102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08777197 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090489128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092141513 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0746815 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087597325 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073440413 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08774128 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07649626 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08334768 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074852558 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085268428 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074791547 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074817269 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091862287 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075774875 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073042922 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081720937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08604051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083256588 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081678269 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074200736 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076085186 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079927312 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08145296 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087844461 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.080897945 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072208934 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078386912 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075036648 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076195918 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.090194084 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075646777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075107323 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078578643 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081323276 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079510871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078551834 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080474251 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087213153 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07850569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078270076 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072887696 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075494456 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078706504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.079749885 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08175212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0784693 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087271081 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074588886 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.079510929 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071917676 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075858686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081041542 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076041962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079747118 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078500337 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.080355466 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073939016 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074675304 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072232013 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078547153 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072377675 seconds)
  done (took 7.256650283 seconds)
done (took 28.920975566 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519347643 seconds)
  done (took 1.974246891 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.626837389 seconds)
  done (took 2.110283287 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.680417856 seconds)
  done (took 8.15948689 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407815761 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478671811 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756791 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138436754 seconds)
  done (took 3.300984038 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.717690918 seconds)
  done (took 2.209609947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24231032 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230891651 seconds)
  done (took 1.972243358 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.363775551 seconds)
  done (took 1.839792855 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080211406 seconds)
  done (took 2.559552387 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.244189805 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166416212 seconds)
  done (took 1.892806053 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451266627 seconds)
  done (took 1.929285072 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.24166042 seconds)
  done (took 5.720221341 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228730255 seconds)
  done (took 1.744628262 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239776757 seconds)
  done (took 1.71951782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.757250459 seconds)
  done (took 3.235056502 seconds)
done (took 41.863853655 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087611646 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089727325 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090053237 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08526644 seconds)
  done (took 1.811917305 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078912653 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074990477 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078465181 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074809839 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078229065 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074670215 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076223675 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077131008 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074915339 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075243117 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075417379 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078316714 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077321894 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076583611 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073982813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07752026 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07898693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074704539 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077425645 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074644992 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072534931 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077183479 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077433877 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074158243 seconds)
  done (took 3.310742752 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082765654 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07728815 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079842925 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075902226 seconds)
  done (took 1.802234426 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081040438 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092671277 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08137127 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081618362 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093126501 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088035053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071498112 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07116421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072895349 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080821292 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07023532 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097602867 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090416404 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080788173 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083326675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067477137 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069350348 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089021551 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081603094 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081814408 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073003636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081370729 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070653965 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091475868 seconds)
  done (took 3.427221703 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090780404 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.070209537 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089751029 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095504083 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097573348 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070859639 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088738249 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097829361 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131988667 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070082851 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075867896 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070608186 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108468941 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070271982 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089532241 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113238321 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116465996 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073675362 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103067571 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070519076 seconds)
  done (took 3.285114721 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087738414 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074017852 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074093314 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069957679 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080500027 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077312284 seconds)
  done (took 1.95832319 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072900046 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071945307 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071250414 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071660746 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076324859 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071418823 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070359276 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071806652 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071903876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071991511 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071274731 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070310781 seconds)
  done (took 2.353319602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198796914 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073968629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074918136 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070379279 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075960303 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070867534 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086490528 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073085475 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098254238 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070794286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070764399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072965005 seconds)
  done (took 2.527801975 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196028275 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 0.097814758 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07772629 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226016702 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148155345 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10569555 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.155883546 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.097666901 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113063288 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114675663 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109673005 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.157077456 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143789309 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102003069 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 0.091262156 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156557553 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163298993 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106548367 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132507715 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090901063 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123165822 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147496917 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159012613 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10285342 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.139986001 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158343181 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.156822165 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126310614 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100507062 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104637529 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116359302 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145216257 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138248524 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080895915 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075337682 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161639723 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125684292 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.125948427 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145120787 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108560414 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093384673 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167970221 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.090438862 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.143820934 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15824236 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 0.072486381 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132496778 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 0.101341516 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142698658 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.094726488 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.140996624 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083981379 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.122051662 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.237668966 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134182628 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.124122938 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199125865 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091362489 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.090311302 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162221151 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108175052 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082138037 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130964174 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11601426 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120053017 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105720847 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091943027 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.142276546 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176058902 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142534017 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136167531 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0876961 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120475636 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109300117 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113680404 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11826407 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175481437 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154810179 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125384277 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073558987 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11059192 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14787619 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129995893 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108471539 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 0.139731399 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122677429 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090780502 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128824867 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152835252 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122506036 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136044141 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.126165457 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08878332 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.135738059 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.115101062 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 0.124487497 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118576293 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13355991 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122124313 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.141112072 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162952766 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119436685 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074079048 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117029176 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096841632 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080194593 seconds)
    (107/608) benchmarking "5d"...
    done (took 0.143696789 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07610238 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162622954 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.283189145 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099682226 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.125541352 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129897707 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109024158 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109860271 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153579403 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.103660867 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137536332 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104612308 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087565419 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103272761 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118268642 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140053303 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088497994 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108319455 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114327439 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081878018 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 0.083729851 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131892665 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077056797 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120341701 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 0.092004865 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.097007873 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1188505 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12646441 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081918244 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122429723 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102871252 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103392175 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126946118 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153747126 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089256569 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082877925 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161511914 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120344082 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103842482 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138992984 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 0.101072537 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 0.074512037 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121839156 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153642638 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098141604 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142765767 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167583724 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091011536 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156476053 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.088089446 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103014907 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084833167 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106064498 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120973064 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114882325 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 0.124032269 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082206624 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 0.111797558 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11711946 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.122098793 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154842544 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076092353 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.091883724 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095553425 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12813917 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081809883 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080883063 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102309912 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255198997 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 0.098728214 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098609393 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096841393 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105629526 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134071042 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120831705 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105377619 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127537222 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097974361 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159744094 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.135882422 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088931519 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.153461636 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103154532 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104245547 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.074805448 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130938976 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.093286326 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151227811 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080507572 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154030552 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120446594 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115087015 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118141146 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085018615 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134516239 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080995469 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.0896112 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13748276 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075246558 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113133993 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.104951329 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.124586579 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109258346 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 0.074982521 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113343622 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14800532 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127596643 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118910905 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128757301 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133442027 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 0.080216228 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126835785 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107206546 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.090450569 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090469119 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114082282 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127481683 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.103362801 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.123205423 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074729698 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.122484892 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08387499 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103249212 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09261952 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094421024 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084775341 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.146526137 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134223271 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117027304 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109743119 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.098595195 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11221922 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.082492093 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094832657 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 0.121656403 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.295532378 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.080799498 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123708608 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.121096717 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.180006013 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096191905 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149179135 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146935321 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128374334 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101857402 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132966501 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075063793 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07597829 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.0897807 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.101093593 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120490813 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 0.098697103 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.122911608 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08498027 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085203468 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111628556 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144577633 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123174281 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132569344 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122347569 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115698946 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153709698 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.170445977 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.116525471 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074780356 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140603597 seconds)
    (274/608) benchmarking "4d"...
    done (took 0.120379738 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 0.11155017 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.144701752 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119993778 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.087452286 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105207069 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09217331 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098776676 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139481343 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103574417 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174510428 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.097678093 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 0.075621049 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113401564 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121654461 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.155833536 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.149545849 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152275166 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10386064 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08090087 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103874544 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129015441 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100259836 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 0.085643461 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.116327522 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137574134 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098078638 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086910869 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105468714 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07909865 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098009011 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121585721 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271748756 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135685279 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.088801699 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.100800085 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112106859 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132181238 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081307153 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111756484 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122700051 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121464142 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.086593181 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115647606 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161245125 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097744782 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115544489 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14573965 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.091559626 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.103528081 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080531521 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138950684 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165525084 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139825815 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085924007 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104959582 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120282192 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124129411 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.131219073 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 0.075956714 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116500288 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135124474 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104730159 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13421869 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110490097 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086266284 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 0.101393951 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087978003 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.118998588 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.138169547 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096215503 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.115568592 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103428379 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.117278699 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.113756258 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104192606 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.144310443 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150191459 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096342967 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126574453 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102586153 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110245683 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116555261 seconds)
    (357/608) benchmarking "3d"...
    done (took 0.103330916 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 0.096505076 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096405728 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.105369849 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166531762 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115330616 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159680461 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099377967 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.117107173 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136252599 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149182537 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075224031 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234912901 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082829927 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.0896521 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134862572 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085642804 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127656465 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 0.128735032 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115583835 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122872744 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135299776 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.094442427 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112438818 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095979923 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109691064 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073547857 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130192547 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121786213 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.083917264 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098458669 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104466709 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153897758 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.122002338 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117438228 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080252008 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111752699 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115337928 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10430236 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167890592 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083183967 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109367887 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078985964 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081750397 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123822499 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146905674 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.129596606 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.125054185 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084240006 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.097671858 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104530079 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118760342 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110512551 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124064032 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098209792 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110877142 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128437038 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14217363 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123853751 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094238936 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114680282 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125928748 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147833948 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 0.076997563 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103374777 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.129966981 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10048865 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167385276 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14522543 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151914758 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088493943 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112546261 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111441641 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106395337 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130807629 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083352771 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.29347352 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156308996 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083587719 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.121868286 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129704743 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 0.128171382 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.15038886 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101078519 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092277138 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125457892 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112517436 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088946253 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141032694 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115543932 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.127413156 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084423969 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 0.091932889 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082522941 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110412377 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1171247 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103401499 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076320586 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.097116566 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141112921 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075919115 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132776954 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164630882 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082167635 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.107242271 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105330907 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096827935 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08437921 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102926988 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102049537 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087527866 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 0.095110928 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10107699 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.131345832 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163398203 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088987329 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142099967 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129627776 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109278334 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.123948959 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103796617 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133273379 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 0.641795568 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081384316 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146595449 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114183978 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169195913 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098631928 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1157869 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108950219 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116958636 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13684773 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10018898 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 0.135261334 seconds)
    (491/608) benchmarking "6d"...
    done (took 0.177120256 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.116635366 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282538196 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.117821934 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.122603553 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080603142 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102010044 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103653847 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089385443 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107663369 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11220479 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112591641 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095391208 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11693742 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120116059 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.134593383 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084603099 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096391792 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150717841 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.104052222 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114558368 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145486972 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135027314 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085953036 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116283278 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.112734329 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135500598 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081395043 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117382518 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147031371 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106058 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102176873 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084858463 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105949343 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167818938 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075092386 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153391955 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119341772 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110368398 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112779919 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110375095 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12812383 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 0.097652798 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103459708 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1194892 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.088382272 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 0.1050304 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113329495 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 0.083489985 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 0.076485965 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.118924768 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.087842511 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105283416 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081049124 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109393856 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109850552 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098552742 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085188856 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09618166 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100369996 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097294886 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145049601 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 0.092156587 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098054385 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074400174 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112196714 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.315037882 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141003841 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085835498 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117551895 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107789707 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116662194 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120067092 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 0.1309798 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113840769 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083647914 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082580247 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083711506 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101249955 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 0.130660148 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 0.074925184 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.129784041 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.120796087 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124258101 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113874332 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118530588 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108986563 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154855347 seconds)
    (579/608) benchmarking "2d"...
    done (took 0.085736489 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.083188514 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 0.118116708 seconds)
    (582/608) benchmarking "7d"...
    done (took 0.226205291 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096836059 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105739263 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090952264 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081965136 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.12305406 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 0.07735803 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 0.076974214 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097624361 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097179225 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104865349 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110834734 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167826291 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096808656 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094576897 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093632286 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076531903 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084840626 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124330095 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10931718 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116827845 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.123800177 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104374869 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 0.102209357 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 0.10255245 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083816963 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103998196 seconds)
  done (took 73.025770082 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108033349 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081062045 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117309655 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.166666588 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145823673 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222957734 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.177680817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212341965 seconds)
  done (took 2.86531086 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072334419 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097828724 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106982673 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086555363 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071353737 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071864199 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228535639 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084693567 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070779348 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09502171 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081096963 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072794326 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413611879 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070702659 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072360529 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08077247 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071881147 seconds)
  done (took 3.454082082 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387219314 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61316197 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348942249 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080192787 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.016500537 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093994599 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.193751419 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141985241 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085310824 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529001174 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373672965 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134392412 seconds)
  done (took 18.614121731 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087341629 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081052316 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095245041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095265975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082783023 seconds)
  done (took 2.143373136 seconds)
done (took 122.111854169 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.086369461 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441939275 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073795653 seconds)
  done (took 2.157734537 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095922355 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094416227 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093987972 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091249828 seconds)
  done (took 1.999003471 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079840687 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081402949 seconds)
  done (took 1.776655 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.233100421 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.18101189 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.101864695 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088429198 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085239297 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085502577 seconds)
  done (took 1.87883905 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078028446 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07750871 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077519506 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078414804 seconds)
  done (took 1.926056827 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073784898 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072215683 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.073522058 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076167007 seconds)
  done (took 1.910854837 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.093846047 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.093362958 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.124129355 seconds)
  done (took 1.927047268 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08998446 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089039156 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084895446 seconds)
  done (took 1.884126001 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106179078 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.099958292 seconds)
  done (took 1.825354864 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086515369 seconds)
  done (took 1.706209607 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09551608 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105045873 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13682163 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.121861068 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143664998 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119080187 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088975448 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090404105 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083742069 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090288593 seconds)
  done (took 2.693512705 seconds)
done (took 23.902758276 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086648665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380954904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36541763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096059198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674990222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363907695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006818357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097461695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147692847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074163914 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091249986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65561073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.002133627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33618112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988889478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335164577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657220245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073413355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072633937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073824259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.99272094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072694877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074208667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074233392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658628916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380274918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075926141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33420858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073909445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078112309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.365071054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075300194 seconds)
  done (took 16.438282755 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076545273 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127147985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078401338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090190617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075802287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075760792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07660318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073927674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127664064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074341528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091838554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073146052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077652557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07486505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095416307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073314961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077136696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074543576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074343852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075257534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093950187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074330603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075130352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074828751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074972691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08818129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076298055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074567945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07511156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079089908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079648093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076471014 seconds)
  done (took 4.242309963 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122770671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131771807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079114217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111861526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118476377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075776444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152230403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098383338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134482246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074161763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092580299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073614713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109414374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075433903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09617888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074988512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077691086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074842952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074182477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075471769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094604702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074221026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075780838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075045827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075416313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089497307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075711227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074697281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074939261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078668371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080407705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076100675 seconds)
  done (took 4.49628729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075631666 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079898166 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085847752 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086647803 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073514677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074849926 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075941637 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07290544 seconds)
  done (took 2.255711814 seconds)
done (took 29.065234107 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083637651 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072771178 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076165458 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092148965 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078671923 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083813512 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069844549 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080020344 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078002228 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077373931 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078510278 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071963719 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076735925 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071049364 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077546424 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07212664 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085795029 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076393205 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085360196 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085875435 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075065667 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077700734 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079688707 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085042639 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085748792 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085532184 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082110105 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078063588 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073057485 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075494329 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075310532 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084003754 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.087004196 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087771009 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072276679 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072340679 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076555331 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074925084 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086962953 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081667237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074629857 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081901656 seconds)
  done (took 4.926672805 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090175675 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093886699 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087443312 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084589788 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095206055 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.087584759 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091280069 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082700542 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.082531952 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090887196 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.079522107 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085823634 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.083549157 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.077142786 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.082251083 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.079624838 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084186695 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078423621 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.08201968 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.083017244 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091922378 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.078704089 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092721185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.084397767 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.079538637 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.085544421 seconds)
  done (took 3.85051731 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078657208 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090660062 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097312431 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149425582 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116631284 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085166657 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.086644482 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096985392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101970974 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072901898 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077725073 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097386319 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098305681 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079136088 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073342887 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089209935 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089142748 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075338 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080208323 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102440769 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093973356 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090498988 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099331094 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090121341 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072723098 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075604644 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077838239 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.092164098 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075827669 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084390512 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075940732 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07709874 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074226336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083584416 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076061176 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072531228 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097765675 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084307324 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085885469 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073823115 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082931603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074760341 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098785516 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133660513 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072171879 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078000891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077282966 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084344946 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072446826 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100578655 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085091963 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073148766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074189873 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072056491 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072290236 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075561004 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074427665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075067379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083693736 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079741237 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094802748 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078172221 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090456406 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072164009 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082923124 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072293791 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07406895 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07236496 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101588887 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074443459 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117128726 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074163868 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071619349 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083810988 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083125783 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079105943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072679911 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.09038786 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084489269 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076762686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08104751 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07633776 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076446219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103168122 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073100526 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072218111 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071742478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077017407 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076369126 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073655864 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085115213 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072215367 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076518365 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090922562 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07320349 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073814775 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076881686 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075264952 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071975212 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084064768 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076647689 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074133094 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08312973 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0752256 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076586718 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.086626298 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079972623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071854446 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074873818 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076566623 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074255631 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074751863 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07632008 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075075398 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079796952 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079390562 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078633322 seconds)
  done (took 11.291526367 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169850405 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161570874 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075311847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153654204 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081614629 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085969032 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156542915 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099832122 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075298443 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075354128 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07576792 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115440925 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110162325 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121082034 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086340081 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074021684 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095719207 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119486736 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159413255 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153623575 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096975492 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082022507 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.077195813 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075417436 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075333188 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083528009 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090382019 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082484396 seconds)
  done (took 4.580503913 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083548062 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108538629 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077461703 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097283258 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094189866 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074626143 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075294384 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075271449 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089605049 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082438465 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073486711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079002651 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077662045 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076255271 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074295957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080238917 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080371397 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073057779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077131335 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079530591 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083317212 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098363569 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077027904 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073660415 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076101983 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073151668 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.081738409 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085975845 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073561814 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.110045321 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071272037 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07859507 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087759301 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075589653 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07340823 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074020907 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073685606 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073868361 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075074441 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072522578 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072375615 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077051361 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072537365 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081612439 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086450289 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075605672 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075432565 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07591765 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076426526 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071203555 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076616207 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076178549 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076269154 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080562708 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077591693 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076558143 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074449537 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100323657 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07951649 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072406929 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072606566 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071993884 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075474742 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082660521 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08949156 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075661351 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072103955 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073210528 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085991135 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086573054 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072831775 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078227633 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071003954 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075091862 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076040193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075795848 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074239383 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072137832 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073153394 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073570633 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074430821 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073641067 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073145171 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076450227 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071484444 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07257748 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073548703 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075622475 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081761365 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072599595 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077187241 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074246667 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072438825 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076223992 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.078711472 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076712168 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088312862 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084696501 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073905508 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071933853 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087155416 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076079723 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072797398 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079074733 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078852589 seconds)
  done (took 9.873507395 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096399513 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074033449 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089626446 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096592119 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083483799 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079143476 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083949443 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07330615 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089823721 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078266408 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08100826 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072213384 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084308351 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082849353 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074151871 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083497858 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076062512 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091423985 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087562035 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072087407 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081706544 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08591765 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085341263 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087637254 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086609663 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08894822 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08488696 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083082949 seconds)
  done (took 4.013778 seconds)
done (took 40.162686301 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.712541764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.880708763 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.695532577 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.899196816 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.755984689 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.87680766 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.782758344 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.68960156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.009581175 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.73684977 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.005776399 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.183122403 seconds)
done (took 64.865783735 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.752184253 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844209595 seconds)
    (2/2) benchmarking "String"...
    done (took 1.945229737 seconds)
  done (took 5.429155314 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 6.695493693 seconds)
    (2/3) benchmarking "different length"...
    done (took 6.701081798 seconds)
    (3/3) benchmarking "different"...
    done (took 2.101428001 seconds)
  done (took 17.128840269 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.984507305 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.363681264 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.92564361 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.687416672 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.692893664 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.956388698 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.493548207 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.158776752 seconds)
  done (took 29.908166961 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.944687339 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.914209338 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.427225876 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.46474412 seconds)
  done (took 15.429072242 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.294816009 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.029411492 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.027508912 seconds)
    (4/4) benchmarking "different"...
    done (took 2.099215093 seconds)
  done (took 10.140311718 seconds)
done (took 89.502423474 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.702778371 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.708996532 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.68540693 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.679989593 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.779015694 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.685543952 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.881535393 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.712914009 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.68097548 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.681425542 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.6804828 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.096656187 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.682148966 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.951700233 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.678265468 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.680124879 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.751406404 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.359868626 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.891129743 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.691955107 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.690529427 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.708919377 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.683202823 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.683700386 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.682316209 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.681434433 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.082828557 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.693749727 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.297024119 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.682580348 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.707229849 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.088772563 seconds)
  done (took 200.968251212 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.677844799 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.504134672 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.540629119 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.719820764 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.037233865 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.86031516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.82506118 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.117064901 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.677764498 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.688049821 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.829098692 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.678377231 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.851975347 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.621406648 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.671452972 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.774700651 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.83306877 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.865862507 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.675046877 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.861576832 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.677202998 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.642370352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.592490139 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.814189005 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.716987553 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.75513023 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.686789909 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.674190226 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.850933457 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.809150681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.693177496 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.687097692 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.837541868 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.525454773 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.6908772 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.680687348 seconds)
  done (took 165.264802328 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.856519919 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.67677776 seconds)
    (2/118) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.674563985 seconds)
    (3/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.675202385 seconds)
    (4/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.681009929 seconds)
    (5/118) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.676000513 seconds)
    (6/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797505391 seconds)
    (7/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802089232 seconds)
    (8/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.323955512 seconds)
    (9/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.113186783 seconds)
    (10/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.732931754 seconds)
    (11/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.677654324 seconds)
    (12/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.675275013 seconds)
    (13/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449097505 seconds)
    (14/118) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.675582656 seconds)
    (15/118) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741931421 seconds)
    (16/118) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.688301047 seconds)
    (17/118) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.677261361 seconds)
    (18/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.690121939 seconds)
    (19/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.702492152 seconds)
    (20/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.678057418 seconds)
    (21/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.676586749 seconds)
    (22/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802612406 seconds)
    (23/118) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.692048127 seconds)
    (24/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.676404273 seconds)
    (25/118) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.687020726 seconds)
    (26/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.676619941 seconds)
    (27/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.682694061 seconds)
    (28/118) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.063190335 seconds)
    (29/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.676295949 seconds)
    (30/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.676633864 seconds)
    (31/118) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.233043748 seconds)
    (32/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.679018256 seconds)
    (33/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.676319451 seconds)
    (34/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.682380067 seconds)
    (35/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.917583556 seconds)
    (36/118) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.67761109 seconds)
    (37/118) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679927913 seconds)
    (38/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.512360517 seconds)
    (39/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.44417932 seconds)
    (40/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75738927 seconds)
    (41/118) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.67950695 seconds)
    (42/118) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.68282723 seconds)
    (43/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.678026941 seconds)
    (44/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.894967761 seconds)
    (45/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.676680352 seconds)
    (46/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.678625887 seconds)
    (47/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.676564251 seconds)
    (48/118) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.677444367 seconds)
    (49/118) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.678517299 seconds)
    (50/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.791577275 seconds)
    (51/118) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.67922645 seconds)
    (52/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799512668 seconds)
    (53/118) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.67979571 seconds)
    (54/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.165934843 seconds)
    (55/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.67765061 seconds)
    (56/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.680237251 seconds)
    (57/118) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.253878957 seconds)
    (58/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.715774317 seconds)
    (59/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.682974129 seconds)
    (60/118) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.684286983 seconds)
    (61/118) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.680413357 seconds)
    (62/118) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.681180351 seconds)
    (63/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.69289203 seconds)
    (64/118) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.213649159 seconds)
    (65/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.756861531 seconds)
    (66/118) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.683895023 seconds)
    (67/118) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.682197001 seconds)
    (68/118) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.687271616 seconds)
    (69/118) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.68199615 seconds)
    (70/118) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.760544755 seconds)
    (71/118) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681201647 seconds)
    (72/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.340951922 seconds)
    (73/118) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.692873532 seconds)
    (74/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.802535148 seconds)
    (75/118) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804137845 seconds)
    (76/118) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685288304 seconds)
    (77/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745433188 seconds)
    (78/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771884617 seconds)
    (79/118) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.681557586 seconds)
    (80/118) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.679899718 seconds)
    (81/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.680247357 seconds)
    (82/118) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.683409614 seconds)
    (83/118) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.679573276 seconds)
    (84/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.761636022 seconds)
    (85/118) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.680874585 seconds)
    (86/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.680470178 seconds)
    (87/118) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.854725452 seconds)
    (88/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.691890138 seconds)
    (89/118) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.681553519 seconds)
    (90/118) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.73855797 seconds)
    (91/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.749228288 seconds)
    (92/118) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.682356016 seconds)
    (93/118) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519826919 seconds)
    (94/118) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.682377183 seconds)
    (95/118) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.680225758 seconds)
    (96/118) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955690486 seconds)
    (97/118) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744492681 seconds)
    (98/118) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.680338569 seconds)
    (99/118) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.68244191 seconds)
    (100/118) benchmarking ("log", "Hermitian", 256)...
    done (took 3.797107104 seconds)
    (101/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.681495766 seconds)
    (102/118) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803033342 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423251897 seconds)
    (104/118) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.683053662 seconds)
    (105/118) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.941093198 seconds)
    (106/118) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.883474596 seconds)
    (107/118) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.682570713 seconds)
    (108/118) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.789215079 seconds)
    (109/118) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.681917106 seconds)
    (110/118) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761075659 seconds)
    (111/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689767697 seconds)
    (112/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.682152651 seconds)
    (113/118) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71768094 seconds)
    (114/118) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.680603574 seconds)
    (115/118) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.693633965 seconds)
    (116/118) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.681753264 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.680373248 seconds)
    (118/118) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.054175504 seconds)
  done (took 398.072889756 seconds)
done (took 767.865153459 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.308895762 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.274085913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.36960131 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.291029535 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.263008749 seconds)
  done (took 13.131583784 seconds)
done (took 14.753795504 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.5", "Array{Int64,1}")...
    done (took 1.747287398 seconds)
    (2/41) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.76885742 seconds)
    (3/41) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692195345 seconds)
    (4/41) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.75759636 seconds)
    (5/41) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.700695635 seconds)
    (6/41) benchmarking ("> q0.95", "Array{Float32,1}")...
    done (took 1.700591937 seconds)
    (7/41) benchmarking ("> q0.99", "Array{Int64,1}")...
    done (took 1.707704067 seconds)
    (8/41) benchmarking ("> q0.5", "Array{Float64,1}")...
    done (took 1.730180079 seconds)
    (9/41) benchmarking ("> q0.8", "Array{Float32,1}")...
    done (took 1.716870349 seconds)
    (10/41) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.763812729 seconds)
    (11/41) benchmarking ("> q0.95", "Array{Bool,1}")...
    done (took 1.701781433 seconds)
    (12/41) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.690574231 seconds)
    (13/41) benchmarking ("> q0.8", "Array{UInt64,1}")...
    done (took 1.747813331 seconds)
    (14/41) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.764011798 seconds)
    (15/41) benchmarking ("> q0.99", "Array{Bool,1}")...
    done (took 1.702347888 seconds)
    (16/41) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.738268933 seconds)
    (17/41) benchmarking ("> q0.99", "Array{UInt8,1}")...
    done (took 1.700478623 seconds)
    (18/41) benchmarking ("> q0.99", "Array{UInt64,1}")...
    done (took 1.727514559 seconds)
    (19/41) benchmarking ("> q0.8", "Array{Int64,1}")...
    done (took 1.726938485 seconds)
    (20/41) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.702682671 seconds)
    (21/41) benchmarking ("> q0.8", "Array{UInt8,1}")...
    done (took 1.713382475 seconds)
    (22/41) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.735716385 seconds)
    (23/41) benchmarking ("> q0.8", "Array{Int8,1}")...
    done (took 1.717521055 seconds)
    (24/41) benchmarking ("> q0.5", "Array{UInt8,1}")...
    done (took 1.736771528 seconds)
    (25/41) benchmarking ("> q0.95", "Array{UInt64,1}")...
    done (took 1.73849126 seconds)
    (26/41) benchmarking ("> q0.5", "Array{Int8,1}")...
    done (took 1.736309288 seconds)
    (27/41) benchmarking ("> q0.95", "Array{Int8,1}")...
    done (took 1.704949536 seconds)
    (28/41) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.699848664 seconds)
    (29/41) benchmarking ("> q0.99", "Array{Float64,1}")...
    done (took 1.697275331 seconds)
    (30/41) benchmarking ("> q0.5", "Array{UInt64,1}")...
    done (took 1.770708358 seconds)
    (31/41) benchmarking ("> q0.95", "Array{Int64,1}")...
    done (took 1.718968941 seconds)
    (32/41) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.729150315 seconds)
    (33/41) benchmarking ("> q0.99", "Array{Int8,1}")...
    done (took 1.702152789 seconds)
    (34/41) benchmarking ("> q0.5", "Array{Float32,1}")...
    done (took 1.733264054 seconds)
    (35/41) benchmarking ("> q0.95", "Array{Float64,1}")...
    done (took 1.703761824 seconds)
    (36/41) benchmarking ("> q0.95", "Array{UInt8,1}")...
    done (took 1.699870727 seconds)
    (37/41) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.699538683 seconds)
    (38/41) benchmarking ("> q0.5", "Array{Bool,1}")...
    done (took 1.738240178 seconds)
    (39/41) benchmarking ("> q0.8", "Array{Bool,1}")...
    done (took 1.701233412 seconds)
    (40/41) benchmarking ("> q0.8", "Array{Float64,1}")...
    done (took 1.711469367 seconds)
    (41/41) benchmarking ("> q0.99", "Array{Float32,1}")...
    done (took 1.700843513 seconds)
  done (took 72.203078528 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911448982 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.912488248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.748817831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909618351 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.724411455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.941258621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.837335299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.824953469 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.824929993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695497015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692635934 seconds)
  done (took 21.649971022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.924166739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.923512467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754312341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.916144222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.7274524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.914598683 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.859784105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.830550939 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823798438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695902653 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.693424427 seconds)
  done (took 21.689735137 seconds)
done (took 117.165778436 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.073252332 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.714119614 seconds)
  done (took 5.413877842 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.706097061 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.858410219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.68665078 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.68834976 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.686783401 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.687767301 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.687489644 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.686110633 seconds)
  done (took 15.314203178 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.687905562 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.688268437 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.686169697 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.687310496 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.686946756 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.68739094 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.686881617 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.686141287 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.687101969 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.685964978 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.687755035 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.687323793 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.687244182 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.687322831 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.68734046 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.688746315 seconds)
  done (took 28.62426576 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.689813434 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.687855968 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.688642234 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.687834781 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.687531668 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.689388832 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.68945704 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.687522407 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.689158062 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.687718133 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.689176616 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.691641275 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.690695739 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.690819586 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.691391586 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.691058566 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.691665387 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.692145242 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.69646691 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.691312683 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.691314008 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.690979488 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.691676708 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.691932464 seconds)
  done (took 42.196885318 seconds)
done (took 93.17479179 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.889464246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.202565396 seconds)
  done (took 7.724058273 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.694194115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.693136202 seconds)
  done (took 5.077671831 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.692366206 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.69283534 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.692730498 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.693401303 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.692769911 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.692057557 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.692541801 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.693630687 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.692835794 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.693473695 seconds)
  done (took 18.56056466 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.693038019 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.692728139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.693971038 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.692790781 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.692133184 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.694102501 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.693178801 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.693825387 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.692932706 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.693919815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.693935986 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.693435591 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.69330746 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.693681459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.693809834 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.694951096 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.693835 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.694456549 seconds)
  done (took 32.117222914 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.69450094 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.693833248 seconds)
  done (took 5.022389271 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.694302971 seconds)
    (2/7) benchmarking "second"...
    done (took 1.69407938 seconds)
    (3/7) benchmarking "month"...
    done (took 1.694189089 seconds)
    (4/7) benchmarking "year"...
    done (took 1.693812613 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.694706772 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.69294982 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.694529157 seconds)
  done (took 13.492172844 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.694730341 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.841400335 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.916081 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.316227671 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.695148007 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.698415804 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.615161771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.69654253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.698561741 seconds)
  done (took 18.806343136 seconds)
done (took 102.431752812 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.542676463 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.695619092 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.931980415 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.746906358 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.718048276 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.031470503 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.736091871 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.958936711 seconds)
done (took 41.994336473 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.701321802 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.387662114 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.41146462 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.720518791 seconds)
  done (took 15.154135355 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.694558276 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.01407906 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.715008435 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.54955058 seconds)
  done (took 21.612008161 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.058039133 seconds)
    (2/2) benchmarking "read"...
    done (took 2.03681628 seconds)
  done (took 5.733822989 seconds)
done (took 50.835939102 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69588885 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.696232064 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.697299576 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.694919697 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.695701067 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.696469062 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.695965302 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.69649607 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.695924999 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.696465058 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.696524289 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.697588611 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.696373613 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695480186 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696236925 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697002405 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696146744 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.696557026 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696479587 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696767927 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.69665684 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696316745 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.697466686 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.696864425 seconds)
  done (took 42.349927194 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.69665494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.696756002 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.69694898 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.697008211 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.697189042 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.69796315 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.696856194 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.696965589 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.696635257 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.696629435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697504595 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.697016399 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.697617134 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.697687518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697399345 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.69776774 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.696773808 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69771784 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697727499 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.69835904 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.697623414 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698243999 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.697302556 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698698011 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.69766901 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697783857 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.697762865 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.698877427 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698322355 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.698981466 seconds)
  done (took 52.56416873 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.701756638 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.70614759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.698903791 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.698178746 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.70075044 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.700477782 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.699151581 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.699803907 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.698448017 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.699361614 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.698415918 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.698613686 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.699214768 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.699178721 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.698666315 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.699053286 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.699135563 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.698838089 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.698535988 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.700367788 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.699761124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.699759685 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.698755707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.699394674 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.699803091 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.698929478 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.700335052 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.70047729 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.700506042 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.700887678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.700149012 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.699197293 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.699681843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.700502641 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.701309715 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.700225768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.704480107 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.7083137 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.699824573 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.700469782 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.701277966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.701078614 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.701117537 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.700680512 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.7010944 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.699792557 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.700322089 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.701258029 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.699814504 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.699545209 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.701554776 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.701263863 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.701086123 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.701925684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.700991366 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.701316487 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.701834542 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.701158784 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.702708834 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.700632798 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.700582243 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.701997335 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.701842483 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.701523919 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.700842391 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.702529463 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.701349891 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.700357421 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.701890915 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.70203025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.701465437 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.702299373 seconds)
  done (took 124.085822288 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.70103602 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.700883156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.701549177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.701950427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.702115766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.701890727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.70356189 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701941762 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702441011 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.702853724 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701749823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.703179546 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703529936 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.702357139 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.70285377 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.702443554 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.702573007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.702782345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.702441177 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.703115293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702470707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.70331316 seconds)
  done (took 39.094462977 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703177675 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.703412556 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.703883011 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.703954968 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.703034391 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.702593319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.703405287 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.703502464 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702933082 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703148744 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703297438 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703516477 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.70467926 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702930498 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704102216 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.704562514 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.702513215 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.704001436 seconds)
  done (took 32.304802019 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.704709496 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.704022014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.703370191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.703143128 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.70405546 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.704548641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704750045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.704793036 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.703654213 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.704348121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.703737957 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704836717 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.703657152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703725461 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703922588 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.704763703 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.704067774 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704082459 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.704468995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705057283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.706576297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705360995 seconds)
  done (took 39.139945628 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.704547227 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.705089753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.705136569 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.704742007 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.704482844 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.703705005 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.705626376 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.70548866 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.705456087 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.705025857 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705122802 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.704406371 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.705471698 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.704094273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.70485033 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704788421 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.705689597 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.706309746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704915093 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.705991629 seconds)
  done (took 35.746438171 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.705947891 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706709034 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.706422537 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706969922 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.70609791 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.705690032 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.705449395 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.705977551 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.706521628 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.706388161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.705901054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.706167641 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705962253 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.706586517 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706532698 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.707028473 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706526993 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.705744914 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.70655857 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706449241 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.707058254 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70586145 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.706270818 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.705892516 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.707163601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.707180588 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706980421 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.707163256 seconds)
  done (took 49.424694222 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.706593003 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.708613533 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.706777263 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.707488716 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.707264765 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.70648999 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.707760959 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.708055109 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.707674291 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707051717 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.707963724 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.707746621 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.707462619 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.707635952 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.707304126 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.707950903 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708068189 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.707744803 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707155896 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706983722 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.707187287 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708433179 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.707799368 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.706904492 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707668731 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.708470703 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709004485 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.709290441 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708742978 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707194362 seconds)
  done (took 52.878352742 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.729126414 seconds)
    (2/2) benchmarking "in"...
    done (took 1.72927319 seconds)
  done (took 5.105553177 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.709554232 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707505054 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.709246742 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.708108467 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.709579501 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.708792573 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.707449682 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707858327 seconds)
  done (took 15.315833138 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.711105386 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.710597073 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.709849794 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.709399295 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.710889899 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.711571539 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.719087348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.710856049 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.712705244 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.712221108 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.717549746 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.719249123 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.714855302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711487147 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.711479581 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71380494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.710487887 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.71144158 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.711311758 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.711357591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711399334 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.714337412 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714330121 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.710655927 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.712123702 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.723192503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.718138028 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.71085414 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.711462352 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.716965372 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.713240861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.711753656 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.712047318 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.711135088 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.710896345 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.712501922 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.721740321 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714032394 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.719114828 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712224559 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.712330094 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.710865548 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.714169492 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.716084016 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714264912 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.711822611 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.712270038 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.711161684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.712533836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.716039399 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.719129348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.713460842 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.71250833 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.71616895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.715564326 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.720265439 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.714502101 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.716082124 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.721808675 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.72342806 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.725734489 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.721772882 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71571581 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.713653492 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.722415556 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.736738959 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.721629072 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.714257429 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.714347723 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.712322308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.721434908 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726183303 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.723192677 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.714061808 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.713178411 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.711998589 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.715674038 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713510509 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.722222668 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.718652736 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.715406625 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714089055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723023694 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.734466331 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.71464962 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.7151707 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.714168342 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.714625653 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.716279524 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.725811679 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.715101572 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.715594491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.714500527 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.714920244 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.717572777 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.715548694 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.715490264 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716362572 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.715248048 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.714906935 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715182962 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.717349194 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.724428038 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.715167569 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.714884652 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.72341635 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.714832054 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715987092 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.72340856 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.715061925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.715757312 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.716653895 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.723493564 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.715945909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719631451 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.724198953 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.716652195 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.718262208 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.716091129 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.716186845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.72514085 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.742015551 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.715479338 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.716014189 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.721282408 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.725955153 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.717140493 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.720027763 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.716439395 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.71695998 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.716964068 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.719217695 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.715861717 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.718194824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.717455537 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.719476524 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.716606954 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.716537932 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.717143609 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.718479515 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.720181936 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.718964705 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.720014565 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.721439233 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.717293314 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.720487665 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.725775044 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.7178904 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.719864287 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.71901114 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.717361686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.717206997 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.720010512 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.71782952 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.718736412 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.717960866 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.719818077 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.718056002 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.716763152 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.718854495 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717232298 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.719363845 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72290496 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.718648879 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.723084438 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.720133451 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.717598531 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.71855553 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.717983072 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.718410246 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.718297987 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.717530916 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.722486897 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.725371046 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.718668859 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.718956304 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.723805117 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719166121 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.719331155 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719262681 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.721865687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.729052617 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.719118397 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.727758854 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.718804119 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.718546464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.71895137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.721183906 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.720170039 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719556801 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.722557008 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.725732119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732085064 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72941834 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.720995057 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.72278412 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.720473122 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.723144233 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.725466941 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.71945741 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.720258733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719650403 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721164037 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.719748653 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.72366381 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.720329509 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.719340121 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.719944901 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.720234695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.720074632 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.720816739 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.722108305 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.723115183 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.720590437 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.720590268 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719948841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.720968781 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.720129338 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.720385579 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.720698197 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.721092116 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.721390897 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.727789304 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.72042484 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.723085237 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724185555 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.722981848 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.720382572 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.719813139 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.724904266 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.722238169 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729057249 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.723171938 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.722792748 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.728895352 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.722857434 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.721016607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.725845321 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.722900476 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.72177292 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.725117424 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.729467393 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.722047174 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.722107244 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.72174365 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.723165644 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721017393 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.730266987 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.722217999 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.722787052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.722455158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.724474068 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.723103408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.724857796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.723558753 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.723982937 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.726218227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722597056 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.721874085 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725833283 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.723134664 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.722814865 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.722463687 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725970599 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.730750317 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.730029473 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.724030911 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.726646136 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.724386422 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.726432478 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.725119419 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.723562682 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.724243286 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735316267 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.731427209 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731032091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.726166252 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.723409035 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732160126 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.724120364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.728342614 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724080377 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725921585 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.724889348 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.72503994 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.72395461 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726850518 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.724098473 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726564037 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.726300485 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.727887706 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.723832888 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.724730864 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.724737635 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.72488329 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.724339874 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.725590844 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.724665639 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.72872416 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727768621 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.725515621 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.726532145 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73363138 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725999422 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.726195521 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.724439283 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.72537606 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.72562422 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.727243619 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.725537972 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.728410145 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.732398754 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.728398107 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.735003011 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.729420171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736220419 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.726577496 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.729909534 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.734334139 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.725819895 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.724800007 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.727017209 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.726884604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733929142 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.726462101 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.727339343 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.730457306 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.726605789 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.725823616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.726230393 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.726313864 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726346707 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.726165061 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737255335 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.728440611 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.731730139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72905983 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.72600045 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.726242388 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.726785839 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.725941906 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.731293576 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.725848564 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.728490397 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.728018462 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.727026362 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.727452926 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.726681428 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.726781206 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.726067001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.727136226 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735887524 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.728104083 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731917816 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.728170313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.736345896 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726789247 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736621745 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.728043345 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.728165808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.727414734 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.727356378 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.730580803 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.727381341 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.729887957 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.72741686 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.729144709 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.731361631 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.72805176 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.731993182 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.729802827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.728292051 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.729951153 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737714014 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75035954 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.729749892 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732720571 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.728720051 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.730097993 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.732793055 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.729246299 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.729036224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.731830307 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.739591342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73678773 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.730385184 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.729820303 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.730979567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.72944696 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.729605006 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.728833316 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.728544984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.729235461 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.73248638 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.729595914 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734801029 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.728640731 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.731524653 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732494068 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.73136052 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.742488348 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.729067953 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.731495504 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728828352 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.730354809 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.731884034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.731067915 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.730765543 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733043054 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730312034 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.732071863 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736820461 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.736888764 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.734381259 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.731579663 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.730884621 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.732416259 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.732529413 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729943463 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.7309011 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.730914311 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.733235193 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.730552177 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.73351509 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.730880879 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.730267174 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.732158205 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730320507 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734627312 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.739440111 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.733169581 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.731056502 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.730659591 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730553704 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.73163755 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.733432054 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.74056022 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.73575659 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.742773942 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.740114694 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.736139154 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.732670252 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735187206 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.741272892 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.73206536 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.733788546 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.732578389 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.735230131 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.733884734 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.737105552 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73255358 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.741376578 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.734524566 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.732428935 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742449495 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.73437267 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.731841032 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.733714844 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.737993072 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.733528063 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.731509131 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.731656112 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.733516752 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741286922 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.735952169 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.733528098 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736629116 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.731607897 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.734472745 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.736707637 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.732183092 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.73512302 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.733313007 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.735601051 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.73327911 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733005823 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.733426619 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.733522977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.73463377 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.736518467 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.740932456 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.733069744 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.737236879 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.735805018 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.73547411 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.734622883 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.733781737 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.734303901 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.733702257 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.733875696 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.734118871 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.735406888 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.738214737 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.7340765 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.735320615 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.737619019 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.734554644 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737925651 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.744208317 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.740640973 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.733453056 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.735373447 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.73631123 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.738967215 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735121062 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.734481027 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735529627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.738146213 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.734515455 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73409313 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.734702527 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.73823284 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750970265 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.735442303 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736552403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.737632302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.739962386 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.734744875 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.73496207 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.735246698 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.738453058 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.738692321 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.743232026 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.734650105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743855934 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736650739 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.736609938 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.738662728 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.739965855 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.743274513 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.739360561 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73681725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.73622151 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.741063165 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.753238828 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73719751 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74611668 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765679695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.737508021 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.737917975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.737243424 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738013426 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.736830626 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.740390537 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.736882038 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.735601511 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736358729 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.737519286 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.737731755 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.743783879 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.740841989 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.737053372 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.737136772 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.737427955 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.739777745 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.737307635 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.736807988 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.737662986 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.737530721 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.737186268 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.738291867 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.739350948 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.749664105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.749107693 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.737045059 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.738333469 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.737914812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.187881761 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.742202979 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748459543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.745110675 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.737762823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.737920394 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.740391447 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737828088 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.73809681 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.739675726 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.738687826 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.740036999 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.738577423 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.751766021 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746887846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.744735623 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.739156689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.738439948 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.738679393 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741216894 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73973709 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.739201718 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.741508478 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.740322586 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742852941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.738416216 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.738909208 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.743030408 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.746694835 seconds)
  done (took 1031.478735989 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.739084672 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738698191 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739767365 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.739354488 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.738621243 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.738807187 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739607852 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.73886424 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.740798652 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.738254469 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.7386565 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739507538 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.738639709 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739679249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739986125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.739202893 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.739256193 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740152886 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740087242 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740271596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.739975216 seconds)
  done (took 38.204999083 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.740137495 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.740559996 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.740625227 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.740938529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739982477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.739154348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.740757791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739927843 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.744072888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742665558 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.74035346 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739930267 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.740522159 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.740310586 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740486114 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740207375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.74100615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739938301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.741105097 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.741021644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739934676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.740763104 seconds)
  done (took 39.97333698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.740521028 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.7416686 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.74045892 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.740451255 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.740528223 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.73966321 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.74068231 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.741961102 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.742516242 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.744665561 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.742345211 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.744506309 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.749057281 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.748789947 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.745438799 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.741954053 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.886891096 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.742134941 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.742684438 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.742304714 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.742330468 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.749715206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.742184983 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.741948357 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.742182377 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.74403315 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.743809805 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.742842635 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.742648003 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.744294087 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.747281519 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.74331952 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.74439508 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.74702811 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.744581449 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.74538028 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.747047327 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.744371763 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.742708087 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.742740189 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.751674124 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.763503845 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.743077697 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.751596906 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.74383589 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.744668734 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.747162252 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.750714608 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.745518141 seconds)
  done (took 87.306213802 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.743834343 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.744604459 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.744936404 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.743544428 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.744010109 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.743279835 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.743617244 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.744374966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.743810723 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.743473022 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.74534863 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.744403516 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744587412 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.743481347 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.744083641 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.745678236 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744228642 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.743869382 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.743954278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744510463 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.743215912 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.744158553 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.74370771 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.745172414 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.744838908 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.743815767 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.744897908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.744872144 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.74377307 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.744084628 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.743360694 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.743943704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.744229377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.743941145 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.74513572 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.744589333 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.744763557 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.74449948 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.745214971 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.74462979 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.745249368 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.74579621 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.745258695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.74480786 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.745689378 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.744784773 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.744702158 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.744523169 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.74577425 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.745157766 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.744359048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.744949966 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.745312884 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.745397698 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.744998795 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.745365068 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.74598283 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.745629055 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.745422148 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.745760353 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.746032799 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.744902751 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.745978964 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.745361536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.744959642 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.746357921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.745724232 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.74486375 seconds)
  done (took 120.324287149 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7478866 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.745107824 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748357084 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747037559 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747193751 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.747544074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74683438 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.747373299 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.746837054 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.747081692 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747043049 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.746206076 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.746884571 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.746788861 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.747705787 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747363237 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.747229248 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747283046 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.748323492 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747165783 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.747998373 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.747152109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.748744806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.748315865 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.747608932 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.747264727 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748000826 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.748384164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748638144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.748762542 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749015826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.748007768 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.748535781 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.748673193 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.749083497 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.748600997 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.748290451 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747144965 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.748259604 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.748836212 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.749578461 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749338821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749078289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.748844439 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749239536 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.74958294 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.749850918 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.748403561 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.749231925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749435711 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.750549396 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749678317 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750366014 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749463185 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.749313465 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.750147618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750585981 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.749165488 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750166179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.749860786 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750421374 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.749762604 seconds)
  done (took 110.08719784 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749096846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750212732 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.748567843 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.748318765 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749015931 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.74926938 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.748322762 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.748678911 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.749627726 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.750224447 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749967475 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750892447 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75090227 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749577799 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750107626 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751687459 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74930471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75091716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749782068 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75058016 seconds)
  done (took 36.682279354 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.750351484 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.750485033 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.750782085 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.750922321 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.751020125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.750734632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.75114204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750515985 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750781546 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750656136 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75075824 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752686112 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750085441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.75145398 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.749995067 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.751350338 seconds)
  done (took 29.701412483 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.752343609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.75134037 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.752131791 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.751643791 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.75161051 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.751379447 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.751720086 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.751493635 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.751244972 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.755060168 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.753895149 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.752516791 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.751223781 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.751441888 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.751254326 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.751253983 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.750716114 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.75146043 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.751906004 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.751353874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.752923331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.75182086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.753150634 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.751146295 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.752881723 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.753941656 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.75201151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.752678866 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.752715661 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.752478638 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.75360673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.752770335 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.752543944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.751827603 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.754023656 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.754200848 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.752307008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.754277677 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.753315573 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.753892018 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.751982149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.753622721 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.753556725 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.752232128 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.753261714 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.753189039 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.753974004 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.75233071 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.754204689 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.753789923 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.753038452 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.754391672 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.753815572 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.75354791 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.753840128 seconds)
  done (took 98.087652471 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753917368 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753780254 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.753727073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.75309761 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.753027656 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.753725883 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753273677 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.753705752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753375047 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.754797103 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.754928884 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.754129146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754988056 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753694983 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.754936618 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753703683 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.754477391 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.754493291 seconds)
  done (took 33.264416249 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.754100384 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.755744129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.755157406 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.754561182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.754115616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.755248255 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753849421 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.754714474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755078002 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.754007232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754923101 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.755009849 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754278173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.754764251 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755260819 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755859973 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.754989086 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754964954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.754554848 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755501622 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.756568678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755011066 seconds)
  done (took 40.300605465 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.756077506 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.754716773 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.770283275 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.775055334 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.775881977 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.787383332 seconds)
  done (took 12.312842536 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756690469 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755547166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.756186402 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755688247 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755412737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756848517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756407928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756237776 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756719208 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756602794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756507864 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756367885 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757008572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755866868 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755620568 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757007487 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758103804 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756174256 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755741587 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757104819 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757203277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756933036 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756556124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756671987 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757460095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756921989 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757997587 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756807996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757472772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757210955 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75712588 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75736196 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75789467 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758420096 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757557795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757950605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75812269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757778172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757402382 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758463854 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.757700866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757088705 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757939636 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758114688 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758010277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759291837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75867451 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758404909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758748578 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758482106 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75806809 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759110756 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757714791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758261125 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759191777 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758568835 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758662528 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758180264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759137273 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759131217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759313352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758928272 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759250043 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758758247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759233709 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759346924 seconds)
  done (took 117.696557743 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758242191 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.758778959 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760387735 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75992984 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759562847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760214525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759127017 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759392435 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759847309 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759366049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759632151 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759255297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760505301 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760349492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76020177 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760068853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759945492 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760870215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759106787 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760041228 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759373819 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759632138 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759568438 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760884803 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76006484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76060029 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75999222 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760311184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760647179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759416714 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761075435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760975377 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761235157 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760401426 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760423192 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759745127 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760904971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760976074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761273457 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761335924 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761364931 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761921201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761313439 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761321502 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76105685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761703598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76137527 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76073546 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761249337 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761898431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761237686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761708289 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760923553 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761814265 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761477252 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762141529 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761239238 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761161427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762124231 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761191386 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762457973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76057569 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762166023 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762579828 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762318864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76235079 seconds)
  done (took 117.90414402 seconds)
done (took 2402.970039647 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.771437538 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.890598201 seconds)
  done (took 15.360898543 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.926532156 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.880690791 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.764915626 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.8148936 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.765019481 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.792246665 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.775559158 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.765765512 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.76508679 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.765366721 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.764793221 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.949844285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.767830431 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.76496833 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.764654907 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.856337971 seconds)
  done (took 50.594005429 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.768079017 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.767777055 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.777290988 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.770213516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.767316 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.779415969 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.79833038 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.772622971 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.801577737 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.779793516 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.837975846 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.779887048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.767633441 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.817972925 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.782119382 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.782697312 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.860295178 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.844054633 seconds)
  done (took 33.956358393 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.846277438 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.779164236 seconds)
  done (took 10.334096791 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.762908879 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.764952506 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.783344971 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.774113276 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.782862614 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.765660299 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.776852669 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.768255622 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.770667377 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.768622413 seconds)
  done (took 69.437164784 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.772396659 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.772597546 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.769271087 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.767290707 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.765916725 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.771442582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.767221659 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.765392595 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.451774934 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.804455701 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.776338236 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.773473131 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.768255056 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.76909625 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.765676553 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.791384637 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.879642157 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.765404532 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.764838138 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.773875794 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.768476367 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.840805917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.783128096 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.769410526 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.799776297 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.454592062 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.778184931 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.774800018 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.878734625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.765864214 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.768288773 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.95536122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.770880184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.219383366 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.041892213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.775735745 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.777749324 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.777181462 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.765709866 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.906338819 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.770042965 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.775080579 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.759416788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.01761909 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.858130709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.812523366 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.11485762 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.773891132 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.770407101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.798667669 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.774082471 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.770257666 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.783651695 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.284441123 seconds)
  done (took 127.374512693 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767156928 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.114305062 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932807698 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.769125202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04861978 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973152029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.768439122 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813657005 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.768952805 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994073627 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021492519 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871350652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769314906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.766214195 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766269823 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.766511184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.918330385 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.837855048 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.770036397 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.76613295 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794145617 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007325392 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.889759559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.770146611 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.792504822 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.97647332 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.890647157 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.870519072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.562629265 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.765926104 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829338085 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.77092885 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.768642943 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.766100802 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.921345443 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.860898332 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850111195 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.770748697 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76677489 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.767241793 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.42508062 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964077435 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.863192283 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.89803911 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.021117185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.972044037 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.551066343 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.767242367 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.504912322 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.931899596 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.994615971 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9966977 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.888365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.772062266 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.116309418 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.767780121 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.76767314 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.016510682 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019766675 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.866423333 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7708552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.768843402 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768224113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005202418 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.772202377 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.862209953 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771803578 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.770267318 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.864796014 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865835146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.01562487 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982866319 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.799908385 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.111567439 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.275318972 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.014142698 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.833755763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017778329 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.771372193 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767944583 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.846107563 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.613161727 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.022777369 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.013274516 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.013261084 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804762065 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.482352943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.768105892 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.99390963 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990155722 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.028863632 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.014748476 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.006592016 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.12408654 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.768844396 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.769670983 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.082593429 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.893344105 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.772629604 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121812726 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999435914 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.298863637 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.797589069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071911909 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.900218453 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.774732029 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.401538052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.772238977 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998459316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.810198221 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.772213206 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772521749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.98903572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.760861448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772355253 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.440319391 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.831143474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.773786795 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002491892 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.774118756 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037425058 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.775741723 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001487081 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.797411402 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.802040857 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.945190598 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017054631 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.774139454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009397035 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.014713722 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.887812996 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992172127 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.512146017 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.773559745 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055695905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775209584 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.771504543 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.939988867 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773333644 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940606771 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.775597951 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063343756 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792933863 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002207407 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776923101 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.025192421 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804454409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822619752 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775632651 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.896162904 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776385218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.602444408 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928173627 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777560929 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.771939096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.339511071 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.772377979 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919304169 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.998520707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.795178837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844638356 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.437232111 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.773356263 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.852917959 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.796757745 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.16006635 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.77365622 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.025942296 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.777595958 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.774146809 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.773128984 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.007399181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957214917 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.777985335 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.772748895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.684511378 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.772865627 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7733884 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.95383477 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.108296638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.773571349 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976146074 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777585042 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.900749287 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777455879 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.856050465 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115776828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.773994925 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.773758596 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.773836512 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.77501919 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.775923384 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.980858237 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.798329582 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.26873774 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.910204642 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045589588 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.084990674 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.015116352 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817192687 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.77705329 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027632788 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.778772048 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.836946256 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.778073043 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.795592277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001672488 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778803506 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039697869 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046612929 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.621688985 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822284125 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.778444415 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776828604 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.776436058 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.919465923 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865877278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.7793423 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.774183645 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889389798 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.898216961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986599004 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.776706421 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.817282436 seconds)
  done (took 881.197463544 seconds)
done (took 1189.952932892 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.77481646 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775610477 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.77639772 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778094852 seconds)
  done (took 28.818529739 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.775835531 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.777140894 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.77791165 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.77759943 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.778655206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.778401696 seconds)
  done (took 12.379349929 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.809287302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.777890256 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.779465035 seconds)
  done (took 21.081921263 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.851589199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.194099635 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.908742494 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.216046719 seconds)
  done (took 9.884544068 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.778067824 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.77847611 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.778100902 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.779164014 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.780505799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.780220525 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.779352381 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.778450691 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.781262904 seconds)
  done (took 17.729101815 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.148756503 seconds)
done (took 95.754244233 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.279687432 seconds)
    (2/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.079178703 seconds)
    (3/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.703482611 seconds)
    (4/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.05566917 seconds)
    (5/341) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.913106738 seconds)
    (6/341) benchmarking ("perf_sum", Bool, false)...
    done (took 1.842112567 seconds)
    (7/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.854879967 seconds)
    (8/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.777499475 seconds)
    (9/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32492283 seconds)
    (10/341) benchmarking ("perf_sum", Bool, true)...
    done (took 1.91244042 seconds)
    (11/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.908530579 seconds)
    (12/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.793252944 seconds)
    (13/341) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.168155396 seconds)
    (14/341) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.905467839 seconds)
    (15/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.169934199 seconds)
    (16/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.921011755 seconds)
    (17/341) benchmarking ("map", identity, Int8, false)...
    done (took 1.853086881 seconds)
    (18/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.944101048 seconds)
    (19/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.864413928 seconds)
    (20/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.936748016 seconds)
    (21/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.976167769 seconds)
    (22/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.805412518 seconds)
    (23/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.594242133 seconds)
    (24/341) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.825414128 seconds)
    (25/341) benchmarking ("perf_sum", Int8, true)...
    done (took 1.782093843 seconds)
    (26/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.90353449 seconds)
    (27/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.778636717 seconds)
    (28/341) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.886031235 seconds)
    (29/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 2.842422878 seconds)
    (30/341) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.106325893 seconds)
    (31/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.686037059 seconds)
    (32/341) benchmarking ("collect", "filter", Complex{Float64}, true)...
    done (took 3.151414125 seconds)
    (33/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.86922342 seconds)
    (34/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.614276175 seconds)
    (35/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.894449117 seconds)
    (36/341) benchmarking ("perf_sum", Float32, true)...
    done (took 1.967886441 seconds)
    (37/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.042011448 seconds)
    (38/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.925519583 seconds)
    (39/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.264823098 seconds)
    (40/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.194664996 seconds)
    (41/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.782208949 seconds)
    (42/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.848107251 seconds)
    (43/341) benchmarking ("sort", BigFloat, false)...
    done (took 6.780669911 seconds)
    (44/341) benchmarking ("map", abs, Float64, false)...
    done (took 1.884134164 seconds)
    (45/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.955172019 seconds)
    (46/341) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.135850005 seconds)
    (47/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.781592693 seconds)
    (48/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.947216059 seconds)
    (49/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.995627628 seconds)
    (50/341) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.863456049 seconds)
    (51/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.786909369 seconds)
    (52/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.272213925 seconds)
    (53/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.784728173 seconds)
    (54/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.849826098 seconds)
    (55/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.13147311 seconds)
    (56/341) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.780532609 seconds)
    (57/341) benchmarking ("sort", Bool, false)...
    done (took 2.012587554 seconds)
    (58/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.805351414 seconds)
    (59/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.971830578 seconds)
    (60/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.550242651 seconds)
    (61/341) benchmarking ("sort", Int64, false)...
    done (took 5.524449565 seconds)
    (62/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.78856429 seconds)
    (63/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.963762378 seconds)
    (64/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.409241736 seconds)
    (65/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.04672284 seconds)
    (66/341) benchmarking ("map", abs, Int8, true)...
    done (took 1.953075145 seconds)
    (67/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.033840409 seconds)
    (68/341) benchmarking ("map", abs, Bool, true)...
    done (took 1.923114822 seconds)
    (69/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.950005409 seconds)
    (70/341) benchmarking ("perf_sum", Int64, true)...
    done (took 1.806293405 seconds)
    (71/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.111847231 seconds)
    (72/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.866350848 seconds)
    (73/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.877444394 seconds)
    (74/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.141039282 seconds)
    (75/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.822954546 seconds)
    (76/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.658757796 seconds)
    (77/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.140940304 seconds)
    (78/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.763560273 seconds)
    (79/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.797152374 seconds)
    (80/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.295744899 seconds)
    (81/341) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.695499453 seconds)
    (82/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.809094525 seconds)
    (83/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.991406009 seconds)
    (84/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.120775433 seconds)
    (85/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.788782475 seconds)
    (86/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.887323914 seconds)
    (87/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.806739675 seconds)
    (88/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.89349599 seconds)
    (89/341) benchmarking ("map", abs, Int8, false)...
    done (took 1.893155355 seconds)
    (90/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.812505929 seconds)
    (91/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.784619361 seconds)
    (92/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.893537663 seconds)
    (93/341) benchmarking ("perf_sum", Float32, false)...
    done (took 1.868367357 seconds)
    (94/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.788813469 seconds)
    (95/341) benchmarking ("map", abs, Float32, true)...
    done (took 1.967248958 seconds)
    (96/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.183457554 seconds)
    (97/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.788493939 seconds)
    (98/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.91424593 seconds)
    (99/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.898297615 seconds)
    (100/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 2.992922897 seconds)
    (101/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.189949185 seconds)
    (102/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.548455586 seconds)
    (103/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.016636668 seconds)
    (104/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.738688134 seconds)
    (105/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.814410854 seconds)
    (106/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.575223751 seconds)
    (107/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.932545343 seconds)
    (108/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.786866767 seconds)
    (109/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.661756896 seconds)
    (110/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.978833124 seconds)
    (111/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.797547047 seconds)
    (112/341) benchmarking ("map", abs, BigInt, false)...
    done (took 6.788224825 seconds)
    (113/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.989761431 seconds)
    (114/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.938825458 seconds)
    (115/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.195721675 seconds)
    (116/341) benchmarking ("collect", "filter", Complex{Float64}, false)...
    done (took 2.84117642 seconds)
    (117/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.506033713 seconds)
    (118/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.796381052 seconds)
    (119/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.680196784 seconds)
    (120/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.837420577 seconds)
    (121/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062566408 seconds)
    (122/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.793656694 seconds)
    (123/341) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.956240007 seconds)
    (124/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.804316097 seconds)
    (125/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.809271102 seconds)
    (126/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.945818811 seconds)
    (127/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.320404553 seconds)
    (128/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.938235106 seconds)
    (129/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.918016398 seconds)
    (130/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 2.840421962 seconds)
    (131/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.48215944 seconds)
    (132/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.91418301 seconds)
    (133/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.816415764 seconds)
    (134/341) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.81071812 seconds)
    (135/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.790759196 seconds)
    (136/341) benchmarking ("map", identity, Float32, true)...
    done (took 1.993078188 seconds)
    (137/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.794925164 seconds)
    (138/341) benchmarking ("sort", Int8, false)...
    done (took 4.761248712 seconds)
    (139/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.006416992 seconds)
    (140/341) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.049500438 seconds)
    (141/341) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.244483697 seconds)
    (142/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.813778072 seconds)
    (143/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.122877257 seconds)
    (144/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.446273815 seconds)
    (145/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.807730492 seconds)
    (146/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.596251053 seconds)
    (147/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.905031558 seconds)
    (148/341) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.255426241 seconds)
    (149/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.791317619 seconds)
    (150/341) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.068367696 seconds)
    (151/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186343767 seconds)
    (152/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.873920888 seconds)
    (153/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 2.900078092 seconds)
    (154/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.833246346 seconds)
    (155/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.819557642 seconds)
    (156/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.039509058 seconds)
    (157/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.034146099 seconds)
    (158/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.793523699 seconds)
    (159/341) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.050201769 seconds)
    (160/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.465738853 seconds)
    (161/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.052733842 seconds)
    (162/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.626894089 seconds)
    (163/341) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.931592974 seconds)
    (164/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.125684678 seconds)
    (165/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.796168647 seconds)
    (166/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064422997 seconds)
    (167/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.824768233 seconds)
    (168/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.894692463 seconds)
    (169/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.82807384 seconds)
    (170/341) benchmarking ("map", identity, Float32, false)...
    done (took 1.869745572 seconds)
    (171/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.800486578 seconds)
    (172/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.350443557 seconds)
    (173/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.109758821 seconds)
    (174/341) benchmarking ("collect", "all", Float32, true)...
    done (took 1.998852904 seconds)
    (175/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.117171302 seconds)
    (176/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.898395401 seconds)
    (177/341) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.728914972 seconds)
    (178/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.811293835 seconds)
    (179/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.789622164 seconds)
    (180/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.212378682 seconds)
    (181/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.991823994 seconds)
    (182/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.011452568 seconds)
    (183/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.904950333 seconds)
    (184/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.268395578 seconds)
    (185/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.936653501 seconds)
    (186/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.895305605 seconds)
    (187/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.053633489 seconds)
    (188/341) benchmarking ("sort", Float64, false)...
    done (took 5.561063864 seconds)
    (189/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.795846158 seconds)
    (190/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.161121416 seconds)
    (191/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.187548044 seconds)
    (192/341) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.554323157 seconds)
    (193/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.79313762 seconds)
    (194/341) benchmarking ("collect", "all", Float32, false)...
    done (took 1.880684777 seconds)
    (195/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.119409374 seconds)
    (196/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.990955151 seconds)
    (197/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.848816164 seconds)
    (198/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.812707451 seconds)
    (199/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.792338208 seconds)
    (200/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.876307309 seconds)
    (201/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.102500987 seconds)
    (202/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.793741654 seconds)
    (203/341) benchmarking ("map", abs, Bool, false)...
    done (took 1.955680768 seconds)
    (204/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.102716703 seconds)
    (205/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.67699495 seconds)
    (206/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248368947 seconds)
    (207/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.223591762 seconds)
    (208/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.792005507 seconds)
    (209/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.872327834 seconds)
    (210/341) benchmarking ("sort", BigInt, false)...
    done (took 6.797575756 seconds)
    (211/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.850132426 seconds)
    (212/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.938672936 seconds)
    (213/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.982890524 seconds)
    (214/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.85724584 seconds)
    (215/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.817931593 seconds)
    (216/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.71340549 seconds)
    (217/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.520448446 seconds)
    (218/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.920529698 seconds)
    (219/341) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.838180398 seconds)
    (220/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.860514742 seconds)
    (221/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.104836558 seconds)
    (222/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202188005 seconds)
    (223/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.433215194 seconds)
    (224/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.936739206 seconds)
    (225/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.028129573 seconds)
    (226/341) benchmarking ("collect", "all", Complex{Float64}, false)...
    done (took 2.005022871 seconds)
    (227/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.950674638 seconds)
    (228/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.895378588 seconds)
    (229/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.101009286 seconds)
    (230/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.799043034 seconds)
    (231/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.481969486 seconds)
    (232/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.794544816 seconds)
    (233/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.683028788 seconds)
    (234/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.098913069 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001115963 seconds)
    (236/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.963238315 seconds)
    (237/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.509769466 seconds)
    (238/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.793796675 seconds)
    (239/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.993936573 seconds)
    (240/341) benchmarking ("map", abs, Float32, false)...
    done (took 1.895840947 seconds)
    (241/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.11614398 seconds)
    (242/341) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.612518884 seconds)
    (243/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.885438783 seconds)
    (244/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.214090888 seconds)
    (245/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.021763312 seconds)
    (246/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.816874255 seconds)
    (247/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.952009886 seconds)
    (248/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.126688469 seconds)
    (249/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.300368157 seconds)
    (250/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.210174981 seconds)
    (251/341) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.194072203 seconds)
    (252/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.795399837 seconds)
    (253/341) benchmarking ("perf_sum", Float64, true)...
    done (took 1.93230355 seconds)
    (254/341) benchmarking ("collect", "all", Int8, false)...
    done (took 1.870877327 seconds)
    (255/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.075364099 seconds)
    (256/341) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.946528712 seconds)
    (257/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.037994384 seconds)
    (258/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.148236089 seconds)
    (259/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.221342737 seconds)
    (260/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.457115537 seconds)
    (261/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.801766205 seconds)
    (262/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169967077 seconds)
    (263/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.979853849 seconds)
    (264/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.115016973 seconds)
    (265/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.025199195 seconds)
    (266/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.879518682 seconds)
    (267/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918993207 seconds)
    (268/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.861986242 seconds)
    (269/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.929337939 seconds)
    (270/341) benchmarking ("collect", "all", Bool, true)...
    done (took 1.926387109 seconds)
    (271/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.857685213 seconds)
    (272/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.208056784 seconds)
    (273/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.796130033 seconds)
    (274/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.582071763 seconds)
    (275/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.077385437 seconds)
    (276/341) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.928698726 seconds)
    (277/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.125737036 seconds)
    (278/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.945360421 seconds)
    (279/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.833665897 seconds)
    (280/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.057590423 seconds)
    (281/341) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.03620889 seconds)
    (282/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.092373427 seconds)
    (283/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.798126535 seconds)
    (284/341) benchmarking ("collect", "all", Int8, true)...
    done (took 1.9380781 seconds)
    (285/341) benchmarking ("perf_sum", Float64, false)...
    done (took 1.882864148 seconds)
    (286/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.794588606 seconds)
    (287/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.103202284 seconds)
    (288/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.084368661 seconds)
    (289/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.278811538 seconds)
    (290/341) benchmarking ("collect", "all", Complex{Float64}, true)...
    done (took 2.327489889 seconds)
    (291/341) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.696398814 seconds)
    (292/341) benchmarking ("map", identity, Int64, false)...
    done (took 1.911763081 seconds)
    (293/341) benchmarking ("sort", Float32, false)...
    done (took 5.509879871 seconds)
    (294/341) benchmarking ("collect", "all", Bool, false)...
    done (took 1.885393143 seconds)
    (295/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.149329614 seconds)
    (296/341) benchmarking ("map", identity, Bool, true)...
    done (took 1.934767636 seconds)
    (297/341) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.933811109 seconds)
    (298/341) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.125470423 seconds)
    (299/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 2.847053716 seconds)
    (300/341) benchmarking ("perf_sum", Int64, false)...
    done (took 1.826979006 seconds)
    (301/341) benchmarking ("collect", "all", Int64, false)...
    done (took 1.907455055 seconds)
    (302/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.000626692 seconds)
    (303/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.802415667 seconds)
    (304/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.581808908 seconds)
    (305/341) benchmarking ("perf_sum", Int8, false)...
    done (took 1.81281863 seconds)
    (306/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.108917636 seconds)
    (307/341) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.019490062 seconds)
    (308/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 2.931598462 seconds)
    (309/341) benchmarking ("map", identity, Int8, true)...
    done (took 1.953772361 seconds)
    (310/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.213408574 seconds)
    (311/341) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.805361682 seconds)
    (312/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.098877571 seconds)
    (313/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.822502567 seconds)
    (314/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.21422374 seconds)
    (315/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.952349806 seconds)
    (316/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.819490282 seconds)
    (317/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.054833183 seconds)
    (318/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.037891055 seconds)
    (319/341) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.603657207 seconds)
    (320/341) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.558229284 seconds)
    (321/341) benchmarking ("map", identity, Bool, false)...
    done (took 1.877242759 seconds)
    (322/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.100110749 seconds)
    (323/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.615920448 seconds)
    (324/341) benchmarking ("collect", "all", Float64, false)...
    done (took 1.906426913 seconds)
    (325/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.141079828 seconds)
    (326/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.802329166 seconds)
    (327/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.902283614 seconds)
    (328/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.114589554 seconds)
    (329/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.814463221 seconds)
    (330/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.797791853 seconds)
    (331/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.332514284 seconds)
    (332/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.846621861 seconds)
    (333/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.034323638 seconds)
    (334/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.092075753 seconds)
    (335/341) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524892102 seconds)
    (336/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.97865852 seconds)
    (337/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.932940407 seconds)
    (338/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087717905 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.014620535 seconds)
    (340/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.291397917 seconds)
    (341/341) benchmarking ("map", abs, Int64, false)...
    done (took 1.925109513 seconds)
  done (took 1073.456198811 seconds)
done (took 1075.281421349 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.827183806 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818832239 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.800498669 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.822238876 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.913596181 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.848336538 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.815028977 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.80501005 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.851366816 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.852362741 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.799105512 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.845853528 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.802047116 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.801813753 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.801662094 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818318502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.109343011 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.832356833 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.820155983 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.815010624 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.820278227 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.800168983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.852374403 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.845691558 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.80670151 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.805895942 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.805421109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.821864942 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.915553101 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.806440725 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.806150974 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.814992997 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.109443546 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.830545551 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.801238781 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.82252685 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.815369106 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.813469523 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.808296413 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.834540901 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257417871 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.808967222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.804592565 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.803808921 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.803876506 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.80961004 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.803554531 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.811859135 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818130675 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821039167 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.248725359 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.825817209 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.80710697 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.803585752 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.817443127 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.803937673 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.807742784 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.819165023 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.823564621 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820731392 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.097058125 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.840444776 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.808473924 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.821292471 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.812982027 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.28298254 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.81065189 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.811176595 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.257480071 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.819112474 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.28448786 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.820919937 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.807571368 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.820235006 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.836830723 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.109756473 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.832634817 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.803729255 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.814829326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.803200743 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.818060764 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820436815 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.810359615 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.805851457 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821226543 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.85121064 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.818637508 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.806834035 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.816781557 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.824026848 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.815111726 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.816899761 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.81043773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.803483558 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.817519415 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.809534445 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.810207117 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.808414591 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.811212492 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.818197976 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.257103687 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830986493 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.803839337 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.804543333 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.806274492 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.821502303 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.256257401 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.813099278 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.829677118 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.856652192 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.808103881 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.099656963 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.838174093 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823723389 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.81904609 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.80964578 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.805459804 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.099711248 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.27947128 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.829279401 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.807819829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.80544357 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825308883 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.809224674 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.804889702 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.114282417 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.839396336 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82405214 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.930096891 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.820426905 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.839811325 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.806074496 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.811135187 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.857005809 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82551183 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.839414239 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.810712103 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.823677521 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.82533233 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.806066459 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.819694823 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.822348427 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.80721709 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.816228008 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.805685534 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.858688525 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822189006 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.822631277 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.830139402 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.931205879 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.805396635 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.100869532 seconds)
done (took 284.372090627 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.889791693 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.804879422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.903341333 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.806691855 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.894981374 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.879903295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.807456913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.807452822 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.806860368 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.294873011 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.807078311 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.814658626 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.805120953 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.806755249 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.878567255 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.807098182 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.80699116 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.247920852 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.808376744 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.886581845 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.804478437 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.806816376 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.807318354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.304787439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.807489083 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.805038378 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.887870343 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.808179676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.255256575 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.806873584 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.806512813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.258174122 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.886580579 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.83512761 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.814857037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.815605884 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.895201818 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.81602855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.874253185 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.877416456 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.904293866 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.841365072 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.808252676 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.806615758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.812049038 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.808838184 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.808299667 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.838862111 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.809146053 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.812260024 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.244894393 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.815982637 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.814085711 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.807624081 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.80945881 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.836717051 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.810102581 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810101601 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.887771776 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.810194708 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.877427397 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.304813088 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.301337784 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.809751166 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.809597373 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.809050677 seconds)
  done (took 181.091480898 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.875110465 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88528766 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.874986151 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.814185215 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.860127519 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.876218966 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.814413701 seconds)
  done (took 14.745018789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817216418 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811754135 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.864615232 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.863536758 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.810446544 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.965850482 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.809875977 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.821064817 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.813398691 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.837007243 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.809690891 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810664048 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.816412184 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.80954416 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.860985101 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.821708221 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.926035086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.811820003 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.81156409 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.958975219 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81461381 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.818676259 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.836171826 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.822523382 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.810269818 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.818777598 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.382328413 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.810908174 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809619218 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.811425169 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811640867 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.851577452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.811361224 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.8095121 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811337655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928701929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.811338905 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81160585 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.812256415 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.811515355 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.811270123 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.811594318 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.812394541 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.812513303 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.81215466 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.836800411 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.811271388 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.812187161 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.811913377 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.812794765 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.83748458 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.812009447 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.812602658 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.817490296 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.85512582 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819615309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.812393232 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812185202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.811398984 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812826041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.959931846 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.864959321 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.812682902 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.863449522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812993731 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.813456624 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.812544045 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.813128951 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906640156 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.812522692 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.864391065 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.81327113 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.97262377 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.836358099 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81391972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.816767312 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.816809908 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814489923 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.811950893 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.821360542 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.813372155 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.815494305 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.821741753 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818449425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813426955 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.926365565 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.952957746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.813426381 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.815907187 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.820161833 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.81239688 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.857983814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.813621055 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815634341 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874399451 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.930752444 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.841545349 seconds)
  done (took 200.166407132 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.820946172 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.820819041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.815736494 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.830366189 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.813860934 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.814739331 seconds)
  done (took 12.665727831 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.816413365 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.819410962 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.815697045 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.815165252 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.814364807 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.816212019 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.815096191 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816820113 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.81992976 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.814806933 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.814447638 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.816209235 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.813492408 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.814702744 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.814998952 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.8150895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.815202588 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.814803146 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.815030692 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81497008 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.061158932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.816054793 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.815894981 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.818718125 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.819690991 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.815394037 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829623858 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.816265276 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.815896164 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.82410882 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820680967 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.816012214 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.819502062 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.822792088 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.820261492 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.819559266 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820365274 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.816954119 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817296859 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.81919354 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.819241247 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816441687 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.81576424 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.817595458 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.817509141 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.823378915 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.820329108 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829431094 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.816493398 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.816686029 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.817199089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.81747437 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.817549006 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.817918766 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.820647683 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823536543 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.822795038 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.817078718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.817093892 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.820227128 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.820633838 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.817847753 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.819700703 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.822209823 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.821918111 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.817763692 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.820690218 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821148001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818228368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.816966068 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.818356433 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.817026523 seconds)
  done (took 133.907061952 seconds)
done (took 544.332881149 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.133878967 seconds)
  done (took 8.885946493 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.835433128 seconds)
  done (took 8.591757632 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.519358483 seconds)
  done (took 10.270283779 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.855238014 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.812874802 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.834536413 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.813811684 seconds)
  done (took 29.076014782 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.004760408 seconds)
  done (took 8.753929783 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.828278638 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.813039148 seconds)
  done (took 15.455716467 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.898229493 seconds)
  done (took 8.648259656 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.936765784 seconds)
  done (took 8.699190301 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.818589873 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.841610812 seconds)
  done (took 15.432644864 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.820480533 seconds)
  done (took 8.570249805 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.083476493 seconds)
  done (took 9.837661904 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.835601042 seconds)
  done (took 8.621730724 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.854989119 seconds)
  done (took 8.60503336 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.852967175 seconds)
  done (took 8.602684773 seconds)
done (took 159.803032016 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.822401496 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.814511565 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.816410022 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.814405552 seconds)
  done (took 29.018301604 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.848255738 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.848553417 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.850203432 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.85834047 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.850601213 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.850536987 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.841949203 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.841345228 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.858902218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.851226822 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.851267803 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.851263523 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.849255725 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.841357267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.852294589 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.851500777 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.860219791 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.850757189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.84223672 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.851780208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.816644603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.860333172 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.851997557 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.816741643 seconds)
  done (took 46.09848594 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.007147196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.887637287 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.970674358 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.868643271 seconds)
  done (took 9.485242771 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.868665788 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.869414961 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.881282292 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.920178771 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.003771279 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.87921067 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.840467136 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.83980446 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.824932425 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.869178745 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.946073503 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.864946846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.953463546 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.817477322 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.004413455 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.816895371 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.81727838 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.868412798 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.920690592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.952560092 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.817279614 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.868439623 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.871463071 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.865761197 seconds)
  done (took 46.934130325 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.819164758 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.826204217 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.824960995 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.819088735 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.82079606 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.820362649 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.825529912 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.820773291 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.840905493 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.82173182 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.819253657 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.820442026 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.826605117 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.819703799 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.819660258 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.832684594 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.834639959 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.819802058 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.823443853 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.825771712 seconds)
  done (took 38.233264914 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.81761885 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.662744807 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.164402516 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.068859494 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.81791478 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.818634515 seconds)
  done (took 31.103716452 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.831235009 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.824961949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.818303508 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876110929 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.960331107 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.82493775 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.819273959 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.829494062 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.864435324 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.884951981 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.839013543 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.847430837 seconds)
  done (took 23.973450468 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.820741906 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.819861853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.819581239 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.830029175 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.82992293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.827562414 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.826975259 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.818514173 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831661214 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.837623655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.827122975 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.830815884 seconds)
  done (took 43.676959819 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898291299 seconds)
    (2/608) benchmarking ("sumrange", "Array{Int64,2}")...
    done (took 6.401513019 seconds)
    (3/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716138256 seconds)
    (4/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286124136 seconds)
    (5/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29285139 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344694103 seconds)
    (7/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.864599355 seconds)
    (8/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.282362527 seconds)
    (9/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022892312 seconds)
    (10/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.818496986 seconds)
    (11/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904103412 seconds)
    (12/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.818936392 seconds)
    (13/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.82047758 seconds)
    (14/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091688965 seconds)
    (15/608) benchmarking ("sumrange_view", "Array{Float64,2}")...
    done (took 1.825345552 seconds)
    (16/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.119866758 seconds)
    (17/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995822773 seconds)
    (18/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064045302 seconds)
    (19/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.647484866 seconds)
    (20/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854742527 seconds)
    (21/608) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297209378 seconds)
    (22/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0973309 seconds)
    (23/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032947988 seconds)
    (24/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847006074 seconds)
    (25/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.821819284 seconds)
    (26/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.529033079 seconds)
    (27/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.243103467 seconds)
    (28/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432308801 seconds)
    (29/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868247248 seconds)
    (30/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025225778 seconds)
    (31/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.942552704 seconds)
    (32/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.485193607 seconds)
    (33/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849674519 seconds)
    (34/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.770989436 seconds)
    (35/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.085105235 seconds)
    (36/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869198689 seconds)
    (37/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824825302 seconds)
    (38/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 2.110411815 seconds)
    (39/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874971356 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821794911 seconds)
    (41/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093188927 seconds)
    (42/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943227443 seconds)
    (43/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.127396703 seconds)
    (44/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.864301081 seconds)
    (45/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891454924 seconds)
    (46/608) benchmarking ("sumeach", "Array{Float64,2}")...
    done (took 3.74788144 seconds)
    (47/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825183712 seconds)
    (48/608) benchmarking ("sumvector", "Array{Int64,2}")...
    done (took 2.097362779 seconds)
    (49/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307141443 seconds)
    (50/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.790488421 seconds)
    (51/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.848464675 seconds)
    (52/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.523898572 seconds)
    (53/608) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.833417451 seconds)
    (54/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.317540503 seconds)
    (55/608) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.485280509 seconds)
    (56/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.846451617 seconds)
    (57/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.17974462 seconds)
    (58/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91797697 seconds)
    (59/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.127420214 seconds)
    (60/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824620148 seconds)
    (61/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821839655 seconds)
    (62/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748087303 seconds)
    (63/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41313607 seconds)
    (64/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946031798 seconds)
    (65/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.824717515 seconds)
    (66/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.522893826 seconds)
    (67/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82281218 seconds)
    (68/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.055992677 seconds)
    (69/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001290129 seconds)
    (70/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828069783 seconds)
    (71/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.824020016 seconds)
    (72/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.632479776 seconds)
    (73/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524507121 seconds)
    (74/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.096028917 seconds)
    (75/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.822673949 seconds)
    (76/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827558455 seconds)
    (77/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383131192 seconds)
    (78/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875706083 seconds)
    (79/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438762296 seconds)
    (80/608) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.789078272 seconds)
    (81/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.926049734 seconds)
    (82/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548274924 seconds)
    (83/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188567248 seconds)
    (84/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.969204259 seconds)
    (85/608) benchmarking ("mapr_access", "Array{Int64,2}")...
    done (took 2.867183505 seconds)
    (86/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.828163241 seconds)
    (87/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82557119 seconds)
    (88/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750860292 seconds)
    (89/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.488198341 seconds)
    (90/608) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857845538 seconds)
    (91/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948744583 seconds)
    (92/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.858023166 seconds)
    (93/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464120844 seconds)
    (94/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.824379496 seconds)
    (95/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.840693859 seconds)
    (96/608) benchmarking ("sumlogical_view", "Array{Float64,2}")...
    done (took 4.050021533 seconds)
    (97/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215480959 seconds)
    (98/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.169093175 seconds)
    (99/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845850031 seconds)
    (100/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.136808338 seconds)
    (101/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09359352 seconds)
    (102/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.692314557 seconds)
    (103/608) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.790359742 seconds)
    (104/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041360926 seconds)
    (105/608) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.775151918 seconds)
    (106/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752452864 seconds)
    (107/608) benchmarking "5d"...
    done (took 3.65652359 seconds)
    (108/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.751080035 seconds)
    (109/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035895844 seconds)
    (110/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.137174357 seconds)
    (111/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827272887 seconds)
    (112/608) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.429992335 seconds)
    (113/608) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856375404 seconds)
    (114/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908501076 seconds)
    (115/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82987519 seconds)
    (116/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839518897 seconds)
    (117/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.347905047 seconds)
    (118/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82745024 seconds)
    (119/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03769396 seconds)
    (120/608) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.719243901 seconds)
    (121/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825896703 seconds)
    (122/608) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.051901665 seconds)
    (123/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037094612 seconds)
    (124/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843070291 seconds)
    (125/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911191128 seconds)
    (126/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752287244 seconds)
    (127/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.826864891 seconds)
    (128/608) benchmarking ("sumrange", "Array{Float64,2}")...
    done (took 6.404631959 seconds)
    (129/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087800942 seconds)
    (130/608) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.029523512 seconds)
    (131/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.191955624 seconds)
    (132/608) benchmarking ("sumvector_view", "Array{Float64,2}")...
    done (took 1.877600512 seconds)
    (133/608) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.290986402 seconds)
    (134/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901467612 seconds)
    (135/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82699145 seconds)
    (136/608) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.871360694 seconds)
    (137/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.826953882 seconds)
    (138/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865249578 seconds)
    (139/608) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.088968343 seconds)
    (140/608) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877234769 seconds)
    (141/608) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873743842 seconds)
    (142/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863364563 seconds)
    (143/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.779620189 seconds)
    (144/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072675229 seconds)
    (145/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85219512 seconds)
    (146/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.954759551 seconds)
    (147/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.121358588 seconds)
    (148/608) benchmarking ("sumcartesian_view", "Array{Float64,2}")...
    done (took 2.381404558 seconds)
    (149/608) benchmarking ("sumelt", "Array{Float64,2}")...
    done (took 3.754718807 seconds)
    (150/608) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.150633423 seconds)
    (151/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961359152 seconds)
    (152/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048596422 seconds)
    (153/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888551214 seconds)
    (154/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827050946 seconds)
    (155/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827467485 seconds)
    (156/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.554237144 seconds)
    (157/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.778191465 seconds)
    (158/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332518927 seconds)
    (159/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.043528851 seconds)
    (160/608) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.840334297 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441064408 seconds)
    (162/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867855263 seconds)
    (163/608) benchmarking "ind2sub"...
    done (took 6.828038264 seconds)
    (164/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767337259 seconds)
    (165/608) benchmarking ("sumlinear_view", "Array{Float64,2}")...
    done (took 6.833428975 seconds)
    (166/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.507545954 seconds)
    (167/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.828405025 seconds)
    (168/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.135450413 seconds)
    (169/608) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.876080007 seconds)
    (170/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.04502483 seconds)
    (171/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040628918 seconds)
    (172/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.827399338 seconds)
    (173/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132016369 seconds)
    (174/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754707532 seconds)
    (175/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951661157 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.8040174 seconds)
    (177/608) benchmarking ("sumcolon", "Array{Float64,2}")...
    done (took 6.449737939 seconds)
    (178/608) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.056378859 seconds)
    (179/608) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46261967 seconds)
    (180/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.89010848 seconds)
    (181/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077146357 seconds)
    (182/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.203360364 seconds)
    (183/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.171606003 seconds)
    (184/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869682683 seconds)
    (185/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842137376 seconds)
    (186/608) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920424223 seconds)
    (187/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.847856171 seconds)
    (188/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844645803 seconds)
    (189/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.256257028 seconds)
    (190/608) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.373818868 seconds)
    (191/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108783833 seconds)
    (192/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.829501518 seconds)
    (193/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.83031951 seconds)
    (194/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.337281757 seconds)
    (195/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.553902947 seconds)
    (196/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.802359432 seconds)
    (197/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8343533 seconds)
    (198/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.832407183 seconds)
    (199/608) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400682292 seconds)
    (200/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096069777 seconds)
    (201/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833514087 seconds)
    (202/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837327643 seconds)
    (203/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70430766 seconds)
    (204/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.130785149 seconds)
    (205/608) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892331161 seconds)
    (206/608) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.841805852 seconds)
    (207/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83188528 seconds)
    (208/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.411775594 seconds)
    (209/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.876335272 seconds)
    (210/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83312962 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "Array{Int64,2}")...
    done (took 2.743662593 seconds)
    (212/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349766554 seconds)
    (213/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.378386218 seconds)
    (214/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.83417617 seconds)
    (215/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.52192008 seconds)
    (216/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044158519 seconds)
    (217/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833316486 seconds)
    (218/608) benchmarking ("sumcolon_view", "Array{Float64,2}")...
    done (took 1.834682929 seconds)
    (219/608) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.494487272 seconds)
    (220/608) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923180107 seconds)
    (221/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.113460717 seconds)
    (222/608) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.841963433 seconds)
    (223/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093623722 seconds)
    (224/608) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88691748 seconds)
    (225/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.353235173 seconds)
    (226/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.401033654 seconds)
    (227/608) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.792076113 seconds)
    (228/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.111424201 seconds)
    (229/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.586030434 seconds)
    (230/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830498542 seconds)
    (231/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.530322907 seconds)
    (232/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757799689 seconds)
    (233/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.83168944 seconds)
    (234/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.050805187 seconds)
    (235/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833369365 seconds)
    (236/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836265949 seconds)
    (237/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.039697254 seconds)
    (238/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.58022963 seconds)
    (239/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093879243 seconds)
    (240/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 3.922358621 seconds)
    (241/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830591372 seconds)
    (242/608) benchmarking ("sumlogical_view", "Array{Int64,2}")...
    done (took 4.056816094 seconds)
    (243/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.648966112 seconds)
    (244/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.855835105 seconds)
    (245/608) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837196965 seconds)
    (246/608) benchmarking ("sumvector", "1:100000")...
    done (took 1.834009326 seconds)
    (247/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.831455635 seconds)
    (248/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832977945 seconds)
    (249/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.346895254 seconds)
    (250/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881396782 seconds)
    (251/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486260212 seconds)
    (252/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872511267 seconds)
    (253/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960997637 seconds)
    (254/608) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.843063787 seconds)
    (255/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758068806 seconds)
    (256/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.833738971 seconds)
    (257/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.051822544 seconds)
    (258/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833638899 seconds)
    (259/608) benchmarking ("sumvector", "Array{Float64,2}")...
    done (took 2.110350388 seconds)
    (260/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 3.997640527 seconds)
    (261/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831686785 seconds)
    (262/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.779688167 seconds)
    (263/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883421026 seconds)
    (264/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.497031696 seconds)
    (265/608) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951274068 seconds)
    (266/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081130862 seconds)
    (267/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.255891637 seconds)
    (268/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840021329 seconds)
    (269/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.551810552 seconds)
    (270/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 4.349335781 seconds)
    (271/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.874317524 seconds)
    (272/608) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.843305139 seconds)
    (273/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.064773859 seconds)
    (274/608) benchmarking "4d"...
    done (took 2.947054876 seconds)
    (275/608) benchmarking ("sumlinear_view", "Array{Int64,2}")...
    done (took 6.839301095 seconds)
    (276/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.20608327 seconds)
    (277/608) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459433219 seconds)
    (278/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.026702208 seconds)
    (279/608) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.837824071 seconds)
    (280/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840640792 seconds)
    (281/608) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.839195955 seconds)
    (282/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.551352479 seconds)
    (283/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485183736 seconds)
    (284/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396526189 seconds)
    (285/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.401697424 seconds)
    (286/608) benchmarking ("sumeach", "Array{Int64,2}")...
    done (took 2.238438547 seconds)
    (287/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115758874 seconds)
    (288/608) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132475462 seconds)
    (289/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 5.012224906 seconds)
    (290/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 3.35542474 seconds)
    (291/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137200846 seconds)
    (292/608) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.40678232 seconds)
    (293/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.082116502 seconds)
    (294/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920584102 seconds)
    (295/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061150451 seconds)
    (296/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35437608 seconds)
    (297/608) benchmarking ("sumvector_view", "Array{Int64,2}")...
    done (took 1.846726821 seconds)
    (298/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.444750457 seconds)
    (299/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920720786 seconds)
    (300/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923365241 seconds)
    (301/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777581668 seconds)
    (302/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848784048 seconds)
    (303/608) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.4671914 seconds)
    (304/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164499933 seconds)
    (305/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842890324 seconds)
    (306/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050235361 seconds)
    (307/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113776169 seconds)
    (308/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.046916389 seconds)
    (309/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.455510526 seconds)
    (310/608) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.074308387 seconds)
    (311/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936822094 seconds)
    (312/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03742106 seconds)
    (313/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863566366 seconds)
    (314/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.83433334 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786464235 seconds)
    (316/608) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.370661735 seconds)
    (317/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850902651 seconds)
    (318/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.176189466 seconds)
    (319/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007259652 seconds)
    (320/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916523684 seconds)
    (321/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.072394809 seconds)
    (322/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 5.399783746 seconds)
    (323/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 6.834936254 seconds)
    (324/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.78340993 seconds)
    (325/608) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.835133565 seconds)
    (326/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172423838 seconds)
    (327/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874385923 seconds)
    (328/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.536492181 seconds)
    (329/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188296243 seconds)
    (330/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436075011 seconds)
    (331/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.185975857 seconds)
    (332/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 4.898326539 seconds)
    (333/608) benchmarking ("sumelt_boundscheck", "Array{Float64,2}")...
    done (took 3.761561125 seconds)
    (334/608) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926927808 seconds)
    (335/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841814256 seconds)
    (336/608) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274127079 seconds)
    (337/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175232402 seconds)
    (338/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26873151 seconds)
    (339/608) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.881246066 seconds)
    (340/608) benchmarking ("sumcartesian_view", "Array{Int64,2}")...
    done (took 2.241627873 seconds)
    (341/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763081408 seconds)
    (342/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.861386995 seconds)
    (343/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.948087892 seconds)
    (344/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840458783 seconds)
    (345/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.836349358 seconds)
    (346/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881306059 seconds)
    (347/608) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.849538827 seconds)
    (348/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.836514502 seconds)
    (349/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.861415468 seconds)
    (350/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.839763773 seconds)
    (351/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.709692697 seconds)
    (352/608) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.077170512 seconds)
    (353/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841767719 seconds)
    (354/608) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06462932 seconds)
    (355/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.146467663 seconds)
    (356/608) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119213557 seconds)
    (357/608) benchmarking "3d"...
    done (took 2.734651141 seconds)
    (358/608) benchmarking ("sum", "3darray")...
    done (took 1.839956138 seconds)
    (359/608) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836734386 seconds)
    (360/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.96383383 seconds)
    (361/608) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081597771 seconds)
    (362/608) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.762032944 seconds)
    (363/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916955245 seconds)
    (364/608) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.350700553 seconds)
    (365/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 2.187772191 seconds)
    (366/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.379647096 seconds)
    (367/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838220684 seconds)
    (368/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.763006693 seconds)
    (369/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763263707 seconds)
    (370/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.536861851 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 1.968080227 seconds)
    (372/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843829266 seconds)
    (373/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.785183098 seconds)
    (374/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047074703 seconds)
    (375/608) benchmarking ("sumlogical", "Array{Int64,2}")...
    done (took 4.176037154 seconds)
    (376/608) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6301328 seconds)
    (377/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4055356 seconds)
    (378/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072978616 seconds)
    (379/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 5.733418486 seconds)
    (380/608) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.923039095 seconds)
    (381/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084109672 seconds)
    (382/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103858462 seconds)
    (383/608) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.896081565 seconds)
    (384/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054904675 seconds)
    (385/608) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.348736524 seconds)
    (386/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 4.124679434 seconds)
    (387/608) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854678581 seconds)
    (388/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.935450419 seconds)
    (389/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.086660997 seconds)
    (390/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.929416785 seconds)
    (391/608) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.409058632 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051823557 seconds)
    (393/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065587073 seconds)
    (394/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386693959 seconds)
    (395/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054149885 seconds)
    (396/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286132332 seconds)
    (397/608) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.80734909 seconds)
    (398/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.83786622 seconds)
    (399/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044809374 seconds)
    (400/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.053395631 seconds)
    (401/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.144864151 seconds)
    (402/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980776167 seconds)
    (403/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 5.42671763 seconds)
    (404/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.875738089 seconds)
    (405/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.549611738 seconds)
    (406/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.840165618 seconds)
    (407/608) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.843049816 seconds)
    (408/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133012567 seconds)
    (409/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890677883 seconds)
    (410/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.153920445 seconds)
    (411/608) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994966405 seconds)
    (412/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.95157139 seconds)
    (413/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845260434 seconds)
    (414/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915633605 seconds)
    (415/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842648554 seconds)
    (416/608) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.844615544 seconds)
    (417/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.844029962 seconds)
    (418/608) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847279625 seconds)
    (419/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.159650057 seconds)
    (420/608) benchmarking ("sumelt", "Array{Int64,2}")...
    done (took 2.349357559 seconds)
    (421/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840001496 seconds)
    (422/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.83984525 seconds)
    (423/608) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.853119048 seconds)
    (424/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915334515 seconds)
    (425/608) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902153579 seconds)
    (426/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.352715628 seconds)
    (427/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.845343462 seconds)
    (428/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104952839 seconds)
    (429/608) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180504809 seconds)
    (430/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155363511 seconds)
    (431/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893460879 seconds)
    (432/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841072309 seconds)
    (433/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 4.101949957 seconds)
    (434/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936360629 seconds)
    (435/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766696965 seconds)
    (436/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.840939703 seconds)
    (437/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011661363 seconds)
    (438/608) benchmarking ("sumlogical", "Array{Float64,2}")...
    done (took 4.169138683 seconds)
    (439/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 4.945214654 seconds)
    (440/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376901773 seconds)
    (441/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112037245 seconds)
    (442/608) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.950487357 seconds)
    (443/608) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.985333948 seconds)
    (444/608) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860361019 seconds)
    (445/608) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.081078098 seconds)
    (446/608) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.250895868 seconds)
    (447/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.866378397 seconds)
    (448/608) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086456164 seconds)
    (449/608) benchmarking ("sumeach_view", "Array{Float64,2}")...
    done (took 6.857200357 seconds)
    (450/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117233322 seconds)
    (451/608) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.72466219 seconds)
    (452/608) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.735577293 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.884497059 seconds)
    (454/608) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.057841125 seconds)
    (455/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.299831331 seconds)
    (456/608) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847126532 seconds)
    (457/608) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.044342238 seconds)
    (458/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058189083 seconds)
    (459/608) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1392099 seconds)
    (460/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40868257 seconds)
    (461/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 6.842891596 seconds)
    (462/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.218894704 seconds)
    (463/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956372145 seconds)
    (464/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112543155 seconds)
    (465/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200928604 seconds)
    (466/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841726719 seconds)
    (467/608) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42279445 seconds)
    (468/608) benchmarking ("sumcolon_view", "Array{Int64,2}")...
    done (took 1.844537992 seconds)
    (469/608) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.847043024 seconds)
    (470/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 1.872407336 seconds)
    (471/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177028226 seconds)
    (472/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.872686918 seconds)
    (473/608) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.170301878 seconds)
    (474/608) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064994215 seconds)
    (475/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845039035 seconds)
    (476/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 5.427825623 seconds)
    (477/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87500154 seconds)
    (478/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963337813 seconds)
    (479/608) benchmarking "sub2ind"...
    done (took 7.045814989 seconds)
    (480/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.293202724 seconds)
    (481/608) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566145029 seconds)
    (482/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103909277 seconds)
    (483/608) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.696181114 seconds)
    (484/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846218653 seconds)
    (485/608) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114287952 seconds)
    (486/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153504397 seconds)
    (487/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137840275 seconds)
    (488/608) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918426706 seconds)
    (489/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847878281 seconds)
    (490/608) benchmarking ("mapr_access", "Array{Float64,2}")...
    done (took 2.994302472 seconds)
    (491/608) benchmarking "6d"...
    done (took 3.543211066 seconds)
    (492/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 2.164325242 seconds)
    (493/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030427885 seconds)
    (494/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.785107412 seconds)
    (495/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 1.869382857 seconds)
    (496/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.058527834 seconds)
    (497/608) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844573613 seconds)
    (498/608) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047873405 seconds)
    (499/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.553466752 seconds)
    (500/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847432366 seconds)
    (501/608) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107422414 seconds)
    (502/608) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135792708 seconds)
    (503/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.844094191 seconds)
    (504/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.753000979 seconds)
    (505/608) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847194488 seconds)
    (506/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 1.880109942 seconds)
    (507/608) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.847749833 seconds)
    (508/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057539249 seconds)
    (509/608) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055074593 seconds)
    (510/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 6.135809483 seconds)
    (511/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057205047 seconds)
    (512/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846606441 seconds)
    (513/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851620185 seconds)
    (514/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.651569096 seconds)
    (515/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110066375 seconds)
    (516/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.895705935 seconds)
    (517/608) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848269428 seconds)
    (518/608) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770984129 seconds)
    (519/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.846518489 seconds)
    (520/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890662806 seconds)
    (521/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07263101 seconds)
    (522/608) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863368802 seconds)
    (523/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.36091846 seconds)
    (524/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.545120475 seconds)
    (525/608) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119298633 seconds)
    (526/608) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.746539899 seconds)
    (527/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862339614 seconds)
    (528/608) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454257718 seconds)
    (529/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135503606 seconds)
    (530/608) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154789525 seconds)
    (531/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.379308272 seconds)
    (532/608) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058112184 seconds)
    (533/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32,3,Float64,Array{Float64,3}}")...
    done (took 2.004122717 seconds)
    (534/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366719936 seconds)
    (535/608) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846560931 seconds)
    (536/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.795155957 seconds)
    (537/608) benchmarking ("sumrange_view", "Array{Int64,2}")...
    done (took 1.849306247 seconds)
    (538/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.45863115 seconds)
    (539/608) benchmarking ("sumcolon", "Array{Int64,2}")...
    done (took 6.356914065 seconds)
    (540/608) benchmarking ("sumcartesian", "Array{Int64,2}")...
    done (took 5.136353389 seconds)
    (541/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 6.846708542 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 2.814118338 seconds)
    (543/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.551270353 seconds)
    (544/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.874966514 seconds)
    (545/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.84794787 seconds)
    (546/608) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850995553 seconds)
    (547/608) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.105541916 seconds)
    (548/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165224224 seconds)
    (549/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116410673 seconds)
    (550/608) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.851480153 seconds)
    (551/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219455378 seconds)
    (552/608) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624579398 seconds)
    (553/608) benchmarking ("sumeach_view", "Array{Int64,2}")...
    done (took 6.869257191 seconds)
    (554/608) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165735588 seconds)
    (555/608) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.773003171 seconds)
    (556/608) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21067327 seconds)
    (557/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850758715 seconds)
    (558/608) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773449861 seconds)
    (559/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847674403 seconds)
    (560/608) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.830303369 seconds)
    (561/608) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.894196754 seconds)
    (562/608) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854471729 seconds)
    (563/608) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462533808 seconds)
    (564/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int64,Array{Int64,2}}")...
    done (took 4.656848935 seconds)
    (565/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.743923299 seconds)
    (566/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.583793032 seconds)
    (567/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403561196 seconds)
    (568/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850203334 seconds)
    (569/608) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.97460049 seconds)
    (570/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float64,Array{Float64,2}}")...
    done (took 4.208374812 seconds)
    (571/608) benchmarking ("sumlinear", "Array{Float64,2}")...
    done (took 3.867722535 seconds)
    (572/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 3.315099867 seconds)
    (573/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.884871056 seconds)
    (574/608) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.204104425 seconds)
    (575/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.54610818 seconds)
    (576/608) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876165414 seconds)
    (577/608) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864054488 seconds)
    (578/608) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850624128 seconds)
    (579/608) benchmarking "2d"...
    done (took 2.561433182 seconds)
    (580/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 3.891263733 seconds)
    (581/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32},2,Float32,Array{Float32,2}}")...
    done (took 6.847838875 seconds)
    (582/608) benchmarking "7d"...
    done (took 2.175646967 seconds)
    (583/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090335944 seconds)
    (584/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.595692695 seconds)
    (585/608) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.870837853 seconds)
    (586/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.849579034 seconds)
    (587/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 4.096047672 seconds)
    (588/608) benchmarking ("sumlinear", "Array{Int64,2}")...
    done (took 2.255388732 seconds)
    (589/608) benchmarking ("sumcartesian", "Array{Float64,2}")...
    done (took 4.800247414 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847838023 seconds)
    (591/608) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768390401 seconds)
    (592/608) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033920269 seconds)
    (593/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.058007259 seconds)
    (594/608) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127617125 seconds)
    (595/608) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.450784492 seconds)
    (596/608) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.877578746 seconds)
    (597/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85063358 seconds)
    (598/608) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.055037336 seconds)
    (599/608) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052795447 seconds)
    (600/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.237252596 seconds)
    (601/608) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946103887 seconds)
    (602/608) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.170136748 seconds)
    (603/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 2.159048864 seconds)
    (604/608) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914450858 seconds)
    (605/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32},2,Int32,Array{Int32,2}}")...
    done (took 1.882165584 seconds)
    (606/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32,2,Int32,Array{Int32,2}}")...
    done (took 1.867273126 seconds)
    (607/608) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.787941414 seconds)
    (608/608) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.556929923 seconds)
  done (took 2160.421429105 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.848930815 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.926969802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.944325783 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.917316819 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944012111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931511282 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.921094056 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022144357 seconds)
  done (took 57.241250944 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.849585362 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.851747748 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.923270613 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.849278541 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.854370734 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.864737813 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.003738746 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.86015108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.855007606 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.856093728 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.851382533 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.850642537 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.123128065 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.869837785 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.862517839 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.859363546 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.85392973 seconds)
  done (took 78.84601883 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.851242016 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.073444942 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.889935026 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.85143909 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.59595215 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.858610415 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.913636476 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.871664884 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.858489459 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.902216139 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.14976134 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.877148645 seconds)
  done (took 89.47955073 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.858940525 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.853620945 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.85479209 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.853948079 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.853003174 seconds)
  done (took 11.065090254 seconds)
done (took 2667.384094984 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.081061064 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.062454022 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.106515927 seconds)
  done (took 5.955080325 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.997441505 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.046436551 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.159026548 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.920431783 seconds)
  done (took 9.914424789 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.136137753 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.219104845 seconds)
  done (took 6.143370187 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.213471104 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.858886107 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.266916878 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.857804503 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.858005728 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.859228821 seconds)
  done (took 22.368476288 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.856596087 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.855793893 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.855738862 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.855962255 seconds)
  done (took 9.213057891 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.855085476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.547176955 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.854487314 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.864644966 seconds)
  done (took 20.910275692 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.05654383 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.887911502 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.619462917 seconds)
  done (took 9.352789909 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.524235832 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.312818749 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.486918122 seconds)
  done (took 9.112876431 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.982094954 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.932479695 seconds)
  done (took 7.703657036 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.013783659 seconds)
  done (took 3.803328982 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.69483464 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.165131497 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.366110161 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.415107602 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.478700677 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.110323848 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.170749503 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.098043475 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.284677433 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.303839725 seconds)
  done (took 24.877433607 seconds)
done (took 144.560556203 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.220777187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889333263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071877534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.227741981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.100024136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.072726502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.14283279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.217615026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.914114318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.894804633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225550338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.106648483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.087174126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887889815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.09555459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886732897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.102959108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.244329972 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.908286079 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.119694849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.151599009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.878569416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.066206653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.89664124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.105662253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.022084227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.424549755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889286937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.053489866 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.440435823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.024237889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.269625219 seconds)
  done (took 168.429263211 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.858807833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858456396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860395832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.857543798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.434350985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860055476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.861017085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858518204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.286502943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.275312979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.858923188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.420507438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.862587923 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.858528932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860209299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.858804433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.453377846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.859150795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.858447559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.859950432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.859701048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.256475022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.859649379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.288033129 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.428288483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.86030728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860111787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.85945306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.861759912 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.859116489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.860036342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860048737 seconds)
  done (took 209.268332466 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.858816305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.861095748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860250766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.863872259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.860961025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860208677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.8627412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.860096539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.518729434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.522319317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863477947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.869856008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87386852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861200032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.875977923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.861854406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.87781841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.862314373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871194177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.877082954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.878110701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.764530464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.861819734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.786507384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.86241137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.862156283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.862043911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.861496258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.860085226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.860677636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.863898604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860350478 seconds)
  done (took 220.602580751 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.105359733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.862285585 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.863037099 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.770351891 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.86286088 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.862734654 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.845287586 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110796197 seconds)
  done (took 19.078357803 seconds)
done (took 619.181837417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.202514697 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.044076025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.039046132 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.885273722 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.122966669 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.935747622 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881647207 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.948716452 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698606297 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.955377952 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.512352617 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.903490788 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.611747196 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.908079151 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.009685906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.943628918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.429630687 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.537589024 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.064288245 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.933855388 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.07085636 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.771031882 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.964792831 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.734111263 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633875743 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.828101868 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.877162027 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.432440586 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.8950029 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.041764495 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.534697993 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.147375212 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.893774142 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.879917813 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.942128845 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.914062561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.063182914 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.891615486 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.006994249 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.569764332 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.942149345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.611523381 seconds)
  done (took 102.010679347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.872840878 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.869964082 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.871104705 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.869858587 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.877843597 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.870716593 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.870659023 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.870190546 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.870269596 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.869172909 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.870351888 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.87977367 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.869866337 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.879135589 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.870012341 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.87132757 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.871778695 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.879841223 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.870590514 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.870955963 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.871288551 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.871410669 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.866066041 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.871411353 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.870114379 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.871021403 seconds)
  done (took 50.479601342 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.865263188 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037785381 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.107294543 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.885518873 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.86705703 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.870178728 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.884089705 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.87135458 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.869374785 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.868753611 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.968482609 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.870794322 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884767023 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.110571822 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.883473364 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.866274772 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.866997614 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.866617043 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.043947576 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882937196 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.886763274 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.871515419 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.886441891 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.880167087 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.86899631 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.867673318 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.87035394 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.365992782 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.875580162 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.970092197 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.91132771 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.890734065 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.310655622 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.117610593 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.923266381 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.87707248 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.866951661 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.975210217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.87221747 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.86877785 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.885505625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.872753813 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.10896136 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.40263776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.881759706 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.867416575 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.37633802 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.983675072 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909338289 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.879577759 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.112785133 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.885110248 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.869316644 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.869451544 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.905265096 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.876600269 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.868429245 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230357956 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.879710667 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.886881183 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.871567942 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.86934984 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050780934 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.877399647 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039904418 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.877756067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.876253777 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.870880698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.113220019 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885666522 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.416489791 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.883059375 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.869341166 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.971415699 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045353503 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.402173602 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.881810178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051070531 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.326952634 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.892588891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.876694491 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.356033774 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.897328922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.877187084 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.871309137 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.871280564 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.869323811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.914336022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.88565382 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.326479773 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.416883811 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.247864333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.896676691 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.884710045 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.871893866 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229584758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.877344707 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.869043218 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.106569817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.423921499 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.884032424 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.877506933 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.395347024 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.885405847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.890487306 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.878794777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.120355153 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.885740288 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.913586778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.870986698 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.877828823 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.873387391 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.890055156 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.878949222 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.871205082 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.389424576 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.991569182 seconds)
  done (took 232.700426637 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.871856689 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.871904068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.871502918 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.871271517 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.869653006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.871311166 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.86993482 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.869004989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.871420808 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.870096841 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.870308988 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.872471574 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.871334867 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.874907279 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.92644027 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.872656796 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.474059466 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.869348691 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.870273932 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.870869945 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.523958535 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.875361871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.872333579 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.871524877 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.872420905 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.871618289 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.877265944 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.916073937 seconds)
  done (took 167.567680429 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.873431767 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.985625446 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.88976775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.901826623 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.878775532 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.873548332 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.968875889 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.88965202 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.877072046 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.872551005 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.873912974 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.933049778 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.884978379 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970529208 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.902586073 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.977579087 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.976173943 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.87877608 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.873587424 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.873354111 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.902970052 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881320936 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.933848714 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.996578661 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.889980785 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.987351125 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.891509894 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.87384259 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.872861311 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.986568282 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.889195594 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.934726211 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.903134663 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.891625713 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.990441376 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.988491404 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.978017224 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.97742464 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.880176325 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.875176101 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.874130326 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.875172177 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98835256 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.890686998 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.875571055 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.990027532 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.891508821 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.875369983 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.874402237 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.875402914 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.887258034 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.891170731 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.938676895 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.002646951 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.908266332 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.898254102 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.973712687 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.999705372 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.875410114 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.972717509 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.881491881 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.99014508 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.893865731 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.877152547 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.876633998 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.879945736 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.904456109 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.98062672 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.979073107 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.882015538 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.974084957 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.910627715 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.883014567 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.875590934 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.876601673 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989555117 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.990376091 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.911413348 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.911308108 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.904354798 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.884361631 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.876010091 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.879133671 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.894516918 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.882379791 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.990792377 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.989807874 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.881672688 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.876485556 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.876308959 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.876366565 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.900812122 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.996089505 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.908505385 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.982093842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.940538212 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.948895615 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.889248239 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.889766637 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.880548876 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.938131123 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.889522007 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.888257082 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.169362673 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.936897971 seconds)
  done (took 203.286141959 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.272413086 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.924848946 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.931001053 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.189454846 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.212320755 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.853146304 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.922068885 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.922564316 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.946227189 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.103934813 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.996538193 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.9422503 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.910423937 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.89716036 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.920655595 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.94354665 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.931601236 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.258983854 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.128277136 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.048848221 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.914543002 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.193848428 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.224655967 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.494700565 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.970434823 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.322982093 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.487044947 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.054977033 seconds)
  done (took 61.733627909 seconds)
done (took 819.571922148 seconds)
SAVING RESULT...
DONE!
